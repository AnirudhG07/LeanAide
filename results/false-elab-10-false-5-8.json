{"total-prompts": 40,
 "temperature": 0.8,
 "query-number": 5,
 "number-similar-sentences": 10,
 "include-fixed": false,
 "failures":
 ["Every finite group is simple.",
  "Every set that is Lebesgue measurable but not Borel measurable has Lebesgue measure zero.",
  "A finitely-presented group containing a torsion element is finite.",
  "The characteristic polynomial of every matrix has real roots.",
  "Every uniformly continuous function is bounded above.",
  "The number of partitions of a finite set is a prime number.",
  "The automorphism group of an Abelian group is cyclic.",
  "Implication `→` is symmetric. If `P → Q` then `Q → P`."],
 "elaborated-prompts":
 [{"theorem": "∀ (R : Type u) [inst : CommRing R], IsField R",
   "some-correct": null,
   "prompt": "Every ring is a field.",
   "correct": null,
   "comments": "",
   "all-elabs":
   ["∀ {R : Type u} [inst : Semiring R], IsField R → Field R ",
    "∀ (R : Type u) [inst : Semiring R], IsField R ",
    "∀ (R : Type u) [inst : CommRing R], IsField R "]},
  {"theorem":
   "∀ {K : Type u} {V : Type v} [inst : DivisionRing K] [inst_1 : AddCommGroup V] [inst_2 : Module K V],\n  FiniteDimensional K V",
   "some-correct": null,
   "prompt": "Every vector space is finite dimensional.",
   "correct": null,
   "comments": "",
   "all-elabs":
   ["∀ {K : Type u} {V : Type v} [inst : DivisionRing K] [inst_1 : AddCommGroup V] [inst_2 : Module K V], FiniteDimensional K V ",
    "forall {K : Type u} {V : Type v} [inst : DivisionRing K] [inst_1 : AddCommGroup V] [inst_2 : Module K V], FiniteDimensional K V "]},
  {"theorem": "∀ {G : Type u_1} [inst : Group G], Monoid.IsTorsion G",
   "some-correct": null,
   "prompt": "Every group is a torsion monoid.",
   "correct": null,
   "comments": "",
   "all-elabs":
   ["∀ {G : Type u_1} [inst : Group G], Monoid.IsTorsion G ",
    "forall {G : Type u_1} [inst : Group G], Monoid.IsTorsion G "]},
  {"theorem":
   "∀ {α : Type u} [inst : Group α] [inst_1 : Fintype α], IsSimpleGroup α → ∃ p, Fact (Nat.Prime p) ∧ Fintype.card α = p",
   "some-correct": null,
   "prompt": "Every finite simple group has prime order.",
   "correct": null,
   "comments": "",
   "all-elabs":
   ["∀ {α : Type u} [inst : Group α] [inst_1 : Fintype α], IsSimpleGroup α → ∃ p, Nat.Prime p ∧ Fintype.card α = p ",
    "∀ {α : Type u} [inst : Group α] [inst_1 : Fintype α], IsSimpleGroup α → ∃ p, Fact (Nat.Prime p) ∧ Fintype.card α = p ",
    "∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G], IsSimpleGroup G → ∃ p, Fact (Nat.Prime p) ∧ Fintype.card G = p ",
    "∀ {α : Type u} [inst : Group α] [inst_1 : Fintype α] [is_simple : IsSimpleGroup α],\n  ∃ p : ℕ, Nat.Prime p ∧ Fintype.card α = p "]},
  {"theorem":
   "∀ {α : Type u} [inst : Group α] [inst_1 : Fintype α], ∃ p, Fact (Nat.Prime p) ∧ Fintype.card α = p",
   "some-correct": null,
   "prompt": "Every finite group has prime order.",
   "correct": null,
   "comments": "",
   "all-elabs":
   ["∀ {G : Type u_1} [inst : Group G] [inst_1 : Fintype G], ∃ p : ℕ, Fact (Nat.Prime p) ∧ Fintype.card G = p ",
    "∀ {α : Type u} [inst : Group α] [inst_1 : Fintype α], ∃ p : ℕ, Fact (Nat.Prime p) ∧ Fintype.card α = p "]},
  {"theorem":
   "∀ {α : Type u_1} [inst : MeasurableSpace α] (μ : MeasureTheory.Measure α) (s : Set α), ?m.320065 μ s = 0",
   "some-correct": null,
   "prompt": "Every set has Lebesgue measure zero.",
   "correct": null,
   "comments": "",
   "all-elabs":
   ["forall {α : Type u_1} [inst : MeasurableSpace α] (s : Set α), ↑↑MeasureTheory.volume s = 0 ",
    "∀ (s : Set ℝ), ↑↑MeasureTheory.volume s = 0 ",
    "forall {α : Type u_1} [inst : MeasurableSpace α] (μ : MeasureTheory.Measure α) (s : Set α), ↑↑μ s = 0 "]},
  {"theorem":
   "∀ {α : Type u} [inst : TopologicalSpace α] [inst_1 : CompactSpace α] (s : Set α), IsCompact s",
   "some-correct": null,
   "prompt": "If a topological space is compact, then every subset is compact.",
   "correct": null,
   "comments": "",
   "all-elabs":
   ["∀ {α : Type u} [inst : TopologicalSpace α] [inst_1 : CompactSpace α] (s : Set α), IsCompact s "]},
  {"theorem":
   "∀ {α : Type u} [inst : TopologicalSpace α] {s : Set α}, (∀ (x : α), x ∈ s → ∃ t, IsClosed t ∧ x ∈ t) → IsClosed s",
   "some-correct": null,
   "prompt":
   "If every point of a subset of a topological space is contained in some closed set, the subset itself is closed.",
   "correct": null,
   "comments": "",
   "all-elabs":
   ["∀ {α : Type u} [inst : TopologicalSpace α] {s : Set α}, (∀ x ∈ s, ∃ t, IsClosed t ∧ x ∈ t) → IsClosed s ",
    "∀ {α : Type u} [inst : TopologicalSpace α] {s t : Set α}, (∀ x ∈ s, ∃ t, IsClosed t ∧ x ∈ t) → IsClosed s ",
    "∀ {α : Type u} [inst : TopologicalSpace α] {s : Set α}, (∀ x ∈ s, ∃ t : Set α, IsClosed t ∧ x ∈ t) → IsClosed s ",
    "∀ {α : Type u} [inst : TopologicalSpace α] {s t : Set α}, (∀ x ∈ t, ∃ u, IsClosed u ∧ x ∈ u ∧ u ⊆ s) → t ⊆ s → IsClosed t ",
    "∀ {α : Type u} [inst : TopologicalSpace α] {s : Set α}, (∀ x ∈ s, ∃ t, IsClosed t ∧ x ∈ t ∧ t ⊆ s) → IsClosed s "]},
  {"theorem":
   "∀ {α : Type u} [inst : TopologicalSpace α], T2Space α ↔ IsOpenMap fun x => (x, x)",
   "some-correct": null,
   "prompt":
   "A topological space $X$ is Hausdorff if and only if the diagonal map is an open map from $X$ to $X × X$.",
   "correct": null,
   "comments": "",
   "all-elabs":
   ["∀ {α : Type u} [inst : TopologicalSpace α],\n  T2Space α ↔ IsOpenMap fun (x : α) => (x, x) ",
    "∀ {X : Type u_1} [inst : TopologicalSpace X], T2Space X ↔ IsOpenMap (@Prod.mk X X) ",
    "∀ {α : Type u} [inst : TopologicalSpace α], T2Space α ↔ IsOpenMap fun (x : α) => (x, x) "]},
  {"theorem":
   "∀ {G : Type u_1} [inst : Group G] {x : G}, IsOfFinOrder x → ∃ n, 0 < n ∧ x ^ n = 1",
   "some-correct": null,
   "prompt": "Any finite order element in a group is equal to the identity.",
   "correct": null,
   "comments": "",
   "all-elabs":
   ["∀ {G : Type u_1} [inst : Monoid G] {x : G}, IsOfFinOrder x → orderOf x ≠ 0 → x ^ (orderOf x) = 1 ",
    "∀ {G : Type u_1} [inst : Group G] {x : G}, IsOfFinOrder x → x ^ orderOf x = 1 ",
    "∀ {G : Type u_1} [inst : Group G] [inst_1 : Fintype G] {x : G}, IsOfFinOrder x → x ^ Fintype.card G = 1 ",
    "∀ {G : Type u_1} [inst : Monoid G] {x : G} (n : ℕ), n > 0 → x ^ n = 1 → x ^ orderOf x = 1 ",
    "∀ {G : Type u_1} [inst : Monoid G] {x : G}, IsOfFinOrder x → x ^ orderOf x = 1 ",
    "∀ {G : Type u_1} [inst : Group G] {x : G}, IsOfFinOrder x → ∃ n : ℕ, 0 < n ∧ x ^ n = 1 "]},
  {"theorem":
   "∀ {G : Type u_1} [inst : Group G] (H : Subgroup G), Monoid.IsTorsionFree { x // x ∈ H } → Monoid.IsTorsionFree G",
   "some-correct": null,
   "prompt":
   "If a subgroup of a group is torsion-free, then the group itself is torsion free.",
   "correct": null,
   "comments": "",
   "all-elabs":
   ["∀ {G : Type u_1} [inst : Group G] (H : Subgroup G), Monoid.IsTorsionFree { x // x ∈ H } → Monoid.IsTorsionFree G ",
    "∀ {G : Type u_1} [inst : Group G] (H : Subgroup G),\n  Monoid.IsTorsionFree { x // x ∈ H } → Monoid.IsTorsionFree G ",
    "∀ {G : Type u_1} [inst : Group G], (∀ (H : Subgroup G), Monoid.IsTorsionFree { x // x ∈ H }) → Monoid.IsTorsionFree G ",
    "forall {G : Type u_1} [inst : Group G], (∃ (H : Subgroup G), Monoid.IsTorsionFree { x // x ∈ H }) -> Monoid.IsTorsionFree G "]},
  {"theorem":
   "∀ {G : Type u} [inst : Group G] [inst_1 : IsFreeGroup G] {f : G →* G}, Function.Injective ↑f → Function.Surjective ↑f",
   "some-correct": null,
   "prompt":
   "Every injective homomorphism from a finitely generated free group to itself is surjective.",
   "correct": null,
   "comments": "",
   "all-elabs":
   ["∀ {ι : Type u_1} {G : Type u_2} [inst : Group G] [inst_1 : Fintype ι] {f : FreeGroup ι → G},\n  IsGroupHom f → Function.Injective f → Function.Surjective f ",
    "∀ {α : Type u} [inst : Group α] [inst_1 : IsFreeGroup α] [inst_2 : Fintype α] (f : α →* α),\n  Function.Injective ↑f → Function.Surjective ↑f ",
    "∀ {G : Type u} [inst : Group G] [inst_1 : IsFreeGroup G] {f : G →* G}, Function.Injective ↑f → Function.Surjective ↑f "]},
  {"theorem":
   "∀ (K : Type u) [inst : DivisionRing K], IsField K ∨ FiniteDimensional K K",
   "some-correct": null,
   "prompt": "Every division ring is either a field or finite.",
   "correct": null,
   "comments": "",
   "all-elabs":
   ["∀ {K : Type u_1} [inst : DivisionRing K], IsField K ∨ Finite K ",
    "∀ (K : Type u) [inst : DivisionRing K], IsField K ∨ FiniteDimensional K K ",
    "∀ {K : Type u} [inst : DivisionRing K], IsField K ∨ FiniteDimensional K K ",
    "∀ (K : Type u_1) [inst : DivisionRing K], IsField K ∨ Finite K "]},
  {"theorem": "∀ (n : ℕ), n > 1 → ∃ p q, Nat.Prime p ∧ Nat.Prime q ∧ n = p * q",
   "some-correct": null,
   "prompt": "Every natural number is the product of two primes.",
   "correct": null,
   "comments": "",
   "all-elabs":
   ["∀ (n : ℕ), n > 0 → ∃ p q : ℕ, Nat.Prime p ∧ Nat.Prime q ∧ n = p * q ",
    "∀ (n : ℕ), 2 ≤ n → ∃ (p q : ℕ), Nat.Prime p ∧ Nat.Prime q ∧ p * q = n ",
    "∀ (n : ℕ), n > 1 → ∃ p q : ℕ, Nat.Prime p ∧ Nat.Prime q ∧ n = p * q ",
    "∀ (n : ℕ), 2 ≤ n → ∃ p q : ℕ, Nat.Prime p ∧ Nat.Prime q ∧ n = p * q ",
    "∀ (n : ℕ), n > 1 → ∃ (p q : ℕ), Nat.Prime p ∧ Nat.Prime q ∧ n = p * q ",
    "∀ (n : ℕ), 1 < n → ∃ (p q : ℕ), Nat.Prime p ∧ Nat.Prime q ∧ n = p * q "]},
  {"theorem": "∀ {n : ℕ}, Even n → ∃ m, n = m ^ 2",
   "some-correct": null,
   "prompt": "Every even number is the square of a natural number.",
   "correct": null,
   "comments": "",
   "all-elabs":
   ["∀ {n : ℕ}, Even n → ∃ m, n = m ^ 2 ",
    "∀ (n : ℕ), Even n → ∃ m, n = m ^ 2 ",
    "∀ (n : ℕ), Even n → ∃ k, n = 2 * k ^ 2 ",
    "∀ {n : ℕ}, Even n → ∃ k : ℕ, n = k ^ 2 "]},
  {"theorem":
   "∀ {G : Type u_1} [inst : Group G] (H : Subgroup G) [inst_1 : Subgroup.Normal H], Subgroup.FiniteIndex H",
   "some-correct": null,
   "prompt": "Every normal subgroup of a group has finite index.",
   "correct": null,
   "comments": "",
   "all-elabs":
   ["∀ {G : Type u_1} [inst : Group G] {H : Subgroup G} [self : Subgroup.Normal H], Subgroup.index H ≠ 0 ",
    "∀ {G : Type u_1} [inst : Group G] (H : Subgroup G) [inst_1 : Subgroup.Normal H], Subgroup.FiniteIndex H ",
    "∀ {G : Type u_1} [inst : Group G] (H : Subgroup G) [inst_1 : Subgroup.Normal H], Fintype (G ⧸ H) ",
    "∀ {G : Type u_1} [inst : Group G] {H : Subgroup G}, Subgroup.Normal H → Subgroup.FiniteIndex H ",
    "∀ {G : Type u_1} [inst : Group G] (H : Subgroup G) [inst_1 : Subgroup.Normal H], Subgroup.FiniteIndex H → Fintype (G ⧸ H) ",
    "∀ {G : Type u_1} [inst : Group G] (N : Subgroup G) [self : Subgroup.Normal N], Subgroup.FiniteIndex N ",
    "∀ {G : Type u_1} [inst : Group G] (N : Subgroup G) [self : Subgroup.Normal N], Subgroup.FiniteIndex N → Fintype (G ⧸ N) "]},
  {"theorem":
   "∀ {R : Type u} [inst : CommRing R] (P : Ideal R) [inst_1 : Ideal.IsPrime P], ∃! M, Ideal.IsMaximal M ∧ P ≤ M",
   "some-correct": null,
   "prompt":
   "In a commutative ring, every prime ideal is contained in a unique maximal ideal.",
   "correct": null,
   "comments": "",
   "all-elabs":
   ["∀ {R : Type u} [inst : CommRing R] (P : Ideal R) [Ideal.IsPrime P],\n  ∃! M, Ideal.IsMaximal M ∧ P ≤ M ",
    "∀ {R : Type u} [inst : CommRing R] (P : Ideal R) [Ideal.IsPrime P], ∃! M, Ideal.IsMaximal M ∧ P ≤ M ",
    "∀ {R : Type u} [inst : CommRing R] (I : Ideal R) [hI : Ideal.IsPrime I], ∃! M, Ideal.IsMaximal M ∧ I ≤ M ",
    "∀ {R : Type u} [inst : CommRing R] (P : Ideal R) [hP : Ideal.IsPrime P], ∃! (M : Ideal R), Ideal.IsMaximal M ∧ P ≤ M ",
    "∀ {R : Type u} [inst : CommRing R] (P : Ideal R) [hP : Ideal.IsPrime P], ∃! M, Ideal.IsMaximal M ∧ P ≤ M ",
    "∀ {R : Type u} [inst : CommRing R] (P : Ideal R) [Ideal.IsPrime P], ∃! (M : Ideal R), Ideal.IsMaximal M ∧ P ≤ M ",
    "∀ {R : Type u} [inst : CommRing R] (P : Ideal R) [hP : Ideal.IsPrime P],\n  ∃! M : Ideal R, Ideal.IsMaximal M ∧ P ≤ M "]},
  {"theorem":
   "∀ {α : Type u_1} {β : Type u_2} [inst : UniformSpace α] [inst_1 : UniformSpace β] {f : α → β},\n  Continuous f → UniformContinuous f",
   "some-correct": null,
   "prompt": "Every continuous function is uniformly continuous.",
   "correct": null,
   "comments": "",
   "all-elabs":
   ["∀ {α : Type u_1} {β : Type u_2} [inst : UniformSpace α] [inst_1 : UniformSpace β] {f : α → β},\n  Continuous f → UniformContinuous f ",
    "∀ {α : Type u_1} {β : Type u_2} [inst : UniformSpace α] [inst_1 : UniformSpace β] [inst_2 : CompactSpace α]\n  (f : α → β), Continuous f → UniformContinuous f ",
    "∀ {α : Type u_1} {β : Type u_2} [inst : UniformSpace α] [inst_1 : UniformSpace β] (f : α → β),\n  Continuous f → UniformContinuous f "]},
  {"theorem":
   "∀ {α : Type u} [inst : TopologicalSpace α], (∀ (s : Set α), IsCompact s → IsClosed s) → CompactSpace α",
   "some-correct": null,
   "prompt":
   "If every compact subset of a topological space is closed, then the space is compact.",
   "correct": null,
   "comments": "",
   "all-elabs":
   ["∀ {α : Type u} [inst : TopologicalSpace α] [inst_1 : T2Space α],\n  (∀ (s : Set α), IsCompact s → IsClosed s) → CompactSpace α ",
    "∀ {α : Type u} [inst : TopologicalSpace α], (∀ (s : Set α), IsCompact s → IsClosed s) → CompactSpace α "]},
  {"theorem":
   "∀ {R : Type u_1} [inst : CommRing R] (a b : R), IsIdempotentElem a → IsIdempotentElem b → IsIdempotentElem (a + b)",
   "some-correct": null,
   "prompt":
   "In a commutative ring, the sum of idempotent elements is idempotent.",
   "correct": null,
   "comments": "",
   "all-elabs":
   ["∀ {R : Type u_1} [inst : CommRing R] (a b : R), IsIdempotentElem a → IsIdempotentElem b → IsIdempotentElem (a + b) ",
    "∀ {α : Type u_1} [self : CommRing α] (x y : α), IsIdempotentElem x → IsIdempotentElem y → IsIdempotentElem (x + y) ",
    "∀ {R : Type u_1} [inst : CommRing R] (x y : R), IsIdempotentElem x → IsIdempotentElem y → IsIdempotentElem (x + y) ",
    "∀ {R : Type u_1} [inst : CommRing R] (e₁ e₂ : R), IsIdempotentElem e₁ → IsIdempotentElem e₂ → IsIdempotentElem (e₁ + e₂) ",
    "∀ {R : Type u_1} [self : CommRing R] (a b : R), IsIdempotentElem a → IsIdempotentElem b → IsIdempotentElem (a + b) "]},
  {"theorem":
   "∀ {α : Type u_1} [inst : PartialOrder α] {a : α}, (∀ (b : α), a ≤ b → b = a) → ∃! m, ∀ (b : α), m ≤ b",
   "some-correct": null,
   "prompt":
   "If a poset has a maximal element, then it has a unique minimal element.",
   "correct": null,
   "comments": "",
   "all-elabs":
   ["∀ {α : Type u_1} [inst : PartialOrder α] (a : α) (H : ∀ b, a ≤ b → b ≤ a),\n  ∃! c, (∀ d, c ≤ d) ∧ (∀ d, d ≤ c → c = d) ",
    "∀ {α : Type u_1} [inst : PartialOrder α] {a : α}, (∃ m, ∀ (x : α), x ≤ m) → (∀ (x y : α), x ≤ y ∨ y ≤ x) → ∃! a, ∀ (x : α), x ≤ a ",
    "∀ {α : Type u_1} {r : α → α → Prop},\n  (∀ (a b : α), r a b ∨ r b a) →\n  (∃ m, ∀ (a : α), r m a → r a m) →\n    (∃! m, ∀ (a : α), r a m → r m a) ",
    "∀ {α : Type u_1} {r : α → α → Prop} [inst : IsStrictTotalOrder α r],\n  (∃ max, ∀ a, r a max) → ∃! min, ∀ a, r min a ",
    "∀ {α : Type u_1} [inst : PartialOrder α] {s : Set α},\n  (∃ m, ∀ (x : α), x ∈ s → x ≤ m) →\n  (∃! a, a ∈ s ∧ ∀ (x : α), x ∈ s → a ≤ x) ",
    "∀ {α : Type u_1} [self : PartialOrder α], (∃ m, ∀ (a : α), a ≤ m) → Unique {a : α // ∀ (b : α), b ≤ a} ",
    "∀ {α : Type u_1} [inst : PartialOrder α] (p : α → Prop),\n  (∃ m, p m ∧ ∀ (a : α), p a → a ≤ m) →\n  (∃! m, p m ∧ ∀ (a : α), p a → m ≤ a) ",
    "∀ {α : Type u_1} [inst : PartialOrder α] {a : α},\n  (∀ (b : α), a ≤ b → b = a) → (∃! m : α, ∀ (b : α), m ≤ b) "]},
  {"theorem":
   "∀ {α : Type u_1} {f : α → α} {x : α}, Function.IsFixedPt f x → ∀ (n : ℕ), 0 < n → Function.IsPeriodicPt f n x",
   "some-correct": null,
   "prompt":
   "If a function from the unit interval to itself has a fixed point, then it has points of all positive periods.",
   "correct": null,
   "comments": "",
   "all-elabs":
   ["∀ {α : Type u_1} {f : α → α} {x : α}, Function.IsFixedPt f x → ∀ (n : ℕ), Function.IsPeriodicPt f n x ",
    "∀ {α : Type u_1} {f : α → α} {x : α} (hf : Function.IsFixedPt f x) (n : ℕ),\n  0 < n → Function.IsPeriodicPt f n x ",
    "∀ {α : Type u_1} [inst : LinearOrder α] {f : α → α} {x : α}, Function.IsFixedPt f x → ∀ (n : ℕ), 0 < n → Function.IsPeriodicPt f n x ",
    "∀ {α : Type u_1} {f : α → α} {x : α}, Function.IsFixedPt f x → ∀ (n : ℕ), 0 < n → Function.IsPeriodicPt f n x ",
    "∀ {α : Type u_1} {f : α → α} {x : α} (hx : Function.IsFixedPt f x) (n : ℕ) (hn : 0 < n),\n  ∃ y, Function.IsPeriodicPt f n y ",
    "∀ {α : Type u_1} {f : α → α} {x : α} (h : Function.IsFixedPt f x) (n : ℕ),\n  0 < n → Function.IsPeriodicPt f n x "]},
  {"theorem": "∀ {α : Type u} (s t : Set α), (s ∪ t)ᶜ ⊇ sᶜ ∪ tᶜ",
   "some-correct": null,
   "prompt":
   "The complement of the union of two sets contains the union of their complements.",
   "correct": null,
   "comments": "",
   "all-elabs":
   ["∀ {α : Type u} (s t : Set α), (s ∪ t)ᶜ ⊇ sᶜ ∪ tᶜ ",
    "∀ {α : Type u} (s t : Set α), (s ∪ t)ᶜ ⊆ sᶜ ∪ tᶜ ",
    "∀ {α : Type u} (s t : Set α), sᶜ ∩ tᶜ ⊆ (s ∪ t)ᶜ ",
    "∀ {α : Type u} (s t : Set α), sᶜ ∪ tᶜ ⊆ (s ∪ t)ᶜ "]},
  {"theorem": "∀ (q : ℚ), ∃ r, Real.sqrt ↑q = ↑r",
   "some-correct": null,
   "prompt": "The square root of an rational number is rational.",
   "correct": null,
   "comments": "",
   "all-elabs":
   ["∀ (q : ℚ), ∃ p : ℚ, p * p = q → Real.sqrt ↑q = ↑p ",
    "∀ (q : ℚ), ∃ r, Real.sqrt q = ↑r ",
    "∀ (q : ℚ), ∃ r : ℚ, r * r = q ",
    "∀ (q : ℚ), ∃ r : ℚ, r ^ 2 = q ",
    "∀ (q : ℚ), ∃ r : ℚ, (q = 0 ∧ r = 0) ∨ (0 ≤ q ∧ Real.sqrt (q : ℝ) = r) ",
    "∀ (q : ℚ), ∃ r, Real.sqrt (Rat.cast q) = Rat.cast r "]},
  {"theorem":
   "∀ {R : Type u} {M : Type v} [inst : Semiring R] [inst_1 : AddCommMonoid M] [inst_2 : Module R M]\n  [inst_3 : Module.Free R M], IsCommutative R Add.add",
   "some-correct": null,
   "prompt": "If a module over a ring is free, then the ring is commutative.",
   "correct": null,
   "comments": "",
   "all-elabs":
   ["∀ {R : Type u} {M : Type v} [inst : Semiring R] [inst_1 : AddCommMonoid M] [inst_2 : Module R M]\n  [inst_3 : Module.Free R M], IsCommutative R Add.add "]},
  {"theorem":
   "∀ {R : Type u} [inst : Ring R], (∀ (a b : R), IsUnit a → IsUnit b → a * b = b * a) → ∀ (x y : R), x * y = y * x",
   "some-correct": null,
   "prompt":
   "If the set of units of a ring forms a group then the ring is commutative.",
   "correct": null,
   "comments": "",
   "all-elabs":
   ["∀ {R : Type u} [inst : Ring R],\n  (∀ (x y : R), IsUnit x → IsUnit y → IsUnit (x * y)) → (∀ (x y : R), x * y = y * x) ",
    "∀ {R : Type u} [inst : Ring R] [self : Group (Units R)], ∀ (x y : R), x * y = y * x ",
    "∀ {R : Type u} [inst : Ring R], (∀ (a b : R), IsUnit a → IsUnit b → a * b = b * a) → ∀ (x y : R), x * y = y * x "]},
  {"theorem": "∀ (n : ℕ), n > 10 → ∃ x p, n = x ^ 2 + p ∧ Nat.Prime p",
   "some-correct": null,
   "prompt":
   "Every natural number larger than `10` is the sum of a square and a prime.",
   "correct": null,
   "comments": "",
   "all-elabs":
   ["∀ (n : ℕ), n > 10 → ∃ x p, n = x ^ 2 + p ∧ Nat.Prime p ",
    "∀ (n : ℕ), 10 < n → ∃ x y, n = x ^ 2 + y ∧ Nat.Prime y ",
    "∀ (n : ℕ), n > 10 → ∃ x y p, n = x ^ 2 + p ∧ Nat.Prime p ",
    "∀ (n : ℕ), n > 10 → ∃ x y, n = x ^ 2 + y ∧ Nat.Prime y "]},
  {"theorem":
   "∀ {C : Type u₁} [inst : CategoryTheory.Category.{?u.15284528, u₁} C] [inst_1 : CategoryTheory.Limits.HasInitial C]\n  [inst_2 : CategoryTheory.Limits.HasTerminal C], Nonempty (⊥_ C ≅ ⊤_ C)",
   "some-correct": null,
   "prompt":
   "The initial object of a category is isomorphic to its terminal object.",
   "correct": null,
   "comments": "",
   "all-elabs":
   ["∀ {C : Type u₁} [inst : CategoryTheory.Category C] [inst_1 : CategoryTheory.Limits.HasInitial C]\n  [inst_2 : CategoryTheory.Limits.HasTerminal C], ⊥_ C ≅ ⊤_ C ",
    "∀ {C : Type u₁} [inst : CategoryTheory.Category C] [inst_1 : CategoryTheory.Limits.HasInitial C]\n  [inst_2 : CategoryTheory.Limits.HasTerminal C], (⊥_ C) ≅ (⊤_ C) ",
    "∀ {C : Type u₁} [inst : CategoryTheory.Category C] [inst_1 : CategoryTheory.Limits.HasInitial C]\n  [inst_2 : CategoryTheory.Limits.HasTerminal C], Nonempty (⊥_ C ≅ ⊤_ C) ",
    "∀ {C : Type u₁} [inst : CategoryTheory.Category C] [inst_1 : CategoryTheory.Limits.HasInitial C]\n  [inst_2 : CategoryTheory.Limits.HasTerminal C], CategoryTheory.IsIsomorphic (⊥_ C) (⊤_ C) "]},
  {"theorem":
   "∀ {α : Type u_1} {β : Type u_2} {γ : Type u_3} [inst : TopologicalSpace α] [inst_1 : TopologicalSpace β]\n  [inst_2 : TopologicalSpace γ] {f : α → β} {g : β → γ}, Continuous (g ∘ f) → Continuous f → Continuous g",
   "some-correct": null,
   "prompt":
   "If the composition of two functions is continuous, then each of them is continuous.",
   "correct": null,
   "comments": "",
   "all-elabs":
   ["∀ {α : Type u} {β : Type v} {γ : Type w} [inst : TopologicalSpace α] [inst_1 : TopologicalSpace β]\n  [inst_2 : TopologicalSpace γ] {g : β → γ} {f : α → β},\n  Continuous (g ∘ f) → Continuous f → Continuous g ",
    "∀ {α : Type u} {β : Type v} {γ : Type w} [inst : TopologicalSpace α] [inst_1 : TopologicalSpace β] [inst_2 : TopologicalSpace γ]\n  {f : α → β} {g : β → γ}, Continuous (g ∘ f) → Continuous f → Continuous g ",
    "∀ {α : Type u_1} {β : Type u_2} {γ : Type u_3} [inst : TopologicalSpace α] [inst_1 : TopologicalSpace β] [inst_2 : TopologicalSpace γ]\n  {f : α → β} {g : β → γ},\n  Continuous (g ∘ f) → Continuous f → Continuous g ",
    "∀ {α : Type u_1} {β : Type u_2} {γ : Type u_3} [inst : TopologicalSpace α] [inst_1 : TopologicalSpace β]\n  [inst_2 : TopologicalSpace γ] {g : β → γ} {f : α → β},\n  Continuous (g ∘ f) → Continuous f ∧ Continuous g ",
    "∀ {α : Type u_1} {β : Type u_2} {γ : Type u_3} [inst : TopologicalSpace α] [inst_1 : TopologicalSpace β]\n  [inst_2 : TopologicalSpace γ] {f : α → β} {g : β → γ}, Continuous (g ∘ f) → Continuous f ∧ Continuous g ",
    "∀ {α : Type u_1} {β : Type u_2} {γ : Type u_3} [inst : TopologicalSpace α] [inst_1 : TopologicalSpace β]\n  [inst_2 : TopologicalSpace γ] {f : α → β} {g : β → γ},\n  Continuous (g ∘ f) → Continuous f → Continuous g ",
    "∀ {α : Type u_1} {β : Type u_2} {γ : Type u_3} [inst : TopologicalSpace α] [inst_1 : TopologicalSpace β]\n  [inst_2 : TopologicalSpace γ] {f : α → β} {g : β → γ}, Continuous (g ∘ f) → Continuous f → Continuous g ",
    "∀ {α : Type u_1} {β : Type u_2} {γ : Type u_3} [inst : TopologicalSpace α] [inst_1 : TopologicalSpace β] [inst_2 : TopologicalSpace γ]\n  {f : α → β} {g : β → γ}, Continuous (g ∘ f) → Continuous f → Continuous g "]},
  {"theorem":
   "∀ {S : Type u_1} [inst : Semigroup S] {a b c : S}, Commute a b → Commute b c → Commute a c",
   "some-correct": null,
   "prompt":
   "If `a` commutes with `b` and `b` commutes with `c` then `a` commutes with `c`.",
   "correct": null,
   "comments": "",
   "all-elabs":
   ["∀ {S : Type u_1} [inst : Mul S] {a b c : S}, Commute a b → Commute b c → Commute a c ",
    "∀ {S : Type u_1} [inst : Semigroup S] {a b c : S}, Commute a b → Commute b c → Commute a c ",
    "forall {S : Type u_1} [inst : Semigroup S] {a b c : S}, Commute a b → Commute b c → Commute a c "]},
  {"theorem":
   "∀ {R : Type u} {S : Type v} [inst : Semiring R] [inst_1 : Semiring S] {f : R →+* S} {r : R}, ?m.16088440 = 0 → r = 0",
   "some-correct": null,
   "prompt":
   "If an element maps to zero under a ring homomorphism, then it is zero.",
   "correct": null,
   "comments": "",
   "all-elabs":
   ["∀ {R : Type u} {S : Type v} [inst : Semiring R] [inst_1 : Semiring S] {f : R →+* S} {r : R},\n  ↑f r = 0 → r = 0 "]},
  {"theorem": "∀ {m n : ℕ}, (∃ p, Nat.Prime p ∧ (p ∣ m ↔ p ∣ n)) ↔ m = n",
   "some-correct": null,
   "prompt":
   "Two natural numbers are equal if and only if they are both divisible by some prime number.",
   "correct": null,
   "comments": "",
   "all-elabs":
   ["∀ {m n : ℕ}, (∃ (p : ℕ), Nat.Prime p ∧ p ∣ m ∧ p ∣ n) ↔ m = n ",
    "∀ {m n : ℕ}, (∃ (p : ℕ), Nat.Prime p ∧ (p ∣ m ↔ p ∣ n)) ↔ m = n "]}],
 "elaborated": 32}