{"total-prompts": 40,
 "temperature": 0.9,
 "query-number": 15,
 "number-similar-sentences": 12,
 "include-fixed": false,
 "failures":
 ["The sum of two natural numbers is a natural number.",
  "Every infinite set contains a finite set.",
  "There is no field of order `10`."],
 "elaborated-prompts":
 [{"theorem": "‚àÄ (p : ‚Ñï), Nat.Prime p ‚Üî p = 2 ‚à® Odd p",
   "some-correct": null,
   "prompt": "Every prime number is `2` or odd.",
   "correct": null,
   "comments": "",
   "all-elabs":
   ["‚àÄ (p : ‚Ñï), Nat.Prime p ‚Üî p = 2 ‚à® Odd p",
    "‚àÄ (n : ‚Ñï), Nat.Prime n ‚Üî n = 2 ‚à® Odd n",
    "‚àÄ (p : ‚Ñï), Nat.Prime p ‚Üí (p = 2 ‚à® p % 2 = 1)",
    "‚àÄ (p : ‚Ñï), Nat.Prime p ‚Üî (p = 2 ‚à® Odd p)"]},
  {"theorem": "‚àÄ (n : ‚Ñï), n % 2 = 1 ‚Üí ‚àÉ m, m > n ‚àß m % 2 = 1",
   "some-correct": null,
   "prompt": "There are infinitely many odd natural numbers.",
   "correct": null,
   "comments": "",
   "all-elabs":
   ["‚àÄ (n : ‚Ñï), ‚àÉ (m : ‚Ñï), m > n ‚àß Odd m",
    "‚àÄ (n : ‚Ñï), Odd (2 * n + 1)",
    "‚àÄ (n : ‚Ñï), n % 2 = 1 ‚Üí ‚àÉ (m : ‚Ñï), m > n ‚àß m % 2 = 1"]},
  {"theorem": "‚àÄ (p : ‚Ñï), Nat.Prime p ‚Üí p % 2 = 1 ‚Üí p ‚â• 3",
   "some-correct": null,
   "prompt": "The smallest odd prime is `3`.",
   "correct": null,
   "comments": "",
   "all-elabs":
   ["‚àÄ (p : ‚Ñï), Nat.Prime p ‚Üí p % 2 = 1 ‚Üí p ‚â• 3",
    "‚àÄ (p : ‚Ñï), Nat.Prime p ‚Üí p % 2 = 1 ‚àß p ‚â† 1 ‚Üí 3 ‚â§ p",
    "theorem smallest_odd_prime : Nat.Prime 3 ",
    "lemma smallest_odd_prime : Nat.Prime 3 ",
    "‚àÄ (p : ‚Ñï), Nat.Prime p ‚Üí p % 2 = 1 ‚Üí 3 ‚â§ p",
    "lemma smallest_odd_prime : ‚àÄ (p : ‚Ñï), Nat.Prime p ‚Üí p % 2 = 1 ‚Üí 3 ‚â§ p ",
    "‚àÄ (p : ‚Ñï), Nat.Prime p ‚Üí p > 2 ‚Üí p ‚â• 3",
    "Fact (Nat.Prime 3)"]},
  {"theorem":
   "‚àÄ {p : ‚Ñï}, Nat.Prime p ‚Üí Odd p ‚Üí Set.Infinite {q | Nat.Prime q ‚àß q ‚â† p}",
   "some-correct": null,
   "prompt": "There are infinitely many odd prime numbers.",
   "correct": null,
   "comments": "",
   "all-elabs":
   ["Set.Infinite {p | Nat.Prime p ‚àß Odd p}",
    "‚àÄ {p : ‚Ñï}, Nat.Prime p ‚Üí Odd p ‚Üí Set.Infinite {q | Nat.Prime q ‚àß q ‚â† p}"]},
  {"theorem":
   "‚àÄ {K : Type u} {V : Type v} [inst : DivisionRing K] [inst_1 : AddCommGroup V] [inst_2 : Module K V],\n  FiniteDimensional.finrank K V = 2 ‚Üí FiniteDimensional K V",
   "some-correct": null,
   "prompt":
   "If a vector space has dimension `2` then it is finite dimensional.",
   "correct": null,
   "comments": "",
   "all-elabs":
   ["‚àÄ {K : Type u} {V : Type v} [inst : DivisionRing K] [inst_1 : AddCommGroup V] [inst_2 : Module K V],\n  FiniteDimensional.finrank K V = 2 ‚Üí FiniteDimensional K V",
    "‚àÄ {K : Type u} {V : Type v} [inst : DivisionRing K] [inst_1 : AddCommGroup V] [inst_2 : Module K V], FiniteDimensional.finrank K V = 2 ‚Üí FiniteDimensional K V",
    "‚àÄ {K : Type u} {V : Type v} [inst : Field K] [inst_1 : AddCommGroup V] [inst_2 : Module K V],\n  FiniteDimensional.finrank K V = 2 ‚Üí FiniteDimensional K V"]},
  {"theorem": "{R : Type u} ‚Üí [inst : Field R] ‚Üí DivisionRing R",
   "some-correct": null,
   "prompt": "Every field is a division ring.",
   "correct": null,
   "comments": "",
   "all-elabs":
   ["‚àÄ {K : Type u} [inst : Field K], DivisionRing K",
    "‚àÄ {K : Type u_1} [inst : Field K], DivisionRing K",
    "‚àÄ {R : Type u} [inst : Field R], DivisionRing R"]},
  {"theorem":
   "‚àÄ {K : Type u} {V : Type v} [inst : DivisionRing K] [inst_1 : AddCommGroup V] [inst_2 : Module K V],\n  FiniteDimensional K V ‚Üí FiniteDimensional.finrank K V = 2 ‚Üí FiniteDimensional K V",
   "some-correct": null,
   "prompt": "If a space has dimension `2` then it is finite dimensional.",
   "correct": null,
   "comments": "",
   "all-elabs":
   ["‚àÄ {K : Type u} {V : Type v} [inst : DivisionRing K] [inst_1 : AddCommGroup V] [inst_2 : Module K V],\n  FiniteDimensional.finrank K V = 2 ‚Üí FiniteDimensional K V",
    "‚àÄ {K : Type u} {V : Type v} [inst : DivisionRing K] [inst_1 : AddCommGroup V] [inst_2 : Module K V]\n  (inst_3 : FiniteDimensional K V), FiniteDimensional.finrank K V = 2 ‚Üí FiniteDimensional K V",
    "‚àÄ (K : Type u_1) (V : Type u_2) [inst : DivisionRing K] [inst_1 : AddCommGroup V] [inst_2 : Module K V],\n  FiniteDimensional.finrank K V = 2 ‚Üí FiniteDimensional K V",
    "‚àÄ (K : Type u) (V : Type v) [inst : DivisionRing K] [inst_1 : AddCommGroup V] [inst_2 : Module K V],\n  FiniteDimensional.finrank K V = 2 ‚Üí FiniteDimensional K V",
    "‚àÄ (ùïú : Type u) (V : Type v) [Field ùïú] [AddCommGroup V] [Module ùïú V],\n  FiniteDimensional ùïú V ‚Üí FiniteDimensional.finrank ùïú V = 2 ‚Üí FiniteDimensional ùïú V"]},
  {"theorem": "‚àÄ (n : ‚Ñï), ‚àÉ m, m = n + 1",
   "some-correct": null,
   "prompt": "Every natural number has a successor.",
   "correct": null,
   "comments": "",
   "all-elabs":
   ["‚àÄ (n : ‚Ñï), ‚àÉ (k : ‚Ñï), n = k.succ",
    "‚àÄ (n : ‚Ñï), ‚àÉ (m : ‚Ñï), m = n + 1",
    "‚àÄ (n : ‚Ñï), ‚àÉ (m : ‚Ñï), n.succ = m",
    "‚àÄ {n : ‚Ñï}, ‚àÉ m, n = m + 1",
    "‚àÄ {n : ‚Ñï}, ‚àÉ (m : ‚Ñï), n = m + 1",
    "‚àÄ (n : ‚Ñï), ‚àÉ (m : ‚Ñï), n + 1 = m",
    "‚àÄ (n : ‚Ñï), ‚àÉ (m : ‚Ñï), m = n.succ"]},
  {"theorem": "‚àÄ (n : ‚Ñï), n < n + 1",
   "some-correct": null,
   "prompt": "Every natural number is less than its successor.",
   "correct": null,
   "comments": "",
   "all-elabs":
   ["‚àÄ (n : ‚Ñï), n < n + 1", "‚àÄ (n : ‚Ñï), n < n.succ", "‚àÄ (n : ‚Ñï), n < n+1"]},
  {"theorem":
   "‚àÄ {Œ± : Type u_1} [inst : MeasurableSpace Œ±] (s : Set Œ±), MeasurableSet s",
   "some-correct": null,
   "prompt": "Every set is Lebesgue measurable.",
   "correct": null,
   "comments": "",
   "all-elabs":
   ["‚àÄ {Œ± : Type u_1} [inst : MeasurableSpace Œ±] (s : Set Œ±), MeasurableSet s",
    "‚àÄ {Œ± : Type u_1} [inst : MeasurableSpace Œ±], ‚àÄ (s : Set Œ±), MeasurableSet s"]},
  {"theorem":
   "‚àÄ {Œ± : Type u_1} [inst : TopologicalSpace Œ±] [inst_1 : MeasurableSpace Œ±] [inst_2 : BorelSpace Œ±]\n  {Œº : MeasureTheory.Measure Œ±} (s : Set Œ±), ‚Üë‚ÜëŒº s = 0 ‚Üí MeasurableSet s",
   "some-correct": null,
   "prompt": "Every set of Borel measure zero is Lebesgue measurable.",
   "correct": null,
   "comments": "",
   "all-elabs":
   ["‚àÄ {Œ± : Type u_1} [inst : TopologicalSpace Œ±] [inst_1 : MeasurableSpace Œ±] [inst_2 : BorelSpace Œ±] (Œº : MeasureTheory.Measure Œ±),\n  (‚àÄ (s : Set Œ±), MeasurableSet s ‚Üí Œº s = 0 ‚Üí MeasurableSet s)",
    "‚àÄ {Œ± : Type u_1} [inst : TopologicalSpace Œ±] [inst_1 : MeasurableSpace Œ±] [inst_2 : BorelSpace Œ±] {Œº : MeasureTheory.Measure Œ±},\n  (‚àÄ (s : Set Œ±), Œº s = 0 ‚Üí MeasurableSet s)",
    "‚àÄ {Œ± : Type u_1} [inst : TopologicalSpace Œ±] [inst_1 : MeasurableSpace Œ±] [inst_2 : BorelSpace Œ±]\n  {s : Set Œ±}, ‚Üë(MeasureTheory.measureSpace.measureOf (MeasureTheory.volume) s) = 0 ‚Üí MeasurableSet s"]},
  {"theorem": "‚àÄ {p : ‚Ñï}, Nat.Prime p ‚Üí ¬¨IsSquare p",
   "some-correct": null,
   "prompt": "No prime number is a perfect square.",
   "correct": null,
   "comments": "",
   "all-elabs":
   ["‚àÄ {n : ‚Ñï}, Nat.Prime n ‚Üí ¬¨‚àÉ m, m * m = n",
    "‚àÄ {p : ‚Ñï}, Nat.Prime p ‚Üí ¬¨IsSquare p"]},
  {"theorem": "‚àÄ {p : ‚Ñï}, Nat.Prime p ‚Üí 2 < p",
   "some-correct": null,
   "prompt": "Every odd prime number is greater than `2`.",
   "correct": null,
   "comments": "",
   "all-elabs":
   ["‚àÄ {p : ‚Ñï}, Nat.Prime p ‚Üí 2 < p",
    "‚àÄ {p : ‚Ñï}, Nat.Prime p ‚Üí p > 2",
    "‚àÄ (p : ‚Ñï), Nat.Prime p ‚Üí p > 2"]},
  {"theorem":
   "‚àÄ (a b : ‚Ñï),\n  ‚Ñï ‚Üí\n    ‚Ñï ‚Üí\n      ‚Ñï ‚Üí\n        ‚Ñï ‚Üí\n          ‚Ñï ‚Üí\n            ‚Ñï ‚Üí\n              (‚àÉ a1 a2 a3 a4, a = a1 ^ 2 + a2 ^ 2 + a3 ^ 2 + a4 ^ 2) ‚Üí\n                (‚àÉ b1 b2 b3 b4, b = b1 ^ 2 + b2 ^ 2 + b3 ^ 2 + b4 ^ 2) ‚Üí\n                  ‚àÉ c1 c2 c3 c4, a * b = c1 ^ 2 + c2 ^ 2 + c3 ^ 2 + c4 ^ 2",
   "some-correct": null,
   "prompt":
   "The product of two numbers, each of which is the sum of four squares, is itself a sum of four squares.",
   "correct": null,
   "comments": "",
   "all-elabs":
   ["‚àÄ (a‚ÇÅ a‚ÇÇ b‚ÇÅ b‚ÇÇ c‚ÇÅ c‚ÇÇ d‚ÇÅ d‚ÇÇ r‚ÇÅ r‚ÇÇ s‚ÇÅ s‚ÇÇ t‚ÇÅ t‚ÇÇ u‚ÇÅ u‚ÇÇ : ‚Ñï),\n  (a‚ÇÅ ^ 2 + b‚ÇÅ ^ 2 + c‚ÇÅ ^ 2 + d‚ÇÅ ^ 2 = r‚ÇÅ) ‚Üí (a‚ÇÇ ^ 2 + b‚ÇÇ ^ 2 + c‚ÇÇ ^ 2 + d‚ÇÇ ^ 2 = r‚ÇÇ) ‚Üí\n    (r‚ÇÅ * r‚ÇÇ = s‚ÇÅ) ‚Üí\n      ‚àÉ (e f g h : ‚Ñï), (e ^ 2 + f ^ 2 + g ^ 2 + h ^ 2 = s‚ÇÅ)",
    "‚àÄ (a b c d x y z w : ‚Ñï),\n  (‚àÉ (a1 a2 a3 a4 : ‚Ñï), a = a1 ^ 2 + a2 ^ 2 + a3 ^ 2 + a4 ^ 2) ‚Üí\n    (‚àÉ (b1 b2 b3 b4 : ‚Ñï), b = b1 ^ 2 + b2 ^ 2 + b3 ^ 2 + b4 ^ 2) ‚Üí\n      ‚àÉ (c1 c2 c3 c4 : ‚Ñï), a * b = c1 ^ 2 + c2 ^ 2 + c3 ^ 2 + c4 ^ 2",
    "‚àÄ {Œ± : Type u} [inst : LinearOrderedRing Œ±] {a‚ÇÅ b‚ÇÅ c‚ÇÅ d‚ÇÅ a‚ÇÇ b‚ÇÇ c‚ÇÇ d‚ÇÇ : Œ±},\n  (‚àÉ (x‚ÇÅ y‚ÇÅ z‚ÇÅ w‚ÇÅ : Œ±), a‚ÇÅ = x‚ÇÅ ^ 2 + y‚ÇÅ ^ 2 + z‚ÇÅ ^ 2 + w‚ÇÅ ^ 2) ‚Üí\n  (‚àÉ (x‚ÇÇ y‚ÇÇ z‚ÇÇ w‚ÇÇ : Œ±), b‚ÇÅ = x‚ÇÇ ^ 2 + y‚ÇÇ ^ 2 + z‚ÇÇ ^ 2 + w‚ÇÇ ^ 2) ‚Üí\n  ‚àÉ (x y z w : Œ±), a‚ÇÅ * b‚ÇÅ = x ^ 2 + y ^ 2",
    "‚àÄ {R : Type u_1} [inst : CommRing R] (a b c d e f g h : R),\n  ‚àÉ (p q r s : R),\n    a = p^2 + q^2 + r^2 + s^2 ‚Üí\n    b = p^2 + q^2 + r^2 + s^2 ‚Üí\n    c = p^2 + q^2 + r^2 + s^2 ‚Üí\n    d = p^2 + q^2 + r^2 + s^2 ‚Üí\n    e = p^2 + q^2 + r^2 + s^2 ‚Üí\n    f = p^2 + q^2",
    "‚àÄ {Œ± : Type u} [inst : CommRing Œ±] (a b c d x y z w : Œ±),\n  (‚àÉ (a1 a2 a3 a4 b1 b2 b3 b4 : Œ±),\n     a = a1 ^ 2 + a2 ^ 2 + a3 ^ 2 + a4 ^ 2 ‚àß b = b1 ^ 2 + b2 ^ 2 + b3 ^ 2 + b4 ^ 2) ‚Üí\n    ‚àÉ (r1 r2 r3 r4 : Œ±), a * b = r1 ^ 2 + r2 ^ 2 + r3 ^ 2 + r4 ^ 2"]},
  {"theorem":
   "‚àÄ {Œ± : Type u} [inst : TopologicalSpace Œ±] [inst_1 : CompactSpace Œ±], LocallyCompactSpace Œ±",
   "some-correct": null,
   "prompt": "Every compact topological space is locally compact.",
   "correct": null,
   "comments": "",
   "all-elabs":
   ["‚àÄ {Œ± : Type u} [inst : TopologicalSpace Œ±] [inst_1 : CompactSpace Œ±], LocallyCompactSpace Œ±",
    "lemma compact_space_is_locally_compact {Œ± : Type u} [inst : TopologicalSpace Œ±] \n  (h : CompactSpace Œ±) : LocallyCompactSpace Œ± ",
    "‚àÄ {Œ± : Type u} [inst : TopologicalSpace Œ±] [inst_1 : CompactSpace Œ±],\n  LocallyCompactSpace Œ±"]},
  {"theorem":
   "‚àÄ {Œ± : Type u_1} {Œ≤ : Type u_2} [inst : UniformSpace Œ±] [inst_1 : UniformSpace Œ≤] {f : Œ± ‚Üí Œ≤},\n  Continuous f ‚Üí UniformContinuous f",
   "some-correct": null,
   "prompt": "Every continuous function is uniformly continuous.",
   "correct": null,
   "comments": "",
   "all-elabs":
   ["‚àÄ {Œ± : Type u} {Œ≤ : Type v} [inst : UniformSpace Œ±] [inst_1 : UniformSpace Œ≤] {f : Œ± ‚Üí Œ≤},\n  Continuous f ‚Üí UniformContinuous f",
    "‚àÄ {Œ± : Type u_1} {Œ≤ : Type u_2} [inst : UniformSpace Œ±] [inst_1 : UniformSpace Œ≤] {f : Œ± ‚Üí Œ≤},\n  Continuous f ‚Üí UniformContinuous f"]},
  {"theorem": "‚àÄ {p q : ‚Ñï}, Nat.Prime p ‚Üí Nat.Prime q ‚Üí p ‚â† q ‚Üí p + q ‚â† 6",
   "some-correct": null,
   "prompt": "`6` is not the sum of two distinct prime numbers.",
   "correct": null,
   "comments": "",
   "all-elabs":
   ["‚àÄ {p q : ‚Ñï}, Nat.Prime p ‚Üí Nat.Prime q ‚Üí p ‚â† q ‚Üí p + q ‚â† 6",
    "‚àÄ {p q : ‚Ñï}, Nat.Prime p ‚Üí Nat.Prime q ‚Üí p ‚â† q ‚Üí ¬¨(p + q = 6)",
    "‚àÄ {p q : ‚Ñï}, Nat.Prime p ‚Üí Nat.Prime q ‚Üí p + q = 6 ‚Üí p = q",
    "¬¨ ‚àÉ (p q : ‚Ñï), Nat.Prime p ‚Üí Nat.Prime q ‚Üí p ‚â† q ‚Üí p + q = 6",
    "¬¨ (‚àÉ (p q : ‚Ñï), Nat.Prime p ‚Üí Nat.Prime q ‚Üí p ‚â† q ‚Üí p + q = 6)"]},
  {"theorem": "‚àÄ (n : ‚Ñ§), ¬¨Irrational ‚Üën",
   "some-correct": null,
   "prompt": "No integer is irrational.",
   "correct": null,
   "comments": "",
   "all-elabs":
   ["¬¨ (‚àÉ x : ‚Ñ§, Irrational (‚Üëx))",
    "‚àÄ (n : ‚Ñ§), ¬¨Irrational n",
    "‚àÄ (n : ‚Ñ§), ¬¨ Irrational n",
    "‚àÄ (n : ‚Ñ§), ¬¨ Irrational (‚Üën)",
    "‚àÄ (n : ‚Ñ§), ¬¨(Irrational n)",
    "¬¨ (‚àÉ (x : ‚Ñ§), Irrational (‚Üëx))",
    "¬¨(‚àÉ (n : ‚Ñ§), Irrational (‚Üën))",
    "¬¨(‚àÉ (n : ‚Ñ§), Irrational n)"]},
  {"theorem": "‚àÄ {R : Type u} [inst : Semiring R], IsUnit 1",
   "some-correct": null,
   "prompt": "The identity element in a ring is a unit.",
   "correct": null,
   "comments": "",
   "all-elabs":
   ["‚àÄ {R : Type u} [inst : Semiring R], IsUnit (1 : R)",
    "‚àÄ {R : Type u} [inst : Ring R], IsUnit (1 : R)"]},
  {"theorem":
   "{G : Type} ‚Üí [inst : Group G] ‚Üí (H : Set G) ‚Üí IsSubgroup H ‚Üí Group ‚ÜëH",
   "some-correct": null,
   "prompt": "Every subgroup of a group is a group.",
   "correct": null,
   "comments": "",
   "all-elabs":
   ["‚àÄ {G : Type u_1} [inst : Group G] (H : Subgroup G), Group H ",
    "‚àÄ {G : Type u_1} [inst : Group G] (H : Subgroup G), Group H",
    "lemma subgroup_is_group {G : Type} [group G] (H : set G) (subgroupH : is_subgroup H) : group H "]},
  {"theorem": "‚àÄ {G : Type u_1} [inst : Group G], IsOfFinOrder 1",
   "some-correct": null,
   "prompt": "The identity element of a group has finite order.",
   "correct": null,
   "comments": "",
   "all-elabs":
   ["‚àÄ {G : Type u_1} [inst : Monoid G], IsOfFinOrder (1 : G)",
    "‚àÄ {G : Type u_1} [inst : Group G], IsOfFinOrder (1 : G)"]},
  {"theorem": "Nat.Prime 7",
   "some-correct": null,
   "prompt": "`7` is a prime number.",
   "correct": null,
   "comments": "",
   "all-elabs":
   ["Fact (Nat.Prime 7)",
    "lemma prime_7 : Nat.Prime 7 ",
    "lemma seven_is_prime : Nat.Prime 7 ",
    "fact : Nat.Prime 7"]},
  {"theorem":
   "‚àÉ p1 p2 p3,\n  Nat.Prime p1 ‚àß\n    Nat.Prime p2 ‚àß\n      Nat.Prime p3 ‚àß\n        p1 < 8 ‚àß\n          p2 < 8 ‚àß p3 < 8 ‚àß ¬¨p1 = p2 ‚àß ¬¨p1 = p3 ‚àß ¬¨p2 = p3 ‚àß ‚àÄ (p : ‚Ñï), Nat.Prime p ‚Üí p < 8 ‚Üí p = p1 ‚à® p = p2 ‚à® p = p3",
   "some-correct": null,
   "prompt": "There are `3` prime numbers below `8`.",
   "correct": null,
   "comments": "",
   "all-elabs":
   ["‚àÉ (p1 p2 p3 : ‚Ñï), Nat.Prime p1 ‚àß Nat.Prime p2 ‚àß Nat.Prime p3 ‚àß p1 < 8 ‚àß p2 < 8 ‚àß p3 < 8 ‚àß ¬¨(p1 = p2) ‚àß ¬¨(p1 = p3) ‚àß ¬¨(p2 = p3) ‚àß ‚àÄ (p : ‚Ñï), Nat.Prime p ‚Üí p < 8 ‚Üí (p = p1 ‚à® p = p2 ‚à® p = p3)"]},
  {"theorem": "‚àÄ {Œ± : Type u} {a : Set Œ±}, Set.Finite a ‚Üí ‚àÖ ‚äÜ a",
   "some-correct": null,
   "prompt": "The empty set is contained in every finite set.",
   "correct": null,
   "comments": "",
   "all-elabs":
   ["‚àÄ {Œ± : Type u} {a : Set Œ±}, Set.Finite a ‚Üí ‚àÖ ‚äÜ a",
    "‚àÄ {Œ± : Type u} (a : Set Œ±), Set.Finite a ‚Üí ‚àÖ ‚äÜ a",
    "‚àÄ {Œ± : Type u} {s : Set Œ±}, Set.Finite s ‚Üí ‚àÖ ‚äÜ s",
    "‚àÄ {Œ± : Type u} (s : Set Œ±), Set.Finite s ‚Üí ‚àÖ ‚äÜ s"]},
  {"theorem": "(R : Type u_1) ‚Üí [inst : CommRing R] ‚Üí Monoid R",
   "some-correct": null,
   "prompt": "Every commutative ring is a monoid.",
   "correct": null,
   "comments": "",
   "all-elabs":
   ["‚àÄ {R : Type u_1} [inst : CommRing R], Monoid R",
    "‚àÄ (R : Type u_1) [inst : CommRing R], Monoid R"]},
  {"theorem": "‚àÄ {n : ‚Ñï}, Odd n ‚Üí ‚àÉ x y, x ‚â† y ‚àß n = x + y",
   "some-correct": null,
   "prompt":
   "Every odd natural number is the sum of two distinct natural numbers.",
   "correct": null,
   "comments": "",
   "all-elabs":
   ["‚àÄ {n : ‚Ñï}, Odd n ‚Üí ‚àÉ x y, x ‚â† y ‚àß n = x + y",
    "‚àÄ {n : ‚Ñï}, Odd n ‚Üí ‚àÉ (a b : ‚Ñï), a ‚â† b ‚àß n = a + b",
    "‚àÄ {n : ‚Ñï}, Odd n ‚Üí ‚àÉ x y, n = x + y ‚àß x ‚â† y",
    "‚àÄ {n : ‚Ñï}, Odd n ‚Üí ‚àÉ a b, a ‚â† b ‚àß n = a + b",
    "‚àÄ {n : ‚Ñï}, Odd n ‚Üí ‚àÉ (x y : ‚Ñï), x ‚â† y ‚àß n = x + y"]},
  {"theorem": "‚àÄ {G : Type u_1} [inst : Monoid G] (x : G), IsOfFinOrder x",
   "some-correct": null,
   "prompt": "Every element in the trivial group has finite order.",
   "correct": null,
   "comments": "",
   "all-elabs":
   ["‚àÄ {G : Type u_1} [inst : Monoid G] {x : G}, IsOfFinOrder x ‚Üî G = ‚ä§",
    "‚àÄ {G : Type u} [inst : Monoid G] {x : G}, IsOfFinOrder x ‚Üî G = 1",
    "‚àÄ {G : Type u_1} [inst : Monoid G] {x : G}, IsOfFinOrder x ‚Üî G = 1",
    "‚àÄ (x : Unit), IsOfFinOrder x",
    "‚àÄ {G : Type u_1} [inst : Monoid G] {x : G}, IsOfFinOrder x ‚Üî (‚àÄ (n : ‚Ñï), n > 0 ‚Üí x ^ n = 1)",
    "‚àÄ {G : Type u_1} [inst : Monoid G] (x : G), IsOfFinOrder x"]},
  {"theorem": "‚àÄ (n : ‚Ñï), Even n ‚Üí Even (n ^ 2)",
   "some-correct": null,
   "prompt": "The square of an even number is even.",
   "correct": null,
   "comments": "",
   "all-elabs":
   ["‚àÄ (n : ‚Ñï), Even n ‚Üí Even (n^2)",
    "‚àÄ (n : ‚Ñï), Even n ‚Üí Even (n ^ 2)",
    "‚àÄ {n : ‚Ñï}, Even n ‚Üí Even (n ^ 2)",
    "‚àÄ {n : ‚Ñï}, Even n ‚Üí Even (n^2)"]},
  {"theorem":
   "‚àÄ {R : Type u} [inst : CommRing R] [inst_1 : DivisionRing R], IsField R",
   "some-correct": null,
   "prompt": "Every commutative division ring is a field.",
   "correct": null,
   "comments": "",
   "all-elabs":
   ["‚àÄ {R : Type u} [inst : CommRing R] [inst_1 : DivisionRing R], IsField R"]},
  {"theorem": "‚àÄ {Œ± : Type u} [inst : Monoid Œ±], id One.one = One.one",
   "some-correct": null,
   "prompt":
   "The image of the identity element under the identity map is the identity element.",
   "correct": null,
   "comments": "",
   "all-elabs":
   ["‚àÄ {Œ± : Type u} [inst : Monoid Œ±], id 1 = 1",
    "‚àÄ {Œ± : Type u} [inst : MulOneClass Œ±], id 1 = 1",
    "‚àÄ {Œ± : Type u} [inst : Monoid Œ±], id inst.one = inst.one",
    "‚àÄ {Œ± : Type u} [inst : Monoid Œ±], id inst.mul_one = inst.mul_one",
    "‚àÄ {Œ± : Type u}, id (id Œ±) = id Œ±"]},
  {"theorem": "‚àÄ {Œ± : Type u} (x : Œ±), Function.IsFixedPt id x",
   "some-correct": null,
   "prompt":
   "Every point is a fixed point of the identity function on a space.",
   "correct": null,
   "comments": "",
   "all-elabs":
   ["‚àÄ {Œ± : Type u_1} (x : Œ±), Function.IsFixedPt id x",
    "‚àÄ {Œ± : Type u}, ‚àÄ (x : Œ±), Function.IsFixedPt id x"]},
  {"theorem":
   "‚àÄ {Œ± : Type u} [inst : PseudoMetricSpace Œ±] {x : Œ±}, Metric.diam {x} = 0",
   "some-correct": null,
   "prompt": "The diameter of a singleton space is `0`.",
   "correct": null,
   "comments": "",
   "all-elabs":
   ["‚àÄ {Œ± : Type u} [inst : PseudoMetricSpace Œ±] {x : Œ±}, Metric.diam {x} = 0"]},
  {"theorem": "‚àÄ {G : Type u_1} [inst : Group G], ‚àÉ x, true = true",
   "some-correct": null,
   "prompt": "Every group is non-empty.",
   "correct": null,
   "comments": "",
   "all-elabs":
   ["‚àÄ {G : Type u_1} [inst : Group G], ‚àÉ (x : G), true",
    "‚àÄ {G : Type u_1} [inst : Group G], ¬¨(G = ‚àÖ)"]},
  {"theorem":
   "‚àÄ {Œ± : Type u} [inst : TopologicalSpace Œ±] (x : Œ±), IsConnected (connectedComponent x)",
   "some-correct": null,
   "prompt": "All connected components of a topological space are connected.",
   "correct": null,
   "comments": "",
   "all-elabs":
   ["‚àÄ {Œ± : Type u} [inst : TopologicalSpace Œ±],\n  ‚àÄ (x : Œ±), IsConnected (connectedComponent x)",
    "‚àÄ {Œ± : Type u} [inst : TopologicalSpace Œ±], ‚àÄ (x : Œ±), IsConnected (connectedComponent x)",
    "‚àÄ {Œ± : Type u} [inst : TopologicalSpace Œ±] (x : Œ±),\n  IsConnected (connectedComponent x)"]},
  {"theorem": "‚àÉ M, Ideal.IsMaximal M",
   "some-correct": null,
   "prompt": "The ring of integers has a maximal ideal.",
   "correct": null,
   "comments": "",
   "all-elabs":
   ["‚àÉ (M : Ideal ‚Ñ§), Ideal.IsMaximal M",
    "‚àÉ M : Ideal ‚Ñ§, Ideal.IsMaximal M",
    "lemma ring_of_integers_has_maximal_ideal : ‚àÉ (M : Ideal ‚Ñ§), Ideal.IsMaximal M ",
    "‚àÉ (I : Ideal ‚Ñ§), Ideal.IsMaximal I"]},
  {"theorem": "PythagoreanTriple 3 4 5",
   "some-correct": null,
   "prompt": "The numbers `3`, `4` and `5` form a Pythagorean triple.",
   "correct": null,
   "comments": "",
   "all-elabs": ["PythagoreanTriple 3 4 5"]},
  {"theorem":
   "‚àÄ {K : Type u} {V : Type v} [inst : DivisionRing K] [inst_1 : AddCommGroup V] [inst_2 : Module K V] (s : Set V),\n  Basis (‚Üës) K V ‚Üí s = ‚àÖ ‚Üí Subsingleton V",
   "some-correct": null,
   "prompt": "A vector space with the empty set as basis is trivial. ",
   "correct": null,
   "comments": "",
   "all-elabs":
   ["‚àÄ {K : Type u} {V : Type v} [inst : DivisionRing K] [inst_1 : AddCommGroup V] [inst_2 : Module K V],\n  Basis (‚àÖ : Set V) K V ‚Üí Subsingleton V",
    "‚àÄ {K : Type u} {V : Type v} [inst : DivisionRing K] [inst_1 : AddCommGroup V] [inst_2 : Module K V] (s : Set V),\n  Basis s K V ‚Üí s = ‚àÖ ‚Üí Subsingleton V"]}],
 "elaborated": 37}