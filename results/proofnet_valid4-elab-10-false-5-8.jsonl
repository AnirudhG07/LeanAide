{"theorem":"∀ (x y : ℤ), 7 * x ^ 3 + 2 ≠ y ^ 3","text":"Show that the equation `7x^3 + 2 = y^3` has no solution in integers.","result":true,"gps":[["∀ (x y : ℤ), 7 * x ^ 3 + 2 ≠ y ^ 3","∀ (x y : ℤ), 7 * x ^ 3 + 2 ≠ y ^ 3","∀ (x y : ℤ), 7 * x ^ 3 + 2 ≠ y ^ 3","∀ (x y : ℤ), 7 * x ^ 3 + 2 ≠ y ^ 3","∀ (x y : ℤ), 7 * x ^ 3 + 2 ≠ y ^ 3","∀ {x y : ℤ}, 7 * x ^ 3 + 2 ≠ y ^ 3","∀ (x y : ℤ), 7 * x ^ 3 + 2 ≠ y ^ 3","∀ (x y : ℤ), 7 * x ^ 3 + 2 ≠ y ^ 3","∀ (x y : ℤ), 7 * x ^ 3 + 2 ≠ y ^ 3","∀ {x y : ℤ}, 7 * x ^ 3 + 2 ≠ y ^ 3"]],"fullPrompt":"No prompt (maybe using cached data)","all_elaborations":["∀ (x y : ℤ), 7 * x^3 + 2 ≠ y^3 ","∀ (x y : ℤ), 7 * x ^ 3 + 2 ≠ y ^ 3 ","no_solution_7x3_plus_2_eq_y3 : ∀ (x y : ℤ), 7 * x^3 + 2 ≠ y^3 ","∀ (x y : ℤ), 7 * x ^ 3 + 2 ≠ y ^ 3 ","no_solution_7x3_plus_2_eq_y3 : ∀ (x y : ℤ), 7 * x ^ 3 + 2 ≠ y ^ 3 ","∀ {x y : ℤ}, 7 * x ^ 3 + 2 ≠ y ^ 3 ","∀ (x y : ℤ), 7 * x ^ 3 + 2 ≠ y ^ 3 ","integers_7x3_plus_2_ne_y3 : ∀ (x y : ℤ), 7 * x ^ 3 + 2 ≠ y ^ 3 ","∀ (x y : ℤ), 7 * x ^ 3 + 2 ≠ y ^ 3 ","forall {x y : ℤ}, 7 * x^3 + 2 ≠ y^3 "]}
{"theorem":"∀ {p q n : ℕ} [inst : Fact (Nat.Prime p)] [inst_1 : Fact (Nat.Prime q)],\n  p ≠ 2 → q ≠ 2 → p ≠ q → p - 1 ∣ q - 1 → IsCoprime n (p * q) → ↑(n ^ (q - 1)) ≡ 1 [ZMOD ↑p * ↑q]","text":"Let `p` and `q` be distinct odd primes such that `p - 1` divides `q - 1`. If `(n, pq) = 1`, show that `n^(q 1) ≡ 1 (mod pq)`.","result":true,"gps":[["∀ {p q n : ℕ} [inst : Fact (Nat.Prime p)] [inst_1 : Fact (Nat.Prime q)],\n  p ≠ 2 → q ≠ 2 → p ≠ q → p - 1 ∣ q - 1 → IsCoprime n (p * q) → ↑(n ^ (q - 1)) ≡ 1 [ZMOD ↑p * ↑q]","∀ {p q n : ℕ} [inst : Fact (Nat.Prime p)] [inst_1 : Fact (Nat.Prime q)],\n  p ≠ 2 → q ≠ 2 → p ≠ q → p - 1 ∣ q - 1 → IsCoprime n (p * q) → ↑(n ^ (q - 1)) ≡ 1 [ZMOD ↑p * ↑q]","∀ {p q n : ℕ} [inst : Fact (Nat.Prime p)] [inst_1 : Fact (Nat.Prime q)],\n  p ≠ 2 → q ≠ 2 → p ≠ q → p - 1 ∣ q - 1 → IsCoprime n (p * q) → ↑(n ^ (q - 1)) ≡ 1 [ZMOD ↑p * ↑q]","∀ {p q : ℕ} [inst : Fact (Nat.Prime p)] [inst_1 : Fact (Nat.Prime q)],\n  p ≠ 2 → q ≠ 2 → p ≠ q → p - 1 ∣ q - 1 → ∀ {n : ℕ}, IsCoprime n (p * q) → ↑(n ^ (q - 1)) ≡ 1 [ZMOD ↑p * ↑q]"],["∀ {p q : ℕ} [inst : Fact (Nat.Prime p)] [inst_1 : Fact (Nat.Prime q)],\n  p ≠ 2 → q ≠ 2 → p ≠ q → p - 1 ∣ q - 1 → ∀ {n : ℤ}, IsCoprime n ↑(p * q) → n ^ (q - 1) ≡ 1 [ZMOD ↑(p * q)]","∀ {p q : ℕ} [inst : Fact (Nat.Prime p)] [inst_1 : Fact (Nat.Prime q)],\n  p ≠ 2 → q ≠ 2 → p ≠ q → p - 1 ∣ q - 1 → ∀ {n : ℤ}, IsCoprime n ↑(p * q) → n ^ (q - 1) ≡ 1 [ZMOD ↑p * ↑q]","∀ {p q : ℕ} [inst : Fact (Nat.Prime p)] [inst_1 : Fact (Nat.Prime q)],\n  p ≠ 2 → q ≠ 2 → p ≠ q → p - 1 ∣ q - 1 → ∀ {n : ℤ}, IsCoprime n (↑p * ↑q) → n ^ (q - 1) ≡ 1 [ZMOD ↑p * ↑q]"],["∀ {p q n : ℕ} [inst : Fact (Nat.Prime p)] [inst_1 : Fact (Nat.Prime q)],\n  p ≠ q → p - 1 ∣ q - 1 → IsCoprime n (p * q) → ↑(n ^ (q - 1)) ≡ 1 [ZMOD ↑p * ↑q]"],["∀ {p q : ℕ} [inst : Fact (Nat.Prime p)] [inst_1 : Fact (Nat.Prime q)],\n  p ≠ 2 → q ≠ 2 → p ≠ q → p - 1 ∣ q - 1 → ∀ {n : ℕ}, IsCoprime n (p * q) → n ^ (q - 1) ≡ 1 [MOD p * q]"],["∀ {p q : ℕ} [inst : Fact (Nat.Prime p)] [inst_1 : Fact (Nat.Prime q)],\n  p ≠ q → p % 2 = 1 → q % 2 = 1 → p - 1 ∣ q - 1 → ∀ {n : ℤ}, IsCoprime n ↑(p * q) → n ^ (q - 1) ≡ 1 [ZMOD ↑(p * q)]"]],"fullPrompt":"No prompt (maybe using cached data)","all_elaborations":["∀ {p q n : ℕ} [inst : Fact (Nat.Prime p)] [inst_1 : Fact (Nat.Prime q)],\n  p ≠ 2 → q ≠ 2 → p ≠ q → (p - 1) ∣ (q - 1) → IsCoprime n (p * q) → n ^ (q - 1) ≡ 1 [ZMOD (p * q)] ","∀ {p q : ℕ} [inst : Fact (Nat.Prime p)] [inst_1 : Fact (Nat.Prime q)], p ≠ 2 → q ≠ 2 → p ≠ q → (p - 1) ∣ (q - 1) → ∀ {n : ℤ}, IsCoprime n ↑(p * q) → n ^ (q - 1) ≡ 1 [ZMOD ↑(p * q)] ","forall {p q n : ℕ} [inst : Fact (Nat.Prime p)] [inst_1 : Fact (Nat.Prime q)],\n  p ≠ 2 → q ≠ 2 → p ≠ q → (p - 1) ∣ (q - 1) → IsCoprime n (p * q) → n ^ (q - 1) ≡ 1 [ZMOD (p * q)] ","∀ {p q : ℕ} [inst : Fact (Nat.Prime p)] [inst_1 : Fact (Nat.Prime q)],\n  p ≠ 2 → q ≠ 2 → p ≠ q → (p - 1) ∣ (q - 1) → ∀ {n : ℤ}, IsCoprime n ↑(p * q) → n ^ (q - 1) ≡ 1 [ZMOD (↑p * ↑q)] ","∀ {p q : ℕ} [inst : Fact (Nat.Prime p)] [inst_1 : Fact (Nat.Prime q)],\n  p ≠ 2 → q ≠ 2 → p ≠ q → (p - 1) ∣ (q - 1) → ∀ {n : ℕ}, IsCoprime n (p * q) → n ^ (q - 1) ≡ 1 [MOD (p * q)] ","∀ {p q n : ℕ} [inst : Fact (Nat.Prime p)] [inst_1 : Fact (Nat.Prime q)],\n  p ≠ 2 → q ≠ 2 → p ≠ q → (p - 1) ∣ (q - 1) → IsCoprime n (p * q) → (n ^ (q - 1)) ≡ 1 [ZMOD (p * q)] ","∀ {p q : ℕ} [inst : Fact (Nat.Prime p)] [inst_1 : Fact (Nat.Prime q)], p ≠ q → p % 2 = 1 → q % 2 = 1 → (p - 1) ∣ (q - 1) → ∀ {n : ℤ}, IsCoprime n ↑(p * q) → n ^ (q - 1) ≡ 1 [ZMOD ↑(p * q)] ","∀ {p q n : ℕ} [inst : Fact (Nat.Prime p)] [inst_1 : Fact (Nat.Prime q)],\n  p ≠ q → (p - 1) ∣ (q - 1) → IsCoprime n (p * q) → (n ^ (q - 1)) ≡ 1 [ZMOD (p * q)] ","∀ {p q : ℕ} [inst : Fact (Nat.Prime p)] [inst_1 : Fact (Nat.Prime q)], p ≠ 2 → q ≠ 2 → p ≠ q → (p - 1) ∣ (q - 1) → ∀ {n : ℤ}, IsCoprime n (↑p * ↑q) → n ^ (q - 1) ≡ 1 [ZMOD (↑p * ↑q)] ","∀ {p q : ℕ} [inst : Fact (Nat.Prime p)] [inst_1 : Fact (Nat.Prime q)],\n  p ≠ 2 → q ≠ 2 → p ≠ q → (p - 1) ∣ (q - 1) → ∀ {n : ℕ}, IsCoprime n (p * q) → n ^ (q - 1) ≡ 1 [ZMOD (p * q)] "]}
{"theorem":"∀ {p : ℕ} [inst : Fact (Nat.Prime p)], p % 4 = 3 → ∀ {a : ℕ}, IsPrimitiveRoot a p ↔ orderOf (-↑a) = (p - 1) / 2","text":"Consider a prime `p` of the form `4t + 3`. Show that `a` is a primitive root modulo `p` if and only if `-a` has order `(p - 1) / 2`.","result":true,"gps":[["∀ {p : ℕ} [inst : Fact (Nat.Prime p)], p % 4 = 3 → ∀ {a : ℕ}, IsPrimitiveRoot a p ↔ orderOf (-↑a) = (p - 1) / 2"],["∀ {p : ℕ} [inst : Fact (Nat.Prime p)] (a : (ZMod p)ˣ), p % 4 = 3 → (IsPrimitiveRoot a p ↔ orderOf (-a) = (p - 1) / 2)"]],"fullPrompt":"No prompt (maybe using cached data)","all_elaborations":["∀ {p : ℕ} [inst : Fact (Nat.Prime p)] (a : (ZMod p)ˣ), p % 4 = 3 → (is_primitive_root a p ↔ order_of (-a) = (p - 1) / 2) ","∀ {p : ℕ} [inst : Fact (Nat.Prime p)], p % 4 = 3 → ∀ {a : ℕ}, IsPrimitiveRoot a p ↔ orderOf (-a : ZMod p) = (p - 1) / 2 ","∀ {p : ℕ} [inst : Fact (Nat.Prime p)] (a : (ZMod p)ˣ),\n  p % 4 = 3 → is_primitive_root a (p - 1) ↔ order_of (-a) = (p - 1) / 2 "]}
{"theorem":"∀ (p : ℕ) [inst : Fact (Nat.Prime p)],\n  p % 2 = 1 → ∀ (a : ℕ), IsPrimitiveRoot a p ↔ ∀ (q : ℕ), Nat.Prime q → q ∣ p - 1 → a ^ ((p - 1) / q) ≠ 1","text":"Let `p` be an odd prime. Show that `a` is a primitive root modulo `p` if and only if `a^((p - 1) / q) ≢ 1 (mod p)` for all prime divisors `q` of `p - 1`.","result":true,"gps":[["∀ (p : ℕ) [inst : Fact (Nat.Prime p)],\n  p % 2 = 1 → ∀ (a : ℕ), IsPrimitiveRoot a p ↔ ∀ (q : ℕ), Nat.Prime q → q ∣ p - 1 → a ^ ((p - 1) / q) ≠ 1"],["∀ {p : ℕ} [inst : Fact (Nat.Prime p)] {a : ℕ},\n  (a ≠ 0 → Nat.gcd a p = 1 → ∀ (q : ℕ), Nat.Prime q → q ∣ p - 1 → ¬a ^ ((p - 1) / q) ≡ 1 [MOD p]) ↔ IsPrimitiveRoot a p"],["∀ {p : ℕ} [inst : Fact (Nat.Prime p)] {a : ZMod p},\n  IsPrimitiveRoot a p ↔ ∀ (q : ℕ), Nat.Prime q → q ∣ p - 1 → a ^ ((p - 1) / q) ≠ 1"],["∀ {p : ℕ} [inst : Fact (Nat.Prime p)] {a : ℕ},\n  (a ≠ 0 → ∀ (q : ℕ), Nat.Prime q → q ∣ p - 1 → a ^ ((p - 1) / q) ≠ 1) ↔ IsPrimitiveRoot a p"],["∀ {p : ℕ} [inst : Fact (Nat.Prime p)],\n  p % 2 = 1 → ∀ {a : ZMod p}, IsPrimitiveRoot a p ↔ ∀ (q : ℕ), Nat.Prime q → q ∣ p - 1 → a ^ ((p - 1) / q) ≠ 1"]],"fullPrompt":"No prompt (maybe using cached data)","all_elaborations":["∀ {p : ℕ} [inst : Fact (Nat.Prime p)] {a : ℕ}, a ≠ 0 → Nat.gcd a p = 1 → (∀ q, Nat.Prime q → q ∣ p - 1 → ¬(a ^ ((p - 1) / q) ≡ 1 [MOD p])) ↔ IsPrimitiveRoot a p ","∀ {p : ℕ} [inst : Fact (Nat.Prime p)] {a : ZMod p}, IsPrimitiveRoot a p ↔ (∀ (q : ℕ), Nat.Prime q → q ∣ p - 1 → a ^ ((p - 1) / q) ≠ 1) ","∀ {p : ℕ} [inst : Fact (Nat.Prime p)] {a : ℕ}, a ≠ 0 → (∀ (q : ℕ), Nat.Prime q → q ∣ p - 1 → a ^ ((p - 1) / q) ≠ 1) ↔ is_primitive_root a p ","∀ {p : ℕ} [inst : Fact (Nat.Prime p)], p % 2 = 1 → ∀ {a : ZMod p}, IsPrimitiveRoot a p ↔ (∀ q : ℕ, Nat.Prime q → q ∣ p - 1 → a ^ ((p - 1) / q) ≠ 1) ","∀ (p : ℕ) [inst : Fact (Nat.Prime p)], p % 2 = 1 → ∀ (a : ℕ), is_primitive_root a p ↔ (∀ (q : ℕ), Nat.Prime q → q ∣ (p - 1) → a ^ ((p - 1) / q) ≠ 1) "]}
{"theorem":"∀ {x p : ℕ}, Nat.Prime p → p ∣ x ^ 4 - x ^ 2 + 1 → p % 12 = 1","text":"Show that any prime divisor of `x^4 - x^2 + 1` is congruent to 1 modulo 12.","result":true,"gps":[["∀ {x p : ℕ}, Nat.Prime p → p ∣ x ^ 4 - x ^ 2 + 1 → p % 12 = 1","∀ {x p : ℕ}, Nat.Prime p → p ∣ x ^ 4 - x ^ 2 + 1 → p % 12 = 1","∀ {x p : ℕ}, Nat.Prime p → p ∣ x ^ 4 - x ^ 2 + 1 → p % 12 = 1","∀ {x p : ℕ}, Nat.Prime p → p ∣ x ^ 4 - x ^ 2 + 1 → p % 12 = 1","∀ {x p : ℕ}, Nat.Prime p → p ∣ x ^ 4 - x ^ 2 + 1 → p % 12 = 1","∀ {x p : ℕ}, Nat.Prime p → p ∣ x ^ 4 - x ^ 2 + 1 → p % 12 = 1","∀ {x p : ℕ}, Nat.Prime p → p ∣ x ^ 4 - x ^ 2 + 1 → p % 12 = 1","∀ {x p : ℕ}, Nat.Prime p → p ∣ x ^ 4 - x ^ 2 + 1 → p % 12 = 1","∀ {x p : ℕ}, Nat.Prime p → p ∣ x ^ 4 - x ^ 2 + 1 → p % 12 = 1"],["∀ {x p : ℕ} [inst : Fact (Nat.Prime p)], p ∣ x ^ 4 - x ^ 2 + 1 → p % 12 = 1"]],"fullPrompt":"No prompt (maybe using cached data)","all_elaborations":["∀ {x p : ℕ}, Nat.Prime p → p ∣ x^4 - x^2 + 1 → p % 12 = 1 ","∀ {x p : ℕ}, Nat.Prime p → p ∣ (x ^ 4 - x ^ 2 + 1) → p % 12 = 1 ","∀ {x p : ℕ}, Nat.Prime p → p ∣ x ^ 4 - x ^ 2 + 1 → p % 12 = 1 ","∀ {x p : ℕ}, Nat.Prime p → p ∣ x ^ 4 - x ^ 2 + 1 → p % 12 = 1 ","∀ {x p : ℕ} [inst : Fact (Nat.Prime p)], p ∣ (x ^ 4 - x ^ 2 + 1) → p % 12 = 1 ","∀ {x p : ℕ}, Nat.Prime p → p ∣ x ^ 4 - x ^ 2 + 1 → p % 12 = 1 ","∀ {x p : ℕ}, Nat.Prime p → p ∣ x^4 - x^2 + 1 → p % 12 = 1 ","∀ {x p : ℕ}, Nat.Prime p → p ∣ x ^ 4 - x ^ 2 + 1 → p % 12 = 1 ","∀ {x p : ℕ} (hp : Nat.Prime p), p ∣ x ^ 4 - x ^ 2 + 1 → p % 12 = 1 ","∀ {x p : ℕ}, Nat.Prime p → p ∣ x ^ 4 - x ^ 2 + 1 → p % 12 = 1 "]}
{"theorem":"∃ x1 y1 x2 y2, x1 ≠ x2 ∧ y1 ≠ y2 ∧ x1 ^ 3 + y1 ^ 3 = x2 ^ 3 + y2 ^ 3 ∧ x1 ^ 3 + y1 ^ 3 = 1729","text":"Show that 1729 is the smallest positive integer expressible as the sum of two different integral cubes in two ways.","result":true,"gps":[["∃ x1 y1 x2 y2, x1 ≠ x2 ∧ y1 ≠ y2 ∧ x1 ^ 3 + y1 ^ 3 = x2 ^ 3 + y2 ^ 3 ∧ x1 ^ 3 + y1 ^ 3 = 1729"],["∃ a b c d, a ^ 3 + b ^ 3 = c ^ 3 + d ^ 3 ∧ a ≠ c ∧ 0 < a ∧ a < b ∧ c < d ∧ 0 < c ∧ a ^ 3 + b ^ 3 = 1729"]],"fullPrompt":"No prompt (maybe using cached data)","all_elaborations":["ℕ.smallest_two_diff_cube_sum_two_ways : ∃ a b c d, a ^ 3 + b ^ 3 = c ^ 3 + d ^ 3 ∧ a ≠ c ∧ 0 < a ∧ a < b ∧ c < d ∧ 0 < c ∧ a ^ 3 + b ^ 3 = 1729 ","smallest_1729 : ∃ x1 y1 x2 y2, x1 ≠ x2 ∧ y1 ≠ y2 ∧ x1 ^ 3 + y1 ^ 3 = x2 ^ 3 + y2 ^ 3 ∧ x1 ^ 3 + y1 ^ 3 = 1729 "]}
{"theorem":"∀ {E : Type u} [inst : NormedAddCommGroup E] [inst_1 : NormedSpace ℂ E] {Ω : Set E} {f : E → ℂ},\n  DifferentiableOn ℂ f Ω → IsOpen Ω → (∀ (x : E), x ∈ Ω → (f x).re = (f x).re) → ∀ (x y : E), x ∈ Ω → y ∈ Ω → f x = f y","text":"Suppose that `f` is holomorphic in an open set `Ω`. Prove that if `Re(f)` is constant, then `f` is constant.","result":true,"gps":[["∀ {E : Type u} [inst : NormedAddCommGroup E] [inst_1 : NormedSpace ℂ E] {Ω : Set E} {f : E → ℂ},\n  DifferentiableOn ℂ f Ω → IsOpen Ω → (∀ (x : E), x ∈ Ω → (f x).re = (f x).re) → ∀ (x y : E), x ∈ Ω → y ∈ Ω → f x = f y"]],"fullPrompt":"No prompt (maybe using cached data)","all_elaborations":["∀ {E : Type u} [inst : NormedAddCommGroup E] [inst_1 : NormedSpace ℂ E] {Ω : Set E} {f : E → ℂ},\n  DifferentiableOn ℂ f Ω → IsOpen Ω → (∀ (x : E), x ∈ Ω → (f x).re = (f x).re) → ∀ (x y : E), x ∈ Ω → y ∈ Ω → f x = f y "]}
{"theorem":"∀ {E : Type u_1} [inst : NormedAddCommGroup E] [inst_1 : NormedSpace ℂ E] {f : E → ℂ} {Ω : Set E},\n  IsOpen Ω →\n    DifferentiableOn ℂ f Ω → (∀ (x : E), x ∈ Ω → ↑Complex.abs (f x) = ↑Complex.abs (f 0)) → ∀ (x : E), x ∈ Ω → f x = f 0","text":"Suppose that `f` is holomorphic in an open set `Ω`. Prove that if `|f|` is constant, then `f` is constant.","result":true,"gps":[["∀ {E : Type u_1} [inst : NormedAddCommGroup E] [inst_1 : NormedSpace ℂ E] {f : E → ℂ} {Ω : Set E},\n  IsOpen Ω →\n    DifferentiableOn ℂ f Ω → (∀ (x : E), x ∈ Ω → ↑Complex.abs (f x) = ↑Complex.abs (f 0)) → ∀ (x : E), x ∈ Ω → f x = f 0"]],"fullPrompt":"No prompt (maybe using cached data)","all_elaborations":["∀ {E : Type u_1} [inst : NormedAddCommGroup E] [inst_1 : NormedSpace ℂ E] {f : E → ℂ} {Ω : Set E},\n  IsOpen Ω → DifferentiableOn ℂ f Ω → (∀ (x : E), x ∈ Ω → Complex.abs (f x) = Complex.abs (f 0)) → ∀ (x : E), x ∈ Ω → f x = f 0 "]}
{"theorem":"∀ (z : ℂ), ↑Complex.abs z = 1 → Summable fun n => z ^ n / (n + 1) ^ 2","text":"Prove that the power series `Σ zn/n^2` converges at every point of the unit circle.","result":true,"gps":[["∀ (z : ℂ), ↑Complex.abs z = 1 → Summable fun n => z ^ n / (n + 1) ^ 2","∀ (z : ℂ), ↑Complex.abs z = 1 → Summable fun n => z ^ n / (n + 1) ^ 2"]],"fullPrompt":"No prompt (maybe using cached data)","all_elaborations":["∀ (z : ℂ), Complex.abs z = 1 → Summable (λ n => z ^ n / (↑n + 1) ^ 2) ","∀ (z : ℂ), Complex.abs z = 1 → Summable (λ n => z ^ n / (↑n + 1) ^ 2) "]}
{"theorem":"∀ {Ω : Set ℂ} {ϕ : ℂ → ℂ},\n  IsOpen Ω →\n    Metric.Bounded Ω →\n      DifferentiableOn ℂ ϕ Ω →\n        Set.MapsTo ϕ Ω Ω → ∃ z₀, z₀ ∈ Ω ∧ ϕ z₀ = z₀ ∧ HasDerivAt ϕ 1 z₀ → ∀ (z : ℂ), z ∈ Ω → ϕ z = z + (ϕ z₀ - z₀)","text":"Let `Ω` be a bounded open subset of `ℂ`, and `ϕ: Ω → Ω` a holomorphic function. Prove that if there exists a point `z₀ ∈ Ω` such that `ϕ(z₀) = z₀` and `ϕ'(z₀) = 1`, then `ϕ` is linear.","result":true,"gps":[["∀ {Ω : Set ℂ} {ϕ : ℂ → ℂ},\n  IsOpen Ω →\n    Metric.Bounded Ω →\n      DifferentiableOn ℂ ϕ Ω →\n        Set.MapsTo ϕ Ω Ω → ∃ z₀, z₀ ∈ Ω ∧ ϕ z₀ = z₀ ∧ HasDerivAt ϕ 1 z₀ → ∀ (z : ℂ), z ∈ Ω → ϕ z = z + (ϕ z₀ - z₀)"],["∀ {Ω : Set ℂ},\n  IsOpen Ω →\n    Metric.Bounded Ω →\n      ∀ {ϕ : ℂ → ℂ},\n        DifferentiableOn ℂ ϕ Ω →\n          Set.MapsTo ϕ Ω Ω →\n            ∀ {z₀ : ℂ}, z₀ ∈ Ω → ϕ z₀ = z₀ → HasDerivAt ϕ 1 z₀ → ∃ a, ∀ (z : ℂ), z ∈ Ω → ϕ z = z₀ + a * (z - z₀)"],["∀ {Ω : Set ℂ},\n  IsOpen Ω →\n    Metric.Bounded Ω →\n      ∀ {ϕ : ℂ → ℂ},\n        (∀ (z : ℂ), z ∈ Ω → AnalyticAt ℂ ϕ z) →\n          ∀ {z₀ : ℂ}, z₀ ∈ Ω → ϕ z₀ = z₀ → HasDerivAt ϕ 1 z₀ → ∃ a b, ∀ (z : ℂ), z ∈ Ω → ϕ z = a * z + b"],["∀ {Ω : Set ℂ} {ϕ : ℂ → ℂ},\n  IsOpen Ω →\n    Metric.Bounded Ω →\n      DifferentiableOn ℂ ϕ Ω → Set.MapsTo ϕ Ω Ω → ∃ z₀, z₀ ∈ Ω ∧ ϕ z₀ = z₀ ∧ HasDerivWithinAt ϕ 1 Ω z₀ → IsLinearMap ℂ ϕ"],["∀ {Ω : Set ℂ},\n  IsOpen Ω →\n    Metric.Bounded Ω →\n      ∀ {ϕ : ℂ → ℂ},\n        DifferentiableOn ℂ ϕ Ω →\n          Set.MapsTo ϕ Ω Ω → ∀ {z₀ : ℂ}, z₀ ∈ Ω → ϕ z₀ = z₀ → HasDerivAt ϕ 1 z₀ → ∀ (z : ℂ), z ∈ Ω → ϕ z = z₀ + (z - z₀)"],["∀ {E : Type u_1} [inst : NormedAddCommGroup E] [inst_1 : Nor