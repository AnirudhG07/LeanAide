{"total-prompts": 40,
 "temperature": 0.8,
 "query-number": 12,
 "number-similar-sentences": 20,
 "include-fixed": false,
 "failures":
 ["Every set of Borel measure zero is Lebesgue measurable.",
  "Every commutative ring is a monoid.",
  "There is no field of order `10`."],
 "elaborated-prompts":
 [{"theorem": "∀ {p : ℕ}, Nat.Prime p → p = 2 ∨ Odd p",
   "some-correct": null,
   "prompt": "Every prime number is `2` or odd.",
   "groups":
   [["∀ {p : ℕ}, Nat.Prime p → p = 2 ∨ Odd p",
     "∀ {p : ℕ}, Nat.Prime p → p = 2 ∨ Odd p",
     "∀ {p : ℕ}, Nat.Prime p → p = 2 ∨ Odd p",
     "∀ {p : ℕ}, Nat.Prime p → p = 2 ∨ Odd p ∨ ¬Odd p ∧ ¬Even p"],
    ["∀ {p : ℕ}, Nat.Prime p → p = 2 ∨ p % 2 = 1 ∨ p % 2 = 3 ∨ p % 2 = 5 ∨ p % 2 = 7 ∨ p % 2 = 11 ∨ p % 2 = 13 ∨ p % 2 = 17"],
    ["∀ {p : ℕ} [inst : Fact (Nat.Prime p)], p ≠ 2 → Odd p ∨ p = 2"],
    ["∀ (p : ℕ), Nat.Prime p → p = 2 ∨ p % 2 = 1 ∧ p ≠ 2"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   [" ∀ {p : ℕ}, Nat.Prime p → p = 2 ∨ Odd p ",
    " ∀ {p : ℕ}, Nat.Prime p → p = 2 ∨ Odd p",
    " ∀ {p : ℕ}, Nat.Prime p → p = 2 ∨ Odd p",
    " ∀ {p : ℕ} [inst : Fact (Nat.Prime p)], p ≠ 2 → Odd p ∨ p = 2 ",
    " ∀ (p : ℕ), Nat.Prime p → p = 2 ∨ p % 2 = 1 ∧ p ≠ 2",
    " ∀ {p : ℕ}, Nat.Prime p → p = 2 ∨ Odd p ∨ (¬Odd p ∧ ¬Even p)",
    " ∀ {p : ℕ}, Nat.Prime p → p = 2 ∨ p % 2 = 1 ∨ p % 2 = 3 ∨ p % 2 = 5 ∨ p % 2 = 7 ∨ p % 2 = 11 ∨ p % 2 = 13 ∨ p % 2 = 17"]},
  {"theorem": "∀ (n : ℕ), Odd n → ∃ m, n < 2 * m ∧ Odd m ∧ ¬m < n ∧ ¬m = n",
   "some-correct": null,
   "prompt": "There are infinitely many odd natural numbers.",
   "groups": [["∀ (n : ℕ), Odd n → ∃ m, n < 2 * m ∧ Odd m ∧ ¬m < n ∧ ¬m = n"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   [" Set.Infinite {a : ℕ | a % 2 = 1} ",
    " Set.Infinite { x : ℕ | x % 2 = 1 }",
    " Set.Infinite { m : ℕ | m % 2 = 1 } ",
    " ∀ {n : ℕ}, n ≠ 0 → ∃ m, Odd m ∧ n < m",
    " Set.Infinite {a : ℕ | Nat.Prime a ∧ Nat.Prime (a + 2)} ",
    " ∀ {n : ℕ}, n ≠ 0 → ∃ m, Odd m ∧ n % 2 = m",
    " ∀ {n : ℕ}, n ≠ 0 → ∃ m, Odd m ∧ n = 2 * m + 1 ∧ n ≠ 0",
    " ∀ (n : ℕ), Odd n → ∃ m, n < 2 * m ∧ Odd m ∧ ¬(m < n) ∧ ¬(m = n)",
    " ∀ {n : ℕ}, n ≠ 0 → ∃ m, Odd m ∧ n < m ∧ Odd n ∧ m ≤ n + 1 ∧ m % 2 = 1"]},
  {"theorem": "∀ (p : ℕ) [inst : Fact (Nat.Prime p)], p < 3 → p = 2",
   "some-correct": null,
   "prompt": "The smallest odd prime is `3`.",
   "groups":
   [["∀ (p : ℕ) [inst : Fact (Nat.Prime p)], p < 3 → p = 2"],
    ["∀ (p : ℕ), Nat.Prime p → Odd p → p = 3"],
    ["∀ (p : ℕ), Nat.Prime p → p ≠ 2 → p = 3"],
    ["∀ (p : ℕ), Nat.Prime p → p ≠ 2 → p = 3 ∨ p = 5"],
    ["∀ {p : ℕ}, Nat.Prime p → Odd p → p = 3 ∨ p = 5"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   [" ∀ (p : ℕ), Nat.Prime p → Odd p → p = 3",
    " ∀ (p : ℕ), Nat.Prime p → p ≠ 2 → p = 3",
    " ∀ (p : ℕ), Nat.Prime p → p ≠ 2 → p = 3 ∨ p = 5",
    " ∀ {p : ℕ}, Nat.Prime p → Odd p → p = 3 ∨ p = 5",
    " ∀ (p : ℕ) [inst : Fact (Nat.Prime p)], p < 3 → p = 2",
    " ∀ (p : ℕ), Nat.Prime p → p = 3 ↔ p % 2 = 1 ∧ ¬Nat.Prime (p / 2) "]},
  {"theorem":
   "∀ (a : ℕ), a ≠ 0 → ∃ b, Nat.Prime b ∧ b % 2 = 1 ∧ (Nat.factorization a) b = 1 ∧ a ≠ b",
   "some-correct": null,
   "prompt": "There are infinitely many odd prime numbers.",
   "groups":
   [["∀ (a : ℕ), a ≠ 0 → ∃ b, Nat.Prime b ∧ b % 2 = 1 ∧ (Nat.factorization a) b = 1 ∧ a ≠ b"],
    ["∀ (n : ℕ), Odd n → ∃ p, Nat.Prime p ∧ n ≤ p ∧ p ≤ 2 * n ∧ Odd p"],
    ["∀ {n : ℕ}, 2 < n → Set.Infinite {p | Nat.Prime p ∧ Odd p ∧ p ≤ n}"],
    ["∀ (k : ℕ), k ≠ 0 → Set.Infinite {p | Nat.Prime p ∧ Odd p ∧ k < p}"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   [" Set.Infinite {p | Nat.Prime p ∧ Odd p} ",
    " Set.Infinite {p | Nat.Prime p ∧ Odd p} ",
    " Set.Infinite {p | Nat.Prime p ∧ Odd p}",
    " Set.Infinite {p | Nat.Prime p ∧ p % 2 = 1} ",
    " Set.Infinite {p | Nat.Prime p ∧ p ≡ 3 [MOD 2]} ",
    " ∀ (n : ℕ), Odd n → ∃ p, Nat.Prime p ∧ n ≤ p ∧ p ≤ 2 * n ∧ Odd p",
    " ∀ {n : ℕ}, 2 < n → Set.Infinite {p | Nat.Prime p ∧ Odd p ∧ p ≤ n} ",
    " ∀ (k : ℕ), k ≠ 0 → Set.Infinite {p : ℕ | Nat.Prime p ∧ Odd p ∧ k < p} ",
    " ∀ (a : ℕ), a ≠ 0 → ∃ (b : ℕ), Nat.Prime b ∧ b % 2 = 1 ∧ Nat.factorization a b = 1 ∧ a ≠ b"]},
  {"theorem":
   "∀ {K : Type u} {V : Type v} [inst : DivisionRing K] [inst_1 : AddCommGroup V] [inst_2 : Module K V],\n  Module.rank K V = 2 → FiniteDimensional K V",
   "some-correct": null,
   "prompt":
   "If a vector space has dimension `2` then it is finite dimensional.",
   "groups":
   [["∀ {K : Type u} {V : Type v} [inst : DivisionRing K] [inst_1 : AddCommGroup V] [inst_2 : Module K V],\n  Module.rank K V = 2 → FiniteDimensional K V",
     "∀ {𝕜 : Type u} {V : Type v} [inst : DivisionRing 𝕜] [inst_1 : AddCommGroup V] [inst_2 : Module 𝕜 V],\n  Module.rank 𝕜 V = 2 → FiniteDimensional 𝕜 V"],
    ["∀ {𝕜 : Type u} {V : Type v} [inst : DivisionRing 𝕜] [inst_1 : AddCommGroup V] [inst_2 : Module 𝕜 V] {ι : Type w}\n  [inst_3 : Finite ι], Basis ι 𝕜 V → Module.rank 𝕜 V = 2 → FiniteDimensional 𝕜 V"],
    ["∀ {𝕜 : Type u_1} {V : Type u_2} [inst : DivisionRing 𝕜] [inst_1 : AddCommGroup V] [inst_2 : Module 𝕜 V],\n  Module.rank 𝕜 V = 2 → FiniteDimensional 𝕜 V"],
    ["∀ {𝕜 : Type u_1} {V : Type u_2} [inst : DivisionRing 𝕜] [inst_1 : AddCommGroup V] [inst_2 : Module 𝕜 V]\n  [inst_3 : FiniteDimensional 𝕜 V], Module.rank 𝕜 V = 2 → FiniteDimensional 𝕜 V"],
    ["∀ {𝕜 : Type u} {V : Type v} [inst : Field 𝕜] [inst_1 : AddCommGroup V] [inst_2 : Module 𝕜 V],\n  Module.rank 𝕜 V = 2 → FiniteDimensional 𝕜 V"],
    ["∀ {𝕜 : Type u_1} {V : Type u_2} [inst : Field 𝕜] [inst_1 : AddCommGroup V] [inst_2 : Module 𝕜 V] {ι : Type w}\n  [inst_3 : Finite ι], Basis ι 𝕜 V → Module.rank 𝕜 V = 2 → FiniteDimensional 𝕜 V"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   [" ∀ {K : Type u} {V : Type v} [inst : DivisionRing K] [inst_1 : AddCommGroup V] [inst_2 : Module K V],\n  Module.rank K V = 2 → FiniteDimensional K V ",
    " ∀ {𝕜 : Type u_1} {V : Type u_2} [inst : DivisionRing 𝕜] [inst_1 : AddCommGroup V] [inst_2 : Module 𝕜 V]\n  (h : Module.rank 𝕜 V = 2), FiniteDimensional 𝕜 V ",
    " ∀ {𝕜 : Type u} {V : Type v} [inst : DivisionRing 𝕜] [inst_1 : AddCommGroup V] [inst_2 : Module 𝕜 V],\n  Module.rank 𝕜 V = 2 → FiniteDimensional 𝕜 V ",
    " ∀ {𝕜 : Type u_1} {V : Type u_2} [inst : DivisionRing 𝕜] [inst_1 : AddCommGroup V] [inst_2 : Module 𝕜 V]\n  [inst_3 : FiniteDimensional 𝕜 V], Module.rank 𝕜 V = 2 → FiniteDimensional 𝕜 V ",
    " ∀ {𝕜 : Type u} {V : Type v} [inst : Field 𝕜] [inst_1 : AddCommGroup V] [inst_2 : Module 𝕜 V],\n  Module.rank 𝕜 V = 2 → FiniteDimensional 𝕜 V ",
    " ∀ {𝕜 : Type u_1} {V : Type u_2} [inst : Field 𝕜] [inst_1 : AddCommGroup V] [inst_2 : Module 𝕜 V] {ι : Type w}\n  [inst_3 : Finite ι], Basis ι 𝕜 V → Module.rank 𝕜 V = 2 → FiniteDimensional 𝕜 V ",
    " ∀ {𝕜 : Type u} {V : Type v} [inst : DivisionRing 𝕜] [inst_1 : AddCommGroup V] [inst_2 : Module 𝕜 V]\n  {ι : Type w} [inst_3 : Finite ι], Basis ι 𝕜 V → Module.rank 𝕜 V = 2 → FiniteDimensional 𝕜 V "]},
  {"theorem": "{K : Type u} → [inst : Field K] → DivisionRing K",
   "some-correct": null,
   "prompt": "Every field is a division ring.",
   "groups":
   [["{K : Type u} → [inst : Field K] → DivisionRing K",
     "{K : Type u} → [inst : Field K] → DivisionRing K",
     "{K : Type u} → [inst : Field K] → DivisionRing K",
     "{K : Type u} → [inst : Field K] → DivisionRing K"],
    ["{K : Type u_1} → [inst : Field K] → DivisionRing K",
     "{K : Type u_1} → [inst : Field K] → DivisionRing K",
     "{K : Type u_1} → [inst : Field K] → DivisionRing K"],
    ["{α : Type u_1} → [inst : Field α] → DivisionRing α",
     "{α : Type u_1} → [inst : Field α] → DivisionRing α"],
    ["(K : Type u_1) → [inst : Field K] → DivisionRing K"],
    ["{R : Type u} → [inst : Field R] → DivisionRing R"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   [" ∀ {K : Type u} [inst : Field K], DivisionRing K ",
    " ∀ {K : Type u} [inst : Field K], DivisionRing K ",
    " ∀ {K : Type u} [inst : Field K], DivisionRing K ",
    " ∀ {K : Type u} [inst : Field K], DivisionRing K ",
    " ∀ {K : Type u_1} [inst : Field K], DivisionRing K ",
    " ∀ {K : Type u_1} [inst : Field K], DivisionRing K ",
    " ∀ {K : Type u_1} [inst : Field K], DivisionRing K ",
    " ∀ {R : Type u} [inst : Field R], DivisionRing R ",
    " ∀ {α : Type u_1} [inst : Field α], DivisionRing α ",
    " ∀ {α : Type u_1} [inst : Field α], DivisionRing α ",
    " ∀ (K : Type u_1) [inst : Field K], DivisionRing K "]},
  {"theorem":
   "∀ {K : Type u} {V : Type v} [inst : DivisionRing K] [inst_1 : AddCommGroup V] [inst_2 : Module K V],\n  Module.rank K V = 2 → FiniteDimensional K V",
   "some-correct": null,
   "prompt": "If a space has dimension `2` then it is finite dimensional.",
   "groups":
   [["∀ {K : Type u} {V : Type v} [inst : DivisionRing K] [inst_1 : AddCommGroup V] [inst_2 : Module K V],\n  Module.rank K V = 2 → FiniteDimensional K V"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   [" ∀ {K : Type u} {V : Type v} [inst : DivisionRing K] [inst_1 : AddCommGroup V] [inst_2 : Module K V]\n  (h : Module.rank K V = 2), FiniteDimensional K V "]},
  {"theorem": "∀ (n : ℕ), ∃ m, n = m + 1",
   "some-correct": null,
   "prompt": "Every natural number has a successor.",
   "groups":
   [["∀ (n : ℕ), ∃ m, n = m + 1",
     "∀ (n : ℕ), ∃ m, n = m + 1",
     "∀ {n : ℕ}, ∃ s, n = Nat.succ s"],
    ["∀ (x : ℕ), ∃ n, Nat.succ n = x", "∀ (a : ℕ), ∃ n, Nat.succ n = a"],
    ["∀ {n : ℕ}, ∃ k, ∀ (m : ℕ), n ≤ m ↔ k ≤ m ∧ m ≠ n"],
    ["∀ (n : ℕ), ∃ m, Nat.succ m = n ∧ ∀ (k : ℕ), Nat.succ k = m → k = n"],
    ["∀ (n : ℕ), ∃ k, n = Nat.succ k ∧ ¬Nat.succ k = 0 ∧ ¬Nat.succ k = n"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   [" ∀ (n : ℕ), ∃ m, n = m + 1",
    " ∀ (n : ℕ), ∃ m, n = m + 1 ",
    " ∀ (x : ℕ), ∃ n, Nat.succ n = x",
    " ∀ (a : ℕ), ∃ n, Nat.succ n = a",
    " ∀ (n : ℕ), ∃ m, Nat.succ m = n ∧ ∀ k, Nat.succ k = m → k = n",
    " ∀ {n : ℕ}, ∃ s, n = Nat.succ s ",
    " ∀ (n : ℕ), ∃ k, n = Nat.succ k ∧ ¬Nat.succ k = 0 ∧ ¬Nat.succ k = n",
    " ∀ {n : ℕ}, ∃ k, ∀ m, n ≤ m ↔ k ≤ m ∧ m ≠ n"]},
  {"theorem": "∀ (n : ℕ), n < Nat.succ n",
   "some-correct": null,
   "prompt": "Every natural number is less than its successor.",
   "groups":
   [["∀ (n : ℕ), n < Nat.succ n",
     "∀ (n : ℕ), n < n + 1",
     "∀ (a : ℕ), a < Nat.succ a",
     "∀ (n : ℕ), n ≤ n + 1",
     "∀ (n : ℕ), n < n + 1",
     "∀ {α : Type u} [inst : LinearOrderedSemiring α] {n : ℕ}, n ≤ n + 1"],
    ["∀ (n : ℕ), n ≤ Nat.succ n",
     "∀ (n : ℕ), n ≤ Nat.succ n",
     "∀ (n : ℕ), n ≤ Nat.succ n",
     "∀ (n : ℕ), n ≤ Nat.succ n",
     "∀ (x : ℕ), x ≤ Nat.succ x"],
    ["∀ {α : Type u_9} [inst : LinearOrder α] [inst_1 : Zero α] [inst_2 : SuccOrder α] [inst_3 : PredOrder α] (n : ℕ),\n  n ≤ Nat.succ n"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   [" ∀ (n : ℕ), n ≤ Nat.succ n ",
    " ∀ (n : ℕ), n ≤ Nat.succ n ",
    " ∀ (n : ℕ), n < Nat.succ n",
    " ∀ (n : ℕ), n < n + 1 ",
    " ∀ (n : ℕ), n ≤ Nat.succ n",
    " ∀ (a : ℕ), a < Nat.succ a ",
    " ∀ n : ℕ, n ≤ n + 1 ",
    " ∀ n : ℕ, n < n + 1 ",
    " ∀ n : ℕ, n ≤ Nat.succ n ",
    " ∀ (x : ℕ), x ≤ Nat.succ x ",
    " ∀ {α : Type u} [inst : LinearOrderedSemiring α] {n : ℕ}, n ≤ n + 1 ",
    " ∀ {α : Type u_9} [inst : LinearOrder α] [inst_1 : Zero α] [inst_2 : SuccOrder α] [inst_3 : PredOrder α] (n : ℕ), n ≤ Nat.succ n "]},
  {"theorem":
   "∀ {α : Type u_6} [inst : MeasurableSpace α] [inst_1 : TopologicalSpace α] [inst_2 : MeasurableSpace α]\n  [inst_3 : BorelSpace α] (s : Set α), MeasurableSet s",
   "some-correct": null,
   "prompt": "Every set is Lebesgue measurable.",
   "groups":
   [["∀ {α : Type u_6} [inst : MeasurableSpace α] [inst_1 : TopologicalSpace α] [inst_2 : MeasurableSpace α]\n  [inst_3 : BorelSpace α] (s : Set α), MeasurableSet s"],
    ["∀ {α : Type u_6} [inst : TopologicalSpace α] [inst_1 : MeasurableSpace α],\n  MeasureTheory.Measure α → ∀ (s : Set α), MeasurableSet s"],
    ["∀ {α : Type u_1} [inst : MeasurableSpace α], MeasureTheory.Measure α → ∀ (s : Set α), MeasurableSet s"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   [" ∀ {α : Type u_6} [inst : MeasurableSpace α] (μ : MeasureTheory.Measure α), ∀ s, MeasurableSet s",
    " ∀ {α : Type u_6} [inst : TopologicalSpace α] [inst_1 : MeasurableSpace α] (μ : MeasureTheory.Measure α),\n  ∀ s : Set α, MeasurableSet s",
    " ∀ {α : Type u_1} [inst : MeasurableSpace α] (μ : MeasureTheory.Measure α),\n  ∀ (s : Set α), MeasurableSet s",
    " ∀ {α : Type u_6} [inst : MeasurableSpace α] [inst_1 : TopologicalSpace α] [inst_2 : MeasurableSpace α] [inst_3 : BorelSpace α], ∀ s : Set α, MeasurableSet s"]},
  {"theorem": "∀ {p n : ℕ}, Nat.Prime p → p ∣ n → ¬IsSquare n",
   "some-correct": null,
   "prompt": "No prime number is a perfect square.",
   "groups":
   [["∀ {p n : ℕ}, Nat.Prime p → p ∣ n → ¬IsSquare n",
     "∀ {p n : ℕ}, Nat.Prime p → p ∣ n → ¬IsSquare n"],
    ["∀ {α : Type u_1} [inst : CommRing α] [inst_1 : IsDomain α] (n : ℕ) [inst_2 : Fact (Nat.Prime n)],\n  ¬IsSquare ↑n = (true = true)"],
    ["∀ {n : ℕ}, Nat.Prime n → ¬IsSquare n"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   [" ∀ {n : ℕ}, Nat.Prime n → ¬IsSquare n ",
    " ∀ {p n : ℕ}, Nat.Prime p → p ∣ n → ¬IsSquare n ",
    " ∀ {p n : ℕ}, Nat.Prime p → p ∣ n → ¬IsSquare n ",
    " ∀ {α : Type u_1} [inst : CommRing α] [inst_1 : IsDomain α] (n : ℕ) [inst_2 : Fact (Nat.Prime n)], ¬IsSquare (n : α) = true "]},
  {"theorem": "∀ {p : ℕ} [inst : Fact (Nat.Prime p)], Odd p → 2 < p",
   "some-correct": null,
   "prompt": "Every odd prime number is greater than `2`.",
   "groups":
   [["∀ {p : ℕ} [inst : Fact (Nat.Prime p)], Odd p → 2 < p",
     "∀ {p : ℕ} [inst : Fact (Nat.Prime p)], Odd p → 2 < p",
     "∀ (p : ℕ) [inst : Fact (Nat.Prime p)], Odd p → 2 < p"],
    ["∀ (p : ℕ), Nat.Prime p → Odd p → 2 < p",
     "∀ (p : ℕ), Nat.Prime p → Odd p → 2 < p"],
    ["∀ {p : ℕ} [inst : Fact (Nat.Prime p)], 2 < p ∧ Odd p",
     "∀ {p : ℕ} [inst : Fact (Nat.Prime p)], 2 < p ∧ Odd p"],
    ["∀ {p : ℕ} [inst : Fact (Nat.Prime p)], Odd p → 2 < p ∧ p ≤ 42"],
    ["∀ {p : ℕ} [inst : Fact (Nat.Prime p)], 2 < p"],
    ["∀ {p : ℕ} [inst : Fact (Nat.Prime p)], p % 2 = 1 → 2 < p"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   [" ∀ (p : ℕ), Nat.Prime p → Odd p → 2 < p",
    " ∀ (p : ℕ), Nat.Prime p → Odd p → 2 < p ",
    " ∀ {p : ℕ} [inst : Fact (Nat.Prime p)], Odd p → 2 < p",
    " ∀ {p : ℕ} [inst : Fact (Nat.Prime p)], Odd p → 2 < p",
    " ∀ (p : ℕ) [inst : Fact (Nat.Prime p)], Odd p → 2 < p ",
    " ∀ {p : ℕ} [inst : Fact (Nat.Prime p)] (hp : p % 2 = 1), 2 < p",
    " ∀ {p : ℕ} [inst : Fact (Nat.Prime p)], 2 < p",
    " ∀ {p : ℕ} [inst : Fact (Nat.Prime p)], 2 < p ∧ Odd p",
    " ∀ {p : ℕ} [inst : Fact (Nat.Prime p)], 2 < p ∧ Odd p",
    " ∀ {p : ℕ} [inst : Fact (Nat.Prime p)] (hp : Odd p), 2 < p ∧ p ≤ 42"]},
  {"theorem":
   "∀ {α : Type u} [inst : CommRing α] {a b : α},\n  (∃ x1 x2 x3 x4, a = x1 ^ 2 + x2 ^ 2 + x3 ^ 2 + x4 ^ 2) →\n    (∃ y1 y2 y3 y4, b = y1 ^ 2 + y2 ^ 2 + y3 ^ 2 + y4 ^ 2) → ∃ z1 z2 z3 z4, a * b = z1 ^ 2 + z2 ^ 2 + z3 ^ 2 + z4 ^ 2",
   "some-correct": null,
   "prompt":
   "The product of two numbers, each of which is the sum of four squares, is itself a sum of four squares.",
   "groups":
   [["∀ {α : Type u} [inst : CommRing α] {a b : α},\n  (∃ x1 x2 x3 x4, a = x1 ^ 2 + x2 ^ 2 + x3 ^ 2 + x4 ^ 2) →\n    (∃ y1 y2 y3 y4, b = y1 ^ 2 + y2 ^ 2 + y3 ^ 2 + y4 ^ 2) → ∃ z1 z2 z3 z4, a * b = z1 ^ 2 + z2 ^ 2 + z3 ^ 2 + z4 ^ 2",
     "∀ {α : Type u} [inst : CommRing α] (a b : α),\n  (∃ x y z w, a = x ^ 2 + y ^ 2 + z ^ 2 + w ^ 2) →\n    (∃ u v p q, b = u ^ 2 + v ^ 2 + p ^ 2 + q ^ 2) → ∃ r s t w, a * b = r ^ 2 + s ^ 2 + t ^ 2 + w ^ 2"],
    ["∀ {R : Type u_1} [inst : CommRing R] (a b : R),\n  ∃ x y z w a' b',\n    a = a' ^ 2 + b' ^ 2 + x ^ 2 + y ^ 2 ∧ b = x ^ 2 + y ^ 2 + z ^ 2 + w ^ 2 →\n      ∃ r s t u v r' s' t' u', a * b = r ^ 2 + s ^ 2 + t ^ 2 + u ^ 2 ∧ b * a = r' ^ 2 + s' ^ 2 + t' ^ 2 + u' ^ 2"],
    ["∀ {R : Type u_1} [inst : CommRing R] {a b : R},\n  (∃ x y z w, a = x ^ 2 + y ^ 2 + z ^ 2 + w ^ 2) →\n    (∃ u v w x, b = u ^ 2 + v ^ 2 + w ^ 2 + x ^ 2) → ∃ r s t u, a * b = r ^ 2 + s ^ 2 + t ^ 2 + u ^ 2"],
    ["∀ {α : Type u} [inst : LinearOrderedRing α] (a b : α),\n  (∃ x y z w, a = x ^ 2 + y ^ 2 + z ^ 2 + w ^ 2) →\n    (∃ u v r s, b = u ^ 2 + v ^ 2 + r ^ 2 + s ^ 2) → ∃ u v r s, a * b = u ^ 2 + v ^ 2 + r ^ 2 + s ^ 2"],
    ["∀ {a b x y z w u v u' v' : ℕ},\n  a = x ^ 2 + y ^ 2 + z ^ 2 + w ^ 2 → b = u ^ 2 + v ^ 2 + u' ^ 2 + v' ^ 2 → ∃ r s, a * b = r ^ 2 + s ^ 2"],
    ["∀ {R : Type u_1} [inst : CommRing R] (a b : R),\n  ∃ u v w x y z t,\n    a = u ^ 2 + v ^ 2 + w ^ 2 + x ^ 2 ∧\n      b = v ^ 2 + w ^ 2 + x ^ 2 + y ^ 2 ∧ a * b = u ^ 2 + v ^ 2 + w ^ 2 + x ^ 2 + y ^ 2 + z ^ 2 + t ^ 2"],
    ["∀ {R : Type u_1} [inst : CommRing R] (a b : R),\n  (∃ x y z t, a = x ^ 2 + y ^ 2 + z ^ 2 + t ^ 2) →\n    (∃ u v w h, b = u ^ 2 + v ^ 2 + w ^ 2 + h ^ 2) →\n      ∃ p q r s, a * b = p ^ 2 + q ^ 2 + r ^ 2 + s ^ 2 ∧ r ≠ s ∧ q ≠ 0 ∧ p ≠ 0"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   [" ∀ {α : Type u} [inst : LinearOrderedRing α] (a b : α),\n    (∃ x y z w : α, a = x ^ 2 + y ^ 2 + z ^ 2 + w ^ 2) →\n      (∃ u v r s : α, b = u ^ 2 + v ^ 2 + r ^ 2 + s ^ 2) → ∃ u v r s : α, a * b = u ^ 2 + v ^ 2 + r ^ 2 + s ^ 2 ",
    " ∀ {R : Type u_1} [inst : CommRing R] {a b : R},\n    (∃ x y z w : R, a = x ^ 2 + y ^ 2 + z ^ 2 + w ^ 2) →\n      (∃ u v w x : R, b = u ^ 2 + v ^ 2 + w ^ 2 + x ^ 2) →\n        ∃ r s t u : R, a * b = r ^ 2 + s ^ 2 + t ^ 2 + u ^ 2 ",
    " ∀ {α : Type u} [inst : CommRing α] {a b : α} (ha : ∃ x1 x2 x3 x4, a = x1 ^ 2 + x2 ^ 2 + x3 ^ 2 + x4 ^ 2)\n    (hb : ∃ y1 y2 y3 y4, b = y1 ^ 2 + y2 ^ 2 + y3 ^ 2 + y4 ^ 2),\n    ∃ z1 z2 z3 z4, a * b = z1 ^ 2 + z2 ^ 2 + z3 ^ 2 + z4 ^ 2 ",
    " ∀ {a b x y z w u v u' v' : ℕ}, a = x ^ 2 + y ^ 2 + z ^ 2 + w ^ 2 → b = u ^ 2 + v ^ 2 + u' ^ 2 + v' ^ 2 → ∃ r s, a * b = r ^ 2 + s ^ 2",
    " ∀ {α : Type u} [inst : CommRing α] (a b : α),\n    (∃ x y z w : α, a = x ^ 2 + y ^ 2 + z ^ 2 + w ^ 2) →\n      (∃ u v p q : α, b = u ^ 2 + v ^ 2 + p ^ 2 + q ^ 2) →\n        ∃ r s t w : α, a * b = r ^ 2 + s ^ 2 + t ^ 2 + w ^ 2 ",
    " ∀ {R : Type u_1} [inst : CommRing R] (a b : R), ∃ u v w x y z t,\n    a = u ^ 2 + v ^ 2 + w ^ 2 + x ^ 2 ∧ b = v ^ 2 + w ^ 2 + x ^ 2 + y ^ 2 ∧\n      a * b = u ^ 2 + v ^ 2 + w ^ 2 + x ^ 2 + y ^ 2 + z ^ 2 + t ^ 2 ",
    " ∀ {R : Type u_1} [inst : CommRing R] (a b : R),\n    (∃ x y z t, a = x ^ 2 + y ^ 2 + z ^ 2 + t ^ 2) →\n      (∃ u v w h, b = u ^ 2 + v ^ 2 + w ^ 2 + h ^ 2) →\n        ∃ p q r s, a * b = p ^ 2 + q ^ 2 + r ^ 2 + s ^ 2 ∧ r ≠ s ∧ q ≠ 0 ∧ p ≠ 0",
    " ∀ {R : Type u_1} [inst : CommRing R] (a b : R),\n  ∃ x y z w a' b', a = a' ^ 2 + b' ^ 2 + x ^ 2 + y ^ 2 ∧ b = x ^ 2 + y ^ 2 + z ^ 2 + w ^ 2 →\n    ∃ r s t u v r' s' t' u', a * b = r ^ 2 + s ^ 2 + t ^ 2 + u ^ 2 ∧ b * a = r' ^ 2 + s' ^ 2 + t' ^ 2 + u' ^ 2 "]},
  {"theorem":
   "∀ {X : Type u_1} [inst : TopologicalSpace X] [inst_1 : CompactSpace X], LocallyCompactSpace X",
   "some-correct": null,
   "prompt": "Every compact topological space is locally compact.",
   "groups":
   [["∀ {X : Type u_1} [inst : TopologicalSpace X] [inst_1 : CompactSpace X], LocallyCompactSpace X",
     "∀ {X : Type u_1} [inst : TopologicalSpace X] [inst_1 : CompactSpace X], LocallyCompactSpace X",
     "∀ {X : Type u_1} [inst : TopologicalSpace X] [inst_1 : CompactSpace X], LocallyCompactSpace X",
     "∀ {X : Type u_1} [inst : TopologicalSpace X] [inst_1 : CompactSpace X], LocallyCompactSpace X",
     "∀ {X : Type u_1} [inst : TopologicalSpace X] [inst_1 : CompactSpace X], LocallyCompactSpace X",
     "∀ {X : Type u_1} [inst : TopologicalSpace X] [inst_1 : CompactSpace X], LocallyCompactSpace X",
     "∀ {X : Type u_1} [inst : TopologicalSpace X] [inst_1 : CompactSpace X], LocallyCompactSpace X",
     "∀ {X : Type u_1} [inst : TopologicalSpace X] [inst_1 : CompactSpace X], LocallyCompactSpace X",
     "∀ {X : Type u_1} [inst : TopologicalSpace X] [inst_1 : CompactSpace X], LocallyCompactSpace X",
     "∀ {X : Type u_1} [inst : TopologicalSpace X] [inst_1 : CompactSpace X], LocallyCompactSpace X",
     "∀ {X : Type u_1} [inst : TopologicalSpace X] [inst_1 : CompactSpace X], LocallyCompactSpace X"],
    ["∀ {X : Type u} [inst : TopologicalSpace X] [inst_1 : CompactSpace X], LocallyCompactSpace X"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   [" ∀ {X : Type u_1} [inst : TopologicalSpace X] [inst_1 : CompactSpace X], LocallyCompactSpace X ",
    " ∀ {X : Type u_1} [inst : TopologicalSpace X] [inst_1 : CompactSpace X], LocallyCompactSpace X ",
    " ∀ {X : Type u_1} [inst : TopologicalSpace X] [inst_1 : CompactSpace X], LocallyCompactSpace X ",
    " ∀ {X : Type u_1} [inst : TopologicalSpace X] [inst_1 : CompactSpace X], LocallyCompactSpace X ",
    " ∀ {X : Type u_1} [inst : TopologicalSpace X] [inst_1 : CompactSpace X], LocallyCompactSpace X ",
    " ∀ {X : Type u_1} [inst : TopologicalSpace X] [inst_1 : CompactSpace X], LocallyCompactSpace X ",
    " ∀ {X : Type u_1} [inst : TopologicalSpace X] [inst_1 : CompactSpace X], LocallyCompactSpace X ",
    " ∀ {X : Type u_1} [inst : TopologicalSpace X] [inst_1 : CompactSpace X], LocallyCompactSpace X ",
    " ∀ {X : Type u_1} [inst : TopologicalSpace X] [inst_1 : CompactSpace X], LocallyCompactSpace X ",
    " ∀ {X : Type u_1} [inst : TopologicalSpace X] [inst_1 : CompactSpace X], LocallyCompactSpace X ",
    " ∀ {X : Type u_1} [inst : TopologicalSpace X] [inst_1 : CompactSpace X], LocallyCompactSpace X",
    " ∀ {X : Type u} [inst : TopologicalSpace X] [inst_1 : CompactSpace X], LocallyCompactSpace X "]},
  {"theorem":
   "∀ {α : Type u} {β : Type v} [inst : UniformSpace α] [inst_1 : UniformSpace β] {f : α → β},\n  Continuous f → UniformContinuous f",
   "some-correct": null,
   "prompt": "Every continuous function is uniformly continuous.",
   "groups":
   [["∀ {α : Type u} {β : Type v} [inst : UniformSpace α] [inst_1 : UniformSpace β] {f : α → β},\n  Continuous f → UniformContinuous f"],
    ["∀ {α : Type u_4} {β : Type u_5} [inst : UniformSpace α] [inst_1 : UniformSpace β] (self : α ≃ᵤ β), Continuous self.toFun"],
    ["∀ {α : Type u_4} {β : Type u_5} [inst : UniformSpace α] [inst_1 : UniformSpace β] (self : α ≃ᵤ β),\n  Continuous self.toFun → UniformContinuous self.toFun"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   [" ∀ {α : Type u_4} {β : Type u_5} [inst : UniformSpace α] [inst_1 : UniformSpace β] (self : α ≃ᵤ β),\n  Continuous self.toFun",
    " ∀ {α : Type u_4} {β : Type u_5} [inst : UniformSpace α] [inst_1 : UniformSpace β] (self : α ≃ᵤ β),\n  Continuous self.toFun → UniformContinuous self.toFun ",
    " ∀ {α : Type u} {β : Type v} [inst : UniformSpace α] [inst_1 : UniformSpace β] {f : α → β},\n  Continuous f → UniformContinuous f "]},
  {"theorem":
   "∀ (p₁ p₂ : ℕ), Nat.Prime p₁ → Nat.Prime p₂ → p₁ + p₂ = 6 → p₁ = p₂ ∨ p₁ = 2 ∨ p₂ = 2",
   "some-correct": null,
   "prompt": "`6` is not the sum of two distinct prime numbers.",
   "groups":
   [["∀ (p₁ p₂ : ℕ), Nat.Prime p₁ → Nat.Prime p₂ → p₁ + p₂ = 6 → p₁ = p₂ ∨ p₁ = 2 ∨ p₂ = 2"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   [" ¬∃ p q : ℕ, Nat.Prime p ∧ Nat.Prime q ∧ 6 = p + q",
    " ¬(∃ (p p' : ℕ), Nat.Prime p ∧ Nat.Prime p' ∧ p + p' = 6) ",
    " ¬∃ (p q : ℕ), Nat.Prime p ∧ Nat.Prime q ∧ p + q = 6 ",
    " ∀ (p₁ p₂ : ℕ), Nat.Prime p₁ → Nat.Prime p₂ → p₁ + p₂ = 6 → p₁ = p₂ ∨ p₁ = 2 ∨ p₂ = 2"]},
  {"theorem": "∀ {a : ℤ}, Irrational ↑a → False",
   "some-correct": null,
   "prompt": "No integer is irrational.",
   "groups":
   [["∀ {a : ℤ}, Irrational ↑a → False",
     "∀ (a : ℤ), Irrational ↑a → ¬Rat.isInt ↑a = true"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   [" ∀ {a : ℤ}, Irrational a → False ",
    " ∀ (a : ℤ), Irrational a → ¬Rat.isInt a = true "]},
  {"theorem": "∀ {R : Type u_1} [inst : Ring R] {a : R}, IsUnit a ↔ a = 1",
   "some-correct": null,
   "prompt": "The identity element in a ring is a unit.",
   "groups":
   [["∀ {R : Type u_1} [inst : Ring R] {a : R}, IsUnit a ↔ a = 1"],
    ["∀ {R : Type u_1} [inst : Ring R] (a : R), a = 1 → IsUnit a"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   [" ∀ {α : Type u} [inst : Ring α], IsUnit 1 ",
    " ∀ {R : Type u} [inst : NonAssocRing R], IsUnit 1 ",
    " ∀ {R : Type u_1} [inst : Ring R] (a : R), a = 1 → IsUnit a ",
    " ∀ {R : Type u_1} [inst : Ring R] {a : R}, IsUnit a ↔ a = 1 "]},
  {"theorem": "{G : Type u_1} → [inst : Group G] → (H : Subgroup G) → Group ↥H",
   "some-correct": null,
   "prompt": "Every subgroup of a group is a group.",
   "groups":
   [["{G : Type u_1} → [inst : Group G] → (H : Subgroup G) → Group ↥H",
     "{G : Type u_1} → [inst : Group G] → (H : Subgroup G) → Group ↥H",
     "{G : Type u_1} → [inst : Group G] → (H : Subgroup G) → Group ↥H",
     "{G : Type u_1} → [inst : Group G] → (H : Subgroup G) → Group ↥H",
     "{G : Type u_1} → [inst : Group G] → (H : Subgroup G) → Group ↥H",
     "{G : Type u_1} → [inst : Group G] → (H : Subgroup G) → Group ↥H",
     "{G : Type u_1} → [inst : Group G] → (H : Subgroup G) → Group ↥H"],
    ["{G : Type u_1} → [inst : Group G] → {H : Subgroup G} → Group ↥H"],
    ["{G : Type u_1} → [inst : Group G] → (H : Subgroup G) → Group ↥H"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   [" ∀ {G : Type u_1} [inst : Group G] (H : Subgroup G), Group ↥H ",
    " ∀ {G : Type u_1} [inst : Group G] (H : Subgroup G), Group ↥H ",
    " ∀ {G : Type u_1} [inst : Group G] (H : Subgroup G), Group ↥H ",
    " ∀ {G : Type u_1} [inst : Group G] (H : Subgroup G), Group ↥H ",
    " ∀ {G : Type u_1} [inst : Group G] (H : Subgroup G), Group ↥H ",
    " ∀ {G : Type u_1} [inst : Group G] (H : Subgroup G), Group ↥H ",
    " ∀ {G : Type u_1} [inst : Group G] (H : Subgroup G), Group ↥H ",
    " ∀ {G : Type u_1} [inst : Group G] (H : Subgroup G), Group ↥H",
    " ∀ {G : Type u_1} [inst : Group G] {H : Subgroup G}, Group ↥H "]},
  {"theorem": "∀ {a b : ℕ}, ∃ c, a + b = c",
   "some-correct": null,
   "prompt": "The sum of two natural numbers is a natural number.",
   "groups":
   [["∀ {a b : ℕ}, ∃ c, a + b = c",
     "∀ {a b : ℕ}, ∃ c, a + b = c",
     "∀ {α : Type u} [inst : NonAssocSemiring α] (self : Subsemiring α) {a b : α},\n  a ∈ self.carrier → b ∈ self.carrier → a + b ∈ self.carrier",
     "∀ {a b : ℕ}, a ≠ 0 → b ≠ 0 → ∃ c, a + b = c",
     "∀ {m n : ℕ}, ∃ k, m + n = k ∨ m + n = k + 1",
     "∀ {a b : ℕ}, a + b = a ∨ a + b = b ∨ ∃ n, a + b = n"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   [" ∀ {a b : ℕ}, ∃ c, a + b = c",
    " ∀ {a b : ℕ}, ∃ c, a + b = c",
    " ∀ {α : Type u} [inst : NonAssocSemiring α] (self : Subsemiring α) {a b : α},\n  a ∈ self.carrier → b ∈ self.carrier → a + b ∈ self.carrier ",
    " ∀ {a b : ℕ}, a ≠ 0 → b ≠ 0 → ∃ c, a + b = c",
    " ∀ {m n : ℕ}, ∃ k, m + n = k ∨ m + n = k + 1",
    " ∀ {a b : ℕ}, a + b = a ∨ a + b = b ∨ ∃ n : ℕ, a + b = n",
    " ∀ {a b : ℕ}, ∃ c : ℕ, a + b = c ∧ c < ⊤",
    " ∀ {m n : ℕ}, m + n ≤ 2 ^ 64 → ∃ k : ℕ, k = m + n ∧ k ≤ 2 ^ 64 "]},
  {"theorem":
   "∀ {G : Type u_1} [inst : Group G] (x : G), IsOfFinOrder x → x = 1",
   "some-correct": null,
   "prompt": "The identity element of a group has finite order.",
   "groups":
   [["∀ {G : Type u_1} [inst : Group G] (x : G), IsOfFinOrder x → x = 1"],
    ["∀ {G : Type u_1} [inst : Group G], IsOfFinOrder 1"],
    ["∀ {G : Type u_1} [inst : Monoid G], IsOfFinOrder 1"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   [" IsOfFinOrder id",
    " IsOfFinOrder id ",
    " ∀ {G : Type u_1} [inst : Group G], IsOfFinOrder 1 ",
    " ∀ {G : Type u_1} [inst : Group G], IsOfFinOrder (1 : G) ",
    " ∀ {G : Type u_1} [inst : Monoid G], IsOfFinOrder 1 ",
    " ∀ {α : Type u} [inst : Group α], IsOfFinOrder 1 ",
    " ∀ {G : Type u_1} [inst : Monoid G], IsOfFinOrder (1 : G)",
    " ∀ {G : Type u_1} [inst : Group G] (x : G), IsOfFinOrder x → x = 1"]},
  {"theorem": "∀ {p : ℕ}, Nat.Prime p → p = 7",
   "some-correct": null,
   "prompt": "`7` is a prime number.",
   "groups": [["∀ {p : ℕ}, Nat.Prime p → p = 7"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   [" Nat.Prime 7",
    " Nat.Prime 7",
    " Nat.Prime 7",
    " Nat.Prime 7",
    " Nat.Prime 7 ",
    " Nat.Prime 7 ",
    " Prime 7",
    " Prime 7",
    " ∀ {p : ℕ}, Nat.Prime p → p = 7",
    " ∀ {α : Type u_1} [inst : CommRing α] [inst_1 : IsDomain α], Prime ↑7 "]},
  {"theorem": "∀ {p : ℕ}, Nat.Prime p → p < 8 → p = 2 ∨ p = 3 ∨ p = 5 ∧ ¬p = 7",
   "some-correct": null,
   "prompt": "There are `3` prime numbers below `8`.",
   "groups":
   [["∀ {p : ℕ}, Nat.Prime p → p < 8 → p = 2 ∨ p = 3 ∨ p = 5 ∧ ¬p = 7"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   [" Cardinal.toNat Finset.univ.card = 3 ",
    " Finset.univ.filter Nat.Prime = {2, 3, 5}",
    " ∃ x, Nat.Prime x ∧ 2 < x ∧ x < 8",
    " ∃ p, Nat.Prime p ∧ p < 8 ∧ ¬(p < 3 ∧ Nat.Prime p) ∧ ¬(p < 5 ∧ Nat.Prime p) ∧ ¬(p < 7 ∧ Nat.Prime p)",
    " ∃ (n : ℕ), n ∈ {2, 3, 5}",
    " ∀ {p : ℕ}, Nat.Prime p → p < 8 → p = 2 ∨ p = 3 ∨ p = 5 ∧ ¬p = 7"]},
  {"theorem": "∀ {α : Type u} {s : Set α}, Set.Finite s → ∅ ⊆ s",
   "some-correct": null,
   "prompt": "The empty set is contained in every finite set.",
   "groups":
   [["∀ {α : Type u} {s : Set α}, Set.Finite s → ∅ ⊆ s",
     "∀ {α : Type u_1} (s : Set α), Set.Finite s → ∅ ⊆ s",
     "∀ {X : Type u_1} [inst : TopologicalSpace X] {s t : Set X}, s = ∅ → t = ∅ → ∅ ⊆ t → ∅ ⊆ s"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   [" ∀ {α : Type u} {s : Set α}, Set.Finite s → ∅ ⊆ s ",
    " ∀ {α : Type u_1} (s : Set α), Set.Finite s → ∅ ⊆ s",
    " ∀ {X : Type u_1} [inst : TopologicalSpace X] {s t : Set X}, s = ∅ → t = ∅ → ∅ ⊆ t → ∅ ⊆ s"]},
  {"theorem":
   "∀ {α : Type u} (s : Set α), ¬Set.Finite s → ∃ t, Set.Finite t ∧ t ⊆ s ∧ Set.Nonempty t",
   "some-correct": null,
   "prompt": "Every infinite set contains a finite set.",
   "groups":
   [["∀ {α : Type u} (s : Set α), ¬Set.Finite s → ∃ t, Set.Finite t ∧ t ⊆ s ∧ Set.Nonempty t"],
    ["∀ {α : Type u} (s : Set α), Set.Infinite s → ∃ t, Set.Finite t ∧ t ⊆ s ∧ Set.Infinite t"],
    ["∀ {α : Type u} (s : Set α) [inst : Infinite α], ∃ t, Set.Finite t ∧ t ⊆ s ∧ Set.Infinite t"],
    ["∀ {α : Type u} (s : Set α) [inst : Infinite α], ∃ t, Set.Finite t ∧ t ⊆ s ∧ ¬Set.Infinite t"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   [" ∀ {α : Type u}, Infinite α → ∃ s, Set.Finite s ∧ s ⊆ Set.univ",
    " ∀ {α : Type u} (s : Set α), Set.Infinite s → ∃ t, Set.Finite t ∧ t ⊆ s ∧ Set.Infinite t",
    " ∀ {α : Type u} (s : Set α) [inst : Infinite α], ∃ t, Set.Finite t ∧ t ⊆ s ∧ Set.Infinite t",
    " ∀ {α : Type u} (s : Set α) [inst : Infinite α], ∃ t, Set.Finite t ∧ t ⊆ s ∧ ¬Set.Infinite t",
    " ∀ {α : Type u} (s : Set α), ¬Set.Finite s → ∃ t, Set.Finite t ∧ t ⊆ s ∧ t.Nonempty"]},
  {"theorem": "∀ {n : ℕ}, Odd n → ∃ a b, n = a + b ∧ a ≠ b",
   "some-correct": null,
   "prompt":
   "Every odd natural number is the sum of two distinct natural numbers.",
   "groups":
   [["∀ {n : ℕ}, Odd n → ∃ a b, n = a + b ∧ a ≠ b",
     "∀ {n : ℕ}, Odd n → ∃ x y, n = x + y ∧ x ≠ y"],
    ["∀ {n : ℕ}, Odd n → ∃ a b, ∀ (c : ℕ), c = a ∨ c = b ∧ n = a + b"],
    ["∀ {n : ℕ}, Odd n → ∃ x y, n = x + y ∧ x ≠ y ∧ x ≠ y ∧ y ≠ n"],
    ["∀ {n : ℕ}, Odd n → ∃ x y, Nat.Prime x → Nat.Prime y → x ≠ y → n = x + y ∧ n = y + x"],
    ["∀ (n : ℕ), Odd n → ∃ a b, a ≠ b ∧ n = a + b"],
    ["∀ {n : ℕ}, Odd n → ∃ a b, n = a + b ∧ ¬a = b ∧ Odd a ∧ Odd b"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   [" ∀ {n : ℕ}, Odd n → ∃ a b, Odd a → Odd b → n = a + b ∧ a ≠ b ∧ b ≠ n",
    " ∀ {n : ℕ}, Odd n → ∃ a b, n = a + b ∧ a ≠ b",
    " ∀ {n : ℕ}, Odd n → ∃ x y, n = x + y ∧ x ≠ y ∧ x ≠ y ∧ y ≠ n",
    " ∀ {n : ℕ}, Odd n → ∃ a b, Odd a → Odd b → n = a + b ∧ n ≠ a → n ≠ b",
    " ∀ {n : ℕ}, Odd n → ∃ x y : ℕ, n = x + y ∧ x ≠ y",
    " ∀ {n : ℕ}, Odd n → ∃ x y, Nat.Prime x → Nat.Prime y → x ≠ y → n = x + y ∧ n = y + x",
    " ∀ {n : ℕ}, Odd n → ∃ a b, a < b ∧ n = a + b ∧ Odd a ∧ Odd b",
    " ∀ (n : ℕ), Odd n → ∃ a b, a ≠ b ∧ n = a + b",
    " ∀ {n : ℕ}, Odd n → ∃ a b, n = a + b ∧ ¬a = b ∧ Odd a ∧ Odd b",
    " ∀ {n : ℕ}, Odd n → ∃ x y, x < y ∧ n = x + y ∧ n ≠ x ∧ n ≠ y",
    " ∀ {n : ℕ}, Odd n → ∃ a b, ∀ c, c = a ∨ c = b ∧ n = a + b"]},
  {"theorem":
   "∀ (α : Type u_1) [inst : Group α] (x : α), IsOfFinOrder x ↔ x = 1",
   "some-correct": null,
   "prompt": "Every element in the trivial group has finite order.",
   "groups":
   [["∀ (α : Type u_1) [inst : Group α] (x : α), IsOfFinOrder x ↔ x = 1"],
    ["∀ {G : Type u_1} [inst : Group G] [inst_1 : Subsingleton G], IsOfFinOrder 1"],
    ["∀ {G : Type u_1} [inst : Group G] (x : G), IsOfFinOrder x → x = 1"],
    ["∀ {G : Type u_1} [inst : Group G] (x : G), IsOfFinOrder x"],
    ["∀ {G : Type u_1} [inst : Group G] [inst_1 : Subsingleton G] {x : G}, IsOfFinOrder x"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   [" ∀ {G : Type u_1} [inst : Group G] [inst_1 : Subsingleton G], IsOfFinOrder (1 : G) ",
    " ∀ {G : Type u_1} [inst : Group G] (x : G), IsOfFinOrder x → x = 1",
    " ∀ {G : Type u_1} [inst : Group G], ∀ x : G, IsOfFinOrder x",
    " ∀ {G : Type u_1} [inst : Group G] [inst_1 : Subsingleton G] {x : G}, IsOfFinOrder x",
    " ∀ (α : Type u_1) [inst : Group α] (x : α), IsOfFinOrder x ↔ x = 1",
    " ∀ {G : Type u_1} [inst : Group G] {x : G}, x ∈ ({1} : Set G) → IsOfFinOrder x ",
    " ∀ {G : Type u_1} [inst : Group G] {x : G}, 0 < orderOf x → G = ⊥",
    " ∀ {G : Type u_1} [inst : Group G], orderOf 1 = 0 ∧ ∀ (x : G), IsOfFinOrder x "]},
  {"theorem": "∀ (n : ℕ), Even n → Even (n * n)",
   "some-correct": null,
   "prompt": "The square of an even number is even.",
   "groups":
   [["∀ (n : ℕ), Even n → Even (n * n)",
     "∀ (n : ℕ), Even n → Even (n * n)",
     "∀ {α : Type u} [inst : LinearOrderedRing α] (n : α), Even n → Even (n * n)"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   [" ∀ (n : ℕ), Even n → Even (n ^ 2) ",
    " ∀ (n : ℕ), Even n → Even (n ^ 2) ",
    " ∀ (n : ℕ), Even n → Even (n ^ 2) ",
    " ∀ (n : ℕ), Even n → Even (n * n) ",
    " ∀ (n : ℕ), Even n → Even (n * n)",
    " ∀ (a : ℕ), Even a → Even (a ^ 2)",
    " ∀ {n : ℕ}, Even n → Even (n ^ 2) ",
    " ∀ {n : ℕ}, Even n → Even (n ^ 2)",
    " ∀ {α : Type u} [inst : LinearOrderedRing α] (n : α), Even n → Even (n * n)"]},
  {"theorem":
   "∀ {R : Type u} [inst : CommRing R] [inst_1 : IsDomain R] [inst_2 : CommGroupWithZero R], IsField R",
   "some-correct": null,
   "prompt": "Every commutative division ring is a field.",
   "groups":
   [["∀ {R : Type u} [inst : CommRing R] [inst_1 : IsDomain R] [inst_2 : CommGroupWithZero R], IsField R",
     "∀ (R : Type u) [inst : CommRing R] [inst_1 : IsDomain R] [inst_2 : CommGroupWithZero R] [inst_3 : Nontrivial R],\n  IsField R"],
    ["∀ (R : Type u) [inst : CommRing R] [inst_1 : IsDomain R] [inst_2 : MulZeroClass R] [inst_3 : NoZeroDivisors R],\n  IsField R"],
    ["∀ {R : Type u} [inst : CommSemiring R] [inst_1 : IsDomain R] [inst_2 : CommRing R], IsField R"],
    ["∀ (R : Type u) [inst : CommRing R] [inst_1 : IsDomain R] [inst_2 : DivisionRing R], IsField R"],
    ["{R : Type u} →\n  [inst : CommRing R] → [inst_1 : CommGroup R] → [inst_2 : IsDomain R] → [inst_3 : GroupWithZero R] → Field R"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   [" ∀ {R : Type u} [inst : CommRing R] [inst_1 : IsDomain R] [inst_2 : CommGroupWithZero R], IsField R ",
    " ∀ {R : Type u} [inst : CommSemiring R] [inst_1 : IsDomain R] [inst_2 : CommRing R], IsField R ",
    " ∀ (R : Type u) [inst : CommRing R] [inst_1 : IsDomain R] [inst_2 : DivisionRing R], IsField R ",
    " ∀ (R : Type u) [inst : CommRing R] [inst_1 : IsDomain R] [inst_2 : CommGroupWithZero R] [inst_3 : Nontrivial R], IsField R ",
    " ∀ {R : Type u} [inst : CommRing R] [inst_1 : CommGroup R] [inst_2 : IsDomain R] [inst_3 : GroupWithZero R], Field R ",
    " ∀ (R : Type u) [inst : CommRing R] [inst_1 : IsDomain R] [inst_2 : MulZeroClass R] [inst_3 : NoZeroDivisors R], IsField R"]},
  {"theorem": "∀ {α : Type u_1} [inst : Group α] (x : α), id x = x",
   "some-correct": null,
   "prompt":
   "The image of the identity element under the identity map is the identity element.",
   "groups": [["∀ {α : Type u_1} [inst : Group α] (x : α), id x = x"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   [" ∀ {α : Type u} [inst : Group α], IsGroupHom id ",
    " ∀ {α : Type u} [inst : Group α], id 1 = 1",
    " ∀ (G : Type u_1) [inst : Monoid G], id 1 = 1",
    " ∀ {α : Type u} [inst : AddMonoid α], id 1 = 1",
    " ∀ {α : Type u} [inst : Mul α], id ⁻¹' {1} = {1} ",
    " ∀ {α : Type u_1} [inst : Group α] (x : α), (id : α → α) x = x ",
    " ∀ (R : Type u_1) [inst : CommRing R] [inst_1 : CommRing R], Function.IsPeriodicPt id 1 1"]},
  {"theorem": "∀ {α : Type u} (x : α), Function.IsFixedPt id x",
   "some-correct": null,
   "prompt":
   "Every point is a fixed point of the identity function on a space.",
   "groups":
   [["∀ {α : Type u} (x : α), Function.IsFixedPt id x",
     "∀ {α : Type u} (x : α), Function.IsFixedPt id x",
     "∀ {α : Type u} (x : α), Function.IsFixedPt id x",
     "∀ {α : Type u} (x : α), Function.IsFixedPt id x",
     "∀ {α : Type u} (x : α), Function.IsFixedPt id x",
     "∀ {α : Type u} (x : α), Function.IsFixedPt id x",
     "∀ {α : Type u} (x : α), Function.IsFixedPt id x",
     "∀ {X : Type u} (x : X), Function.IsFixedPt id x",
     "∀ {α : Type u} (x : α), Function.IsFixedPt id x",
     "∀ (X : Type u) (x : X), Function.IsFixedPt id x"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   [" ∀ {α : Type u} (x : α), Function.IsFixedPt id x ",
    " ∀ {α : Type u} (x : α), Function.IsFixedPt id x ",
    " ∀ {α : Type u} (x : α), Function.IsFixedPt id x ",
    " ∀ {α : Type u} (x : α), Function.IsFixedPt id x ",
    " ∀ {α : Type u} (x : α), Function.IsFixedPt id x ",
    " ∀ {α : Type u} (x : α), Function.IsFixedPt id x ",
    " ∀ {α : Type u} (x : α), Function.IsFixedPt id x ",
    " ∀ {X : Type u} (x : X), Function.IsFixedPt id x ",
    " ∀ {α : Type u} (x : α), Function.IsFixedPt id x",
    " ∀ (X : Type u) (x : X), Function.IsFixedPt id x "]},
  {"theorem":
   "∀ {α : Type u} [inst : TopologicalSpace α] [self : Subsingleton α], EMetric.diam ∅ = 0",
   "some-correct": null,
   "prompt": "The diameter of a singleton space is `0`.",
   "groups":
   [["∀ {α : Type u} [inst : TopologicalSpace α] [self : Subsingleton α], EMetric.diam ∅ = 0"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   [" ∀ {α : Type u} [inst : TopologicalSpace α] [self : Subsingleton α], EMetric.diam ∅ = 0 "]},
  {"theorem": "∀ {α : Type u} [inst : Group α], Nonempty α",
   "some-correct": null,
   "prompt": "Every group is non-empty.",
   "groups":
   [["∀ {α : Type u} [inst : Group α], Nonempty α",
     "∀ {α : Type u} [inst : Group α], Nonempty α",
     "∀ {α : Type u} [inst : Group α], Nonempty α",
     "∀ {α : Type u} [inst : Group α], Nonempty α",
     "∀ {α : Type u} [inst : Group α], Nonempty α"],
    ["∀ {α : Type u_1} [inst : Group α], Nonempty α",
     "∀ {α : Type u_1} [inst : Group α], Nonempty α",
     "∀ {α : Type u_1} [inst : Group α], Nonempty α",
     "∀ {α : Type u_1} [inst : Group α], Nonempty α"],
    ["∀ {α : Type u_2} [inst : Group α], Nonempty α"],
    ["∀ {α : Type u₁} [inst : Group α], Nonempty α"],
    ["∀ {α : Type u_6} [inst : Group α], Nonempty α"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   [" ∀ {α : Type u} [inst : Group α], Nonempty α ",
    " ∀ {α : Type u} [inst : Group α], Nonempty α ",
    " ∀ {α : Type u} [inst : Group α], Nonempty α ",
    " ∀ {α : Type u} [inst : Group α], Nonempty α ",
    " ∀ {α : Type u_1} [inst : Group α], Nonempty α ",
    " ∀ {α : Type u_1} [inst : Group α], Nonempty α ",
    " ∀ {α : Type u_1} [inst : Group α], Nonempty α ",
    " ∀ {α : Type u_1} [inst : Group α], Nonempty α ",
    " ∀ {α : Type u} [inst : Group α], Nonempty α",
    " ∀ {α : Type u₁} [inst : Group α], Nonempty α ",
    " ∀ {α : Type u_6} [inst : Group α], Nonempty α ",
    " ∀ {α : Type u_2} [inst : Group α], Nonempty α"]},
  {"theorem":
   "∀ {X : Type u} [inst : TopologicalSpace X] (x : X), IsConnected (connectedComponent x)",
   "some-correct": null,
   "prompt": "All connected components of a topological space are connected.",
   "groups":
   [["∀ {X : Type u} [inst : TopologicalSpace X] (x : X), IsConnected (connectedComponent x)",
     "∀ {X : Type u} [inst : TopologicalSpace X] (x : X), IsConnected (connectedComponent x)"],
    ["∀ {X : Type u} [inst : TopologicalSpace X], ConnectedSpace X → ∀ (x : X), IsConnected (connectedComponent x)"],
    ["∀ {X : Type u_1} [inst : TopologicalSpace X] (x : X), IsConnected (connectedComponent x)"],
    ["∀ {X : Type u_3} [inst : TopologicalSpace X] (x : X), IsConnected (connectedComponent x)"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   [" ∀ {X : Type u} [inst : TopologicalSpace X] (x : X), IsConnected (connectedComponent x) ",
    " ∀ {X : Type u} [inst : TopologicalSpace X] (x : X), IsConnected (connectedComponent x) ",
    " ∀ {X : Type u_1} [inst : TopologicalSpace X] (x : X), IsConnected (connectedComponent x) ",
    " ∀ {X : Type u_3} [inst : TopologicalSpace X] (x : X), IsConnected (connectedComponent x) ",
    " ∀ {X : Type u} [inst : TopologicalSpace X], ConnectedSpace X → ∀ (x : X), IsConnected (connectedComponent x) "]},
  {"theorem":
   "∀ {R : Type u} [inst : CommRing R] {I : Ideal R} [hI : Ideal.IsMaximal I], ¬IsField R ∧ I ≠ ⊥ ∧ ∃ x ∈ ↑I, x ≠ 1",
   "some-correct": null,
   "prompt": "The ring of integers has a maximal ideal.",
   "groups":
   [["∀ {R : Type u} [inst : CommRing R] {I : Ideal R} [hI : Ideal.IsMaximal I], ¬IsField R ∧ I ≠ ⊥ ∧ ∃ x ∈ ↑I, x ≠ 1"],
    ["∀ {R : Type u} [inst : CommRing R] [inst_1 : IsDomain R] {M : Ideal R}, Ideal.IsMaximal M → ¬IsField R → M ≠ ⊥"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   [" ∀ {R : Type u_1} [inst : CommRing R] [inst_1 : IsDomain R], ∃ M, Ideal.IsMaximal M ∧ M ≠ ⊥ ",
    " ∀ {R : Type u_1} [inst : CommRing R] [inst_1 : IsDomain R], ∃ M, Ideal.IsMaximal M",
    " ∀ {R : Type u} [inst : CommRing R] [inst_1 : IsDomain R] {M : Ideal R}, Ideal.IsMaximal M → ¬IsField R → M ≠ ⊥ ",
    " ∃ M : Ideal ℤ, Ideal.IsMaximal M ",
    " ∀ {R : Type u} [inst : CommRing R] {I : Ideal R} [hI : Ideal.IsMaximal I], ¬IsField R ∧ I ≠ ⊥ ∧ ∃ x, x ∈ (I : Set R) ∧ x ≠ 1"]},
  {"theorem": "PythagoreanTriple 3 4 5",
   "some-correct": null,
   "prompt": "The numbers `3`, `4` and `5` form a Pythagorean triple.",
   "groups":
   [["PythagoreanTriple 3 4 5",
     "PythagoreanTriple 3 4 5",
     "PythagoreanTriple 3 4 5",
     "PythagoreanTriple 3 4 5",
     "PythagoreanTriple 3 4 5",
     "PythagoreanTriple 3 4 5",
     "PythagoreanTriple 3 4 5",
     "PythagoreanTriple 3 4 5",
     "PythagoreanTriple 3 4 5",
     "PythagoreanTriple 3 4 5",
     "PythagoreanTriple 3 4 5",
     "PythagoreanTriple 3 4 5"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   [" PythagoreanTriple 3 4 5",
    " PythagoreanTriple 3 4 5",
    " PythagoreanTriple 3 4 5",
    " PythagoreanTriple 3 4 5",
    " PythagoreanTriple 3 4 5",
    " PythagoreanTriple 3 4 5",
    " PythagoreanTriple 3 4 5",
    " PythagoreanTriple 3 4 5",
    " PythagoreanTriple 3 4 5 ",
    " PythagoreanTriple 3 4 5 ",
    " PythagoreanTriple 3 4 5 ",
    " PythagoreanTriple 3 4 5 "]},
  {"theorem":
   "∀ {K : Type u} {V : Type v} [inst : DivisionRing K] [inst_1 : AddCommGroup V] [inst_2 : Module K V] {ι : Type w}\n  [inst_3 : Finite ι] (b : Basis ι K V), ∅ = Set.range ⇑b → Subsingleton V",
   "some-correct": null,
   "prompt": "A vector space with the empty set as basis is trivial.",
   "groups":
   [["∀ {K : Type u} {V : Type v} [inst : DivisionRing K] [inst_1 : AddCommGroup V] [inst_2 : Module K V] {ι : Type w}\n  [inst_3 : Finite ι] (b : Basis ι K V), ∅ = Set.range ⇑b → Subsingleton V"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   [" ∀ {K : Type u} {V : Type v} [inst : DivisionRing K] [inst_1 : AddCommGroup V] [inst_2 : Module K V]\n  {ι : Type w} [inst_3 : Finite ι] (b : Basis ι K V), ∅ = Set.range b → Subsingleton V "]}],
 "elaborated": 37}