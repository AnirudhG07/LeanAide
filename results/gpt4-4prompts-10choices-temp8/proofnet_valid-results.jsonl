{"docString": "If $r$ is rational $(r \\neq 0)$ and $x$ is irrational, prove that $r+x$ is irrational.", "prompts": "[{\"theorem\": \"∀ {x y : ℝ}, Irrational (x + y) → Irrational x ∨ Irrational y\",\n  \"isProp\": true,\n  \"docString\":\n  \"If `x + y` is irrational, then at least one of `x` and `y` is irrational. \"},\n {\"theorem\": \"∀ {x y : ℝ}, x < y → ∃ r, Irrational r ∧ x < r ∧ r < y\",\n  \"isProp\": true,\n  \"docString\":\n  \"There is an irrational number `r` between any two reals `x < r < y`. \"},\n {\"theorem\":\n  \"∀ {α : Type u_1} {r : α → α → Prop}, Reflexive r → ∀ {x y : α}, (x ≠ y → r x y) → r x y\",\n  \"isProp\": true,\n  \"docString\":\n  \"To show a reflexive relation `r : α → α → Prop` holds over `x y : α`,\\nit suffices to show it holds when `x ≠ y`. \"},\n {\"theorem\":\n  \"∀ {p x : ℝ} {r : ℚ}, r ≠ 0 → (LiouvilleWith p (↑r * x) ↔ LiouvilleWith p x)\",\n  \"isProp\": true,\n  \"docString\":\n  \"The product `r * x`, `r : ℚ`, `r ≠ 0`, is a Liouville number with exponent `p` if and only if\\n`x` satisfies the same condition. \"}]\n", "prompt_cons": "/-- If `x + y` is irrational, then at least one of `x` and `y` is irrational. -/\ntheorem ∀ {x y : ℝ}, Irrational (x + y) → Irrational x ∨ Irrational y :=\n\n/-- There is an irrational number `r` between any two reals `x < r < y`. -/\ntheorem ∀ {x y : ℝ}, x < y → ∃ r, Irrational r ∧ x < r ∧ r < y :=\n\n/-- To show a reflexive relation `r : α → α → Prop` holds over `x y : α`,\nit suffices to show it holds when `x ≠ y`. -/\ntheorem ∀ {α : Type u_1} {r : α → α → Prop}, Reflexive r → ∀ {x y : α}, (x ≠ y → r x y) → r x y :=\n\n/-- The product `r * x`, `r : ℚ`, `r ≠ 0`, is a Liouville number with exponent `p` if and only if\n`x` satisfies the same condition. -/\ntheorem ∀ {p x : ℝ} {r : ℚ}, r ≠ 0 → (LiouvilleWith p (↑r * x) ↔ LiouvilleWith p x) :=\n\n/-- If $r$ is rational $(r \\neq 0)$ and $x$ is irrational, prove that $r+x$ is irrational. -/\ntheorem", "choices": ["∀ {r : ℚ} {x : ℝ}, r ≠ 0 → Irrational x → Irrational (↑r + x) ", "∀ {r : ℚ} {x : ℝ}, r ≠ 0 → Irrational x → Irrational (↑r + x) ", "∀ {r : ℚ} {x : ℝ}, r ≠ 0 ∧ Irrational x → Irrational (↑r + x) ", "∀ {r : ℚ} {x : ℝ}, r ≠ 0 → Irrational x → Irrational (↑r + x) ", "∀ {r : ℚ} {x : ℝ}, r ≠ 0 → Irrational x → Irrational (↑r + x) ", "∀ {x : ℝ} {r : ℚ}, r ≠ 0 → Irrational x → Irrational (↑r + x) ", "∀ {r : ℚ} {x : ℝ}, r ≠ 0 → Irrational x → Irrational (↑r + x) ", "∀ {r : ℚ} {x : ℝ}, r ≠ 0 → Irrational x → Irrational (↑r + x) ", "∀ {r : ℚ} {x : ℝ}, r ≠ 0 → Irrational x → Irrational (↑r + x) ", "∀ {r : ℚ} {x : ℝ}, r ≠ 0 → Irrational x → Irrational (↑r + x) "]}
{"docString": "Prove that there is no rational number whose square is $12$.", "prompts": "[{\"theorem\": \"Irrational (Real.sqrt 2)\",\n  \"isProp\": true,\n  \"docString\": \"**Irrationality of the Square Root of 2** \"},\n {\"theorem\": \"∀ {r : ℝ}, Transcendental ℚ r → Irrational r\",\n  \"isProp\": true,\n  \"docString\": \"A transcendental real number is irrational. \"},\n {\"theorem\": \"Irrational goldenConj\",\n  \"isProp\": true,\n  \"docString\": \"The conjugate of the golden ratio is irrational. \"},\n {\"theorem\": \"∀ {n m : ℕ}, m * m < n → n < (m + 1) * (m + 1) → ¬∃ t, t * t = n\",\n  \"isProp\": true,\n  \"docString\": \"There are no perfect squares strictly between m² and (m+1)² \"}]\n", "prompt_cons": "/-- **Irrationality of the Square Root of 2** -/\ntheorem Irrational (Real.sqrt 2) :=\n\n/-- A transcendental real number is irrational. -/\ntheorem ∀ {r : ℝ}, Transcendental ℚ r → Irrational r :=\n\n/-- The conjugate of the golden ratio is irrational. -/\ntheorem Irrational goldenConj :=\n\n/-- There are no perfect squares strictly between m² and (m+1)² -/\ntheorem ∀ {n m : ℕ}, m * m < n → n < (m + 1) * (m + 1) → ¬∃ t, t * t = n :=\n\n/-- Prove that there is no rational number whose square is $12$. -/\ntheorem", "choices": ["Irrational (Real.sqrt 12) ", "Irrational (Real.sqrt 12) ", "Irrational (Real.sqrt 12) ", "Irrational (Real.sqrt 12) ", "Irrational (Real.sqrt 12) ", "Irrational (Real.sqrt 12) ", "Irrational (Real.sqrt 12) ", "Irrational (Real.sqrt 12) ", "Irrational (Real.sqrt 12) ", "Irrational (Real.sqrt 12) "]}
{"docString": "Let $A$ be a nonempty set of real numbers which is bounded below. Let $-A$ be the set of all numbers $-x$, where $x \\in A$. Prove that $\\inf A=-\\sup (-A)$.", "prompts": "[{\"theorem\":\n  \"∀ {α : Type u_1} [inst : ConditionallyCompleteLattice α] {s : Set α},\\n  BddBelow s → BddAbove s → Set.Nonempty s → sInf s ≤ sSup s\",\n  \"isProp\": true,\n  \"docString\":\n  \"If a set is bounded below and above, and nonempty, its infimum is less than or equal to\\nits supremum.\"},\n {\"theorem\":\n  \"∀ {α : Type u_1} [self : CompleteSemilatticeInf α] (s : Set α) (a : α), (∀ (b : α), b ∈ s → a ≤ b) → a ≤ sInf s\",\n  \"isProp\": true,\n  \"docString\": \"Any lower bound is less than the set infimum. \"},\n {\"theorem\":\n  \"∀ {𝕜 : Type u_2} {E : Type u_1} [inst : NormedField 𝕜] [inst_1 : AddCommGroup E] [inst_2 : Module 𝕜 E]\\n  {p q : Seminorm 𝕜 E} {x : E}, BddBelow (Set.range fun u => ↑p u + ↑q (x - u))\",\n  \"isProp\": true,\n  \"docString\":\n  \"Auxiliary lemma to show that the infimum of seminorms is well-defined. \"},\n {\"theorem\":\n  \"∀ {α : Type u_1} [inst : ConditionallyCompleteLattice α] {s t : Set α},\\n  BddBelow s → BddBelow t → Set.Nonempty (s ∩ t) → sInf s ⊔ sInf t ≤ sInf (s ∩ t)\",\n  \"isProp\": true,\n  \"docString\":\n  \"The infimum of an intersection of two sets is bounded below by the maximum of the\\ninfima of each set, if all sets are bounded below and nonempty.\"}]\n", "prompt_cons": "/-- If a set is bounded below and above, and nonempty, its infimum is less than or equal to\nits supremum. -/\ntheorem ∀ {α : Type u_1} [inst : ConditionallyCompleteLattice α] {s : Set α},\n  BddBelow s → BddAbove s → Set.Nonempty s → sInf s ≤ sSup s :=\n\n/-- Any lower bound is less than the set infimum. -/\ntheorem ∀ {α : Type u_1} [self : CompleteSemilatticeInf α] (s : Set α) (a : α), (∀ (b : α), b ∈ s → a ≤ b) → a ≤ sInf s :=\n\n/-- Auxiliary lemma to show that the infimum of seminorms is well-defined. -/\ntheorem ∀ {𝕜 : Type u_2} {E : Type u_1} [inst : NormedField 𝕜] [inst_1 : AddCommGroup E] [inst_2 : Module 𝕜 E]\n  {p q : Seminorm 𝕜 E} {x : E}, BddBelow (Set.range fun u => ↑p u + ↑q (x - u)) :=\n\n/-- The infimum of an intersection of two sets is bounded below by the maximum of the\ninfima of each set, if all sets are bounded below and nonempty. -/\ntheorem ∀ {α : Type u_1} [inst : ConditionallyCompleteLattice α] {s t : Set α},\n  BddBelow s → BddBelow t → Set.Nonempty (s ∩ t) → sInf s ⊔ sInf t ≤ sInf (s ∩ t) :=\n\n/-- Let $A$ be a nonempty set of real numbers which is bounded below. Let $-A$ be the set of all numbers $-x$, where $x \\in A$. Prove that $\\inf A=-\\sup (-A)$. -/\ntheorem", "choices": ["∀ {α : Type u_1} [inst : LinearOrderedAddCommGroup α] [inst_1 : ConditionallyCompleteLattice α] {s : Set α},\n  BddBelow s → Set.Nonempty s → sInf s = -sSup (Set.image Neg.neg s) ", "forall {α : Type u_1} [inst : ConditionallyCompleteLattice α] [inst_1 : Ring α] [has_le α] {s : Set α},\n  BddBelow s → Set.Nonempty s → sInf s = -sSup (Set.Image Neg.neg s) ", "forall {s : Set ℝ}, BddBelow s → Set.Nonempty s → sInf s = -sSup (-s) ", "∀ {α : Type u_1} [conditionallyCompleteLinearOrder : ConditionallyCompleteLinearOrder α] [OrderedAddCommGroup α] {A : Set α},\n  BddBelow A → Set.Nonempty A → sInf A = -sSup (-A) ", "∀ {α : Type u_1} [inst : LinearOrder α] [inst_1 : OrderTopology α] [inst_2 : ConditionallyCompleteLattice α] [inst_3 : TopologicalSpace α],\n  {s : Set α}, BddBelow s → Set.Nonempty s → sInf s = -sSup (-s) ", "∀ {α : Type u_1} [inst : ConditionallyCompleteLattice α] [_inst_2 : OrderedAddCommGroup α] {s : Set α},\n  BddBelow s → Set.Nonempty s → sInf s = -sSup (Set.image (fun x => -x) s) ", "∀ {α : Type u_1} [inst : ConditionallyCompleteLattice α] [inst_1 : AddCommGroup α] [inst_2 : HasOrderedSub α] {s : Set α},\n  BddBelow s → Set.Nonempty s → sInf s = -sSup (Set.Preimage Neg.neg s) ", "∀ {α : Type u_1} [self : ConditionallyCompleteLattice α] {s : Set α},\n  BddBelow s → Set.Nonempty s → sInf s = -sSup (Set.image Neg.neg s) ", "forall {α : Type u_1} [inst : ConditionallyCompleteLinearOrder α] [inst_2 : OrderedAddCommGroup α] {A : Set α},\n  BddBelow A → Set.Nonempty A → sInf A = -sSup (Set.Preimage Neg.neg A) ", "forall (A : set ℝ), bdd_below A → set.nonempty A →\n  real.Inf A = -real.Sup (has_neg.neg '' A) "]}
{"docString": "If $z$ is a complex number, prove that there exists an $r\\geq 0$ and a complex number $w$ with $| w | = 1$ such that $z = rw$.", "prompts": "[{\"theorem\": \"∀ (z : ℂ), ↑z.re = (z + ↑(starRingEnd ℂ) z) / 2\",\n  \"isProp\": true,\n  \"docString\":\n  \"A complex number `z` plus its conjugate `conj z` is `2` times its real part. \"},\n {\"theorem\":\n  \"∀ {K : Type u_1} [inst : IsROrC K] (z : K),\\n  List.TFAE [↑(starRingEnd K) z = z, ∃ r, ↑r = z, ↑(↑IsROrC.re z) = z, ↑IsROrC.im z = 0]\",\n  \"isProp\": true,\n  \"docString\":\n  \"There are several equivalent ways to say that a number `z` is in fact a real number. \"},\n {\"theorem\":\n  \"∀ {c w : ℂ} {R : ℝ}, w ∈ Metric.ball c R → (∮ (z : ℂ) in C(c, R), (z - w)⁻¹) = 2 * ↑Real.pi * Complex.I\",\n  \"isProp\": true,\n  \"docString\":\n  \"Integral $\\\\oint_{|z-c|=R} \\\\frac{dz}{z-w} = 2πi$ whenever $|w-c| < R$. \"},\n {\"theorem\": \"∀ (z : ℂ), ↑z.im = (z - ↑(starRingEnd ℂ) z) / (2 * Complex.I)\",\n  \"isProp\": true,\n  \"docString\":\n  \"A complex number `z` minus its conjugate `conj z` is `2i` times its imaginary part. \"}]\n", "prompt_cons": "/-- A complex number `z` plus its conjugate `conj z` is `2` times its real part. -/\ntheorem ∀ (z : ℂ), ↑z.re = (z + ↑(starRingEnd ℂ) z) / 2 :=\n\n/-- There are several equivalent ways to say that a number `z` is in fact a real number. -/\ntheorem ∀ {K : Type u_1} [inst : IsROrC K] (z : K),\n  List.TFAE [↑(starRingEnd K) z = z, ∃ r, ↑r = z, ↑(↑IsROrC.re z) = z, ↑IsROrC.im z = 0] :=\n\n/-- Integral $\\oint_{|z-c|=R} \\frac{dz}{z-w} = 2πi$ whenever $|w-c| < R$. -/\ntheorem ∀ {c w : ℂ} {R : ℝ}, w ∈ Metric.ball c R → (∮ (z : ℂ) in C(c, R), (z - w)⁻¹) = 2 * ↑Real.pi * Complex.I :=\n\n/-- A complex number `z` minus its conjugate `conj z` is `2i` times its imaginary part. -/\ntheorem ∀ (z : ℂ), ↑z.im = (z - ↑(starRingEnd ℂ) z) / (2 * Complex.I) :=\n\n/-- If $z$ is a complex number, prove that there exists an $r\\geq 0$ and a complex number $w$ with $| w | = 1$ such that $z = rw$. -/\ntheorem", "choices": ["∀ (z : ℂ), ∃ (r : ℝ) (w : ℂ), r ≥ 0 ∧ w * w.conj = 1 ∧ z = r * w ", "∀ (z : ℂ), ∃ (r : ℝ) (w : ℂ), r ≥ 0 ∧ abs w = 1 ∧ z = r * w ", "∀ (z : ℂ), ∃ (r : ℝ) (w : ℂ), r ≥ 0 ∧ w.abs = 1 ∧ z = r * w ", "∀ (z : ℂ), ∃ (r : ℝ) (w : ℂ), r ≥ 0 ∧ w.abs = 1 ∧ z = r * w ", "∀ (z : ℂ), ∃ (r : ℝ) (w : ℂ), r ≥ 0 ∧ w.abs = 1 ∧ z = r * w ", "∀ (z : ℂ), ∃ (r : ℝ) (w : ℂ), r ≥ 0 ∧ ↑r = Complex.abs z ∧ ↑Complex.abs w = 1 ∧ z = r • w ", "∀ (z : ℂ), ∃ (r : ℝ) (w : ℂ), r ≥ 0 ∧ ↑r = Complex.abs z ∧ w * ↑r = z ∧ Complex.abs w = 1 ", "∀ (z : ℂ), ∃ (r : ℝ) (w : ℂ), r ≥ 0 ∧ abs w = 1 ∧ z = r * w ", "∀ (z : ℂ), ∃ (r : ℝ) (w : ℂ), r ≥ 0 ∧ (↑Complex.abs w = 1) ∧ z = ↑r * w ", "∀ (z : ℂ), ∃ (r : ℝ) (w : ℂ), r ≥ 0 ∧ ↑r = Complex.abs z ∧ ↑(Complex.abs w) = 1 ∧ z = ↑r * w "]}
{"docString": "If $x, y$ are complex, prove that $||x|-|y|| \\leq |x-y|$.", "prompts": "[{\"theorem\":\n  \"∀ {E : Type u_1} [inst : NormedAddCommGroup E] [inst_1 : NormedSpace ℝ E] [inst_2 : StrictConvexSpace ℝ E] {x y : E},\\n  ¬SameRay ℝ x y → ‖x + y‖ < ‖x‖ + ‖y‖\",\n  \"isProp\": true,\n  \"docString\":\n  \"In a strictly convex space, if `x` and `y` are not in the same ray, then `‖x + y‖ < ‖x‖ + ‖y‖`.\\n\"},\n {\"theorem\":\n  \"∀ {α : Type u} [inst : PseudoMetricSpace α] {s : Set α} {f : α → ℝ} (K : ℝ),\\n  (∀ (x : α), x ∈ s → ∀ (y : α), y ∈ s → f x ≤ f y + K * dist x y) → LipschitzOnWith (Real.toNNReal K) f s\",\n  \"isProp\": true,\n  \"docString\":\n  \"For functions to `ℝ`, it suffices to prove `f x ≤ f y + K * dist x y`; this version\\ndoesn't assume `0≤K`. \"},\n {\"theorem\":\n  \"∀ {α : Type u} [inst : PseudoMetricSpace α] {f : α → ℝ} (K : NNReal),\\n  (∀ (x y : α), f x ≤ f y + ↑K * dist x y) → LipschitzWith K f\",\n  \"isProp\": true,\n  \"docString\":\n  \"For functions to `ℝ`, it suffices to prove `f x ≤ f y + K * dist x y`; this version\\nassumes `0≤K`. \"},\n {\"theorem\": \"∀ {a b : EReal}, -a ≤ b ↔ -b ≤ a\",\n  \"isProp\": true,\n  \"docString\": \"`-a ≤ b ↔ -b ≤ a` on `EReal`. \"}]\n", "prompt_cons": "/-- In a strictly convex space, if `x` and `y` are not in the same ray, then `‖x + y‖ < ‖x‖ + ‖y‖`. -/\ntheorem ∀ {E : Type u_1} [inst : NormedAddCommGroup E] [inst_1 : NormedSpace ℝ E] [inst_2 : StrictConvexSpace ℝ E] {x y : E},\n  ¬SameRay ℝ x y → ‖x + y‖ < ‖x‖ + ‖y‖ :=\n\n/-- For functions to `ℝ`, it suffices to prove `f x ≤ f y + K * dist x y`; this version\ndoesn't assume `0≤K`. -/\ntheorem ∀ {α : Type u} [inst : PseudoMetricSpace α] {s : Set α} {f : α → ℝ} (K : ℝ),\n  (∀ (x : α), x ∈ s → ∀ (y : α), y ∈ s → f x ≤ f y + K * dist x y) → LipschitzOnWith (Real.toNNReal K) f s :=\n\n/-- For functions to `ℝ`, it suffices to prove `f x ≤ f y + K * dist x y`; this version\nassumes `0≤K`. -/\ntheorem ∀ {α : Type u} [inst : PseudoMetricSpace α] {f : α → ℝ} (K : NNReal),\n  (∀ (x y : α), f x ≤ f y + ↑K * dist x y) → LipschitzWith K f :=\n\n/-- `-a ≤ b ↔ -b ≤ a` on `EReal`. -/\ntheorem ∀ {a b : EReal}, -a ≤ b ↔ -b ≤ a :=\n\n/-- If $x, y$ are complex, prove that $||x|-|y|| \\leq |x-y|$. -/\ntheorem", "choices": ["∀ {x y : ℂ}, abs (abs x - abs y) ≤ abs (x - y) ", "∀ {x y : ℂ}, abs (abs x - abs y) ≤ abs (x - y) ", "∀ {x y : ℂ}, abs (abs x - abs y) ≤ abs (x - y) ", "forall {x y : ℂ}, abs (abs x - abs y) ≤ abs (x - y) ", "∀ {x y : ℂ}, abs (abs x - abs y) ≤ abs (x - y) ", "∀ {x y : ℂ}, abs (abs x - abs y) ≤ abs (x - y) ", "∀ {x y : ℂ}, abs (abs x - abs y) ≤ abs (x - y) ", "∀ x y : ℂ, abs (abs x - abs y) ≤ abs (x - y) ", "∀ {x y : ℂ}, abs (abs x - abs y) ≤ abs (x - y) ", "∀ (x y : ℂ), abs (abs x - abs y) ≤ abs (x - y) "]}
{"docString": "Suppose $k \\geq 3, x, y \\in \\mathbb{R}^k, |x - y| = d > 0$, and $r > 0$. Prove that if $2r > d$, there are infinitely many $z \\in \\mathbb{R}^k$ such that $|z-x|=|z-y|=r$.", "prompts": "[{\"theorem\": \"∀ {x y : ℝ}, x < y → ∃ r, Irrational r ∧ x < r ∧ r < y\",\n  \"isProp\": true,\n  \"docString\":\n  \"There is an irrational number `r` between any two reals `x < r < y`. \"},\n {\"theorem\":\n  \"∀ {X : Type u_1} [inst : EMetricSpace X] [inst_1 : TopologicalSpace.SecondCountableTopology X] {s : Set X}\\n  {r : ENNReal}, r < dimH s → ∃ x, x ∈ s ∧ ∀ (t : Set X), t ∈ nhdsWithin x s → r < dimH t\",\n  \"isProp\": true,\n  \"docString\":\n  \"If `r` is less than the Hausdorff dimension of a set `s` in an (extended) metric space with\\nsecond countable topology, then there exists a point `x ∈ s` such that every neighborhood\\n`t` of `x` within `s` has Hausdorff dimension greater than `r`. \"},\n {\"theorem\":\n  \"∀ {α : Type u} [inst : PseudoEMetricSpace α] {x : α} {s t : Set α} {r : ENNReal},\\n  x ∈ s → EMetric.hausdorffEdist s t < r → ∃ y, y ∈ t ∧ edist x y < r\",\n  \"isProp\": true,\n  \"docString\":\n  \"If the Hausdorff distance is `< r`, then any point in one of the sets has\\na corresponding point at distance `< r` in the other set \"},\n {\"theorem\":\n  \"∀ {R : Type u_1} [inst : StrictOrderedCommSemiring R] {M : Type u_2} [inst_1 : AddCommMonoid M] [inst_2 : Module R M]\\n  {x y : M}, SameRay R x y → x ≠ 0 → y ≠ 0 → ∃ r₁ r₂, 0 < r₁ ∧ 0 < r₂ ∧ r₁ • x = r₂ • y\",\n  \"isProp\": true,\n  \"docString\":\n  \"If `x` and `y` are nonzero vectors on the same ray, then there exist positive numbers `r₁ r₂`\\nsuch that `r₁ • x = r₂ • y`. \"}]\n", "prompt_cons": "/-- There is an irrational number `r` between any two reals `x < r < y`. -/\ntheorem ∀ {x y : ℝ}, x < y → ∃ r, Irrational r ∧ x < r ∧ r < y :=\n\n/-- If `r` is less than the Hausdorff dimension of a set `s` in an (extended) metric space with\nsecond countable topology, then there exists a point `x ∈ s` such that every neighborhood\n`t` of `x` within `s` has Hausdorff dimension greater than `r`. -/\ntheorem ∀ {X : Type u_1} [inst : EMetricSpace X] [inst_1 : TopologicalSpace.SecondCountableTopology X] {s : Set X}\n  {r : ENNReal}, r < dimH s → ∃ x, x ∈ s ∧ ∀ (t : Set X), t ∈ nhdsWithin x s → r < dimH t :=\n\n/-- If the Hausdorff distance is `< r`, then any point in one of the sets has\na corresponding point at distance `< r` in the other set -/\ntheorem ∀ {α : Type u} [inst : PseudoEMetricSpace α] {x : α} {s t : Set α} {r : ENNReal},\n  x ∈ s → EMetric.hausdorffEdist s t < r → ∃ y, y ∈ t ∧ edist x y < r :=\n\n/-- If `x` and `y` are nonzero vectors on the same ray, then there exist positive numbers `r₁ r₂`\nsuch that `r₁ • x = r₂ • y`. -/\ntheorem ∀ {R : Type u_1} [inst : StrictOrderedCommSemiring R] {M : Type u_2} [inst_1 : AddCommMonoid M] [inst_2 : Module R M]\n  {x y : M}, SameRay R x y → x ≠ 0 → y ≠ 0 → ∃ r₁ r₂, 0 < r₁ ∧ 0 < r₂ ∧ r₁ • x = r₂ • y :=\n\n/-- Suppose $k \\geq 3, x, y \\in \\mathbb{R}^k, |x - y| = d > 0$, and $r > 0$. Prove that if $2r > d$, there are infinitely many $z \\in \\mathbb{R}^k$ such that $|z-x|=|z-y|=r$. -/\ntheorem", "choices": ["∀ {k : ℕ} [inst : LinearOrderedField k] {x y z : k} {d r : ℝ},\n  k ≥ 3 → x ≠ y → edist x y = d → d > 0 → r > 0 → 2 * r > d →\n  ∃ z, Infinite z ∧ (∀ z ∈ z, edist z x = r ∧ edist z y = r) ", "∀ {k : ℕ} (hk : k ≥ 3) {x y : ℝ^k} {d r : ℝ},\n  ∥x - y∥ = d → d > 0 → r > 0 → 2 * r > d → Set.Infinite {z : ℝ^k | ∥z - x∥ = r ∧ ∥z - y∥ = r} ", "∀ {k : ℕ} [inst : Fact (3 ≤ k)] {x y : ℝ^k} {d r : ℝ}, d = dist x y → d > 0 → r > 0 → 2 * r > d →\n  ∃ f : ℕ → ℝ^k, (∀ n, dist (f n) x = r ∧ dist (f n) y = r) ∧ ∀ n m, n ≠ m → f n ≠ f m ", "∀ {k : ℕ} [inst : Fact (3 ≤ k)] {x y : EuclideanSpace ℝ k} {d r : ℝ},\n  dist x y = d → d > 0 → r > 0 → 2 * r > d → ∃ᶠ z, dist z x = r ∧ dist z y = r ", "∀ {k : ℕ} (hk : k ≥ 3) {x y : ℝ^k} {d r : ℝ}, dist x y = d → d > 0 → r > 0 → 2 * r > d →\n  ∃ f : ℕ → ℝ^k, (∀ n : ℕ, dist (f n) x = r ∧ dist (f n) y = r) ∧ ∀ m n : ℕ, m ≠ n → f m ≠ f n ", "∀ {k : ℕ} {x y : EuclideanSpace ℝ k} {r d : ℝ}, k ≥ 3 → dist x y = d → d > 0 → r > 0 → 2 * r > d →\n  ∃ (z : ℕ → EuclideanSpace ℝ k), (∀ n, dist (z n) x = r ∧ dist (z n) y = r) ∧ ∀ m n, m ≠ n → z m ≠ z n ", "∀ {k : ℕ} [inst : Fact (3 ≤ k)] {x y : ℝ^k} {r d : ℝ},\n  dist x y = d → d > 0 → r > 0 → 2 * r > d → (∃ z, dist z x = r ∧ dist z y = r) ", "∀ {k : N} {x y : EuclideanSpace ℝ k} (hr : ℝ) {d : ℝ},\n  k ≥ 3 → x ≠ y → d = dist x y → d > 0 → hr > 0 → 2 * hr > d → ∃ᶠ z in atTop (EuclideanSpace ℝ k), dist z x = hr ∧ dist z y = hr ", "∀ {k : ℕ} (hk : k ≥ 3) {x y : ℝ^k} {d : ℝ} (hd : dist x y = d) {r : ℝ} (hr : 0 < r) (h_rd : 2 * r > d), ∃ (z : Set (ℝ^k)), Cardinal.mk (↥z) = Cardinal.omega ∧ ∀ w ∈ z, dist w x = r ∧ dist w y = r ", "∀ {k : ℕ} [inst : Fact (3 ≤ k)] {x y : EuclideanSpace ℝ k} {d r : ℝ},\n  dist x y = d → d > 0 → r > 0 → 2 * r > d → ∃ᶠ z, dist z x = r ∧ dist z y = r "]}
{"docString": "If $k \\geq 2$ and $\\mathbf{x} \\in R^{k}$, prove that there exists $\\mathbf{y} \\in R^{k}$ such that $\\mathbf{y} \\neq 0$ but $\\mathbf{x} \\cdot \\mathbf{y}=0$", "prompts": "[{\"theorem\":\n  \"∀ {d : ℤ} {a : Pell.Solution₁ d}, 1 < Pell.Solution₁.x a → Pell.Solution₁.y a ≠ 0\",\n  \"isProp\": true,\n  \"docString\": \"A solution with `x > 1` must have `y ≠ 0`. \"},\n {\"theorem\":\n  \"∀ {R : Type u_1} [inst : StrictOrderedCommSemiring R] {M : Type u_2} [inst_1 : AddCommMonoid M] [inst_2 : Module R M]\\n  {x y : M}, SameRay R x y → x ≠ 0 → y ≠ 0 → ∃ r₁ r₂, 0 < r₁ ∧ 0 < r₂ ∧ r₁ • x = r₂ • y\",\n  \"isProp\": true,\n  \"docString\":\n  \"If `x` and `y` are nonzero vectors on the same ray, then there exist positive numbers `r₁ r₂`\\nsuch that `r₁ • x = r₂ • y`. \"},\n {\"theorem\":\n  \"∀ {R : Type u_1} {M : Type u_2} [inst : Ring R] [inst_1 : AddCommGroup M] [inst_2 : Module R M] [htwo : Invertible 2]\\n  {B : BilinForm R M}, B ≠ 0 → BilinForm.IsSymm B → ∃ x, ¬BilinForm.IsOrtho B x x\",\n  \"isProp\": true,\n  \"docString\":\n  \"There exists a non-null vector with respect to any symmetric, nonzero bilinear form `B`\\non a module `M` over a ring `R` with invertible `2`, i.e. there exists some\\n`x : M` such that `B x x ≠ 0`. \"},\n {\"theorem\":\n  \"∀ {R : Type u_1} {k : ℕ} [inst : CommRing R] [inst_1 : IsDomain R] {ζ : R},\\n  IsPrimitiveRoot ζ k → 1 < k → (Finset.sum (Finset.range k) fun i => ζ ^ i) = 0\",\n  \"isProp\": true,\n  \"docString\": \"If `1 < k` then `(∑ i in range k, ζ ^ i) = 0`. \"}]\n", "prompt_cons": "/-- A solution with `x > 1` must have `y ≠ 0`. -/\ntheorem ∀ {d : ℤ} {a : Pell.Solution₁ d}, 1 < Pell.Solution₁.x a → Pell.Solution₁.y a ≠ 0 :=\n\n/-- If `x` and `y` are nonzero vectors on the same ray, then there exist positive numbers `r₁ r₂`\nsuch that `r₁ • x = r₂ • y`. -/\ntheorem ∀ {R : Type u_1} [inst : StrictOrderedCommSemiring R] {M : Type u_2} [inst_1 : AddCommMonoid M] [inst_2 : Module R M]\n  {x y : M}, SameRay R x y → x ≠ 0 → y ≠ 0 → ∃ r₁ r₂, 0 < r₁ ∧ 0 < r₂ ∧ r₁ • x = r₂ • y :=\n\n/-- There exists a non-null vector with respect to any symmetric, nonzero bilinear form `B`\non a module `M` over a ring `R` with invertible `2`, i.e. there exists some\n`x : M` such that `B x x ≠ 0`. -/\ntheorem ∀ {R : Type u_1} {M : Type u_2} [inst : Ring R] [inst_1 : AddCommGroup M] [inst_2 : Module R M] [htwo : Invertible 2]\n  {B : BilinForm R M}, B ≠ 0 → BilinForm.IsSymm B → ∃ x, ¬BilinForm.IsOrtho B x x :=\n\n/-- If `1 < k` then `(∑ i in range k, ζ ^ i) = 0`. -/\ntheorem ∀ {R : Type u_1} {k : ℕ} [inst : CommRing R] [inst_1 : IsDomain R] {ζ : R},\n  IsPrimitiveRoot ζ k → 1 < k → (Finset.sum (Finset.range k) fun i => ζ ^ i) = 0 :=\n\n/-- If $k \\geq 2$ and $\\mathbf{x} \\in R^{k}$, prove that there exists $\\mathbf{y} \\in R^{k}$ such that $\\mathbf{y} \\neq 0$ but $\\mathbf{x} \\cdot \\mathbf{y}=0$ -/\ntheorem", "choices": ["∀ {R : Type u_1} {k : ℕ} [inst : Ring R] [inst_1 : IsDomain R] {x : Fin k → R},\n  2 ≤ k → ∃ y : Fin k → R, y ≠ 0 ∧ (Finset.sum Finset.univ fun i => x i * y i) = 0 ", "∀ {R : Type u_1} {k : ℕ} [inst : CommRing R] [inst_1 : IsDomain R] {x : Finₓ k → R},\n  k ≥ 2 → ∃ y : Finₓ k → R, y ≠ 0 ∧ (Finset.sum (Finset.univ : Finset (Finₓ k)) (λ i, x i * y i)) = 0 ", "∀ {R : Type u_1} {k : ℕ} [inst : Ring R] [inst_1 : IsDomain R] {x : Fin k → R}, k ≥ 2 → ∃ y : Fin k → R, y ≠ 0 ∧ Matrix.dotProduct x y = 0 ", "∀ {R : Type u_1} {k : ℕ} [inst : CommRing R] [inst_1 : IsDomain R] {x : Finₓ k → R},\n  2 ≤ k → ∃ y : Finₓ k → R, y ≠ 0 ∧ (Finset.sum Finset.univ fun i => x i * y i) = 0 ", "∀ {R : Type u_1} {k : ℕ} [inst : Ring R] [inst_1 : IsDomain R] {x : Fin k → R},\n  2 ≤ k → ∃ y : Fin k → R, y ≠ 0 ∧ (Fintype.sum (Fin k) (λ i, x i * y i)) = 0 ", "∀ {R : Type u_1} {k : ℕ} [inst : CommRing R] [inst_1 : IsDomain R] {x : Fin k → R},\n  2 ≤ k → ∃ y : Fin k → R, y ≠ 0 ∧ (Finset.sum Finset.univ (λ i, x i * y i)) = 0 ", "∀ {R : Type u_1} {k : ℕ} [inst : CommRing R] [inst_1 : IsDomain R] {x : Fin k → R},\n  2 ≤ k → ∃ y : Fin k → R, y ≠ 0 ∧ (Finset.sum Finset.univ (λ i, x i * y i)) = 0 ", "∀ {R : Type u_1} {k : ℕ} [inst : CommRing R] [inst_1 : IsDomain R] {x : Fin k → R},\n  2 ≤ k → ∃ y : Fin k → R, y ≠ 0 ∧ (Finset.sum Finset.univ fun i => x i * y i) = 0 ", "∀ {R : Type u_1} {k : ℕ} [inst : CommRing R] [inst_1 : IsDomain R] {x : Fin k → R},\n  2 ≤ k → ∃ y : Fin k → R, y ≠ 0 ∧ (Fintype.sum Finset.univ fun i => x i * y i) = 0 ", "∀ {R : Type u_1} {k : ℕ} [inst : CommRing R] [inst_1 : IsDomain R] {x : Fin k → R},\n  k ≥ 2 → ∃ y : Fin k → R, y ≠ 0 ∧ (Finset.sum (Finset.range k) (λ i, x i * y i)) = 0 "]}
{"docString": "Suppose $a, b \\in R^k$. Find $c \\in R^k$ and $r > 0$ such that $|x-a|=2|x-b|$ if and only if $| x - c | = r$. Prove that $3c = 4b - a$ and $3r = 2 |b - a|$.", "prompts": "[{\"theorem\":\n  \"∀ {α : Type u_1} {r : α → α → Prop} [self : IsDirected α r] (a b : α), ∃ c, r a c ∧ r b c\",\n  \"isProp\": true,\n  \"docString\":\n  \"For every pair of elements `a` and `b` there is a `c` such that `r a c` and `r b c` \"},\n {\"theorem\": \"∀ {a b c : ℤ}, Fermat42.Minimal a b c → Fermat42.Minimal b a c\",\n  \"isProp\": true,\n  \"docString\":\n  \"We can swap `a` and `b` in a minimal solution to `a ^ 4 + b ^ 4 = c ^ 2`. \"},\n {\"theorem\":\n  \"∀ {a b c : ℤ}, Fermat42 a b c → ∃ a0 b0 c0, Fermat42.Minimal a0 b0 c0 ∧ a0 % 2 = 1 ∧ 0 < c0\",\n  \"isProp\": true,\n  \"docString\":\n  \"We can assume that a minimal solution to `a ^ 4 + b ^ 4 = c ^ 2` has\\n`a` odd and `c` positive. \"},\n {\"theorem\":\n  \"∀ {a b c : ℤ}, Fermat42.Minimal a b c → Fermat42.Minimal a b (-c)\",\n  \"isProp\": true,\n  \"docString\":\n  \"We can assume that a minimal solution to `a ^ 4 + b ^ 4 = c ^ 2` has positive `c`. \"}]\n", "prompt_cons": "/-- For every pair of elements `a` and `b` there is a `c` such that `r a c` and `r b c` -/\ntheorem ∀ {α : Type u_1} {r : α → α → Prop} [self : IsDirected α r] (a b : α), ∃ c, r a c ∧ r b c :=\n\n/-- We can swap `a` and `b` in a minimal solution to `a ^ 4 + b ^ 4 = c ^ 2`. -/\ntheorem ∀ {a b c : ℤ}, Fermat42.Minimal a b c → Fermat42.Minimal b a c :=\n\n/-- We can assume that a minimal solution to `a ^ 4 + b ^ 4 = c ^ 2` has\n`a` odd and `c` positive. -/\ntheorem ∀ {a b c : ℤ}, Fermat42 a b c → ∃ a0 b0 c0, Fermat42.Minimal a0 b0 c0 ∧ a0 % 2 = 1 ∧ 0 < c0 :=\n\n/-- We can assume that a minimal solution to `a ^ 4 + b ^ 4 = c ^ 2` has positive `c`. -/\ntheorem ∀ {a b c : ℤ}, Fermat42.Minimal a b c → Fermat42.Minimal a b (-c) :=\n\n/-- Suppose $a, b \\in R^k$. Find $c \\in R^k$ and $r > 0$ such that $|x-a|=2|x-b|$ if and only if $| x - c | = r$. Prove that $3c = 4b - a$ and $3r = 2 |b - a|$. -/\ntheorem", "choices": ["forall {R : Type u_1} [euclidean_domain R] (a b : R), ∃ c r, (∀ x, (dist x a = 2 * dist x b) ↔ (dist x c = r)) ∧ (3 * c = 4 * b - a) ∧ (3 * r = 2 * dist b a) ", "∀ {R : Type u_1} [metric_space R] [inhabited R] (a b : R), ∃ c r, (∀ x, dist x a = 2 * dist x b ↔ dist x c = r) ∧ 3 * c = 4 * b - a ∧ 3 * r = 2 * dist b a ", "∀ {R : Type u} [metric_space R] {k : ℕ} {a b : k → R},\n  (∃ c : k → R, ∃ r : ℝ, (∀ x : k → R, dist x a = 2 * dist x b ↔ dist x c = r) ∧ 3 • c = 4 • b - a ∧ 3 * r = 2 * dist b a) ", "∀ {R : Type u_1} [metric_space R] {k : ℕ} {a b : R^k}, ∃ c : R^k, ∃ r : ℝ, (∀ x : R^k, dist x a = 2 * dist x b ↔ dist x c = r) ∧ (3 * c = 4 * b - a) ∧ (3 * r = 2 * dist b a) ", "∀ {R : Type u_1} [metric_space R] {a b c : R} {r : ℝ},\n  (∀ x : R, dist x a = 2 * dist x b ↔ dist x c = r) → 3 * c = 4 * b - a ∧ 3 * r = 2 * dist b a ", "∀ {R : Type u_1} [metric_space R] {a b c x : R} {k : ℕ} {r : ℝ},\n  (∀ x, dist x a = 2 * dist x b ↔ dist x c = r) → 3 * c = 4 * b - a ∧ 3 * r = 2 * dist b a ", "∀ {R : Type u_1} [normed_ring R] [nontrivial R] (a b : R), ∃ c r : R, (∀ x : R, ∥x - a∥ = 2 * ∥x - b∥ ↔ ∥x - c∥ = r) ∧ 3 * c = 4 * b - a ∧ 3 * r = 2 * ∥b - a∥ ", "forall {R : Type} [metric_space R] {k : ℕ} {a b : R} {c : R} {r : ℝ}, (∀ x : R, dist x a = 2 * dist x b ↔ dist x c = r) → 3 * c = 4 * b - a ∧ 3 * r = 2 * dist b a ", "∀ {R : Type u_1} [metric_space R] {k : ℕ} {a b : R^k}, ∃ (c : R^k) (r : ℝ), (∀ x : R^k, dist x a = 2 * dist x b ↔ dist x c = r) ∧ 3*c = 4*b - a ∧ 3*r = 2*dist b a ", "∀ {R : Type u} [normed_ring R] {a b c : R} {r : ℝ}, (∀ x, (∥x - a∥ = 2 * ∥x - b∥) ↔ (∥x - c∥ = r)) → (3 * c = 4 * b - a) ∧ (3 * r = 2 * ∥b - a∥) "]}
{"docString": "Let $X$ be a metric space in which every infinite subset has a limit point. Prove that $X$ is separable.", "prompts": "[{\"theorem\":\n  \"∀ {ι : Type u_1} {X : ι → Type u_2} [inst : (i : ι) → TopologicalSpace (X i)]\\n  [inst_1 : ∀ (i : ι), TopologicalSpace.SeparableSpace (X i)] [inst_2 : Countable ι],\\n  TopologicalSpace.SeparableSpace ((i : ι) → X i)\",\n  \"isProp\": true,\n  \"docString\":\n  \"The product of a countable family of separable spaces is a separable space. \"},\n {\"theorem\":\n  \"∀ {γ : Type w} [inst : EMetricSpace γ] {s : Set γ}, IsCompact s → ∃ t, t ⊆ s ∧ Set.Countable t ∧ s = closure t\",\n  \"isProp\": true,\n  \"docString\":\n  \"A compact set in an emetric space is separable, i.e., it is the closure of a countable set. \"},\n {\"theorem\":\n  \"∀ {α : Type u} [inst : PseudoEMetricSpace α] {s : Set α}, IsCompact s → ∃ t, t ⊆ s ∧ Set.Countable t ∧ s ⊆ closure t\",\n  \"isProp\": true,\n  \"docString\":\n  \"A compact set in a pseudo emetric space is separable, i.e., it is a subset of the closure of a\\ncountable set.  \"},\n {\"theorem\":\n  \"∀ {α : Type u} [t : TopologicalSpace α] [inst : DiscreteTopology α], TopologicalSpace.SeparableSpace α ↔ Countable α\",\n  \"isProp\": true,\n  \"docString\":\n  \"A topological space with discrete topology is separable iff it is countable. \"}]\n", "prompt_cons": "/-- The product of a countable family of separable spaces is a separable space. -/\ntheorem ∀ {ι : Type u_1} {X : ι → Type u_2} [inst : (i : ι) → TopologicalSpace (X i)]\n  [inst_1 : ∀ (i : ι), TopologicalSpace.SeparableSpace (X i)] [inst_2 : Countable ι],\n  TopologicalSpace.SeparableSpace ((i : ι) → X i) :=\n\n/-- A compact set in an emetric space is separable, i.e., it is the closure of a countable set. -/\ntheorem ∀ {γ : Type w} [inst : EMetricSpace γ] {s : Set γ}, IsCompact s → ∃ t, t ⊆ s ∧ Set.Countable t ∧ s = closure t :=\n\n/-- A compact set in a pseudo emetric space is separable, i.e., it is a subset of the closure of a\ncountable set. -/\ntheorem ∀ {α : Type u} [inst : PseudoEMetricSpace α] {s : Set α}, IsCompact s → ∃ t, t ⊆ s ∧ Set.Countable t ∧ s ⊆ closure t :=\n\n/-- A topological space with discrete topology is separable iff it is countable. -/\ntheorem ∀ {α : Type u} [t : TopologicalSpace α] [inst : DiscreteTopology α], TopologicalSpace.SeparableSpace α ↔ Countable α :=\n\n/-- Let $X$ be a metric space in which every infinite subset has a limit point. Prove that $X$ is separable. -/\ntheorem", "choices": ["∀ {α : Type u} [inst : MetricSpace α] (h : ∀ s : Set α, Set.Infinite s → ∃ x, x ∈ s ∧ IsLimitPoint s x),\n  TopologicalSpace.SeparableSpace α ", "∀ {α : Type u} [inst : MetricSpace α] (h : ∀ s : Set α, Set.Infinite s → ∃ x, x ∈ s ∧ IsLimitPoint s x),\n  TopologicalSpace.SeparableSpace α ", "∀ {α : Type u} [inst : MetricSpace α] [inst_1 : ∀ (s : Set α), Set.Infinite s → ∃ x, IsLimitPoint s x],\n  TopologicalSpace.SeparableSpace α ", "∀ {α : Type u} [inst : MetricSpace α] (H : ∀ s : Set α, Set.Infinite s → (∃ x, IsLimitPoint s x)),\n  TopologicalSpace.SeparableSpace α ", "forall {α : Type u} [inst : MetricSpace α] (H : ∀ s : Set α, Set.Infinite s → ∃ x, x ∈ s ∧ IsLimitPoint s x),\n  TopologicalSpace.SeparableSpace α ", "∀ {α : Type u} [inst : MetricSpace α] (h : ∀ s : Set α, Set.Countable s → ∃ x, x ∈ closure s),\n  TopologicalSpace.SeparableSpace α ", "∀ {α : Type u} [inst : MetricSpace α] (H : ∀ s : Set α, Set.Infinite s → ∃ x, IsLimitPoint s x),\n  TopologicalSpace.SeparableSpace α ", "∀ {α : Type u} [inst : EmetricSpace α] (h : ∀ s : Set α, Set.Infinite s → ∃ x, x ∈ limit_pts s),\n  TopologicalSpace.SeparableSpace α ", "∀ {α : Type u} [inst : MetricSpace α] (h : ∀ s : Set α, ∃ x, x ∈ s ∧ Infinite s → ∃ y, y ≠ x ∧ ∀ ε > 0, ∃ x ∈ s, x ≠ y ∧ dist x y < ε),\n  TopologicalSpace.SeparableSpace α ", "∀ {α : Type u} [inst : MetricSpace α] (h : ∀ (s : Set α), Set.Countable s → ¬Set.Infinite s → ∃ x, x ∈ s ∧ IsLimitPointOf s x),\n  TopologicalSpace.SeparableSpace α "]}
{"docString": "Suppose $E\\subset\\mathbb{R}^k$ is uncountable, and let $P$ be the set of condensation points of $E$. Prove that $P$ is perfect.", "prompts": "[{\"theorem\":\n  \"∀ {α : Type u} {β : Type v} [inst : UniformSpace α] [inst_1 : SemilatticeSup β] {K : Set α},\\n  IsComplete K → ∀ {u : β → α}, (∀ (n : β), u n ∈ K) → CauchySeq u → ∃ v, v ∈ K ∧ Filter.Tendsto u Filter.atTop (nhds v)\",\n  \"isProp\": true,\n  \"docString\":\n  \"If `K` is a complete subset, then any cauchy sequence in `K` converges to a point in `K` \"},\n {\"theorem\":\n  \"∀ {α : Type u_1} [inst : TopologicalSpace α] {C : Set α} [inst_1 : TopologicalSpace.SecondCountableTopology α],\\n  IsClosed C → ¬Set.Countable C → ∃ D, Perfect D ∧ Set.Nonempty D ∧ D ⊆ C\",\n  \"isProp\": true,\n  \"docString\":\n  \"Any uncountable closed set in a second countable space contains a nonempty perfect subset.\"},\n {\"theorem\":\n  \"∀ {𝕜 : Type u_2} {𝕜' : Type u_3} {E : Type u_4} {F : Type u_1} [inst : AddCommGroup E] [inst_1 : UniformSpace E]\\n  [inst_2 : UniformAddGroup E] [inst_3 : AddCommGroup F] [inst_4 : UniformSpace F]\\n  [inst_5 : TopologicalSpace.FirstCountableTopology E] [inst_6 : IsROrC 𝕜] [inst_7 : Module 𝕜 E]\\n  [inst_8 : ContinuousSMul 𝕜 E] [inst_9 : IsROrC 𝕜'] [inst_10 : Module 𝕜' F] [inst_11 : ContinuousSMul 𝕜' F]\\n  {σ : 𝕜 →+* 𝕜'} [inst_12 : UniformAddGroup F] (f : E →ₛₗ[σ] F),\\n  (∀ (s : Set E), Bornology.IsVonNBounded 𝕜 s → Bornology.IsVonNBounded 𝕜' (↑f '' s)) → Continuous ↑f\",\n  \"isProp\": true,\n  \"docString\":\n  \"If `E` is first countable, then every locally bounded linear map `E →ₛₗ[σ] F` is continuous. \"},\n {\"theorem\":\n  \"∀ {α : Type u_1} [inst : EMetricSpace α] {K : NNReal} {f : α → α} {s : Set α},\\n  IsComplete s →\\n    ∀ (hsf : Set.MapsTo f s s),\\n      ContractingWith K (Set.MapsTo.restrict f s s hsf) →\\n        ∀ {x : α},\\n          x ∈ s →\\n            edist x (f x) ≠ ⊤ →\\n              ∃ y,\\n                y ∈ s ∧\\n                  Function.IsFixedPt f y ∧\\n                    Filter.Tendsto (fun n => f^[n] x) Filter.atTop (nhds y) ∧\\n                      ∀ (n : ℕ), edist (f^[n] x) y ≤ edist x (f x) * ↑K ^ n / (1 - ↑K)\",\n  \"isProp\": true,\n  \"docString\":\n  \"Banach fixed-point theorem for maps contracting on a complete subset. \"}]\n", "prompt_cons": "/-- If `K` is a complete subset, then any cauchy sequence in `K` converges to a point in `K` -/\ntheorem ∀ {α : Type u} {β : Type v} [inst : UniformSpace α] [inst_1 : SemilatticeSup β] {K : Set α},\n  IsComplete K → ∀ {u : β → α}, (∀ (n : β), u n ∈ K) → CauchySeq u → ∃ v, v ∈ K ∧ Filter.Tendsto u Filter.atTop (nhds v) :=\n\n/-- Any uncountable closed set in a second countable space contains a nonempty perfect subset. -/\ntheorem ∀ {α : Type u_1} [inst : TopologicalSpace α] {C : Set α} [inst_1 : TopologicalSpace.SecondCountableTopology α],\n  IsClosed C → ¬Set.Countable C → ∃ D, Perfect D ∧ Set.Nonempty D ∧ D ⊆ C :=\n\n/-- If `E` is first countable, then every locally bounded linear map `E →ₛₗ[σ] F` is continuous. -/\ntheorem ∀ {𝕜 : Type u_2} {𝕜' : Type u_3} {E : Type u_4} {F : Type u_1} [inst : AddCommGroup E] [inst_1 : UniformSpace E]\n  [inst_2 : UniformAddGroup E] [inst_3 : AddCommGroup F] [inst_4 : UniformSpace F]\n  [inst_5 : TopologicalSpace.FirstCountableTopology E] [inst_6 : IsROrC 𝕜] [inst_7 : Module 𝕜 E]\n  [inst_8 : ContinuousSMul 𝕜 E] [inst_9 : IsROrC 𝕜'] [inst_10 : Module 𝕜' F] [inst_11 : ContinuousSMul 𝕜' F]\n  {σ : 𝕜 →+* 𝕜'} [inst_12 : UniformAddGroup F] (f : E →ₛₗ[σ] F),\n  (∀ (s : Set E), Bornology.IsVonNBounded 𝕜 s → Bornology.IsVonNBounded 𝕜' (↑f '' s)) → Continuous ↑f :=\n\n/-- Banach fixed-point theorem for maps contracting on a complete subset. -/\ntheorem ∀ {α : Type u_1} [inst : EMetricSpace α] {K : NNReal} {f : α → α} {s : Set α},\n  IsComplete s →\n    ∀ (hsf : Set.MapsTo f s s),\n      ContractingWith K (Set.MapsTo.restrict f s s hsf) →\n        ∀ {x : α},\n          x ∈ s →\n            edist x (f x) ≠ ⊤ →\n              ∃ y,\n                y ∈ s ∧\n                  Function.IsFixedPt f y ∧\n                    Filter.Tendsto (fun n => f^[n] x) Filter.atTop (nhds y) ∧\n                      ∀ (n : ℕ), edist (f^[n] x) y ≤ edist x (f x) * ↑K ^ n / (1 - ↑K) :=\n\n/-- Suppose $E\\subset\\mathbb{R}^k$ is uncountable, and let $P$ be the set of condensation points of $E$. Prove that $P$ is perfect. -/\ntheorem", "choices": ["∀ {k : ℕ} {E : Set (Finₓ k → ℝ)},\n  ¬Set.Countable E → ∃ P, Perfect P ∧ P ⊆ Closure E ∧ P ⊆ {x | IsCondensationPoint x E} ", "∀ {E : Set ℝ} [inst : TopologicalSpace.SecondCountableTopology ℝ],\n  ¬Set.Countable E → ∃ P, Perfect P ∧ Set.Nonempty P ∧ P ⊆ E ", "∀ {E : Set ℝ} [inst : TopologicalSpace.SecondCountableTopology ℝ],\n  ¬Set.Countable E → ∃ P, Perfect P ∧ P ⊆ Closure E ∧ ∀ x ∈ P, Filter.NeBot (𝓝[E] x) ", "∀ {k : ℕ} {E : Set (Finₓ k → ℝ)}, ¬Set.Countable E →\n  ∃ P : Set (Finₓ k → ℝ), Perfect P ∧ Set.Nonempty P ∧ P ⊆ E ", "∀ {k : ℕ} {E : Set (Finₓ k → ℝ)},\n  ¬Set.Countable E →\n    let P ", "∀ {α : Type u} {E : Set α} [inst : TopologicalSpace α] [inst_1 : TopologicalSpace.SecondCountableTopology α]\n  [inst_2 : TopologicalSpace.IsTotalSeparableSpace α] [inst_3 : LinearOrder α] [inst_4 : OrderTopology α] [inst_5 : DenselyOrdered α],\n  ¬Set.Countable E → ∃ P, Perfect P ∧ P ⊆ E ", "∀ {k : ℕ} {E : Set (Finₓ k → ℝ)}, ¬Set.Countable E →\n  ∃ P, Perfect P ∧ Set.Nonempty P ∧ ∀ (x : Finₓ k → ℝ), HasMem.Mem x P ↔ HasMem.Mem x (CondensationPoints E) ", "∀ {k : ℕ} {E : Set (Finₓ k → ℝ)},\n  ¬Set.Countable E →\n    let P ", "∀ {E : Set ℝ^k} [inst : TopologicalSpace ℝ^k] [inst_1 : TopologicalSpace.SecondCountableTopology ℝ^k],\n  ¬Set.Countable E → ∃ P, Perfect P ∧ P ⊆ E ∧ ∀ x ∈ E, IsCondensationPoint x P ", "∀ {k : ℕ} {E : Set (Finₓ k → ℝ)} [inst : TopologicalSpace (Finₓ k → ℝ)] [inst_1 : TopologicalSpace.SecondCountableTopology (Finₓ k → ℝ)],\n  ¬Set.Countable E → ∃ P, Perfect P ∧ Set.Nonempty P ∧ P ⊆ CondensationPts E "]}
{"docString": "Prove that every closed set in a separable metric space is the union of a (possibly empty) perfect set and a set which is at most countable.", "prompts": "[{\"theorem\":\n  \"∀ {γ : Type w} [inst : EMetricSpace γ] {s : Set γ}, IsCompact s → ∃ t, t ⊆ s ∧ Set.Countable t ∧ s = closure t\",\n  \"isProp\": true,\n  \"docString\":\n  \"A compact set in an emetric space is separable, i.e., it is the closure of a countable set. \"},\n {\"theorem\":\n  \"∀ {α : Type u_1} [inst : TopologicalSpace α] {C : Set α} [inst_1 : TopologicalSpace.SecondCountableTopology α],\\n  IsClosed C → ¬Set.Countable C → ∃ D, Perfect D ∧ Set.Nonempty D ∧ D ⊆ C\",\n  \"isProp\": true,\n  \"docString\":\n  \"Any uncountable closed set in a second countable space contains a nonempty perfect subset.\"},\n {\"theorem\":\n  \"∀ {α : Type u} [inst : PseudoEMetricSpace α] {s : Set α}, IsCompact s → ∃ t, t ⊆ s ∧ Set.Countable t ∧ s ⊆ closure t\",\n  \"isProp\": true,\n  \"docString\":\n  \"A compact set in a pseudo emetric space is separable, i.e., it is a subset of the closure of a\\ncountable set.  \"},\n {\"theorem\":\n  \"∀ {α : Type u} [t : TopologicalSpace α] [inst : TopologicalSpace.SecondCountableTopology α] {ι : Type u_1}\\n  (s : ι → Set α), (∀ (i : ι), IsOpen (s i)) → ∃ T, Set.Countable T ∧ ⋃ (i : ι) (_ : i ∈ T), s i = ⋃ (i : ι), s i\",\n  \"isProp\": true,\n  \"docString\":\n  \"In a second-countable space, an open set, given as a union of open sets,\\nis equal to the union of countably many of those sets. \"}]\n", "prompt_cons": "/-- A compact set in an emetric space is separable, i.e., it is the closure of a countable set. -/\ntheorem ∀ {γ : Type w} [inst : EMetricSpace γ] {s : Set γ}, IsCompact s → ∃ t, t ⊆ s ∧ Set.Countable t ∧ s = closure t :=\n\n/-- Any uncountable closed set in a second countable space contains a nonempty perfect subset. -/\ntheorem ∀ {α : Type u_1} [inst : TopologicalSpace α] {C : Set α} [inst_1 : TopologicalSpace.SecondCountableTopology α],\n  IsClosed C → ¬Set.Countable C → ∃ D, Perfect D ∧ Set.Nonempty D ∧ D ⊆ C :=\n\n/-- A compact set in a pseudo emetric space is separable, i.e., it is a subset of the closure of a\ncountable set. -/\ntheorem ∀ {α : Type u} [inst : PseudoEMetricSpace α] {s : Set α}, IsCompact s → ∃ t, t ⊆ s ∧ Set.Countable t ∧ s ⊆ closure t :=\n\n/-- In a second-countable space, an open set, given as a union of open sets,\nis equal to the union of countably many of those sets. -/\ntheorem ∀ {α : Type u} [t : TopologicalSpace α] [inst : TopologicalSpace.SecondCountableTopology α] {ι : Type u_1}\n  (s : ι → Set α), (∀ (i : ι), IsOpen (s i)) → ∃ T, Set.Countable T ∧ ⋃ (i : ι) (_ : i ∈ T), s i = ⋃ (i : ι), s i :=\n\n/-- Prove that every closed set in a separable metric space is the union of a (possibly empty) perfect set and a set which is at most countable. -/\ntheorem", "choices": ["∀ {α : Type u} [inst : MetricSpace α] [inst_1 : TopologicalSpace.SecondCountableTopology α] {s : Set α},\n  IsClosed s → ∃ t₁ t₂, Perfect t₁ ∧ Set.Countable t₂ ∧ s = t₁ ∪ t₂ ", "∀ {α : Type u} [inst : MetricSpace α] [inst_1 : TopologicalSpace.SecondCountableTopology α] {A : Set α},\n  IsClosed A → ∃ P, ∃ Q, Perfect P ∧ Set.Countable Q ∧ A = P ∪ Q ", "∀ {α : Type u} [inst : MetricSpace α] [inst_1 : TopologicalSpace.SecondCountableTopology α] {C : Set α},\n  IsClosed C → ∃ (P : Set α) (H : Set α), Perfect P ∧ Set.Countable H ∧ C = P ∪ H ", "∀ {α : Type u} [inst : MetricSpace α] [inst_1 : TopologicalSpace.SecondCountableTopology α] {s : Set α},\n  IsClosed s → ∃ t₁ t₂, Perfect t₁ ∧ Set.Countable t₂ ∧ s = t₁ ∪ t₂ ", "∀ {α : Type u} [inst : MetricSpace α] [inst_1 : TopologicalSpace.SecondCountableTopology α] {s : Set α}, IsClosed s → ∃ t₁ t₂, Perfect t₁ ∧ Set.Countable t₂ ∧ s = t₁ ∪ t₂ ", "∀ {α : Type u} [inst : MetricSpace α] [inst_1 : TopologicalSpace.SeparableSpace α] {s : Set α}, \n  IsClosed s → ∃ t₁ t₂, Perfect t₁ ∧ Set.Countable t₂ ∧ s = t₁ ∪ t₂ ", "∀ {α : Type u} [inst : MetricSpace α] [inst_1 : TopologicalSpace.SeparableSpace α] {s : Set α},\n  IsClosed s → ∃ t u, Perfect t ∧ Set.Countable u ∧ s = t ∪ u ", "∀ {α : Type u_1} [inst : MetricSpace α] [inst_1 : TopologicalSpace.SeparableSpace α] {C : Set α},\n  IsClosed C → ∃ P A, Perfect P ∧ Set.Countable A ∧ C = P ∪ A ", "∀ {α : Type u_1} [inst : MetricSpace α] [inst_2 : TopologicalSpace.SecondCountableTopology α],\n  ∀ {C : Set α}, IsClosed C → ∃ P A, Set.Countable A ∧ Perfect P ∧ C = P ∪ A ", "∀ {α : Type u} [inst : MetricSpace α] [inst_1 : TopologicalSpace.SecondCountableTopology α] {s : Set α},\n  IsClosed s → ∃ t₁ t₂, Perfect t₁ ∧ Set.Countable t₂ ∧ s = t₁ ∪ t₂ "]}
{"docString": "Prove that convergence of $\\left\\{s_{n}\\right\\}$ implies convergence of $\\left\\{\\left|s_{n}\\right|\\right\\}$.", "prompts": "[{\"theorem\":\n  \"∀ {α : Type u} {β : Type v} {ι : Type x} [inst : UniformSpace β] {F : ι → α → β} {f : α → β} {s : Set α} {p : Filter ι},\\n  TendstoUniformlyOn F f p s → ∀ {x : α}, x ∈ s → Filter.Tendsto (fun n => F n x) p (nhds (f x))\",\n  \"isProp\": true,\n  \"docString\": \"Uniform converence implies pointwise convergence. \"},\n {\"theorem\":\n  \"∀ {α : Type u} {β : Type v} [inst : PseudoMetricSpace α] [inst_1 : Nonempty β] [inst_2 : SemilatticeSup β] {s : β → α}\\n  (b : β → ℝ), (∀ (n m : β), n ≤ m → dist (s n) (s m) ≤ b n) → Filter.Tendsto b Filter.atTop (nhds 0) → CauchySeq s\",\n  \"isProp\": true,\n  \"docString\":\n  \"If the distance between `s n` and `s m`, `n ≤ m` is bounded above by `b n`\\nand `b` converges to zero, then `s` is a Cauchy sequence.  \"},\n {\"theorem\":\n  \"∀ {α : Type u_1} {m : MeasurableSpace α} {μ : MeasureTheory.Measure α} {f : ℕ → α → ENNReal} {F : α → ENNReal},\\n  (∀ (n : ℕ), AEMeasurable (f n)) →\\n    (∀ᵐ (x : α) ∂μ, Monotone fun n => f n x) →\\n      (∀ᵐ (x : α) ∂μ, Filter.Tendsto (fun n => f n x) Filter.atTop (nhds (F x))) →\\n        Filter.Tendsto (fun n => ∫⁻ (x : α), f n x ∂μ) Filter.atTop (nhds (∫⁻ (x : α), F x ∂μ))\",\n  \"isProp\": true,\n  \"docString\": \"Monotone convergence theorem expressed with limits \"},\n {\"theorem\":\n  \"∀ {β : Type u_1} {f g : β → ℝ}, (∀ (b : β), 0 ≤ g b) → (∀ (b : β), g b ≤ f b) → Summable f → Summable g\",\n  \"isProp\": true,\n  \"docString\":\n  \"Comparison test of convergence of series of non-negative real numbers. \"}]\n", "prompt_cons": "/-- Uniform converence implies pointwise convergence. -/\ntheorem ∀ {α : Type u} {β : Type v} {ι : Type x} [inst : UniformSpace β] {F : ι → α → β} {f : α → β} {s : Set α} {p : Filter ι},\n  TendstoUniformlyOn F f p s → ∀ {x : α}, x ∈ s → Filter.Tendsto (fun n => F n x) p (nhds (f x)) :=\n\n/-- If the distance between `s n` and `s m`, `n ≤ m` is bounded above by `b n`\nand `b` converges to zero, then `s` is a Cauchy sequence. -/\ntheorem ∀ {α : Type u} {β : Type v} [inst : PseudoMetricSpace α] [inst_1 : Nonempty β] [inst_2 : SemilatticeSup β] {s : β → α}\n  (b : β → ℝ), (∀ (n m : β), n ≤ m → dist (s n) (s m) ≤ b n) → Filter.Tendsto b Filter.atTop (nhds 0) → CauchySeq s :=\n\n/-- Monotone convergence theorem expressed with limits -/\ntheorem ∀ {α : Type u_1} {m : MeasurableSpace α} {μ : MeasureTheory.Measure α} {f : ℕ → α → ENNReal} {F : α → ENNReal},\n  (∀ (n : ℕ), AEMeasurable (f n)) →\n    (∀ᵐ (x : α) ∂μ, Monotone fun n => f n x) →\n      (∀ᵐ (x : α) ∂μ, Filter.Tendsto (fun n => f n x) Filter.atTop (nhds (F x))) →\n        Filter.Tendsto (fun n => ∫⁻ (x : α), f n x ∂μ) Filter.atTop (nhds (∫⁻ (x : α), F x ∂μ)) :=\n\n/-- Comparison test of convergence of series of non-negative real numbers. -/\ntheorem ∀ {β : Type u_1} {f g : β → ℝ}, (∀ (b : β), 0 ≤ g b) → (∀ (b : β), g b ≤ f b) → Summable f → Summable g :=\n\n/-- Prove that convergence of $\\left\\{s_{n}\\right\\}$ implies convergence of $\\left\\{\\left|s_{n}\\right|\\right\\}$. -/\ntheorem", "choices": ["∀ {α : Type u} [inst : NormedGroup α] {s : ℕ → α}, Summable s → Summable (λ n, ∥s n∥) ", "∀ {α : Type u} [inst : LinearOrderedAddCommGroup α] {β : Type v} [inst_1 : TopologicalSpace α] [inst_2 : TopologicalSpace β]\n  {s : β → α}, Filter.Tendsto s Filter.atTop (nhds 0) → Filter.Tendsto (fun b => abs (s b)) Filter.atTop (nhds 0) ", "∀ {α : Type u} [inst : TopologicalSpace α] [inst_1 : LinearOrderedAddCommGroup α] {s : ℕ → α} {a : α},\n  Filter.Tendsto s Filter.atTop (nhds a) → Filter.Tendsto (fun n => abs (s n)) Filter.atTop (nhds (abs a)) ", "∀ {α : Type u} [inst : LinearOrderedField α] [inst_1 : TopologicalSpace α] [inst_2 : OrderTopology α] {s : ℕ → α},\n  Filter.Tendsto s Filter.atTop (nhds (lim Filter.atTop s)) → Filter.Tendsto (fun n => abs (s n)) Filter.atTop (nhds (abs (lim Filter.atTop s))) ", "∀ {α : Type u} {f : ℕ → α} [_inst_1 : LinearOrderedAddCommGroup α], CauchySeq f → CauchySeq (abs ∘ f) ", "∀ {α : Type u} [inst : TopologicalSpace α] [inst_1 : LinearOrderedAddCommGroup α] {s : ℕ → α} {a : α},\n  Filter.Tendsto s Filter.atTop (nhds a) → Filter.Tendsto (fun n => abs (s n)) Filter.atTop (nhds (abs a)) ", "∀ {α : Type u} [inst : LinearOrderedField α] [inst_1 : TopologicalSpace α] [inst_2 : OrderTopology α] {s : ℕ → α},\n  Filter.Tendsto s Filter.atTop (nhds (limit s)) → Filter.Tendsto (fun n => abs (s n)) Filter.atTop (nhds (abs (limit s))) ", "∀ {α : Type u} {β : Type v} [inst : PseudoMetricSpace β] {s : α → β} {b : Filter α} {x : β},\n  Filter.Tendsto s b (nhds x) → Filter.Tendsto (fun n => dist (s n) x) b (nhds 0) ", "∀ {α : Type u} [inst : LinearOrderedAddCommGroup α] {s : ℕ → α} {l : α},\n  Filter.Tendsto s Filter.atTop (nhds l) → Filter.Tendsto (fun n => abs (s n)) Filter.atTop (nhds (abs l)) ", "∀ {α : Type u} [inst : LinearOrderedField α] {s : ℕ → α} {a : α},\n  Filter.Tendsto s Filter.atTop (nhds a) → Filter.Tendsto (fun n => abs (s n)) Filter.atTop (nhds (abs a)) "]}
{"docString": "If $s_{1}=\\sqrt{2}$, and $s_{n+1}=\\sqrt{2+\\sqrt{s_{n}}} \\quad(n=1,2,3, \\ldots),$ prove that $\\left\\{s_{n}\\right\\}$ converges, and that $s_{n}<2$ for $n=1,2,3, \\ldots$.", "prompts": "[{\"theorem\":\n  \"∀ {α : Type u} {β : Type v} [inst : PseudoMetricSpace α] [inst_1 : Nonempty β] [inst_2 : SemilatticeSup β] {s : β → α}\\n  (b : β → ℝ), (∀ (n m : β), n ≤ m → dist (s n) (s m) ≤ b n) → Filter.Tendsto b Filter.atTop (nhds 0) → CauchySeq s\",\n  \"isProp\": true,\n  \"docString\":\n  \"If the distance between `s n` and `s m`, `n ≤ m` is bounded above by `b n`\\nand `b` converges to zero, then `s` is a Cauchy sequence.  \"},\n {\"theorem\":\n  \"∀ {α : Type u} {β : Type v} [inst : PseudoMetricSpace α] [inst_1 : Nonempty β] [inst_2 : SemilatticeSup β] {s : β → α}\\n  (b : β → ℝ),\\n  (∀ (n m N : β), N ≤ n → N ≤ m → dist (s n) (s m) ≤ b N) → Filter.Tendsto b Filter.atTop (nhds 0) → CauchySeq s\",\n  \"isProp\": true,\n  \"docString\":\n  \"If the distance between `s n` and `s m`, `n, m ≥ N` is bounded above by `b N`\\nand `b` converges to zero, then `s` is a Cauchy sequence.  \"},\n {\"theorem\":\n  \"∀ {β : Type u_1} {f g : β → ℝ}, (∀ (b : β), 0 ≤ g b) → (∀ (b : β), g b ≤ f b) → Summable f → Summable g\",\n  \"isProp\": true,\n  \"docString\":\n  \"Comparison test of convergence of series of non-negative real numbers. \"},\n {\"theorem\":\n  \"∀ (n : ℕ) {a : ℝ}, Real.sqrtTwoAddSeries (↑0 / ↑1) n ≤ 2 - (a / 2 ^ (n + 1)) ^ 2 → a < Real.pi\",\n  \"isProp\": true,\n  \"docString\":\n  \"From an upper bound on `sqrtTwoAddSeries 0 n = 2 cos (π / 2 ^ (n+1))` of the form\\n`sqrtTwoAddSeries 0 n ≤ 2 - (a / 2 ^ (n + 1)) ^ 2)`, one can deduce the lower bound `a < π`\\nthanks to basic trigonometric inequalities as expressed in `pi_gt_sqrtTwoAddSeries`. \"}]\n", "prompt_cons": "/-- If the distance between `s n` and `s m`, `n ≤ m` is bounded above by `b n`\nand `b` converges to zero, then `s` is a Cauchy sequence. -/\ntheorem ∀ {α : Type u} {β : Type v} [inst : PseudoMetricSpace α] [inst_1 : Nonempty β] [inst_2 : SemilatticeSup β] {s : β → α}\n  (b : β → ℝ), (∀ (n m : β), n ≤ m → dist (s n) (s m) ≤ b n) → Filter.Tendsto b Filter.atTop (nhds 0) → CauchySeq s :=\n\n/-- If the distance between `s n` and `s m`, `n, m ≥ N` is bounded above by `b N`\nand `b` converges to zero, then `s` is a Cauchy sequence. -/\ntheorem ∀ {α : Type u} {β : Type v} [inst : PseudoMetricSpace α] [inst_1 : Nonempty β] [inst_2 : SemilatticeSup β] {s : β → α}\n  (b : β → ℝ),\n  (∀ (n m N : β), N ≤ n → N ≤ m → dist (s n) (s m) ≤ b N) → Filter.Tendsto b Filter.atTop (nhds 0) → CauchySeq s :=\n\n/-- Comparison test of convergence of series of non-negative real numbers. -/\ntheorem ∀ {β : Type u_1} {f g : β → ℝ}, (∀ (b : β), 0 ≤ g b) → (∀ (b : β), g b ≤ f b) → Summable f → Summable g :=\n\n/-- From an upper bound on `sqrtTwoAddSeries 0 n = 2 cos (π / 2 ^ (n+1))` of the form\n`sqrtTwoAddSeries 0 n ≤ 2 - (a / 2 ^ (n + 1)) ^ 2)`, one can deduce the lower bound `a < π`\nthanks to basic trigonometric inequalities as expressed in `pi_gt_sqrtTwoAddSeries`. -/\ntheorem ∀ (n : ℕ) {a : ℝ}, Real.sqrtTwoAddSeries (↑0 / ↑1) n ≤ 2 - (a / 2 ^ (n + 1)) ^ 2 → a < Real.pi :=\n\n/-- If $s_{1}=\\sqrt{2}$, and $s_{n+1}=\\sqrt{2+\\sqrt{s_{n}}} \\quad(n=1,2,3, \\ldots),$ prove that $\\left\\{s_{n}\\right\\}$ converges, and that $s_{n}<2$ for $n=1,2,3, \\ldots$. -/\ntheorem", "choices": ["∀ (n : ℕ), Real.sqrtTwoAddSeries (0 : ℝ) n < 2 ", "∀ (n : ℕ), Real.sqrtTwoAddSeries 0 n < 2 ", "∀ (n : ℕ), Real.sqrtTwoAddSeries (1 / 2 ^ n) n < 2 ∧ ∀ (i : ℕ), i < n → Real.sqrtTwoAddSeries (1 / 2 ^ (i + 1)) i < 2 ", "∀ (n : ℕ), Real.sqrt (2 + Real.sqrt (Real.sqrtTwoAddSeries (↑1 / ↑1) n)) < 2 ", "∀ (n : ℕ), Real.sqrtTwoAddSeries (↑0 / ↑1) n < 2 ", "∀ (n : ℕ), Real.sqrtTwoAddSeries (↑1 / ↑1) n < 2 ", "∀ (n : ℕ), Real.sqrtTwoAddSeries (↑0 / ↑1) n < 2 ", "∀ (n : ℕ), 0 < Real.sqrtTwoAddSeries (↑0 / ↑1) n ∧ Real.sqrtTwoAddSeries (↑0 / ↑1) n < 2 ", "forall (n : ℕ), Real.sqrtTwoAddSeries (↑0 / ↑1) n < 2 ", "∀ (n : ℕ), Real.sqrtTwoAddSeries (↑0 / ↑1) n < 2 "]}
{"docString": "Prove that $\\lim_{n \\rightarrow \\infty} \\sum_{i<n} a_i = \\infty$, where $a_i = \\sqrt{i + 1} -\\sqrt{i}$.", "prompts": "[{\"theorem\":\n  \"∀ {α : Type u_1} [inst : LinearOrderedAddCommGroup α], Filter.Tendsto abs Filter.atTop Filter.atTop\",\n  \"isProp\": true,\n  \"docString\": \"$\\\\lim_{x\\\\to+\\\\infty}|x|=+\\\\infty$ \"},\n {\"theorem\":\n  \"∀ {J : Type w} {C : Type u} [inst : CategoryTheory.Category C] {B : C}\\n  (F : CategoryTheory.Functor (CategoryTheory.Discrete J) (CategoryTheory.Over B))\\n  [inst_1 :\\n    CategoryTheory.Limits.HasLimit (CategoryTheory.Over.ConstructProducts.widePullbackDiagramOfDiagramOver B F)],\\n  CategoryTheory.Limits.HasLimit F\",\n  \"isProp\": true,\n  \"docString\": \"Use the above equivalence to prove we have a limit. \"},\n {\"theorem\":\n  \"∀ {α : Type u_1} [inst : LinearOrderedAddCommGroup α], Filter.Tendsto abs Filter.atBot Filter.atTop\",\n  \"isProp\": true,\n  \"docString\": \"$\\\\lim_{x\\\\to-\\\\infty}|x|=+\\\\infty$ \"},\n {\"theorem\":\n  \"∀ {A : Type u_1} [inst : CommRing A] [inst_1 : Algebra ℚ A] (n : ℕ),\\n  (Finset.sum (Finset.range n) fun k => PowerSeries.exp A ^ k) =\\n    PowerSeries.mk fun p => Finset.sum (Finset.range n) fun k => ↑(k ^ p) * ↑(algebraMap ℚ A) (↑(Nat.factorial p))⁻¹\",\n  \"isProp\": true,\n  \"docString\":\n  \"Shows that\\n$\\\\sum_{k = 0}^{n - 1} (e^{X})^k = \\\\sum_{p = 0}^{\\\\infty} \\\\sum_{k = 0}^{n - 1} \\\\frac{k^p}{p!}X^p$. \"}]\n", "prompt_cons": "/-- $\\lim_{x\\to+\\infty}|x|=+\\infty$ -/\ntheorem ∀ {α : Type u_1} [inst : LinearOrderedAddCommGroup α], Filter.Tendsto abs Filter.atTop Filter.atTop :=\n\n/-- Use the above equivalence to prove we have a limit. -/\ntheorem ∀ {J : Type w} {C : Type u} [inst : CategoryTheory.Category C] {B : C}\n  (F : CategoryTheory.Functor (CategoryTheory.Discrete J) (CategoryTheory.Over B))\n  [inst_1 :\n    CategoryTheory.Limits.HasLimit (CategoryTheory.Over.ConstructProducts.widePullbackDiagramOfDiagramOver B F)],\n  CategoryTheory.Limits.HasLimit F :=\n\n/-- $\\lim_{x\\to-\\infty}|x|=+\\infty$ -/\ntheorem ∀ {α : Type u_1} [inst : LinearOrderedAddCommGroup α], Filter.Tendsto abs Filter.atBot Filter.atTop :=\n\n/-- Shows that\n$\\sum_{k = 0}^{n - 1} (e^{X})^k = \\sum_{p = 0}^{\\infty} \\sum_{k = 0}^{n - 1} \\frac{k^p}{p!}X^p$. -/\ntheorem ∀ {A : Type u_1} [inst : CommRing A] [inst_1 : Algebra ℚ A] (n : ℕ),\n  (Finset.sum (Finset.range n) fun k => PowerSeries.exp A ^ k) =\n    PowerSeries.mk fun p => Finset.sum (Finset.range n) fun k => ↑(k ^ p) * ↑(algebraMap ℚ A) (↑(Nat.factorial p))⁻¹ :=\n\n/-- Prove that $\\lim_{n \\rightarrow \\infty} \\sum_{i<n} a_i = \\infty$, where $a_i = \\sqrt{i + 1} -\\sqrt{i}$. -/\ntheorem", "choices": ["∀ {α : Type u_1} [inst : LinearOrderedField α] [Archimedean α], Filter.Tendsto (λ n : ℕ, Finset.sum (Finset.range n) (λ i => Real.sqrt (i + 1) - Real.sqrt i)) Filter.atTop Filter.atTop ", "∀ {α : Type u_1} [inst : LinearOrderedAddCommGroup α] [inst_1 : Archimedean α], Filter.Tendsto (λ n, Finset.sum (Finset.range n) (λ i, (Real.sqrt (i + 1) - Real.sqrt i))) Filter.atTop Filter.atTop ", "∀ {α : Type u_1} [inst : LinearOrderedField α] [inst_1 : Archimedean α],\n  Filter.Tendsto (λ n, Finset.sum (Finset.range n) (λ i, Real.sqrt (i + 1) - Real.sqrt i)) Filter.atTop Filter.atTop ", "∀ {α : Type u_1} [inst : LinearOrderedField α] [archimedean α],\n  Filter.Tendsto (λ n, Finset.sum (Finset.range n) (λ i, Real.sqrt (i + 1) - Real.sqrt i)) Filter.atTop Filter.atTop ", "∀ {α : Type u_1} [inst : LinearOrderedField α] [archimedean α], Filter.Tendsto (λ n, Finset.sum (Finset.range n) (λ i, Real.sqrt (↑i + 1) - Real.sqrt ↑i)) Filter.atTop Filter.atTop ", "∀ {α : Type u_1} [inst : LinearOrderedField α] [Archimedean α],\n  Filter.Tendsto (λ n : ℕ, Finset.sum (Finset.range n) (λ i => Real.sqrt (i + 1) - Real.sqrt i)) Filter.atTop Filter.atTop ", "∀ {α : Type u_1} [inst : LinearOrderedField α] [archimedean α], Filter.Tendsto (λ n : ℕ, Finset.sum (Finset.range n) (λ i => real.sqrt (i + 1) - real.sqrt i)) Filter.atTop Filter.atTop ", "∀ {α : Type u_1} [inst : LinearOrderedField α] [archimedean α],\n  Filter.Tendsto (λ n, Finset.sum (Finset.range n) (λ i, real.sqrt (i + 1) - real.sqrt i)) Filter.atTop Filter.atTop ", "∀ {α : Type u_1} [inst : LinearOrderedField α] [inst_1 : Archimedean α],\n  Filter.Tendsto (λ n, Finset.sum (Finset.range n) (λ i, (Real.sqrt (i + 1) - Real.sqrt i))) Filter.atTop Filter.atTop ", "∀ {α : Type u_1} [inst : LinearOrderedField α] [inst_1 : Archimedean α], Filter.Tendsto (λn : ℕ, Finset.sum (Finset.range n) (λi => real.sqrt (↑(i + 1)) - real.sqrt ↑i)) Filter.atTop Filter.atTop "]}
{"docString": "If $\\Sigma a_{n}$ converges, and if $\\left\\{b_{n}\\right\\}$ is monotonic and bounded, prove that $\\Sigma a_{n} b_{n}$ converges.", "prompts": "[{\"theorem\":\n  \"∀ {α : Type u_1} {m : MeasurableSpace α} {μ : MeasureTheory.Measure α} {f : ℕ → α → ENNReal} {F : α → ENNReal},\\n  (∀ (n : ℕ), AEMeasurable (f n)) →\\n    (∀ᵐ (x : α) ∂μ, Monotone fun n => f n x) →\\n      (∀ᵐ (x : α) ∂μ, Filter.Tendsto (fun n => f n x) Filter.atTop (nhds (F x))) →\\n        Filter.Tendsto (fun n => ∫⁻ (x : α), f n x ∂μ) Filter.atTop (nhds (∫⁻ (x : α), F x ∂μ))\",\n  \"isProp\": true,\n  \"docString\": \"Monotone convergence theorem expressed with limits \"},\n {\"theorem\":\n  \"∀ {α : Type u_1} {m : MeasurableSpace α} {μ : MeasureTheory.Measure α} {f : ℕ → α → ENNReal},\\n  (∀ (n : ℕ), Measurable (f n)) →\\n    (∀ (n : ℕ), f (Nat.succ n) ≤ᶠ[MeasureTheory.Measure.ae μ] f n) →\\n      ∫⁻ (a : α), f 0 a ∂μ ≠ ⊤ → ∫⁻ (a : α), ⨅ (n : ℕ), f n a ∂μ = ⨅ (n : ℕ), ∫⁻ (a : α), f n a ∂μ\",\n  \"isProp\": true,\n  \"docString\":\n  \"Monotone convergence theorem for nonincreasing sequences of functions \"},\n {\"theorem\":\n  \"∀ {α : Type u_1} [inst : Preorder α] [inst_1 : TopologicalSpace α] [self : SupConvergenceClass α] (a : α) (s : Set α),\\n  IsLUB s a → Filter.Tendsto CoeTC.coe Filter.atTop (nhds a)\",\n  \"isProp\": true,\n  \"docString\": \"proof that a monotone function tends to `𝓝 a` as `x → ∞` \"},\n {\"theorem\":\n  \"∀ {K : Type u_1} {v : K} {n : ℕ} [inst : LinearOrderedField K] [inst_1 : FloorRing K],\\n  GeneralizedContinuedFraction.denominators (GeneralizedContinuedFraction.of v) n ≤\\n    GeneralizedContinuedFraction.denominators (GeneralizedContinuedFraction.of v) (n + 1)\",\n  \"isProp\": true,\n  \"docString\":\n  \"Shows that the sequence of denominators is monotone, that is `Bₙ ≤ Bₙ₊₁`. \"}]\n", "prompt_cons": "/-- Monotone convergence theorem expressed with limits -/\ntheorem ∀ {α : Type u_1} {m : MeasurableSpace α} {μ : MeasureTheory.Measure α} {f : ℕ → α → ENNReal} {F : α → ENNReal},\n  (∀ (n : ℕ), AEMeasurable (f n)) →\n    (∀ᵐ (x : α) ∂μ, Monotone fun n => f n x) →\n      (∀ᵐ (x : α) ∂μ, Filter.Tendsto (fun n => f n x) Filter.atTop (nhds (F x))) →\n        Filter.Tendsto (fun n => ∫⁻ (x : α), f n x ∂μ) Filter.atTop (nhds (∫⁻ (x : α), F x ∂μ)) :=\n\n/-- Monotone convergence theorem for nonincreasing sequences of functions -/\ntheorem ∀ {α : Type u_1} {m : MeasurableSpace α} {μ : MeasureTheory.Measure α} {f : ℕ → α → ENNReal},\n  (∀ (n : ℕ), Measurable (f n)) →\n    (∀ (n : ℕ), f (Nat.succ n) ≤ᶠ[MeasureTheory.Measure.ae μ] f n) →\n      ∫⁻ (a : α), f 0 a ∂μ ≠ ⊤ → ∫⁻ (a : α), ⨅ (n : ℕ), f n a ∂μ = ⨅ (n : ℕ), ∫⁻ (a : α), f n a ∂μ :=\n\n/-- proof that a monotone function tends to `𝓝 a` as `x → ∞` -/\ntheorem ∀ {α : Type u_1} [inst : Preorder α] [inst_1 : TopologicalSpace α] [self : SupConvergenceClass α] (a : α) (s : Set α),\n  IsLUB s a → Filter.Tendsto CoeTC.coe Filter.atTop (nhds a) :=\n\n/-- Shows that the sequence of denominators is monotone, that is `Bₙ ≤ Bₙ₊₁`. -/\ntheorem ∀ {K : Type u_1} {v : K} {n : ℕ} [inst : LinearOrderedField K] [inst_1 : FloorRing K],\n  GeneralizedContinuedFraction.denominators (GeneralizedContinuedFraction.of v) n ≤\n    GeneralizedContinuedFraction.denominators (GeneralizedContinuedFraction.of v) (n + 1) :=\n\n/-- If $\\Sigma a_{n}$ converges, and if $\\left\\{b_{n}\\right\\}$ is monotonic and bounded, prove that $\\Sigma a_{n} b_{n}$ converges. -/\ntheorem", "choices": ["∀ {α : Type u_1} {β : Type u_2} [inst : NormedField α] [inst_1 : NormedField β] [self : Summable (α × β)]\n  [self_1 : MonotoneSequence (α × β)] [self_2 : Bounded (α × β)],\n  Summable (λ (n : ℕ), Summable.partialSums (α × β) n * MonotoneSequence.partialSums (α × β) n) ", "∀ {α : Type u_1} {β : Type u_2} [inst : OrderedSemiring α] [inst_1 : OrderedSemiring β] [inst_2 : TopologicalSpace α] [inst_3 : TopologicalSpace β] [inst_4 : SupConvergenceClass α] [inst_5 : SupConvergenceClass β],\n  Filter.Tendsto (fun n => ∑ (k : ℕ) in Finset.range n, a k) Filter.atTop (nhds a) →\n    Monotone b → BddAbove (range b) → Filter.Tendsto (fun n => ∑ (k : ℕ) in Finset.range n, a k * b k) Filter.atTop (nhds (a * sup (range b))) ", "∀ {α : Type u_1} {β : Type u_2} [inst : TopologicalSpace α] [inst_1 : AddCommGroup α] [inst_2 : TopologicalAddGroup α] [inst_3 : TopologicalSpace β] [inst_4 : Preorder β] [inst_5 : OrderClosedTopology β] [self : HasSum α] (f : ℕ → α) (g : ℕ → β),\n  Filter.Tendsto f Filter.atTop (nhds 0) →\n    Monotone g → BddAbove (Set.Range g) →\n      ∀ (a : α), HasSum (fun n => f n) a →\n        Filter.Tendsto (fun n => f n * g n) Filter.atTop (nhds 0) ", "∀ {α : Type u_1} {β : Type u_2} [inst : TopologicalSpace α] [inst_1 : AddCommGroup α] [inst_2 : UniformSpace β]\n  [inst_3 : LinearOrder β] [inst_4 : OrderTopology β] [inst_5 : TopologicalAddGroup α] {a : ℕ → α} {b : ℕ → β},\n  (Filter.HasAntitoneBasis Filter.atTop b) →\n    Filter.Tendsto a Filter.atTop (𝓝 0) →\n      Filter.Tendsto (fun n => a n * b n) Filter.atTop (𝓝 0) ", "∀ {α : Type u_1} {β : Type u_2} [inst : OrderedSemiring α] [inst_1 : OrderedCancelAddCommMonoid β] [inst_2 : Preorder β]\n  {a : ℕ → α} {b : ℕ → β} {l : Filter α},\n  Filter.HasBasis l Filter.atTop (Set.Iic ∘ b) →\n    Filter.Tendsto (fun n => ∑ (i : ℕ) in Finset.range n, a i) Filter.atTop l →\n      Filter.Tendsto (fun n => ∑ (i : ℕ) in Finset.range n, a i * b i) Filter.atTop l ", "∀ {α : Type u_1} {β : Type u_2} [inst : TopologicalSpace α] [inst_1 : LinearOrderedAddCommMonoid β] [inst_2 : OrderTopology β] [self : SupConvergenceClass β] {a : ℕ → α} {b : ℕ → β},\n  Filter.Tendsto a Filter.atTop (nhds 0) →\n    (∀ (n : ℕ), b n ≤ b (n + 1)) →\n      BddAbove (Set.Range b) →\n        Filter.Tendsto (fun n => a n * b n) Filter.atTop (nhds 0) ", "∀ {α : Type u_1} {β : Type u_2} [inst : LinearOrderedField α] [inst_1 : TopologicalSpace α] [inst_2 : OrderTopology α] [inst_3 : Archimedean α] [inst_4 : TopologicalRing β] [inst_5 : TopologicalAddGroup β] (a : ℕ → β) (b : ℕ → α),\n  Filter.Tendsto a Filter.atTop (nhds 0) →\n    (∀ (n : ℕ), b n ≤ b (n + 1)) →\n      BddAbove (Set.Range b) → Filter.Tendsto (fun n => a n * b n) Filter.atTop (nhds 0) ", "∀ {α : Type u_1} {β : Type u_2} [inst : TopologicalSpace α] [inst_1 : AddCommGroup α] [inst_2 : UniformSpace β] [inst_3 : LinearOrderedAddCommGroup β] [inst_4 : TopologicalAddGroup α]\n  (a : ℕ → α) (b : ℕ → β) (A : α) (B : β),\n  Filter.Tendsto a Filter.atTop (nhds A) →\n    (∀ (n : ℕ), b n ≤ b (n + 1)) →\n      BddAbove (Set.Range b) →\n        Filter.Tendsto (fun n => a n * b n) Filter.atTop (nhds (A * B)) ", "∀ {α : Type u_1} {β : Type u_2} [_inst_1 : LinearOrderedField α] [_inst_2 : Archimedean α]\n  [_inst_3 : TopologicalSpace α] [_inst_4 : OrderTopology α] [_inst_5 : TopologicalAddGroup α]\n  {a : ℕ → α} {b : ℕ → α} [ha : Summable a] [hb : Monotone b] (hb_bound : BddAbove (Set.Range b)),\n  Summable (λ (n : ℕ), a n * b n) ", "∀ {α : Type u_1} {β : Type u_2} [inst : TopologicalSpace α] [inst_1 : AddCommGroup α] [inst_2 : TopologicalAddGroup α] [inst_3 : Monoid β] [inst_4 : Preorder β] [inst_5 : TopologicalSpace β] [self : SupConvergenceClass α] {a : β → α} {b : β → β},\n  HasSum a (SupConvergenceClass SupConvergenceClass.Sup) →\n    Monotone b → BddAbove (Set.Range b) →\n      HasSum (fun n => a n * b n) (SupConvergenceClass SupConvergenceClass.Sup) "]}
{"docString": "Suppose $\\left\\{p_{n}\\right\\}$ is a Cauchy sequence in a metric space $X$, and some sequence $\\left\\{p_{n l}\\right\\}$ converges to a point $p \\in X$. Prove that the full sequence $\\left\\{p_{n}\\right\\}$ converges to $p$.", "prompts": "[{\"theorem\":\n  \"∀ {α : Type u} {β : Type v} [inst : UniformSpace α] [inst_1 : SemilatticeSup β] [inst_2 : CompleteSpace α] {u : β → α},\\n  CauchySeq u → ∃ x, Filter.Tendsto u Filter.atTop (nhds x)\",\n  \"isProp\": true,\n  \"docString\": \"A Cauchy sequence in a complete space converges \"},\n {\"theorem\":\n  \"∀ {α : Type u_1} {E : α → Type u_2} {p : ENNReal} [inst : (i : α) → NormedAddCommGroup (E i)] [_i : Fact (1 ≤ p)]\\n  {F : ℕ → { x // x ∈ lp E p }},\\n  CauchySeq F →\\n    ∀ {f : { x // x ∈ lp E p }},\\n      Filter.Tendsto (id fun i => ↑(F i)) Filter.atTop (nhds ↑f) → Filter.Tendsto F Filter.atTop (nhds f)\",\n  \"isProp\": true,\n  \"docString\":\n  \"If a sequence is Cauchy in the `lp E p` topology and pointwise convergent to an element `f` of\\n`lp E p`, then it converges to `f` in the `lp E p` topology. \"},\n {\"theorem\":\n  \"∀ {𝕜 : Type u_1} {𝕜₂ : Type u_2} {F : Type u_4} [inst : NormedAddCommGroup F] [inst_1 : NontriviallyNormedField 𝕜]\\n  [inst_2 : NontriviallyNormedField 𝕜₂] [inst_3 : NormedSpace 𝕜₂ F] {σ₁₂ : 𝕜 →+* 𝕜₂} {E' : Type u_3}\\n  [inst_4 : SeminormedAddCommGroup E'] [inst_5 : NormedSpace 𝕜 E'] [inst_6 : RingHomIsometric σ₁₂]\\n  {f : ℕ → E' →SL[σ₁₂] F} {g : E' →SL[σ₁₂] F},\\n  Filter.Tendsto (fun n x => ↑(f n) x) Filter.atTop (nhds ↑g) → CauchySeq f → Filter.Tendsto f Filter.atTop (nhds g)\",\n  \"isProp\": true,\n  \"docString\":\n  \"If a Cauchy sequence of continuous linear map converges to a continuous linear map pointwise,\\nthen it converges to the same map in norm. This lemma is used to prove that the space of continuous\\nlinear maps is complete provided that the codomain is a complete space. \"},\n {\"theorem\":\n  \"∀ {α : Type u} {β : Type v} {ι : Type x} [inst : UniformSpace β] {F : ι → α → β} {f : α → β} {p : Filter ι}\\n  {p' : Filter α} [inst_1 : Filter.NeBot p],\\n  UniformCauchySeqOnFilter F p p' →\\n    (∀ᶠ (x : α) in p', Filter.Tendsto (fun n => F n x) p (nhds (f x))) → TendstoUniformlyOnFilter F f p p'\",\n  \"isProp\": true,\n  \"docString\": \"A uniformly Cauchy sequence converges uniformly to its limit \"}]\n", "prompt_cons": "/-- A Cauchy sequence in a complete space converges -/\ntheorem ∀ {α : Type u} {β : Type v} [inst : UniformSpace α] [inst_1 : SemilatticeSup β] [inst_2 : CompleteSpace α] {u : β → α},\n  CauchySeq u → ∃ x, Filter.Tendsto u Filter.atTop (nhds x) :=\n\n/-- If a sequence is Cauchy in the `lp E p` topology and pointwise convergent to an element `f` of\n`lp E p`, then it converges to `f` in the `lp E p` topology. -/\ntheorem ∀ {α : Type u_1} {E : α → Type u_2} {p : ENNReal} [inst : (i : α) → NormedAddCommGroup (E i)] [_i : Fact (1 ≤ p)]\n  {F : ℕ → { x // x ∈ lp E p }},\n  CauchySeq F →\n    ∀ {f : { x // x ∈ lp E p }},\n      Filter.Tendsto (id fun i => ↑(F i)) Filter.atTop (nhds ↑f) → Filter.Tendsto F Filter.atTop (nhds f) :=\n\n/-- If a Cauchy sequence of continuous linear map converges to a continuous linear map pointwise,\nthen it converges to the same map in norm. This lemma is used to prove that the space of continuous\nlinear maps is complete provided that the codomain is a complete space. -/\ntheorem ∀ {𝕜 : Type u_1} {𝕜₂ : Type u_2} {F : Type u_4} [inst : NormedAddCommGroup F] [inst_1 : NontriviallyNormedField 𝕜]\n  [inst_2 : NontriviallyNormedField 𝕜₂] [inst_3 : NormedSpace 𝕜₂ F] {σ₁₂ : 𝕜 →+* 𝕜₂} {E' : Type u_3}\n  [inst_4 : SeminormedAddCommGroup E'] [inst_5 : NormedSpace 𝕜 E'] [inst_6 : RingHomIsometric σ₁₂]\n  {f : ℕ → E' →SL[σ₁₂] F} {g : E' →SL[σ₁₂] F},\n  Filter.Tendsto (fun n x => ↑(f n) x) Filter.atTop (nhds ↑g) → CauchySeq f → Filter.Tendsto f Filter.atTop (nhds g) :=\n\n/-- A uniformly Cauchy sequence converges uniformly to its limit -/\ntheorem ∀ {α : Type u} {β : Type v} {ι : Type x} [inst : UniformSpace β] {F : ι → α → β} {f : α → β} {p : Filter ι}\n  {p' : Filter α} [inst_1 : Filter.NeBot p],\n  UniformCauchySeqOnFilter F p p' →\n    (∀ᶠ (x : α) in p', Filter.Tendsto (fun n => F n x) p (nhds (f x))) → TendstoUniformlyOnFilter F f p p' :=\n\n/-- Suppose $\\left\\{p_{n}\\right\\}$ is a Cauchy sequence in a metric space $X$, and some sequence $\\left\\{p_{n l}\\right\\}$ converges to a point $p \\in X$. Prove that the full sequence $\\left\\{p_{n}\\right\\}$ converges to $p$. -/\ntheorem", "choices": ["∀ {α : Type u} {β : Type v} [inst : MetricSpace α] [inst_1 : SemilatticeSup β] {u : β → α} {u' : ℕ → β} {p : α},\n  CauchySeq u →\n    Filter.Tendsto (u ∘ u') Filter.atTop (nhds p) → Filter.Tendsto u Filter.atTop (nhds p) ", "∀ {α : Type u} [inst : MetricSpace α] {p : ℕ → α} {l : ℕ → ℕ} {x : α},\n  CauchySeq p → Filter.Tendsto l Filter.atTop Filter.atTop → Filter.Tendsto (λ n, p (l n)) Filter.atTop (nhds x) → Filter.Tendsto p Filter.atTop (nhds x) ", "∀ {α : Type u} {β : Type v} [inst : MetricSpace α] [inst_1 : SemilatticeSup β] {u : β → α} {u' : ℕ → α} {l : ℕ → β} {x : α},\n  CauchySeq u →\n    Filter.Tendsto l Filter.atTop Filter.atTop →\n      Filter.Tendsto u' Filter.atTop (nhds x) →\n        (∀ n, u (l n) = u' n) → Filter.Tendsto u Filter.atTop (nhds x) ", "∀ {α : Type u} {β : Type v} [inst : MetricSpace α] [inst_1 : SemilatticeSup β] {u : β → α} {ul : ℕ → β} {x : α},\n  CauchySeq u →\n    Filter.Tendsto (u ∘ ul) Filter.atTop (nhds x) → Filter.Tendsto u Filter.atTop (nhds x) ", "∀ {α : Type u} [inst : PseudoMetricSpace α] {u : ℕ → α} {p : α} (seq : ℕ → ℕ),\n  CauchySeq u →\n    Filter.Tendsto (u ∘ seq) Filter.atTop (nhds p) → Filter.Tendsto u Filter.atTop (nhds p) ", "∀ {α : Type u} [inst : MetricSpace α] {p : ℕ → α} {p_sub : ℕ → α} {l : ℕ → ℕ} {x : α},\n  CauchySeq p → Filter.Tendsto (λ n, p (l n)) Filter.atTop (nhds x) → Filter.Tendsto p Filter.atTop (nhds x) ", "∀ {α : Type u} [inst : PseudoMetricSpace α] {β : Type v} [inst_1 : SemilatticeSup β] {u : β → α} {p : ℕ → β} {x : α},\n  CauchySeq u →\n    Filter.Tendsto (u ∘ p) Filter.atTop (nhds x) → Filter.Tendsto u Filter.atTop (nhds x) ", "∀ {α : Type u} [inst : MetricSpace α] {p : ℕ → α} {l : ℕ → ℕ} {x : α},\n  CauchySeq p →\n    Filter.Tendsto (fun n => p (l n)) Filter.atTop (nhds x) → Filter.Tendsto p Filter.atTop (nhds x) ", "∀ {α : Type u} [inst : MetricSpace α] {p : ℕ → α} {p' : α} {l : ℕ → ℕ},\n  CauchySeq p →\n    Filter.Tendsto (p ∘ l) Filter.atTop (nhds p') → Filter.Tendsto p Filter.atTop (nhds p') ", "∀ {α : Type u} [inst : MetricSpace α] {p : ℕ → α} (hp : CauchySeq p) {l : ℕ → ℕ} {L : Filter ℕ}\n  (hl : Filter.Tendsto l L Filter.atTop) {a : α}, Filter.Tendsto (fun n => p (l n)) L (nhds a) → Filter.Tendsto p Filter.atTop (nhds a) "]}
{"docString": "Suppose $X$ is a nonempty complete metric space, and $\\left\\{G_{n}\\right\\}$ is a sequence of dense open sets of $X$. Prove Baire's theorem, namely, that $\\bigcap_{1}^{\\infty} G_{n}$ is not empty.", "prompts": "[{\"theorem\":\n  \"∀ {α : Type u_1} [inst : TopologicalSpace α] [inst_1 : BaireSpace α] {S : Set (Set α)},\\n  (∀ (s : Set α), s ∈ S → IsOpen s) → Set.Countable S → (∀ (s : Set α), s ∈ S → Dense s) → Dense (⋂₀ S)\",\n  \"isProp\": true,\n  \"docString\":\n  \"Baire theorem: a countable intersection of dense open sets is dense. Formulated here with ⋂₀. \"},\n {\"theorem\":\n  \"∀ {α : Type u_1} [inst : TopologicalSpace α] [inst_1 : BaireSpace α] {S : Set (Set α)},\\n  (∀ (s : Set α), s ∈ S → IsGδ s) → Set.Countable S → (∀ (s : Set α), s ∈ S → Dense s) → Dense (⋂₀ S)\",\n  \"isProp\": true,\n  \"docString\":\n  \"Baire theorem: a countable intersection of dense Gδ sets is dense. Formulated here with ⋂₀. \"},\n {\"theorem\":\n  \"∀ {α : Type u_1} {β : Type u_2} [inst : TopologicalSpace α] [inst_1 : BaireSpace α] [inst_2 : Nonempty α]\\n  [inst_3 : Encodable β] {f : β → Set α},\\n  (∀ (s : β), IsClosed (f s)) → ⋃ (s : β), f s = Set.univ → ∃ s, Set.Nonempty (interior (f s))\",\n  \"isProp\": true,\n  \"docString\":\n  \"One of the most useful consequences of Baire theorem: if a countable union of closed sets\\ncovers the space, then one of the sets has nonempty interior. \"},\n {\"theorem\":\n  \"∀ {α : Type u_2} {β : Type u_1} [inst : TopologicalSpace α] [inst_1 : BaireSpace α] {S : Set β} {f : β → Set α},\\n  (∀ (s : β), s ∈ S → IsOpen (f s)) →\\n    Set.Countable S → (∀ (s : β), s ∈ S → Dense (f s)) → Dense (⋂ (s : β) (_ : s ∈ S), f s)\",\n  \"isProp\": true,\n  \"docString\":\n  \"Baire theorem: a countable intersection of dense open sets is dense. Formulated here with\\nan index set which is a countable set in any type. \"}]\n", "prompt_cons": "/-- Baire theorem: a countable intersection of dense open sets is dense. Formulated here with ⋂₀. -/\ntheorem ∀ {α : Type u_1} [inst : TopologicalSpace α] [inst_1 : BaireSpace α] {S : Set (Set α)},\n  (∀ (s : Set α), s ∈ S → IsOpen s) → Set.Countable S → (∀ (s : Set α), s ∈ S → Dense s) → Dense (⋂₀ S) :=\n\n/-- Baire theorem: a countable intersection of dense Gδ sets is dense. Formulated here with ⋂₀. -/\ntheorem ∀ {α : Type u_1} [inst : TopologicalSpace α] [inst_1 : BaireSpace α] {S : Set (Set α)},\n  (∀ (s : Set α), s ∈ S → IsGδ s) → Set.Countable S → (∀ (s : Set α), s ∈ S → Dense s) → Dense (⋂₀ S) :=\n\n/-- One of the most useful consequences of Baire theorem: if a countable union of closed sets\ncovers the space, then one of the sets has nonempty interior. -/\ntheorem ∀ {α : Type u_1} {β : Type u_2} [inst : TopologicalSpace α] [inst_1 : BaireSpace α] [inst_2 : Nonempty α]\n  [inst_3 : Encodable β] {f : β → Set α},\n  (∀ (s : β), IsClosed (f s)) → ⋃ (s : β), f s = Set.univ → ∃ s, Set.Nonempty (interior (f s)) :=\n\n/-- Baire theorem: a countable intersection of dense open sets is dense. Formulated here with\nan index set which is a countable set in any type. -/\ntheorem ∀ {α : Type u_2} {β : Type u_1} [inst : TopologicalSpace α] [inst_1 : BaireSpace α] {S : Set β} {f : β → Set α},\n  (∀ (s : β), s ∈ S → IsOpen (f s)) →\n    Set.Countable S → (∀ (s : β), s ∈ S → Dense (f s)) → Dense (⋂ (s : β) (_ : s ∈ S), f s) :=\n\n/-- Suppose $X$ is a nonempty complete metric space, and $\\left\\{G_{n}\\right\\}$ is a sequence of dense open sets of $X$. Prove Baire's theorem, namely, that $\\bigcap_{1}^{\\infty} G_{n}$ is not empty. -/\ntheorem", "choices": ["∀ {α : Type u_1} [inst : TopologicalSpace α] [inst_1 : BaireSpace α] [Nonempty α] [inst_2 : CompleteSpace α]\n  {β : Type u_2} [inst_3 : Encodable β] {f : β → Set α},\n  (∀ (s : β), IsOpen (f s)) → (∀ (s : β), Dense (f s)) → Set.Nonempty (⋂ (s : β), f s) ", "forall {α : Type u_1} [inst : TopologicalSpace α] [inst_1 : BaireSpace α] [inst_2 : Nonempty α] [inst_3 : CompleteSpace α]\n  {β : Type u_2} [inst_4 : SemilatticeSup β] [inst_5 : Encodable β] {f : β → Set α},\n  (∀ (s : β), IsOpen (f s)) →\n    (∀ (s : β), Dense (f s)) → Set.Nonempty (⋂ (s : β), f s) ", "∀ {α : Type u_1} [inst : TopologicalSpace α] [inst_1 : BaireSpace α] [inst_2 : Nonempty α] [inst_3 : CompleteSpace α]\n  {β : Type u_2} [inst_4 : Encodable β] {f : β → Set α},\n  (∀ (s : β), IsOpen (f s)) → (∀ (s : β), Dense (f s)) → Set.Nonempty (⋂ (s : β), f s) ", "∀ {α : Type u_1} [inst : TopologicalSpace α] [inst_1 : BaireSpace α] [inst_2 : Nonempty α] [inst_3 : CompleteSpace α]\n  {β : Type u_2} [inst_4 : Encodable β] {f : β → Set α},\n  (∀ (s : β), IsOpen (f s)) → (∀ (s : β), Dense (f s)) → Set.Nonempty (⋂ (s : β), f s) ", "∀ {α : Type u_1} [inst : TopologicalSpace α] [inst_1 : BaireSpace α] [inst_2 : Nonempty α] {β : Type u_2}\n  [inst_3 : Encodable β] {f : β → Set α},\n  (∀ (n : β), IsOpen (f n)) → (∀ (n : β), Dense (f n)) → Set.Nonempty (⋂ (n : β), f n) ", "∀ {α : Type u_1} [inst : TopologicalSpace α] [inst_1 : BaireSpace α] [inst_2 : Nonempty α]\n  [inst_3 : CompleteSpace α] {β : Type u_2} [inst_4 : Encodable β] {f : β → Set α},\n  (∀ (s : β), IsOpen (f s)) → (∀ (s : β), Dense (f s)) → Set.Nonempty (⋂ (s : β), f s) ", "forall {α : Type u_1} [inst : MetricSpace α] [inst_1 : CompleteSpace α] [inst_2 : Nonempty α] {β : Type u_2} [inst_3 : Encodable β] {f : β → Set α},\n  (∀ (s : β), IsOpen (f s)) → (∀ (s : β), Dense (f s)) → Set.Nonempty (⋂ (s : β), f s) ", "∀ {α : Type u_1} [inst : TopologicalSpace α] [inst_1 : BaireSpace α] [inst_2 : Nonempty α] [inst_3 : CompleteSpace α] {β : Type u_2} [inst_4 : Encodable β] {f : β → Set α},\n  (∀ (n : β), IsOpen (f n)) → (∀ (n : β), Dense (f n)) → Set.Nonempty (⋂ (n : β), f n) ", "forall {α : Type u_1} [inst : TopologicalSpace α] [inst_1 : BaireSpace α] [inst_2 : Nonempty α] [inst_3 : CompleteSpace α]\n  {β : Type u_2} [inst_4 : Encodable β] {f : β → Set α},\n  (∀ (s : β), IsOpen (f s)) → (∀ (s : β), Dense (f s)) → Set.Nonempty (⋂ (s : β), f s) ", "∀ {α : Type u_1} [inst : TopologicalSpace α] [inst_1 : BaireSpace α] [inst_2 : Nonempty α] [inst_3 : CompleteSpace α]\n  {β : Type u_2} [inst_4 : Encodable β] {f : β → Set α},\n  (∀ (s : β), IsOpen (f s)) → (∀ (s : β), Dense (f s)) → Set.Nonempty (⋂ (s : β), f s) "]}
{"docString": "If $f$ is a continuous mapping of a metric space $X$ into a metric space $Y$, prove that $f(\\overline{E}) \\subset \\overline{f(E)}$ for every set $E \\subset X$. ($\\overline{E}$ denotes the closure of $E$).", "prompts": "[{\"theorem\":\n  \"∀ {𝕜 : Type u_3} [inst : NontriviallyNormedField 𝕜] {E : Type u_1} [inst_1 : NormedAddCommGroup E]\\n  [inst_2 : NormedSpace 𝕜 E] {F : Type u_2} [inst_3 : NormedAddCommGroup F] [inst_4 : NormedSpace 𝕜 F]\\n  [inst_5 : CompleteSpace F] [inst_6 : CompleteSpace E] (g : E →ₗ[𝕜] F),\\n  (∀ (u : ℕ → E) (x : E) (y : F),\\n      Filter.Tendsto u Filter.atTop (nhds x) → Filter.Tendsto (↑g ∘ u) Filter.atTop (nhds y) → y = ↑g x) →\\n    Continuous ↑g\",\n  \"isProp\": true,\n  \"docString\":\n  \"A useful form of the **closed graph theorem** : let `f` be a linear map between two Banach\\nspaces. To show that `f` is continuous, it suffices to show that for any convergent sequence\\n`uₙ ⟶ x`, if `f(uₙ) ⟶ y` then `y = f(x)`. \"},\n {\"theorem\":\n  \"∀ {X : Type u_1} {Y : Type u_2} [inst : TopologicalSpace X] [inst_1 : TopologicalSpace Y] [inst_2 : NormalSpace Y]\\n  (f : BoundedContinuousFunction X ℝ) (e : C(X, Y)),\\n  ClosedEmbedding ↑e → ∃ g, ‖g‖ ≤ ‖f‖ / 3 ∧ dist (BoundedContinuousFunction.compContinuous g e) f ≤ 2 / 3 * ‖f‖\",\n  \"isProp\": true,\n  \"docString\":\n  \"One step in the proof of the Tietze extension theorem. If `e : C(X, Y)` is a closed embedding\\nof a topological space into a normal topological space and `f : X →ᵇ ℝ` is a bounded continuous\\nfunction, then there exists a bounded continuous function `g : Y →ᵇ ℝ` of the norm `‖g‖ ≤ ‖f‖ / 3`\\nsuch that the distance between `g ∘ e` and `f` is at most `(2 / 3) * ‖f‖`. \"},\n {\"theorem\": \"∀ {X Y : CompHaus} (f : X ⟶ Y), IsClosedMap ↑f\",\n  \"isProp\": true,\n  \"docString\":\n  \"Any continuous function on compact Hausdorff spaces is a closed map. \"},\n {\"theorem\":\n  \"∀ {ι : Type u_2} {X : Type u_1} [inst : MetricSpace X] {K U : ι → Set X},\\n  (∀ (i : ι), IsClosed (K i)) →\\n    (∀ (i : ι), IsOpen (U i)) →\\n      (∀ (i : ι), K i ⊆ U i) →\\n        LocallyFinite K → ∃ δ, (∀ (x : X), 0 < ↑δ x) ∧ ∀ (i : ι) (x : X), x ∈ K i → Metric.closedBall x (↑δ x) ⊆ U i\",\n  \"isProp\": true,\n  \"docString\":\n  \"Let `X` be a metric space. Let `K : ι → Set X` be a locally finite family of closed sets, let\\n`U : ι → Set X` be a family of open sets such that `K i ⊆ U i` for all `i`. Then there exists a\\npositive continuous function `δ : C(X, ℝ)` such that for any `i` and `x ∈ K i`, we have\\n`Metric.closedBall x (δ x) ⊆ U i`. \"}]\n", "prompt_cons": "/-- A useful form of the **closed graph theorem** : let `f` be a linear map between two Banach\nspaces. To show that `f` is continuous, it suffices to show that for any convergent sequence\n`uₙ ⟶ x`, if `f(uₙ) ⟶ y` then `y = f(x)`. -/\ntheorem ∀ {𝕜 : Type u_3} [inst : NontriviallyNormedField 𝕜] {E : Type u_1} [inst_1 : NormedAddCommGroup E]\n  [inst_2 : NormedSpace 𝕜 E] {F : Type u_2} [inst_3 : NormedAddCommGroup F] [inst_4 : NormedSpace 𝕜 F]\n  [inst_5 : CompleteSpace F] [inst_6 : CompleteSpace E] (g : E →ₗ[𝕜] F),\n  (∀ (u : ℕ → E) (x : E) (y : F),\n      Filter.Tendsto u Filter.atTop (nhds x) → Filter.Tendsto (↑g ∘ u) Filter.atTop (nhds y) → y = ↑g x) →\n    Continuous ↑g :=\n\n/-- One step in the proof of the Tietze extension theorem. If `e : C(X, Y)` is a closed embedding\nof a topological space into a normal topological space and `f : X →ᵇ ℝ` is a bounded continuous\nfunction, then there exists a bounded continuous function `g : Y →ᵇ ℝ` of the norm `‖g‖ ≤ ‖f‖ / 3`\nsuch that the distance between `g ∘ e` and `f` is at most `(2 / 3) * ‖f‖`. -/\ntheorem ∀ {X : Type u_1} {Y : Type u_2} [inst : TopologicalSpace X] [inst_1 : TopologicalSpace Y] [inst_2 : NormalSpace Y]\n  (f : BoundedContinuousFunction X ℝ) (e : C(X, Y)),\n  ClosedEmbedding ↑e → ∃ g, ‖g‖ ≤ ‖f‖ / 3 ∧ dist (BoundedContinuousFunction.compContinuous g e) f ≤ 2 / 3 * ‖f‖ :=\n\n/-- Any continuous function on compact Hausdorff spaces is a closed map. -/\ntheorem ∀ {X Y : CompHaus} (f : X ⟶ Y), IsClosedMap ↑f :=\n\n/-- Let `X` be a metric space. Let `K : ι → Set X` be a locally finite family of closed sets, let\n`U : ι → Set X` be a family of open sets such that `K i ⊆ U i` for all `i`. Then there exists a\npositive continuous function `δ : C(X, ℝ)` such that for any `i` and `x ∈ K i`, we have\n`Metric.closedBall x (δ x) ⊆ U i`. -/\ntheorem ∀ {ι : Type u_2} {X : Type u_1} [inst : MetricSpace X] {K U : ι → Set X},\n  (∀ (i : ι), IsClosed (K i)) →\n    (∀ (i : ι), IsOpen (U i)) →\n      (∀ (i : ι), K i ⊆ U i) →\n        LocallyFinite K → ∃ δ, (∀ (x : X), 0 < ↑δ x) ∧ ∀ (i : ι) (x : X), x ∈ K i → Metric.closedBall x (↑δ x) ⊆ U i :=\n\n/-- If $f$ is a continuous mapping of a metric space $X$ into a metric space $Y$, prove that $f(\\overline{E}) \\subset \\overline{f(E)}$ for every set $E \\subset X$. ($\\overline{E}$ denotes the closure of $E$). -/\ntheorem", "choices": ["∀ {X Y : Type u_1} [inst : MetricSpace X] [inst_1 : MetricSpace Y] (f : X → Y) (E : Set X),\n  Continuous f → Closure (f '' E) ⊆ f '' Closure E ", "∀ {X Y : Type u_1} [inst : MetricSpace X] [inst_1 : MetricSpace Y] (f : X → Y),\n  Continuous f → ∀ (E : Set X), f '' Closure E ⊆ Closure (f '' E) ", "∀ {X : Type u_1} {Y : Type u_2} [inst : MetricSpace X] [inst_1 : MetricSpace Y] (f : X → Y),\n  Continuous f → ∀ (E : Set X), f '' Closure E ⊆ Closure (f '' E) ", "∀ {X : Type u_1} {Y : Type u_2} [inst : MetricSpace X] [inst_1 : MetricSpace Y] (f : X → Y) (E : Set X),\n  Continuous f → Closure (f '' E) ⊆ f '' Closure E ", "∀ {X : Type u_1} {Y : Type u_2} [inst : MetricSpace X] [inst_1 : MetricSpace Y] (f : X → Y),\n  Continuous f → ∀ (E : Set X), f '' Closure E ⊆ Closure (f '' E) ", "∀ {X Y : Type u} [inst : MetricSpace X] [inst_1 : MetricSpace Y] (f : X → Y),\n  Continuous f → ∀ (E : Set X), f '' Closure E ⊆ Closure (f '' E) ", "∀ {X : Type u_1} {Y : Type u_2} [inst : MetricSpace X] [inst_1 : MetricSpace Y] (f : X → Y) (E : Set X),\n  Continuous f → Closure (f '' E) ⊆ f '' Closure E ", "∀ {X : Type u_1} {Y : Type u_2} [inst : MetricSpace X] [inst_1 : MetricSpace Y] (f : X → Y),\n  Continuous f → ∀ (E : Set X), f '' Closure E ⊆ Closure (f '' E) ", "∀ {X : Type u_1} {Y : Type u_2} [inst : MetricSpace X] [inst_1 : MetricSpace Y] (f : X → Y),\n  Continuous f → ∀ (E : Set X), f '' Closure E ⊆ Closure (f '' E) ", "∀ {X : Type u_1} {Y : Type u_2} [inst : MetricSpace X] [inst_1 : MetricSpace Y]\n  (f : X → Y) (E : Set X), Continuous f → Closure (f '' E) ⊆ f '' Closure E "]}
{"docString": "Let $f$ and $g$ be continuous mappings of a metric space $X$ into a metric space $Y$, and let $E$ be a dense subset of $X$. Prove that $f(E)$ is dense in $f(X)$.", "prompts": "[{\"theorem\":\n  \"∀ {X : Type u_2} {E : Type u_1} [inst : TopologicalSpace X] [inst_1 : AddCommGroup E] [inst_2 : Module ℝ E]\\n  [inst_3 : NormalSpace X] [inst_4 : ParacompactSpace X] [inst_5 : TopologicalSpace E] [inst_6 : ContinuousAdd E]\\n  [inst_7 : ContinuousSMul ℝ E] {t : X → Set E},\\n  (∀ (x : X), Convex ℝ (t x)) →\\n    (∀ (x : X), ∃ U, U ∈ nhds x ∧ ∃ g, ContinuousOn g U ∧ ∀ (y : X), y ∈ U → g y ∈ t y) → ∃ g, ∀ (x : X), ↑g x ∈ t x\",\n  \"isProp\": true,\n  \"docString\":\n  \"Let `X` be a normal paracompact topological space (e.g., any extended metric space). Let `E` be\\na topological real vector space. Let `t : X → Set E` be a family of convex sets. Suppose that for\\neach point `x : X`, there exists a neighborhood `U ∈ 𝓝 X` and a function `g : X → E` that is\\ncontinuous on `U` and sends each `y ∈ U` to a point of `t y`. Then there exists a continuous map\\n`g : C(X, E)` such that `g x ∈ t x` for all `x`. See also\\n`exists_continuous_forall_mem_convex_of_local_const`. \"},\n {\"theorem\":\n  \"∀ {X : Type u_2} {E : Type u_1} [inst : TopologicalSpace X] [inst_1 : AddCommGroup E] [inst_2 : Module ℝ E]\\n  [inst_3 : NormalSpace X] [inst_4 : ParacompactSpace X] [inst_5 : TopologicalSpace E] [inst_6 : ContinuousAdd E]\\n  [inst_7 : ContinuousSMul ℝ E] {t : X → Set E},\\n  (∀ (x : X), Convex ℝ (t x)) → (∀ (x : X), ∃ c, ∀ᶠ (y : X) in nhds x, c ∈ t y) → ∃ g, ∀ (x : X), ↑g x ∈ t x\",\n  \"isProp\": true,\n  \"docString\":\n  \"Let `X` be a normal paracompact topological space (e.g., any extended metric space). Let `E` be\\na topological real vector space. Let `t : X → Set E` be a family of convex sets. Suppose that for\\neach point `x : X`, there exists a vector `c : E` that belongs to `t y` for all `y` in a\\nneighborhood of `x`. Then there exists a continuous map `g : C(X, E)` such that `g x ∈ t x` for all\\n`x`. See also `exists_continuous_forall_mem_convex_of_local`. \"},\n {\"theorem\":\n  \"∀ {α : Type u} {β : Type v} [inst : TopologicalSpace α] [inst_1 : TopologicalSpace β] [inst_2 : T2Space α] {s : Set β},\\n  Dense s → ∀ {f g : β → α}, Continuous f → Continuous g → Set.EqOn f g s → f = g\",\n  \"isProp\": true,\n  \"docString\":\n  \"If two continuous functions are equal on a dense set, then they are equal. \"},\n {\"theorem\":\n  \"∀ {X : Type u_1} {Y : Type u_2} [inst : TopologicalSpace X] [inst_1 : TopologicalSpace Y] [inst_2 : NormalSpace Y]\\n  (f : BoundedContinuousFunction X ℝ) (e : C(X, Y)),\\n  ClosedEmbedding ↑e → ∃ g, ‖g‖ ≤ ‖f‖ / 3 ∧ dist (BoundedContinuousFunction.compContinuous g e) f ≤ 2 / 3 * ‖f‖\",\n  \"isProp\": true,\n  \"docString\":\n  \"One step in the proof of the Tietze extension theorem. If `e : C(X, Y)` is a closed embedding\\nof a topological space into a normal topological space and `f : X →ᵇ ℝ` is a bounded continuous\\nfunction, then there exists a bounded continuous function `g : Y →ᵇ ℝ` of the norm `‖g‖ ≤ ‖f‖ / 3`\\nsuch that the distance between `g ∘ e` and `f` is at most `(2 / 3) * ‖f‖`. \"}]\n", "prompt_cons": "/-- Let `X` be a normal paracompact topological space (e.g., any extended metric space). Let `E` be\na topological real vector space. Let `t : X → Set E` be a family of convex sets. Suppose that for\neach point `x : X`, there exists a neighborhood `U ∈ 𝓝 X` and a function `g : X → E` that is\ncontinuous on `U` and sends each `y ∈ U` to a point of `t y`. Then there exists a continuous map\n`g : C(X, E)` such that `g x ∈ t x` for all `x`. See also\n`exists_continuous_forall_mem_convex_of_local_const`. -/\ntheorem ∀ {X : Type u_2} {E : Type u_1} [inst : TopologicalSpace X] [inst_1 : AddCommGroup E] [inst_2 : Module ℝ E]\n  [inst_3 : NormalSpace X] [inst_4 : ParacompactSpace X] [inst_5 : TopologicalSpace E] [inst_6 : ContinuousAdd E]\n  [inst_7 : ContinuousSMul ℝ E] {t : X → Set E},\n  (∀ (x : X), Convex ℝ (t x)) →\n    (∀ (x : X), ∃ U, U ∈ nhds x ∧ ∃ g, ContinuousOn g U ∧ ∀ (y : X), y ∈ U → g y ∈ t y) → ∃ g, ∀ (x : X), ↑g x ∈ t x :=\n\n/-- Let `X` be a normal paracompact topological space (e.g., any extended metric space). Let `E` be\na topological real vector space. Let `t : X → Set E` be a family of convex sets. Suppose that for\neach point `x : X`, there exists a vector `c : E` that belongs to `t y` for all `y` in a\nneighborhood of `x`. Then there exists a continuous map `g : C(X, E)` such that `g x ∈ t x` for all\n`x`. See also `exists_continuous_forall_mem_convex_of_local`. -/\ntheorem ∀ {X : Type u_2} {E : Type u_1} [inst : TopologicalSpace X] [inst_1 : AddCommGroup E] [inst_2 : Module ℝ E]\n  [inst_3 : NormalSpace X] [inst_4 : ParacompactSpace X] [inst_5 : TopologicalSpace E] [inst_6 : ContinuousAdd E]\n  [inst_7 : ContinuousSMul ℝ E] {t : X → Set E},\n  (∀ (x : X), Convex ℝ (t x)) → (∀ (x : X), ∃ c, ∀ᶠ (y : X) in nhds x, c ∈ t y) → ∃ g, ∀ (x : X), ↑g x ∈ t x :=\n\n/-- If two continuous functions are equal on a dense set, then they are equal. -/\ntheorem ∀ {α : Type u} {β : Type v} [inst : TopologicalSpace α] [inst_1 : TopologicalSpace β] [inst_2 : T2Space α] {s : Set β},\n  Dense s → ∀ {f g : β → α}, Continuous f → Continuous g → Set.EqOn f g s → f = g :=\n\n/-- One step in the proof of the Tietze extension theorem. If `e : C(X, Y)` is a closed embedding\nof a topological space into a normal topological space and `f : X →ᵇ ℝ` is a bounded continuous\nfunction, then there exists a bounded continuous function `g : Y →ᵇ ℝ` of the norm `‖g‖ ≤ ‖f‖ / 3`\nsuch that the distance between `g ∘ e` and `f` is at most `(2 / 3) * ‖f‖`. -/\ntheorem ∀ {X : Type u_1} {Y : Type u_2} [inst : TopologicalSpace X] [inst_1 : TopologicalSpace Y] [inst_2 : NormalSpace Y]\n  (f : BoundedContinuousFunction X ℝ) (e : C(X, Y)),\n  ClosedEmbedding ↑e → ∃ g, ‖g‖ ≤ ‖f‖ / 3 ∧ dist (BoundedContinuousFunction.compContinuous g e) f ≤ 2 / 3 * ‖f‖ :=\n\n/-- Let $f$ and $g$ be continuous mappings of a metric space $X$ into a metric space $Y$, and let $E$ be a dense subset of $X$. Prove that $f(E)$ is dense in $f(X)$. -/\ntheorem", "choices": ["forall {X : Type u_1} {Y : Type u_2} [inst : TopologicalSpace X] [inst_1 : TopologicalSpace Y] [inst_2 : MetricSpace Y]\n  {E : Set X} {f g : X → Y}, Continuous f → Continuous g → Dense E → Dense (f '' E) ", "forall {X : Type u_1} {Y : Type u_2} [inst : MetricSpace X] [inst_1 : MetricSpace Y] {E : Set X} {f g : X → Y},\n  Dense E → Continuous f → Continuous g → Dense (f '' E) ", "∀ {X : Type u_1} {Y : Type u_2} [inst : TopologicalSpace X] [inst_1 : TopologicalSpace Y] [inst_2 : MetricSpace X] [inst_3 : MetricSpace Y]\n  {f g : X → Y} {E : Set X}, Dense E → Continuous f → Continuous g → Dense (f '' E) ", "∀ {X : Type u_1} {Y : Type u_2} [inst : TopologicalSpace X] [inst_1 : TopologicalSpace Y]\n  [inst_2 : MetricSpace X] [inst_3 : MetricSpace Y] {E : Set X} {f g : X → Y},\n  Dense E → Continuous f → Continuous g → Dense (f '' E) ", "forall {X Y : Type} [inst : MetricSpace X] [inst_1 : MetricSpace Y] [inst_2 : TopologicalSpace Y] [inst_3 : T2Space Y] (E : Set X)\n  (f g : X → Y), Continuous f → Continuous g → Dense E → Dense (Set.Image f E) ", "∀ {X : Type u_1} {Y : Type u_2} [inst : TopologicalSpace X] [inst_1 : TopologicalSpace Y] [inst_2 : MetricSpace X] [inst_3 : MetricSpace Y]\n  {E : Set X} {f g : X → Y},\n  Continuous f → Continuous g → Dense E → Dense (Set.Image f E) ", "∀ {X : Type u_1} {Y : Type u_2} [inst : TopologicalSpace X] [inst_1 : TopologicalSpace Y] [inst_2 : MetricSpace X] [inst_3 : MetricSpace Y]\n  (f g : X → Y) (E : Set X), Dense E → Continuous f → Continuous g → Dense (f '' E) ", "∀ {X Y : Type*} [TopologicalSpace X] [TopologicalSpace Y] [MetricSpace X] [MetricSpace Y]\n  {f g : X → Y} {E : Set X}, Dense E → Continuous f → Continuous g → Dense (f '' E) ", "forall {X Y : Type*} [TopologicalSpace X] [MetricSpace X] [TopologicalSpace Y] [MetricSpace Y]\n  (f g : X → Y) (E : Set X), Dense E → Continuous f → Continuous g → Dense (Set.Image f E) ", "∀ {X : Type u_1} {Y : Type u_2} [inst : TopologicalSpace X] [inst_1 : TopologicalSpace Y] [inst_2 : T2Space X] [inst_3 : MetricSpace Y]\n  {E : Set X} (f g : C(X, Y)),\n  Dense E → Dense (f '' E) "]}
{"docString": "If $f$ is a real continuous function defined on a closed set $E \\subset \\mathbb{R}$, prove that there exist continuous real functions $g$ on $\\mathbb{R}$ such that $g(x)=f(x)$ for all $x \\in E$.", "prompts": "[{\"theorem\":\n  \"∀ {X : Type u_1} {Y : Type u_2} [inst : TopologicalSpace X] {m : MeasurableSpace X} [inst_1 : TopologicalSpace Y]\\n  [inst_2 : T2Space Y] {μ : MeasureTheory.Measure X} [inst_3 : MeasureTheory.Measure.IsOpenPosMeasure μ] {U : Set X}\\n  {f g : X → Y},\\n  f =ᶠ[MeasureTheory.Measure.ae (MeasureTheory.Measure.restrict μ U)] g →\\n    IsOpen U → ContinuousOn f U → ContinuousOn g U → Set.EqOn f g U\",\n  \"isProp\": true,\n  \"docString\":\n  \"If two functions are a.e. equal on an open set and are continuous on this set, then they are\\nequal on this set. \"},\n {\"theorem\":\n  \"∀ {E : Type u} [inst : NormedAddCommGroup E] [inst_1 : NormedSpace ℂ E] [inst_2 : CompleteSpace E] {f : ℂ → E},\\n  Differentiable ℂ f → ∀ {n : ℕ∞}, ContDiff ℂ n f\",\n  \"isProp\": true,\n  \"docString\":\n  \"A complex differentiable function `f : ℂ → E` is continuously differentiable at every point. \"},\n {\"theorem\":\n  \"∀ {α : Type u} {β : Type v} [inst : UniformSpace β] {f : α → β} {s : Set α} [inst_1 : TopologicalSpace α],\\n  (∀ (u : Set (β × β)), u ∈ uniformity β → ∃ F, ContinuousOn F s ∧ ∀ (y : α), y ∈ s → (f y, F y) ∈ u) → ContinuousOn f s\",\n  \"isProp\": true,\n  \"docString\":\n  \"A function which can be uniformly approximated by functions which are continuous on a set\\nis continuous on this set. \"},\n {\"theorem\":\n  \"∀ {α : Type u} {β : Type v} [inst : TopologicalSpace α] [inst_1 : Preorder α] [t : OrderClosedTopology α]\\n  [inst_2 : TopologicalSpace β] {f g : β → α} {s : Set β},\\n  IsClosed s → ContinuousOn f s → ContinuousOn g s → IsClosed {x | x ∈ s ∧ f x ≤ g x}\",\n  \"isProp\": true,\n  \"docString\":\n  \"If `s` is a closed set and two functions `f` and `g` are continuous on `s`,\\nthen the set `{x ∈ s | f x ≤ g x}` is a closed set. \"}]\n", "prompt_cons": "/-- If two functions are a.e. equal on an open set and are continuous on this set, then they are\nequal on this set. -/\ntheorem ∀ {X : Type u_1} {Y : Type u_2} [inst : TopologicalSpace X] {m : MeasurableSpace X} [inst_1 : TopologicalSpace Y]\n  [inst_2 : T2Space Y] {μ : MeasureTheory.Measure X} [inst_3 : MeasureTheory.Measure.IsOpenPosMeasure μ] {U : Set X}\n  {f g : X → Y},\n  f =ᶠ[MeasureTheory.Measure.ae (MeasureTheory.Measure.restrict μ U)] g →\n    IsOpen U → ContinuousOn f U → ContinuousOn g U → Set.EqOn f g U :=\n\n/-- A complex differentiable function `f : ℂ → E` is continuously differentiable at every point. -/\ntheorem ∀ {E : Type u} [inst : NormedAddCommGroup E] [inst_1 : NormedSpace ℂ E] [inst_2 : CompleteSpace E] {f : ℂ → E},\n  Differentiable ℂ f → ∀ {n : ℕ∞}, ContDiff ℂ n f :=\n\n/-- A function which can be uniformly approximated by functions which are continuous on a set\nis continuous on this set. -/\ntheorem ∀ {α : Type u} {β : Type v} [inst : UniformSpace β] {f : α → β} {s : Set α} [inst_1 : TopologicalSpace α],\n  (∀ (u : Set (β × β)), u ∈ uniformity β → ∃ F, ContinuousOn F s ∧ ∀ (y : α), y ∈ s → (f y, F y) ∈ u) → ContinuousOn f s :=\n\n/-- If `s` is a closed set and two functions `f` and `g` are continuous on `s`,\nthen the set `{x ∈ s | f x ≤ g x}` is a closed set. -/\ntheorem ∀ {α : Type u} {β : Type v} [inst : TopologicalSpace α] [inst_1 : Preorder α] [t : OrderClosedTopology α]\n  [inst_2 : TopologicalSpace β] {f g : β → α} {s : Set β},\n  IsClosed s → ContinuousOn f s → ContinuousOn g s → IsClosed {x | x ∈ s ∧ f x ≤ g x} :=\n\n/-- If $f$ is a real continuous function defined on a closed set $E \\subset \\mathbb{R}$, prove that there exist continuous real functions $g$ on $\\mathbb{R}$ such that $g(x)=f(x)$ for all $x \\in E$. -/\ntheorem", "choices": ["∀ {E : Set ℝ} {f : ℝ → ℝ},\n  IsClosed E → ContinuousOn f E → ∃ g, Continuous g ∧ Set.EqOn f g E ", "∀ {E : Set ℝ} [inst : TopologicalSpace ℝ] {f : ℝ → ℝ},\n  IsClosed E → ContinuousOn f E → ∃ g : ℝ → ℝ, Continuous g ∧ ∀ (x : ℝ), x ∈ E → g x = f x ", "∀ {E : Set ℝ} {f : ℝ → ℝ} [inst : TopologicalSpace ℝ],\n  IsClosed E → ContinuousOn f E → ∃ g, Continuous g ∧ Set.EqOn g f E ", "∀ {X : Type u} [inst : TopologicalSpace X] [inst_1 : LinearOrder X] [inst_2 : OrderTopology X] [inst_3 : DenselyOrdered X]\n  {f : X → ℝ} {E : Set X},\n  IsClosed E → ContinuousOn f E → ∃ (g : X → ℝ), Continuous g ∧ ∀ (x : X), x ∈ E → g x = f x ", "∀ {E : Set ℝ} {f : ℝ → ℝ},\n  IsClosed E → ContinuousOn f E → ∃ g : ℝ → ℝ, Continuous g ∧ ∀ (x : ℝ), x ∈ E → g x = f x ", "∀ {E : Set ℝ} {f : ℝ → ℝ},\n  IsClosed E → ContinuousOn f E → ∃ g : ℝ → ℝ, Continuous g ∧ Set.EqOn g f E ", "∀ {E : Set ℝ} {f : ℝ → ℝ},\n  IsClosed E → ContinuousOn f E → ∃ g : ℝ → ℝ, Continuous g ∧ Set.EqOn f g E ", "∀ {E : Set ℝ} {f : ℝ → ℝ}, IsClosed E → ContinuousOn f E → ∃ g : ℝ → ℝ, Continuous g ∧ Set.EqOn f g E ", "∀ {E : Set ℝ} {f : ℝ → ℝ},\n  IsClosed E → ContinuousOn f E → ∃ g : ℝ → ℝ, Continuous g ∧ Set.EqOn f g E ", "∀ {E : Set ℝ} {f : ℝ → ℝ},\n  IsClosed E → ContinuousOn f E → ∃ g : ℝ → ℝ, Continuous g ∧ Set.EqOn f g E "]}
{"docString": "If $f$ is defined on $E$, the graph of $f$ is the set of points $(x, f(x))$, for $x \\in E$. In particular, if $E$ is a set of real numbers, and $f$ is real-valued, the graph of $f$ is a subset of the plane. Suppose $E$ is compact, and prove that $f$ is continuous on $E$ if and only if its graph is compact.", "prompts": "[{\"theorem\":\n  \"∀ {E : Type u} [inst : NormedAddCommGroup E] [inst_1 : NormedSpace ℂ E] [inst_2 : CompleteSpace E] {f : ℂ → E},\\n  Differentiable ℂ f → ∀ {n : ℕ∞}, ContDiff ℂ n f\",\n  \"isProp\": true,\n  \"docString\":\n  \"A complex differentiable function `f : ℂ → E` is continuously differentiable at every point. \"},\n {\"theorem\":\n  \"∀ {E : Type u} [inst : NormedAddCommGroup E] [inst_1 : NormedSpace ℂ E] [inst_2 : CompleteSpace E] {n : ℕ∞} {s : Set ℂ}\\n  {f : ℂ → E}, DifferentiableOn ℂ f s → IsOpen s → ContDiffOn ℂ n f s\",\n  \"isProp\": true,\n  \"docString\":\n  \"If `f : ℂ → E` is complex differentiable on some open set `s`, then it is continuously\\ndifferentiable on `s`. \"},\n {\"theorem\":\n  \"∀ {E : Type u} [inst : NormedAddCommGroup E] [inst_1 : NormedSpace ℂ E] [inst_2 : CompleteSpace E] {R : NNReal} {c : ℂ}\\n  {f : ℂ → E} {s : Set ℂ},\\n  Set.Countable s →\\n    ContinuousOn f (Metric.closedBall c ↑R) →\\n      (∀ (z : ℂ), z ∈ Metric.ball c ↑R \\\\ s → DifferentiableAt ℂ f z) →\\n        0 < R → HasFPowerSeriesOnBall f (cauchyPowerSeries f c ↑R) c ↑R\",\n  \"isProp\": true,\n  \"docString\":\n  \"If `f : ℂ → E` is continuous on a closed ball of positive radius and is differentiable at all\\nbut countably many points of the corresponding open ball, then it is analytic on the open ball with\\ncoefficients of the power series given by Cauchy integral formulas. \"},\n {\"theorem\":\n  \"∀ {𝕜 : Type u_3} [inst : NontriviallyNormedField 𝕜] {E : Type u_1} [inst_1 : NormedAddCommGroup E]\\n  [inst_2 : NormedSpace 𝕜 E] {F : Type u_2} [inst_3 : NormedAddCommGroup F] [inst_4 : NormedSpace 𝕜 F]\\n  [inst_5 : CompleteSpace F] [inst_6 : CompleteSpace E] (g : E →ₗ[𝕜] F),\\n  (∀ (u : ℕ → E) (x : E) (y : F),\\n      Filter.Tendsto u Filter.atTop (nhds x) → Filter.Tendsto (↑g ∘ u) Filter.atTop (nhds y) → y = ↑g x) →\\n    Continuous ↑g\",\n  \"isProp\": true,\n  \"docString\":\n  \"A useful form of the **closed graph theorem** : let `f` be a linear map between two Banach\\nspaces. To show that `f` is continuous, it suffices to show that for any convergent sequence\\n`uₙ ⟶ x`, if `f(uₙ) ⟶ y` then `y = f(x)`. \"}]\n", "prompt_cons": "/-- A complex differentiable function `f : ℂ → E` is continuously differentiable at every point. -/\ntheorem ∀ {E : Type u} [inst : NormedAddCommGroup E] [inst_1 : NormedSpace ℂ E] [inst_2 : CompleteSpace E] {f : ℂ → E},\n  Differentiable ℂ f → ∀ {n : ℕ∞}, ContDiff ℂ n f :=\n\n/-- If `f : ℂ → E` is complex differentiable on some open set `s`, then it is continuously\ndifferentiable on `s`. -/\ntheorem ∀ {E : Type u} [inst : NormedAddCommGroup E] [inst_1 : NormedSpace ℂ E] [inst_2 : CompleteSpace E] {n : ℕ∞} {s : Set ℂ}\n  {f : ℂ → E}, DifferentiableOn ℂ f s → IsOpen s → ContDiffOn ℂ n f s :=\n\n/-- If `f : ℂ → E` is continuous on a closed ball of positive radius and is differentiable at all\nbut countably many points of the corresponding open ball, then it is analytic on the open ball with\ncoefficients of the power series given by Cauchy integral formulas. -/\ntheorem ∀ {E : Type u} [inst : NormedAddCommGroup E] [inst_1 : NormedSpace ℂ E] [inst_2 : CompleteSpace E] {R : NNReal} {c : ℂ}\n  {f : ℂ → E} {s : Set ℂ},\n  Set.Countable s →\n    ContinuousOn f (Metric.closedBall c ↑R) →\n      (∀ (z : ℂ), z ∈ Metric.ball c ↑R \\ s → DifferentiableAt ℂ f z) →\n        0 < R → HasFPowerSeriesOnBall f (cauchyPowerSeries f c ↑R) c ↑R :=\n\n/-- A useful form of the **closed graph theorem** : let `f` be a linear map between two Banach\nspaces. To show that `f` is continuous, it suffices to show that for any convergent sequence\n`uₙ ⟶ x`, if `f(uₙ) ⟶ y` then `y = f(x)`. -/\ntheorem ∀ {𝕜 : Type u_3} [inst : NontriviallyNormedField 𝕜] {E : Type u_1} [inst_1 : NormedAddCommGroup E]\n  [inst_2 : NormedSpace 𝕜 E] {F : Type u_2} [inst_3 : NormedAddCommGroup F] [inst_4 : NormedSpace 𝕜 F]\n  [inst_5 : CompleteSpace F] [inst_6 : CompleteSpace E] (g : E →ₗ[𝕜] F),\n  (∀ (u : ℕ → E) (x : E) (y : F),\n      Filter.Tendsto u Filter.atTop (nhds x) → Filter.Tendsto (↑g ∘ u) Filter.atTop (nhds y) → y = ↑g x) →\n    Continuous ↑g :=\n\n/-- If $f$ is defined on $E$, the graph of $f$ is the set of points $(x, f(x))$, for $x \\in E$. In particular, if $E$ is a set of real numbers, and $f$ is real-valued, the graph of $f$ is a subset of the plane. Suppose $E$ is compact, and prove that $f$ is continuous on $E$ if and only if its graph is compact. -/\ntheorem", "choices": ["∀ {α : Type u} {β : Type v} [inst_1 : TopologicalSpace α] [inst_2 : TopologicalSpace β] [inst_3 : T2Space β]\n  {E : Set α} {f : α → β},\n  IsCompact E →\n  (Compact (SetOf (λ p : α × β, p.2 = f p.1 ∧ p.1 ∈ E)) ↔ ContinuousOn f E) ", "∀ {α : Type u} {β : Type v} [inst : TopologicalSpace α] [inst_1 : TopologicalSpace β] [inst_2 : CompactSpace α]\n  (f : α → β), Continuous f ↔ Compact (Set.Graph f) ", "∀ {α : Type u} {β : Type v} [inst : TopologicalSpace α] [inst_1 : TopologicalSpace β] {E : Set α} {f : α → β},\n  IsCompact E → (IsCompact (Set.Graph f E) ↔ ContinuousOn f E) ", "∀ {α : Type u} {β : Type v} [inst : TopologicalSpace α] [inst_1 : TopologicalSpace β] [inst_2 : T2Space β] [inst_3 : CompactSpace α]\n  (f : α → β), Compact (Set.Graph f) ↔ Continuous f ", "∀ {𝕜 : Type u_3} [inst : NontriviallyNormedField 𝕜] {E : Type u_1} [inst_1 : NormedAddCommGroup E]\n  [inst_2 : NormedSpace 𝕜 E] {F : Type u_2} [inst_3 : NormedAddCommGroup F] [inst_4 : NormedSpace 𝕜 F]\n  [inst_5 : CompleteSpace F] [inst_6 : CompleteSpace E] (f : E → F) (s : Set E),\n  IsCompact s →\n    (ContinuousOn f s ↔ IsCompact (SetOf (λ (x : E × F), x.2 = f x.1 ∧ x.1 ∈ s))) ", "∀ {α : Type u} {E : Type v} [inst : TopologicalSpace α] [inst_1 : TopologicalSpace E] [inst_2 : T2Space E]\n  [inst_3 : CompactSpace α] [inst_4 : T2Space α] (f : α → E),\n  Continuous f ↔ Compact (Graph f α E) ", "∀ {E : Type u} [inst : TopologicalSpace E] [inst_1 : TopologicalSpace ℝ] {f : E → ℝ} {s: Set E},\n  Compact s ↔ ContinuousOn f s → Compact (Set.Graph f s) ", "∀ {α : Type u} {β : Type v} [inst : TopologicalSpace α] [inst_1 : TopologicalSpace β] [inst_2 : LinearOrder α] [inst_3 : OrderTopology α]\n  [inst_4 : LinearOrder β] [inst_5 : OrderTopology β] {s : Set α} {f : α → β},\n  IsCompact s → (ContinuousOn f s ↔ IsCompact (SetOf (λ (x : α × β), x.2 = f x.1 ∧ x.1 ∈ s))) ", "∀ {α : Type u} {β : Type v} [inst : TopologicalSpace α] [inst_1 : TopologicalSpace β] [inst_2 : T2Space β]\n  [inst_3 : CompactSpace α] {f : α → β},\n  Compact (SetOf (λ (x : α × β), x.snd = f x.fst)) ↔ Continuous f ", "∀ {𝕜 : Type u_3} [inst : NontriviallyNormedField 𝕜] {E : Type u_1} [inst_1 : NormedAddCommGroup E]\n  [inst_2 : NormedSpace 𝕜 E] {F : Type u_2} [inst_3 : NormedAddCommGroup F] [inst_4 : NormedSpace 𝕜 F]\n  [inst_5 : CompleteSpace F] [inst_6 : CompleteSpace E] {f : E → F} {s : Set E},\n  IsCompact s →\n    (ContinuousOn f s ↔ IsCompact (Prod.fst ⁻¹' s ∩ (Prod.snd ⁻¹' Closure (f '' s)))) "]}
{"docString": "Let $E$ be a bounded set in $R^{1}$. Prove that there exists a real function $f$ such that $f$ is uniformly continuous and is not bounded on $E$.", "prompts": "[{\"theorem\":\n  \"∀ {α : Type u_1} {β : Type u_2} [inst : LinearOrder α] [inst_1 : TopologicalSpace α] [inst_2 : OrderClosedTopology α]\\n  [inst_3 : TopologicalSpace β] [inst_4 : Nonempty α] {f : β → α} {K : Set β},\\n  IsCompact K → ContinuousOn f K → BddAbove (f '' K)\",\n  \"isProp\": true,\n  \"docString\": \"A continuous function is bounded above on a compact set. \"},\n {\"theorem\":\n  \"∀ {E : Type u} [inst : NormedAddCommGroup E] [inst_1 : NormedSpace ℂ E] [inst_2 : CompleteSpace E] {f : ℂ → E},\\n  Differentiable ℂ f → ∀ {n : ℕ∞}, ContDiff ℂ n f\",\n  \"isProp\": true,\n  \"docString\":\n  \"A complex differentiable function `f : ℂ → E` is continuously differentiable at every point. \"},\n {\"theorem\":\n  \"∀ {X : Type u_1} [inst : TopologicalSpace X] (Λ : BoundedContinuousFunction X NNReal →ₗ[NNReal] NNReal)\\n  (K : TopologicalSpace.Compacts X), Set.Nonempty (↑Λ '' {f | ∀ (x : X), x ∈ K → 1 ≤ ↑f x})\",\n  \"isProp\": true,\n  \"docString\":\n  \"For any compact subset `K ⊆ X`, there exist some bounded continuous nonnegative\\nfunctions f on X such that `f ≥ 1` on K. \"},\n {\"theorem\":\n  \"∀ {α : Type u_1} {β : Type u_2} [inst : LinearOrder α] [inst_1 : TopologicalSpace α] [inst_2 : OrderClosedTopology α]\\n  [inst_3 : TopologicalSpace β] [inst_4 : Nonempty α] {f : β → α} {K : Set β},\\n  IsCompact K → ContinuousOn f K → BddBelow (f '' K)\",\n  \"isProp\": true,\n  \"docString\": \"A continuous function is bounded below on a compact set. \"}]\n", "prompt_cons": "/-- A continuous function is bounded above on a compact set. -/\ntheorem ∀ {α : Type u_1} {β : Type u_2} [inst : LinearOrder α] [inst_1 : TopologicalSpace α] [inst_2 : OrderClosedTopology α]\n  [inst_3 : TopologicalSpace β] [inst_4 : Nonempty α] {f : β → α} {K : Set β},\n  IsCompact K → ContinuousOn f K → BddAbove (f '' K) :=\n\n/-- A complex differentiable function `f : ℂ → E` is continuously differentiable at every point. -/\ntheorem ∀ {E : Type u} [inst : NormedAddCommGroup E] [inst_1 : NormedSpace ℂ E] [inst_2 : CompleteSpace E] {f : ℂ → E},\n  Differentiable ℂ f → ∀ {n : ℕ∞}, ContDiff ℂ n f :=\n\n/-- For any compact subset `K ⊆ X`, there exist some bounded continuous nonnegative\nfunctions f on X such that `f ≥ 1` on K. -/\ntheorem ∀ {X : Type u_1} [inst : TopologicalSpace X] (Λ : BoundedContinuousFunction X NNReal →ₗ[NNReal] NNReal)\n  (K : TopologicalSpace.Compacts X), Set.Nonempty (↑Λ '' {f | ∀ (x : X), x ∈ K → 1 ≤ ↑f x}) :=\n\n/-- A continuous function is bounded below on a compact set. -/\ntheorem ∀ {α : Type u_1} {β : Type u_2} [inst : LinearOrder α] [inst_1 : TopologicalSpace α] [inst_2 : OrderClosedTopology α]\n  [inst_3 : TopologicalSpace β] [inst_4 : Nonempty α] {f : β → α} {K : Set β},\n  IsCompact K → ContinuousOn f K → BddBelow (f '' K) :=\n\n/-- Let $E$ be a bounded set in $R^{1}$. Prove that there exists a real function $f$ such that $f$ is uniformly continuous and is not bounded on $E$. -/\ntheorem", "choices": ["∀ {E : Set ℝ} [inst : TopologicalSpace ℝ] [inst_1 : LinearOrder ℝ] [inst_2 : OrderTopology ℝ] [inst_3 : Nonempty ℝ],\n  Bounded E → ∃ (f : ℝ → ℝ), UniformContinuous f ∧ IsUnboundedOn f E ", "∀ {α : Type u_1} [inst : LinearOrder α] [inst_1 : TopologicalSpace α] [inst_2 : OrderClosedTopology α]\n  [inst_3 : Nonempty α] {E : Set α},\n  Bdd E → ∃ (f : α → ℝ), UniformContinuous f ∧ ¬ Bdd (f '' E) ", "∀ {E : Set ℝ} [inst : MetricSpace ℝ] [inst_1 : Nonempty E] [inst_2 : Bounded E],\n  ∃ (f : ℝ → ℝ), UniformContinuous f ∧ ¬(BddAbove (f '' E) ∧ BddBelow (f '' E)) ", "∀ {E : Set ℝ} (hE : Bounded E), ∃ (f : ℝ → ℝ) (hf : UniformContinuous f), ¬ BddAbove (f '' E) ", "∀ {E : Set ℝ} [inst : TopologicalSpace ℝ] [inst_1 : MetricSpace ℝ] [inst_2 : Nonempty ℝ],\n  Bounded E → ∃ (f : ℝ → ℝ), UniformContinuous f ∧ ¬BddAbove (f '' E) ", "∀ {E : Type u_1} [inst : LinearOrder E] [inst_1 : TopologicalSpace E] [inst_2 : OrderClosedTopology E] [inst_3 : BddAbove E],\n  ∃ (f : E → ℝ), UniformContinuous f ∧ ¬ BddAbove (f '' E) ", "∀ {E : Set ℝ} [inst : MetricSpace ℝ] [inst_1 : Nonempty E] [inst_2 : Bounded E],\n  ∃ (f : ℝ → ℝ), UniformContinuous f ∧ (∀ (K : Set ℝ), IsCompact K → Not (BddAbove (f '' E))) ", "∀ {E : Set ℝ} [inst : LinearOrder ℝ] [inst_1 : TopologicalSpace ℝ] [inst_2 : OrderClosedTopology ℝ],\n  Bdd E → ∃ (f : ℝ → ℝ), UniformContinuous f ∧ ∃ K : Set ℝ, IsCompact K ∧ ContinuousOn f K ∧ ¬Bdd (f '' K) ", "∀ {E : Type u_1} [inst : TopologicalSpace ℝ] [inst_1 : PseudoMetricSpace ℝ] (K : TopologicalSpace.Compacts ℝ),\n  Bounded E → ∃ (f : E → ℝ), UniformContinuous f ∧ ¬ BddAbove (f '' E) ", "∀ {E : Type u_1} [inst : MetricSpace E] [inst_1 : Nonempty E] [inst_2 : Bounded E],\n  ∃ (f : E → ℝ), UniformlyContinuous f ∧ ¬ BddAbove (f '' E) ∧ ¬ BddBelow (f '' E) "]}
{"docString": "A uniformly continuous function of a uniformly continuous function is uniformly continuous.", "prompts": "[{\"theorem\":\n  \"∀ {α : Type u} {β : Type v} {ι : Type x} [inst : UniformSpace β] {F : ι → α → β} {f : α → β} {p : Filter ι}\\n  [inst_1 : TopologicalSpace α],\\n  TendstoUniformly F f p → (∀ᶠ (n : ι) in p, Continuous (F n)) → ∀ [inst_2 : Filter.NeBot p], Continuous f\",\n  \"isProp\": true,\n  \"docString\": \"A uniform limit of continuous functions is continuous. \"},\n {\"theorem\":\n  \"∀ {ι : Type u_1} {α : Type u_2} {β : Type u_3} [inst : UniformSpace α] [inst_1 : UniformSpace β] {F : ι → β → α},\\n  UniformEquicontinuous F → ∀ (i : ι), UniformContinuous (F i)\",\n  \"isProp\": true,\n  \"docString\":\n  \"Each function of a uniformly equicontinuous family is uniformly continuous. \"},\n {\"theorem\":\n  \"∀ {α : Type u} {β : Type v} [inst : UniformSpace β] {f : α → β} [inst_1 : TopologicalSpace α],\\n  (∀ (u : Set (β × β)), u ∈ uniformity β → ∃ F, Continuous F ∧ ∀ (y : α), (f y, F y) ∈ u) → Continuous f\",\n  \"isProp\": true,\n  \"docString\":\n  \"A function which can be uniformly approximated by continuous functions is continuous. \"},\n {\"theorem\":\n  \"∀ {α : Type u} {β : Type v} {ι : Type x} [inst : UniformSpace β] {F : ι → α → β} {f : α → β} {p : Filter ι}\\n  [inst_1 : TopologicalSpace α],\\n  TendstoLocallyUniformly F f p → (∀ᶠ (n : ι) in p, Continuous (F n)) → ∀ [inst_2 : Filter.NeBot p], Continuous f\",\n  \"isProp\": true,\n  \"docString\":\n  \"A locally uniform limit of continuous functions is continuous. \"}]\n", "prompt_cons": "/-- A uniform limit of continuous functions is continuous. -/\ntheorem ∀ {α : Type u} {β : Type v} {ι : Type x} [inst : UniformSpace β] {F : ι → α → β} {f : α → β} {p : Filter ι}\n  [inst_1 : TopologicalSpace α],\n  TendstoUniformly F f p → (∀ᶠ (n : ι) in p, Continuous (F n)) → ∀ [inst_2 : Filter.NeBot p], Continuous f :=\n\n/-- Each function of a uniformly equicontinuous family is uniformly continuous. -/\ntheorem ∀ {ι : Type u_1} {α : Type u_2} {β : Type u_3} [inst : UniformSpace α] [inst_1 : UniformSpace β] {F : ι → β → α},\n  UniformEquicontinuous F → ∀ (i : ι), UniformContinuous (F i) :=\n\n/-- A function which can be uniformly approximated by continuous functions is continuous. -/\ntheorem ∀ {α : Type u} {β : Type v} [inst : UniformSpace β] {f : α → β} [inst_1 : TopologicalSpace α],\n  (∀ (u : Set (β × β)), u ∈ uniformity β → ∃ F, Continuous F ∧ ∀ (y : α), (f y, F y) ∈ u) → Continuous f :=\n\n/-- A locally uniform limit of continuous functions is continuous. -/\ntheorem ∀ {α : Type u} {β : Type v} {ι : Type x} [inst : UniformSpace β] {F : ι → α → β} {f : α → β} {p : Filter ι}\n  [inst_1 : TopologicalSpace α],\n  TendstoLocallyUniformly F f p → (∀ᶠ (n : ι) in p, Continuous (F n)) → ∀ [inst_2 : Filter.NeBot p], Continuous f :=\n\n/-- A uniformly continuous function of a uniformly continuous function is uniformly continuous. -/\ntheorem", "choices": ["∀ {α : Type u} {β : Type v} {γ : Type w} [inst : UniformSpace α] [inst_1 : UniformSpace β] [inst_2 : UniformSpace γ]\n  {f : α → β} {g : β → γ},\n  UniformContinuous f → UniformContinuous g → UniformContinuous (g ∘ f) ", "∀ {α : Type u} {β : Type v} {γ : Type w} [inst : UniformSpace α] [inst_1 : UniformSpace β] [inst_2 : UniformSpace γ]\n  {f : α → β} {g : β → γ},\n  UniformContinuous f → UniformContinuous g → UniformContinuous (g ∘ f) ", "∀ {α : Type u} {β : Type v} {γ : Type w} [inst : UniformSpace α] [inst_1 : UniformSpace β] [inst_2 : UniformSpace γ] {f : α → β} {g : β → γ},\n  UniformContinuous f → UniformContinuous g → UniformContinuous (g ∘ f) ", "∀ {α : Type u_1} {β : Type u_2} {γ : Type u_3} [inst : UniformSpace α] [inst_1 : UniformSpace β] [inst_2 : UniformSpace γ]\n  {f : α → β} {g : β → γ},\n  UniformContinuous f → UniformContinuous g → UniformContinuous (g ∘ f) ", "∀ {α : Type u_1} {β : Type u_2} {γ : Type u_3} [inst : UniformSpace α] [inst_1 : UniformSpace β] [inst_2 : UniformSpace γ]\n  {f : α → β} {g : β → γ}, UniformContinuous f → UniformContinuous g → UniformContinuous (g ∘ f) ", "∀ {α : Type u} {β : Type v} {γ : Type w} [inst : UniformSpace α] [inst_1 : UniformSpace β] [inst_2 : UniformSpace γ]\n  {f : α → β} {g : β → γ},\n  UniformContinuous f → UniformContinuous g → UniformContinuous (g ∘ f) ", "∀ {α : Type u} {β : Type v} {γ : Type w} [inst : UniformSpace α] [inst_1 : UniformSpace β] [inst_2 : UniformSpace γ]\n  {f : β → α} {g : γ → β},\n  UniformContinuous f → UniformContinuous g → UniformContinuous (f ∘ g) ", "∀ {α : Type u_1} {β : Type u_2} {γ : Type u_3} [inst : UniformSpace α] [inst_1 : UniformSpace β] [inst_2 : UniformSpace γ]\n  {f : α → β} {g : β → γ},\n  UniformContinuous f → UniformContinuous g → UniformContinuous (g ∘ f) ", "∀ {α : Type u} {β : Type v} {γ : Type w} [inst : UniformSpace α] [inst_1 : UniformSpace β] [inst_2 : UniformSpace γ]\n  {f : α → β} {g : β → γ},\n  UniformContinuous f → UniformContinuous g → UniformContinuous (g ∘ f) ", "∀ {α : Type u_1} {β : Type u_2} {γ : Type u_3} [inst : UniformSpace α] [inst_1 : UniformSpace β] [inst_2 : UniformSpace γ] {f : α → β} {g : β → γ},\n  UniformContinuous f → UniformContinuous g → UniformContinuous (g ∘ f) "]}
{"docString": "Suppose $f$ is a real function with domain $R^{1}$ which has the intermediate value property: if $f(a)<c<f(b)$, then $f(x)=c$ for some $x$ between $a$ and $b$. Suppose also, for every rational $r$, that the set of all $x$ with $f(x)=r$ is closed. Prove that $f$ is continuous.", "prompts": "[{\"theorem\":\n  \"∀ {α : Type u_1} {β : Type u_2} [inst : LinearOrder α] [inst_1 : TopologicalSpace α] [inst_2 : OrderClosedTopology α]\\n  [inst_3 : TopologicalSpace β] [inst_4 : Nonempty α] {f : β → α} {K : Set β},\\n  IsCompact K → ContinuousOn f K → BddBelow (f '' K)\",\n  \"isProp\": true,\n  \"docString\": \"A continuous function is bounded below on a compact set. \"},\n {\"theorem\":\n  \"∀ (f : ℝ → ℝ) {a b : ℝ},\\n  a < b → ContinuousOn f (Set.Icc a b) → f a = f b → ∃ c, c ∈ Set.Ioo a b ∧ IsExtrOn f (Set.Icc a b) c\",\n  \"isProp\": true,\n  \"docString\":\n  \"A continuous function on a closed interval with `f a = f b` takes either its maximum\\nor its minimum value at a point in the interior of the interval. \"},\n {\"theorem\":\n  \"∀ (f : ℝ → ℝ) {a b : ℝ}, a < b → ContinuousOn f (Set.Icc a b) → f a = f b → ∃ c, c ∈ Set.Ioo a b ∧ IsLocalExtr f c\",\n  \"isProp\": true,\n  \"docString\":\n  \"A continuous function on a closed interval with `f a = f b` has a local extremum at some\\npoint of the corresponding open interval. \"},\n {\"theorem\":\n  \"∀ {α : Type u_1} {β : Type u_2} [inst : LinearOrder α] [inst_1 : TopologicalSpace α] [inst_2 : OrderClosedTopology α]\\n  [inst_3 : TopologicalSpace β] [inst_4 : Nonempty α] {f : β → α} {K : Set β},\\n  IsCompact K → ContinuousOn f K → BddAbove (f '' K)\",\n  \"isProp\": true,\n  \"docString\": \"A continuous function is bounded above on a compact set. \"}]\n", "prompt_cons": "/-- A continuous function is bounded below on a compact set. -/\ntheorem ∀ {α : Type u_1} {β : Type u_2} [inst : LinearOrder α] [inst_1 : TopologicalSpace α] [inst_2 : OrderClosedTopology α]\n  [inst_3 : TopologicalSpace β] [inst_4 : Nonempty α] {f : β → α} {K : Set β},\n  IsCompact K → ContinuousOn f K → BddBelow (f '' K) :=\n\n/-- A continuous function on a closed interval with `f a = f b` takes either its maximum\nor its minimum value at a point in the interior of the interval. -/\ntheorem ∀ (f : ℝ → ℝ) {a b : ℝ},\n  a < b → ContinuousOn f (Set.Icc a b) → f a = f b → ∃ c, c ∈ Set.Ioo a b ∧ IsExtrOn f (Set.Icc a b) c :=\n\n/-- A continuous function on a closed interval with `f a = f b` has a local extremum at some\npoint of the corresponding open interval. -/\ntheorem ∀ (f : ℝ → ℝ) {a b : ℝ}, a < b → ContinuousOn f (Set.Icc a b) → f a = f b → ∃ c, c ∈ Set.Ioo a b ∧ IsLocalExtr f c :=\n\n/-- A continuous function is bounded above on a compact set. -/\ntheorem ∀ {α : Type u_1} {β : Type u_2} [inst : LinearOrder α] [inst_1 : TopologicalSpace α] [inst_2 : OrderClosedTopology α]\n  [inst_3 : TopologicalSpace β] [inst_4 : Nonempty α] {f : β → α} {K : Set β},\n  IsCompact K → ContinuousOn f K → BddAbove (f '' K) :=\n\n/-- Suppose $f$ is a real function with domain $R^{1}$ which has the intermediate value property: if $f(a)<c<f(b)$, then $f(x)=c$ for some $x$ between $a$ and $b$. Suppose also, for every rational $r$, that the set of all $x$ with $f(x)=r$ is closed. Prove that $f$ is continuous. -/\ntheorem", "choices": ["∀ (f : ℝ → ℝ), IsIntermediateValueUniv f → (∀ r : ℚ, IsClosed (f ⁻¹' {r})) → Continuous f ", "∀ (f : ℝ → ℝ), (∀ a b c, f a < c → c < f b → ∃ x, a < x ∧ x < b ∧ f x = c) →\n  (∀ r : ℚ, IsClosed {x | f x = r}) → Continuous f ", "∀ (f : ℝ → ℝ),\n  (∀ a b c, f a < c → c < f b → ∃ x ∈ Set.Icc a b, f x = c) →\n  (∀ r : ℚ, IsClosed (SetOf (λ x, f x = r))) →\n  Continuous f ", "∀ {f : ℝ → ℝ},\n  (∀ a b c, f a < c → c < f b → ∃ x, a < x ∧ x < b ∧ f x = c) →\n  (∀ r, IsClosed (SetOf (λ x, f x = r))) →\n  Continuous f ", "∀ (f : ℝ → ℝ),\n  (∀ a b c, f a < c → c < f b → ∃ x, a < x ∧ x < b ∧ f x = c) →\n  (∀ r, IsClosed (SetOf (λ x, f x = r))) →\n  Continuous f ", "∀ (f : ℝ → ℝ), IntermediateValueUniv f → (∀ q : ℚ, IsClosed (f⁻¹' {q})) → Continuous f ", "∀ (f : ℝ → ℝ),\n  (∀ a b c : ℝ, a < b → f a < c → c < f b → ∃ x, a < x ∧ x < b ∧ f x = c) →\n  (∀ r : ℚ, IsClosed (SetOf (λ x, f x = r))) →\n  Continuous f ", "forall {f : ℝ → ℝ} (hivp : ∀ a b c, a < b → f a < c → c < f b → ∃ x, a < x ∧ x < b ∧ f x = c)\n  (hclosed : ∀ q : ℚ, IsClosed {x | f x = q}),\n  Continuous f ", "∀ {f : ℝ → ℝ},\n  (∀ a b c, f a < c → c < f b → ∃ x, a < x ∧ x < b ∧ f x = c) →\n  (∀ r : ℚ, IsClosed (SetOf (λ x, f x = r))) →\n  Continuous f ", "∀ {f : ℝ → ℝ},\n  (∀ a b c, a < b → f a < c → c < f b → ∃ x, a < x ∧ x < b ∧ f x = c) →\n  (∀ r, IsClosed (f ⁻¹' {r})) →\n  Continuous f "]}
{"docString": "Assume that $f$ is a continuous real function defined in $(a, b)$ such that $f\\left(\\frac{x+y}{2}\\right) \\leq \\frac{f(x)+f(y)}{2}$ for all $x, y \\in(a, b)$. Prove that $f$ is convex.", "prompts": "[{\"theorem\":\n  \"∀ {𝕜 : Type u_1} {E : Type u_2} {β : Type u_3} [inst : OrderedSemiring 𝕜] [inst_1 : AddCommMonoid E]\\n  [inst_2 : OrderedAddCommMonoid β] [inst_3 : Module 𝕜 E] [inst_4 : Module 𝕜 β] [inst_5 : LinearOrder E] {s : Set E}\\n  {f : E → β},\\n  Convex 𝕜 s →\\n    (∀ ⦃x : E⦄,\\n        x ∈ s →\\n          ∀ ⦃y : E⦄, y ∈ s → x < y → ∀ ⦃a b : 𝕜⦄, 0 < a → 0 < b → a + b = 1 → a • f x + b • f y ≤ f (a • x + b • y)) →\\n      ConcaveOn 𝕜 s f\",\n  \"isProp\": true,\n  \"docString\":\n  \"For a function on a convex set in a linearly ordered space (where the order and the algebraic\\nstructures aren't necessarily compatible), in order to prove that it is concave it suffices to\\nverify the inequality `a • f x + b • f y ≤ f (a • x + b • y)` for `x < y` and positive `a`, `b`. The\\nmain use case is `E = ℝ` however one can apply it, e.g., to `ℝ^n` with lexicographic order. \"},\n {\"theorem\":\n  \"∀ {D : Set ℝ},\\n  Convex ℝ D →\\n    ∀ {f : ℝ → ℝ},\\n      ContinuousOn f D →\\n        DifferentiableOn ℝ f (interior D) →\\n          ∀ {C : (fun x => ℝ) 1},\\n            (∀ (x : ℝ), x ∈ interior D → C ≤ deriv f x) →\\n              ∀ (x : ℝ), x ∈ D → ∀ (y : ℝ), y ∈ D → x ≤ y → C * (y - x) ≤ f y - f x\",\n  \"isProp\": true,\n  \"docString\":\n  \"Let `f` be a function continuous on a convex (or, equivalently, connected) subset `D`\\nof the real line. If `f` is differentiable on the interior of `D` and `C ≤ f'`, then\\n`f` grows at least as fast as `C * x` on `D`, i.e., `C * (y - x) ≤ f y - f x` whenever `x, y ∈ D`,\\n`x ≤ y`. \"},\n {\"theorem\":\n  \"∀ {D : Set ℝ},\\n  Convex ℝ D →\\n    ∀ {f : ℝ → ℝ},\\n      ContinuousOn f D →\\n        DifferentiableOn ℝ f (interior D) →\\n          ∀ {C : (fun x => ℝ) 1},\\n            (∀ (x : ℝ), x ∈ interior D → deriv f x ≤ C) →\\n              ∀ (x : ℝ), x ∈ D → ∀ (y : ℝ), y ∈ D → x ≤ y → f y - f x ≤ C * (y - x)\",\n  \"isProp\": true,\n  \"docString\":\n  \"Let `f` be a function continuous on a convex (or, equivalently, connected) subset `D`\\nof the real line. If `f` is differentiable on the interior of `D` and `f' ≤ C`, then\\n`f` grows at most as fast as `C * x` on `D`, i.e., `f y - f x ≤ C * (y - x)` whenever `x, y ∈ D`,\\n`x ≤ y`. \"},\n {\"theorem\":\n  \"∀ {𝕜 : Type u_1} {E : Type u_2} {β : Type u_3} [inst : OrderedSemiring 𝕜] [inst_1 : AddCommMonoid E]\\n  [inst_2 : OrderedAddCommMonoid β] [inst_3 : Module 𝕜 E] [inst_4 : Module 𝕜 β] [inst_5 : LinearOrder E] {s : Set E}\\n  {f : E → β},\\n  Convex 𝕜 s →\\n    (∀ ⦃x : E⦄,\\n        x ∈ s →\\n          ∀ ⦃y : E⦄, y ∈ s → x < y → ∀ ⦃a b : 𝕜⦄, 0 < a → 0 < b → a + b = 1 → a • f x + b • f y < f (a • x + b • y)) →\\n      StrictConcaveOn 𝕜 s f\",\n  \"isProp\": true,\n  \"docString\":\n  \"For a function on a convex set in a linearly ordered space (where the order and the algebraic\\nstructures aren't necessarily compatible), in order to prove that it is strictly concave it suffices\\nto verify the inequality `a • f x + b • f y < f (a • x + b • y)` for `x < y` and positive `a`, `b`.\\nThe main use case is `E = 𝕜` however one can apply it, e.g., to `𝕜^n` with lexicographic order. \"}]\n", "prompt_cons": "/-- For a function on a convex set in a linearly ordered space (where the order and the algebraic\nstructures aren't necessarily compatible), in order to prove that it is concave it suffices to\nverify the inequality `a • f x + b • f y ≤ f (a • x + b • y)` for `x < y` and positive `a`, `b`. The\nmain use case is `E = ℝ` however one can apply it, e.g., to `ℝ^n` with lexicographic order. -/\ntheorem ∀ {𝕜 : Type u_1} {E : Type u_2} {β : Type u_3} [inst : OrderedSemiring 𝕜] [inst_1 : AddCommMonoid E]\n  [inst_2 : OrderedAddCommMonoid β] [inst_3 : Module 𝕜 E] [inst_4 : Module 𝕜 β] [inst_5 : LinearOrder E] {s : Set E}\n  {f : E → β},\n  Convex 𝕜 s →\n    (∀ ⦃x : E⦄,\n        x ∈ s →\n          ∀ ⦃y : E⦄, y ∈ s → x < y → ∀ ⦃a b : 𝕜⦄, 0 < a → 0 < b → a + b = 1 → a • f x + b • f y ≤ f (a • x + b • y)) →\n      ConcaveOn 𝕜 s f :=\n\n/-- Let `f` be a function continuous on a convex (or, equivalently, connected) subset `D`\nof the real line. If `f` is differentiable on the interior of `D` and `C ≤ f'`, then\n`f` grows at least as fast as `C * x` on `D`, i.e., `C * (y - x) ≤ f y - f x` whenever `x, y ∈ D`,\n`x ≤ y`. -/\ntheorem ∀ {D : Set ℝ},\n  Convex ℝ D →\n    ∀ {f : ℝ → ℝ},\n      ContinuousOn f D →\n        DifferentiableOn ℝ f (interior D) →\n          ∀ {C : (fun x => ℝ) 1},\n            (∀ (x : ℝ), x ∈ interior D → C ≤ deriv f x) →\n              ∀ (x : ℝ), x ∈ D → ∀ (y : ℝ), y ∈ D → x ≤ y → C * (y - x) ≤ f y - f x :=\n\n/-- Let `f` be a function continuous on a convex (or, equivalently, connected) subset `D`\nof the real line. If `f` is differentiable on the interior of `D` and `f' ≤ C`, then\n`f` grows at most as fast as `C * x` on `D`, i.e., `f y - f x ≤ C * (y - x)` whenever `x, y ∈ D`,\n`x ≤ y`. -/\ntheorem ∀ {D : Set ℝ},\n  Convex ℝ D →\n    ∀ {f : ℝ → ℝ},\n      ContinuousOn f D →\n        DifferentiableOn ℝ f (interior D) →\n          ∀ {C : (fun x => ℝ) 1},\n            (∀ (x : ℝ), x ∈ interior D → deriv f x ≤ C) →\n              ∀ (x : ℝ), x ∈ D → ∀ (y : ℝ), y ∈ D → x ≤ y → f y - f x ≤ C * (y - x) :=\n\n/-- For a function on a convex set in a linearly ordered space (where the order and the algebraic\nstructures aren't necessarily compatible), in order to prove that it is strictly concave it suffices\nto verify the inequality `a • f x + b • f y < f (a • x + b • y)` for `x < y` and positive `a`, `b`.\nThe main use case is `E = 𝕜` however one can apply it, e.g., to `𝕜^n` with lexicographic order. -/\ntheorem ∀ {𝕜 : Type u_1} {E : Type u_2} {β : Type u_3} [inst : OrderedSemiring 𝕜] [inst_1 : AddCommMonoid E]\n  [inst_2 : OrderedAddCommMonoid β] [inst_3 : Module 𝕜 E] [inst_4 : Module 𝕜 β] [inst_5 : LinearOrder E] {s : Set E}\n  {f : E → β},\n  Convex 𝕜 s →\n    (∀ ⦃x : E⦄,\n        x ∈ s →\n          ∀ ⦃y : E⦄, y ∈ s → x < y → ∀ ⦃a b : 𝕜⦄, 0 < a → 0 < b → a + b = 1 → a • f x + b • f y < f (a • x + b • y)) →\n      StrictConcaveOn 𝕜 s f :=\n\n/-- Assume that $f$ is a continuous real function defined in $(a, b)$ such that $f\\left(\\frac{x+y}{2}\\right) \\leq \\frac{f(x)+f(y)}{2}$ for all $x, y \\in(a, b)$. Prove that $f$ is convex. -/\ntheorem", "choices": ["∀ {𝕜 : Type u_1} {E : Type u_2} {β : Type u_3} [inst : LinearOrderedField 𝕜] [inst_1 : OrderedAddCommMonoid E]\n  [inst_2 : OrderedAddCommMonoid β] [inst_3 : Module 𝕜 E] [inst_4 : Module 𝕜 β] [inst_5 : LinearOrder E] {s : Set E}\n  {f : E → β},\n  Convex 𝕜 s →\n    (∀ ⦃x : E⦄,\n        x ∈ s →\n          ∀ ⦃y : E⦄, y ∈ s → x < y → ∀ ⦃a b : 𝕜⦄, 0 < a → 0 < b → a + b = 1 → f ((a + b)⁻¹ • (a • x + b • y)) ≤ (a • f x + b • f y)) →\n      ConvexOn 𝕜 s f ", "∀ {𝕜 : Type u_1} [inst : LinearOrderedField 𝕜] {s : Set 𝕜} {f : 𝕜 → 𝕜},\n  Convex 𝕜 s →\n    (∀ ⦃x y : 𝕜⦄,\n        x ∈ s →\n          y ∈ s → x ≠ y →\n            f ((x + y) / 2) ≤ (f x + f y) / 2) →\n      ConvexOn 𝕜 s f ", "forall {a b : ℝ}, a < b -> ∀ {f : ℝ → ℝ},\n  ContinuousOn f (Ioo a b) →\n    (∀ x y : ℝ, x ∈ Ioo a b → y ∈ Ioo a b → f ((x + y) / 2) ≤ (f x + f y) / 2) →\n      ConvexOn ℝ (Ioo a b) f ", "∀ {a b : ℝ},\n  a < b →\n    ∀ {f : ℝ → ℝ},\n      ContinuousOn f (Ioo a b) →\n        (∀ (x : ℝ), x ∈ Ioo a b → ∀ (y : ℝ), y ∈ Ioo a b → f ((x + y) / 2) ≤ (f x + f y) / 2) →\n          ConvexOn ℝ (Ioo a b) f ", "∀ {a b : ℝ} {f : ℝ → ℝ},\n  a < b →\n    ContinuousOn f (Set.Ioo a b) →\n      (∀ (x : ℝ), x ∈ Set.Ioo a b → ∀ (y : ℝ), y ∈ Set.Ioo a b → f ((x + y) / 2) ≤ (f x + f y) / 2) →\n        ConvexOn ℝ (Set.Ioo a b) f ", "∀ {a b : ℝ} (hab : a < b), ConvexOn ℝ (Ioo a b) (fun x => ℝ) ", "∀ {a b : ℝ},\n  a < b →\n    ∀ {f : ℝ → ℝ},\n      ContinuousOn f (set.Ioo a b) →\n        (∀ (x : ℝ), x ∈ set.Ioo a b → ∀ (y : ℝ), y ∈ set.Ioo a b → f ((x + y) / 2) ≤ (f x + f y) / 2) →\n          ConvexOn ℝ (set.Ioo a b) f ", "∀ {a b : ℝ},\n  a < b →\n    ∀ {f : ℝ → ℝ},\n      ContinuousOn f (Ioo a b) →\n        (∀ (x : ℝ),\n            x ∈ Ioo a b → ∀ (y : ℝ), y ∈ Ioo a b → f ((x + y) / 2) ≤ (f x + f y) / 2) →\n          ConvexOn ℝ (Ioo a b) f ", "∀ {E : Type u_1} [inst : LinearOrderedField E] [inst_1 : TopologicalSpace E] [inst_2 : OrderTopology E]\n  [inst_3 : OpensMeasurableSpace E] {s : Set E} {f : E → ℝ},\n  Convex E s →\n    (∀ ⦃x : E⦄,\n        x ∈ s →\n          ∀ ⦃y : E⦄, y ∈ s → x < y → f ((x + y) / 2) ≤ (f x + f y) / 2) →\n      ∀ ⦃a b : E⦄, a ∈ s → b ∈ s → a < b → ∀ ⦃c d : E⦄, 0 < c → 0 < d → c + d = 1 → c • f a + d • f b ≤ f (c • a + d • b) ", "∀ {𝕜 : Type u_1} {E : Type u_2} {β : Type u_3} [inst : LinearOrderedField 𝕜] [inst_1 : OrderedAddCommMonoid E]\n  [inst_2 : OrderedAddCommMonoid β] [inst_3 : Module 𝕜 E] [inst_4 : Module 𝕜 β] [inst_5 : LinearOrder E] {s : Set E}\n  {f : E → β},\n  Convex 𝕜 s →\n    (∀ ⦃x : E⦄,\n        x ∈ s →\n          ∀ ⦃y : E⦄, y ∈ s → x < y → ∀ ⦃a b : 𝕜⦄, 0 < a → 0 < b → a + b = 1 → f (a • x + b • y) ≤ (a • f x + b • f y)) →\n      ConvexOn 𝕜 s f "]}
{"docString": "Suppose $f^{\\prime}(x)>0$ in $(a, b)$. Prove that $f$ is strictly increasing in $(a, b)$, and let $g$ be its inverse function. Prove that $g$ is differentiable, and that $g^{\\prime}(f(x))=\\frac{1}{f^{\\prime}(x)} \\quad(a<x<b)$.", "prompts": "[{\"theorem\":\n  \"∀ {f g : ℝ → ℝ} {a b : ℝ},\\n  a < b →\\n    ContinuousOn f (Set.Icc a b) →\\n      ContinuousOn g (Set.Icc a b) →\\n        (∀ (x : ℝ), x ∈ Set.Ioc a b → f x ≤ g x) →\\n          (∃ c, c ∈ Set.Icc a b ∧ f c < g c) → ∫ (x : ℝ) in a..b, f x < ∫ (x : ℝ) in a..b, g x\",\n  \"isProp\": true,\n  \"docString\":\n  \"If `f` and `g` are continuous on `[a, b]`, `a < b`, `f x ≤ g x` on this interval, and\\n`f c < g c` at some point `c ∈ [a, b]`, then `∫ x in a..b, f x < ∫ x in a..b, g x`. \"},\n {\"theorem\":\n  \"∀ {X : Type u} {α : Type v} [inst : TopologicalSpace X] [inst_1 : LinearOrder α] [inst_2 : TopologicalSpace α]\\n  [inst_3 : OrderClosedTopology α] {s : Set X},\\n  IsPreconnected s →\\n    ∀ {a b : X},\\n      a ∈ s →\\n        b ∈ s → ∀ {f g : X → α}, ContinuousOn f s → ContinuousOn g s → f a ≤ g a → g b ≤ f b → ∃ x, x ∈ s ∧ f x = g x\",\n  \"isProp\": true,\n  \"docString\":\n  \"Intermediate value theorem for two functions: if `f` and `g` are two functions continuous\\non a preconnected set `s` and for some `a b ∈ s` we have `f a ≤ g a` and `g b ≤ f b`,\\nthen for some `x ∈ s` we have `f x = g x`. \"},\n {\"theorem\":\n  \"∀ {X : Type u} {α : Type v} [inst : TopologicalSpace X] [inst_1 : LinearOrder α] [inst_2 : TopologicalSpace α]\\n  [inst_3 : OrderClosedTopology α] [inst_4 : PreconnectedSpace X] {a b : X} {f g : X → α},\\n  Continuous f → Continuous g → f a ≤ g a → g b ≤ f b → ∃ x, f x = g x\",\n  \"isProp\": true,\n  \"docString\":\n  \"Intermediate value theorem for two functions: if `f` and `g` are two continuous functions\\non a preconnected space and `f a ≤ g a` and `g b ≤ f b`, then for some `x` we have `f x = g x`. \"},\n {\"theorem\":\n  \"∀ {f f' : ℝ → ℝ} {a b : ℝ},\\n  ContinuousOn f (Set.Icc a b) →\\n    (∀ (x : ℝ), x ∈ Set.Ico a b → HasDerivWithinAt f (f' x) (Set.Ici x) x) →\\n      ∀ {B B' : ℝ → ℝ},\\n        f a ≤ B a →\\n          ContinuousOn B (Set.Icc a b) →\\n            (∀ (x : ℝ), x ∈ Set.Ico a b → HasDerivWithinAt B (B' x) (Set.Ici x) x) →\\n              (∀ (x : ℝ), x ∈ Set.Ico a b → f' x ≤ B' x) → ∀ ⦃x : ℝ⦄, x ∈ Set.Icc a b → f x ≤ B x\",\n  \"isProp\": true,\n  \"docString\":\n  \"General fencing theorem for continuous functions with an estimate on the derivative.\\nLet `f` and `B` be continuous functions on `[a, b]` such that\\n\\n* `f a ≤ B a`;\\n* `B` has derivative `B'` everywhere on `ℝ`;\\n* `f` has right derivative `f'` at every point of `[a, b)`;\\n* we have `f' x ≤ B' x` on `[a, b)`.\\n\\nThen `f x ≤ B x` everywhere on `[a, b]`. \"}]\n", "prompt_cons": "/-- If `f` and `g` are continuous on `[a, b]`, `a < b`, `f x ≤ g x` on this interval, and\n`f c < g c` at some point `c ∈ [a, b]`, then `∫ x in a..b, f x < ∫ x in a..b, g x`. -/\ntheorem ∀ {f g : ℝ → ℝ} {a b : ℝ},\n  a < b →\n    ContinuousOn f (Set.Icc a b) →\n      ContinuousOn g (Set.Icc a b) →\n        (∀ (x : ℝ), x ∈ Set.Ioc a b → f x ≤ g x) →\n          (∃ c, c ∈ Set.Icc a b ∧ f c < g c) → ∫ (x : ℝ) in a..b, f x < ∫ (x : ℝ) in a..b, g x :=\n\n/-- Intermediate value theorem for two functions: if `f` and `g` are two functions continuous\non a preconnected set `s` and for some `a b ∈ s` we have `f a ≤ g a` and `g b ≤ f b`,\nthen for some `x ∈ s` we have `f x = g x`. -/\ntheorem ∀ {X : Type u} {α : Type v} [inst : TopologicalSpace X] [inst_1 : LinearOrder α] [inst_2 : TopologicalSpace α]\n  [inst_3 : OrderClosedTopology α] {s : Set X},\n  IsPreconnected s →\n    ∀ {a b : X},\n      a ∈ s →\n        b ∈ s → ∀ {f g : X → α}, ContinuousOn f s → ContinuousOn g s → f a ≤ g a → g b ≤ f b → ∃ x, x ∈ s ∧ f x = g x :=\n\n/-- Intermediate value theorem for two functions: if `f` and `g` are two continuous functions\non a preconnected space and `f a ≤ g a` and `g b ≤ f b`, then for some `x` we have `f x = g x`. -/\ntheorem ∀ {X : Type u} {α : Type v} [inst : TopologicalSpace X] [inst_1 : LinearOrder α] [inst_2 : TopologicalSpace α]\n  [inst_3 : OrderClosedTopology α] [inst_4 : PreconnectedSpace X] {a b : X} {f g : X → α},\n  Continuous f → Continuous g → f a ≤ g a → g b ≤ f b → ∃ x, f x = g x :=\n\n/-- General fencing theorem for continuous functions with an estimate on the derivative.\nLet `f` and `B` be continuous functions on `[a, b]` such that\n\n* `f a ≤ B a`;\n* `B` has derivative `B'` everywhere on `ℝ`;\n* `f` has right derivative `f'` at every point of `[a, b)`;\n* we have `f' x ≤ B' x` on `[a, b)`.\n\nThen `f x ≤ B x` everywhere on `[a, b]`. -/\ntheorem ∀ {f f' : ℝ → ℝ} {a b : ℝ},\n  ContinuousOn f (Set.Icc a b) →\n    (∀ (x : ℝ), x ∈ Set.Ico a b → HasDerivWithinAt f (f' x) (Set.Ici x) x) →\n      ∀ {B B' : ℝ → ℝ},\n        f a ≤ B a →\n          ContinuousOn B (Set.Icc a b) →\n            (∀ (x : ℝ), x ∈ Set.Ico a b → HasDerivWithinAt B (B' x) (Set.Ici x) x) →\n              (∀ (x : ℝ), x ∈ Set.Ico a b → f' x ≤ B' x) → ∀ ⦃x : ℝ⦄, x ∈ Set.Icc a b → f x ≤ B x :=\n\n/-- Suppose $f^{\\prime}(x)>0$ in $(a, b)$. Prove that $f$ is strictly increasing in $(a, b)$, and let $g$ be its inverse function. Prove that $g$ is differentiable, and that $g^{\\prime}(f(x))=\\frac{1}{f^{\\prime}(x)} \\quad(a<x<b)$. -/\ntheorem", "choices": ["∀ {f f' : ℝ → ℝ} {a b : ℝ},\n  ContinuousOn f (Set.Icc a b) →\n    (∀ (x : ℝ), x ∈ Set.Ioo a b → HasDerivWithinAt f (f' x) (Set.Ioo x) x) →\n      (∀ (x : ℝ), x ∈ Set.Ioo a b → f' x > 0) →\n        let g ", "∀ {f f' : ℝ → ℝ} {a b : ℝ},\n  a < b →\n    ContinuousOn f (Set.Icc a b) →\n      (∀ (x : ℝ), x ∈ Set.Ioo a b → HasDerivWithinAt f (f' x) (Set.Ioo a b) x) →\n        (∀ (x : ℝ), x ∈ Set.Ioo a b → f' x > 0) →\n          StrictMonoOn f (Set.Ioo a b) ∧\n            ∀ {g g' : ℝ → ℝ},\n              (∀ (x : ℝ), x ∈ Set.Ioo a b → g (f x) = x) →\n                (∀ (x : ℝ), x ∈ Set.Ioo a b → g' x = 1 / f' (g x)) →\n                  ∀ (x : ℝ), x ∈ Set.Ioo a b → HasDerivWithinAt g (g' x) (Set.Ioo a b) x ", "forall {f f' : ℝ → ℝ} {a b : ℝ},\n  (∀ (x : ℝ), x ∈ Set.Ioo a b → HasDerivWithinAt f (f' x) (Set.Ioo a b) x) →\n    (∀ (x : ℝ), x ∈ Set.Ioo a b → f' x > 0) →\n      StrictMonoOn f (Set.Ioo a b) ∧\n        (∃ (g : ℝ → ℝ) (g' : ℝ → ℝ),\n           ∀ (x : ℝ),\n             x ∈ Set.Ioo a b →\n               HasDerivWithinAt g (g' x) (Set.Ioo (f a) (f b)) (f x) ∧ g' x = (1 / f' x)) ", "∀ {f : ℝ → ℝ} {a b : ℝ},\n  a < b →\n    ContinuousOn f (Set.Icc a b) →\n      (∀ (c : ℝ), c ∈ Set.Ioo a b → ∃ (f' : ℝ), HasDerivWithinAt f f' (Set.Ioi c) c ∧ f' > 0) →\n        (∀ x y, x ∈ Set.Ioo a b → y ∈ Set.Ioo a b → x < y → f x < f y) ∧\n          (∃ (g : ℝ → ℝ),\n            (∀ (y : ℝ), y ∈ Set.Ioo (f a) (f b) → ∃ (g' : ℝ), HasDerivWithinAt g g' (Set.Ioi y) y ∧ g' = (1 / f' (g y)) ∧ g y ∈ Set.Ioo a b) ∧\n            ∀ (x : ℝ), x ∈ Set.Ioo a b → g (f x) = x) ", "forall {f f' : ℝ → ℝ} {a b : ℝ},\n  ContinuousOn f (Set.Icc a b) →\n    (∀ (x : ℝ), x ∈ Set.Ioo a b → HasDerivWithinAt f (f' x) (Set.Ioo x) x) →\n      (∀ (x : ℝ), x ∈ Set.Ioo a b → f' x > 0) →\n        StrictMonoOn f (Set.Ioo a b) ∧\n          ∀ ⦃g : ℝ → ℝ⦄, (∀ (x : ℝ), x ∈ Set.Ioo a b → g (f x) = x) →\n            (∀ (x : ℝ), x ∈ Set.Ioo a b →\n              (DifferentiableAt ℝ g (f x) ∧ deriv g (f x) = (f' x)⁻¹)) ", "forall {f f' : ℝ → ℝ} {a b : ℝ},\n  a < b →\n    ContinuousOn f (Set.Icc a b) →\n      (∀ (x : ℝ), x ∈ Set.Ioo a b → HasDerivWithinAt f (f' x) (Set.Ioo a b) x) →\n        (∀ (x : ℝ), x ∈ Set.Ioo a b → f' x > 0) →\n          StrictMonoOn f (Set.Ioo a b) ∧\n            ∃ (g : ℝ → ℝ),\n              (∀ (x : ℝ), x ∈ Set.Ioo a b → g (f x) = x) ∧\n                Continuous g ∧\n                  ∀ (x : ℝ), x ∈ Set.Ioo a b → HasDerivAt g (1 / f' x) (f x)", "forall {f f' : ℝ → ℝ} {a b : ℝ},\n  ContinuousOn f (Set.Icc a b) →\n    (∀ (x : ℝ), x ∈ Set.Ioo a b → HasDerivWithinAt f (f' x) (Set.Ioo x) x) →\n      (∀ (x : ℝ), x ∈ Set.Ioo a b → f' x > 0) →\n        StrictMonoOn f (Set.Ioo a b) ∧\n          ∀ ⦃g g' : ℝ → ℝ⦄,\n            (∀ (y : ℝ), y ∈ Set.Ioo (f a) (f b) → HasDerivAt g (g' y) y) →\n              ∀ (x : ℝ), x ∈ Set.Ioo a b → g' (f x) = 1 / f' x ", "∀ {f : ℝ → ℝ} {a b : ℝ},\n  a < b →\n    ContinuousOn f (Set.Icc a b) →\n      (∀ (x : ℝ), x ∈ Set.Ioo a b → HasDerivWithinAt f (derivWithin f (Set.Ioo a b) x) (Set.Ici x) x) →\n        (∀ (x : ℝ), x ∈ Set.Ioo a b → derivWithin f (Set.Ioo a b) x > 0) →\n          StrictMonoOn f (Set.Ioo a b) ∧\n            (∀ {g : ℝ → ℝ}, g = Function.inverse f →\n              ContinuousOn g (Set.Icc (f a) (f b)) →\n                (∀ (x : ℝ), x ∈ Set.Ioo a b → HasDerivWithinAt g (1 / (derivWithin f (Set.Ioo a b) x)) (Set.Ici (f x)) (f x))) ", "forall {f f' : ℝ → ℝ} {a b : ℝ},\n  ContinuousOn f (Set.Icc a b) →\n    (∀ (x : ℝ), x ∈ Set.Ioo a b → HasDerivWithinAt f (f' x) (Set.Ioi x) x) →\n      (∀ (x : ℝ), x ∈ Set.Ioo a b → f' x > 0) →\n        StrictMonoOn f (Set.Ioo a b) ∧\n          ∀ ⦃g : ℝ → ℝ⦄, IsStrictMono g ∧ ∀ (x : ℝ), x ∈ Set.Ioo a b → g (f x) = x →\n            (∃ g' : ℝ → ℝ, ∀ (x : ℝ), x ∈ Set.Ioo a b → HasDerivAt g (g' (f x)) (f x) ∧ g' (f x) = 1 / f' x) ", "forall {f f' : ℝ → ℝ} {a b : ℝ},\n  ContinuousOn f (Set.Icc a b) →\n    (∀ (x : ℝ), x ∈ Set.Ioo a b → HasDerivWithinAt f (f' x) (Set.Ioo x) x) →\n      (∀ (x : ℝ), x ∈ Set.Ioo a b → f' x > 0) →\n        ∀ ⦃x : ℝ⦄, x ∈ Set.Ioo a b → StrictMono f "]}
{"docString": "If $C_{0}+\\frac{C_{1}}{2}+\\cdots+\\frac{C_{n-1}}{n}+\\frac{C_{n}}{n+1}=0,$ where $C_{0}, \\ldots, C_{n}$ are real constants, prove that the equation $C_{0}+C_{1} x+\\cdots+C_{n-1} x^{n-1}+C_{n} x^{n}=0$ has at least one real root between 0 and 1.", "prompts": "[{\"theorem\":\n  \"∀ (K : Type u_1) [inst : Field K] [inst_1 : NumberField K] (A : Type u_2) [inst_2 : NormedField A]\\n  [inst_3 : IsAlgClosed A] [inst_4 : NormedAlgebra ℚ A] {x : K},\\n  IsIntegral ℤ x → (∀ (φ : K →+* A), ‖↑φ x‖ = 1) → ∃ n x_1, x ^ n = 1\",\n  \"isProp\": true,\n  \"docString\":\n  \"An algebraic integer whose conjugates are all of norm one is a root of unity. \"},\n {\"theorem\":\n  \"∀ {R : Type u_1} [inst : CommRing R] [inst_1 : IsDomain R] {ζ : R} {n : ℕ},\\n  0 < n →\\n    IsPrimitiveRoot ζ n →\\n      Polynomial.X ^ n - 1 = Finset.prod (Polynomial.nthRootsFinset n R) fun ζ => Polynomial.X - ↑Polynomial.C ζ\",\n  \"isProp\": true,\n  \"docString\":\n  \"If there is a primitive `n`th root of unity in `K`, then `X ^ n - 1 = ∏ (X - μ)`, where `μ`\\nvaries over the `n`-th roots of unity. \"},\n {\"theorem\":\n  \"∀ {f : Polynomial ℂ}, 0 < Polynomial.degree f → ∃ z, Polynomial.IsRoot f z\",\n  \"isProp\": true,\n  \"docString\":\n  \"**Fundamental theorem of algebra**: every non constant complex polynomial\\nhas a root \"},\n {\"theorem\":\n  \"∀ {n : ℕ} {K : Type u_1} [inst : CommRing K] {μ : K},\\n  IsPrimitiveRoot μ n → ∀ [inst_1 : IsDomain K] [inst_2 : CharZero K], minpoly ℤ μ ∣ Polynomial.X ^ n - 1\",\n  \"isProp\": true,\n  \"docString\":\n  \"The minimal polynomial of a root of unity `μ` divides `X ^ n - 1`. \"}]\n", "prompt_cons": "/-- An algebraic integer whose conjugates are all of norm one is a root of unity. -/\ntheorem ∀ (K : Type u_1) [inst : Field K] [inst_1 : NumberField K] (A : Type u_2) [inst_2 : NormedField A]\n  [inst_3 : IsAlgClosed A] [inst_4 : NormedAlgebra ℚ A] {x : K},\n  IsIntegral ℤ x → (∀ (φ : K →+* A), ‖↑φ x‖ = 1) → ∃ n x_1, x ^ n = 1 :=\n\n/-- If there is a primitive `n`th root of unity in `K`, then `X ^ n - 1 = ∏ (X - μ)`, where `μ`\nvaries over the `n`-th roots of unity. -/\ntheorem ∀ {R : Type u_1} [inst : CommRing R] [inst_1 : IsDomain R] {ζ : R} {n : ℕ},\n  0 < n →\n    IsPrimitiveRoot ζ n →\n      Polynomial.X ^ n - 1 = Finset.prod (Polynomial.nthRootsFinset n R) fun ζ => Polynomial.X - ↑Polynomial.C ζ :=\n\n/-- **Fundamental theorem of algebra**: every non constant complex polynomial\nhas a root -/\ntheorem ∀ {f : Polynomial ℂ}, 0 < Polynomial.degree f → ∃ z, Polynomial.IsRoot f z :=\n\n/-- The minimal polynomial of a root of unity `μ` divides `X ^ n - 1`. -/\ntheorem ∀ {n : ℕ} {K : Type u_1} [inst : CommRing K] {μ : K},\n  IsPrimitiveRoot μ n → ∀ [inst_1 : IsDomain K] [inst_2 : CharZero K], minpoly ℤ μ ∣ Polynomial.X ^ n - 1 :=\n\n/-- If $C_{0}+\\frac{C_{1}}{2}+\\cdots+\\frac{C_{n-1}}{n}+\\frac{C_{n}}{n+1}=0,$ where $C_{0}, \\ldots, C_{n}$ are real constants, prove that the equation $C_{0}+C_{1} x+\\cdots+C_{n-1} x^{n-1}+C_{n} x^{n}=0$ has at least one real root between 0 and 1. -/\ntheorem", "choices": ["/-- An algebraic integer whose conjugates are all of norm one is a root of unity. -/\ntheorem alg_int_norm_one_is_root_of_unity (K : Type u_1) [inst : Field K] [inst_1 : NumberField K] (A : Type u_2) [inst_2 : NormedField A]\n  [inst_3 : IsAlgClosed A] [inst_4 : NormedAlgebra ℚ A] {x : K},\n  IsIntegral ℤ x → (∀ (φ : K →+* A), ‖↑φ x‖ = 1) → ∃ n x_1, x ^ n = 1 ", "∀ {C : ℕ → ℝ}, (∀ n, C 0 + ∑ k in Finset.range n, C (k + 1) / (k + 1)) = 0 →\n  ∃ x ∈ Icc (0 : ℝ) 1, ∀ n, C 0 + ∑ k in Finset.range n, C (k + 1) * x ^ k = 0 ", "∀ {R : Type u_1} [inst : Field R] [inst_1 : IsDomain R] {C : Finₓ (n + 1) → R},\n  (∀ x, HasDerivAt (Finₓ.sum_elim (fun i => C i) (fun i => C (Finₓ.succ i) * (x ^ i))) 0 x) →\n    (∃ x : ℝ, 0 ≤ x ∧ x ≤ 1 ∧ (Finₓ.sum_elim (fun i => C i) (fun i => C (Finₓ.succ i) * (x ^ i))) x = 0) ", "∀ {n : ℕ} {C : Finₓ (n + 2) → ℝ},\n  (∑ i : Finₓ (n + 2), C i / (i + 1 : ℝ)) = 0 →\n    ∃ x : ℝ, 0 < x ∧ x < 1 ∧ (∑ i : Finₓ (n + 2), C i * x ^ i) = 0 ", "∀ {R : Type u_1} [inst : CommRing R] [inst_1 : IsDomain R] [inst_2 : LinearOrderedField R] {C : ℕ → R},\n  (∀ n, C n / (n + 1) ≥ 0) →\n  (∑ (n : ℕ) in Finset.range (Nat.succ (Nat.succ n)), C n / (n + 1)) = 0 →\n  ∃ x : R, 0 < x ∧ x < 1 ∧ (∑ (n : ℕ) in Finset.range (Nat.succ (Nat.succ n)), C n * x ^ n) = 0 ", "∀ {R : Type u_1} [inst : CommRing R] [inst_1 : IsField R] [inst_2 : CharZero R] {n : ℕ} (C : Finₓ (n + 2) → R),\n  (∑ i : Finₓ (n + 2), C i / (i + 1)) = 0 → ∃ (x₀ : R), 0 ≤ x₀ ∧ x₀ ≤ 1 ∧ (∑ i : Finₓ (n + 1), C (Finₓ.succ i) * x₀ ^ i) = -C 0 ", "∀ {R : Type u_1} [inst : CommRing R] [inst_1 : IsDomain R] {C : ℕ → R},\n  (∑ k in Finset.range (n + 2), C k / (k + 1)) = 0 →\n    ∃ x ∈ Icc (0 : R) 1, Polynomial.eval x (Finset.sum (Finset.range (n + 1)) fun i => Polynomial.C (C i) * Polynomial.X ^ i) = 0 ", "∀ {R : Type u_1} [inst : CommRing R] [inst_1 : IsDomain R] {C : ℕ → R},\n  (∑ i in Finset.range (n + 1), C i / (i + 1)) = 0 →\n    ∃ x : R, 0 < x ∧ x < 1 ∧ (∑ i in Finset.range (n + 1), C i * x ^ i) = 0 ", "∀ {C : ℕ → ℝ},\n  (∑ i in Finset.range (n + 2), C i / (i + 1)) = 0 →\n    ∃ x : ℝ, 0 ≤ x ∧ x ≤ 1 ∧ (Finset.sum (Finset.range (n + 1)) fun i => C i * x ^ i) = 0 ", "forall {R : Type u_1} [inst : CommRing R] [inst_1 : IsDomain R] {C : Finₓ (n + 1) → R},\n  (∑ i, C i / (i + 1)) = 0 →\n    ∃ x₀ ∈ set.Icc (0 : R) 1, (∑ i, C i * x₀ ^ i) = 0 "]}
{"docString": "Suppose (a) $f$ is continuous for $x \\geq 0$, (b) $f^{\\prime}(x)$ exists for $x>0$, (c) $f(0)=0$, (d) $f^{\\prime}$ is monotonically increasing. Put $g(x)=\\frac{f(x)}{x} \\quad(x>0)$ and prove that $g$ is monotonically increasing.", "prompts": "[{\"theorem\":\n  \"∀ {f : ℝ → ℝ}, Differentiable ℝ f → (∀ (x : ℝ), 0 ≤ deriv f x) → Monotone f\",\n  \"isProp\": true,\n  \"docString\":\n  \"Let `f : ℝ → ℝ` be a differentiable function. If `f'` is nonnegative, then\\n`f` is a monotone function. \"},\n {\"theorem\":\n  \"∀ (f : CircleDeg1Lift), Continuous ↑f → ∃ x, ↑f x = x + CircleDeg1Lift.translationNumber f\",\n  \"isProp\": true,\n  \"docString\":\n  \"If `f` is a continuous monotone map `ℝ → ℝ`, `f (x + 1) = f x + 1`, then there exists `x`\\nsuch that `f x = x + τ f`. \"},\n {\"theorem\":\n  \"∀ {C : Type u_2} [inst : CategoryTheory.Category C] [inst_1 : CategoryTheory.Limits.HasZeroMorphisms C]\\n  [inst_2 : CategoryTheory.Limits.HasFiniteCoproducts C] [inst_3 : CategoryTheory.Limits.HasCokernels C]\\n  [inst_4 : CategoryTheory.NormalEpiCategory C] [inst_5 : CategoryTheory.Limits.HasZeroObject C] {X Y : C} (f : X ⟶ Y),\\n  (∀ (Z : C) (g : Z ⟶ X), CategoryTheory.CategoryStruct.comp g f = 0 → g = 0) → CategoryTheory.Mono f\",\n  \"isProp\": true,\n  \"docString\":\n  \"If `g ≫ f = 0` implies `g = 0` for all `g`, then `f` is a monomorphism. \"},\n {\"theorem\":\n  \"∀ {𝕜 : Type u_1} [inst : NontriviallyNormedField 𝕜] {E : Type uE} [inst_1 : NormedAddCommGroup E]\\n  [inst_2 : NormedSpace 𝕜 E] {F : Type uF} [inst_3 : NormedAddCommGroup F] [inst_4 : NormedSpace 𝕜 F] {G : Type uG}\\n  [inst_5 : NormedAddCommGroup G] [inst_6 : NormedSpace 𝕜 G] {f : E → F → G} {g : E → F} {n : ℕ∞},\\n  ContDiff 𝕜 n (Function.uncurry f) → Continuous g → 1 ≤ n → Continuous fun x => fderiv 𝕜 (f x) (g x)\",\n  \"isProp\": true,\n  \"docString\": \"`x ↦ fderiv 𝕜 (f x) (g x)` is continuous. \"}]\n", "prompt_cons": "/-- Let `f : ℝ → ℝ` be a differentiable function. If `f'` is nonnegative, then\n`f` is a monotone function. -/\ntheorem ∀ {f : ℝ → ℝ}, Differentiable ℝ f → (∀ (x : ℝ), 0 ≤ deriv f x) → Monotone f :=\n\n/-- If `f` is a continuous monotone map `ℝ → ℝ`, `f (x + 1) = f x + 1`, then there exists `x`\nsuch that `f x = x + τ f`. -/\ntheorem ∀ (f : CircleDeg1Lift), Continuous ↑f → ∃ x, ↑f x = x + CircleDeg1Lift.translationNumber f :=\n\n/-- If `g ≫ f = 0` implies `g = 0` for all `g`, then `f` is a monomorphism. -/\ntheorem ∀ {C : Type u_2} [inst : CategoryTheory.Category C] [inst_1 : CategoryTheory.Limits.HasZeroMorphisms C]\n  [inst_2 : CategoryTheory.Limits.HasFiniteCoproducts C] [inst_3 : CategoryTheory.Limits.HasCokernels C]\n  [inst_4 : CategoryTheory.NormalEpiCategory C] [inst_5 : CategoryTheory.Limits.HasZeroObject C] {X Y : C} (f : X ⟶ Y),\n  (∀ (Z : C) (g : Z ⟶ X), CategoryTheory.CategoryStruct.comp g f = 0 → g = 0) → CategoryTheory.Mono f :=\n\n/-- `x ↦ fderiv 𝕜 (f x) (g x)` is continuous. -/\ntheorem ∀ {𝕜 : Type u_1} [inst : NontriviallyNormedField 𝕜] {E : Type uE} [inst_1 : NormedAddCommGroup E]\n  [inst_2 : NormedSpace 𝕜 E] {F : Type uF} [inst_3 : NormedAddCommGroup F] [inst_4 : NormedSpace 𝕜 F] {G : Type uG}\n  [inst_5 : NormedAddCommGroup G] [inst_6 : NormedSpace 𝕜 G] {f : E → F → G} {g : E → F} {n : ℕ∞},\n  ContDiff 𝕜 n (Function.uncurry f) → Continuous g → 1 ≤ n → Continuous fun x => fderiv 𝕜 (f x) (g x) :=\n\n/-- Suppose (a) $f$ is continuous for $x \\geq 0$, (b) $f^{\\prime}(x)$ exists for $x>0$, (c) $f(0)=0$, (d) $f^{\\prime}$ is monotonically increasing. Put $g(x)=\\frac{f(x)}{x} \\quad(x>0)$ and prove that $g$ is monotonically increasing. -/\ntheorem", "choices": ["∀ {f : ℝ → ℝ}, ContinuousOn f (set.Ici 0) → (∀ x > 0, HasDerivAt f (deriv f x) x) → f 0 = 0 → Monotone (deriv f) → Monotone (λx, (f x) / x) ", "∀ {f : ℝ → ℝ}, ContinuousOn f (set.Ici 0) → (∀ x > 0, DifferentiableAt ℝ f x) → f 0 = 0 →\n  Monotone (deriv f) → Monotone (λ x, f x / x) ", "∀ {f : ℝ → ℝ}, Differentiable ℝ f → (∀ (x : ℝ), 0 ≤ deriv f x) → Monotone f ", "∀ {f : ℝ → ℝ}, ContinuousOn f (Set.Ici 0) → ∀ (x : ℝ), 0 < x → DifferentiableAt ℝ f x →\n  (∀ (x y : ℝ), 0 ≤ x → x ≤ y → deriv f x ≤ deriv f y) → (∀ (x y : ℝ), 0 < x → x ≤ y → f x / x ≤ f y / y) ", "∀ {f : ℝ → ℝ}, ContinuousOn f (Set.Ici 0) → (∀ x ∈ (Set.Ioi 0), DifferentiableAt ℝ f x) → f 0 = 0 →\n  (∀ x y ∈ (Set.Ioi 0), x < y → deriv f x ≤ deriv f y) → Monotone (λ x, (f x) / x) ", "∀ {f : ℝ → ℝ}, ContinuousOn f (Set.Ici 0) → (∀ x ∈ Set.Ioi 0, DifferentiableAt ℝ f x) → f 0 = 0 → (∀ x y ∈ Set.Ioi 0, x < y → deriv f x < deriv f y) → Monotone (λ x : ℝ, f x / x) ", "∀ {f : ℝ → ℝ}, ContinuousOn f (Set.Ici 0) → DifferentiableOn ℝ f (Set.Ioi 0) → f 0 = 0 →\n  Monotone (deriv f) → Monotone (λ x, f x / x) ", "∀ {f : ℝ → ℝ}, ContinuousOn f (Set.Ici 0) → (∀ x, 0 < x → DifferentiableAt ℝ f x) → f 0 = 0 →\n  (∀ x y, 0 < x → x < y → deriv f x < deriv f y) → Monotone (λ x, f x / x) ", "∀ {f : ℝ → ℝ}, ContinuousOn f (Set.Ici 0) → DifferentiableOn ℝ f (Set.Ioi 0) → f 0 = 0 →\n  Monotone (deriv f) → Monotone (λ x, f x / x) ", "∀ {f : ℝ → ℝ}, ContinuousOn f (Set.Ici 0) → (∀ x > 0, DifferentiableAt ℝ f x) → f 0 = 0 →\n  Monotone (deriv f) → Monotone (λ x, f x / x) "]}
{"docString": "Suppose $a \\in R^{1}, f$ is a twice-differentiable real function on $(a, \\infty)$, and $M_{0}, M_{1}, M_{2}$ are the least upper bounds of $|f(x)|,\\left|f^{\\prime}(x)\\right|,\\left|f^{\\prime \\prime}(x)\\right|$, respectively, on $(a, \\infty)$. Prove that $M_{1}^{2} \\leq 4 M_{0} M_{2} .$", "prompts": "[{\"theorem\":\n  \"∀ {X : Type u} {α : Type v} [inst : TopologicalSpace X] [inst_1 : LinearOrder α] [inst_2 : TopologicalSpace α]\\n  [inst_3 : OrderClosedTopology α] {s : Set X},\\n  IsPreconnected s →\\n    ∀ {a b : X},\\n      a ∈ s →\\n        b ∈ s → ∀ {f g : X → α}, ContinuousOn f s → ContinuousOn g s → f a ≤ g a → g b ≤ f b → ∃ x, x ∈ s ∧ f x = g x\",\n  \"isProp\": true,\n  \"docString\":\n  \"Intermediate value theorem for two functions: if `f` and `g` are two functions continuous\\non a preconnected set `s` and for some `a b ∈ s` we have `f a ≤ g a` and `g b ≤ f b`,\\nthen for some `x ∈ s` we have `f x = g x`. \"},\n {\"theorem\":\n  \"∀ {X : Type u} {α : Type v} [inst : TopologicalSpace X] [inst_1 : LinearOrder α] [inst_2 : TopologicalSpace α]\\n  [inst_3 : OrderClosedTopology α] [inst_4 : PreconnectedSpace X] {a b : X} {f g : X → α},\\n  Continuous f → Continuous g → f a ≤ g a → g b ≤ f b → ∃ x, f x = g x\",\n  \"isProp\": true,\n  \"docString\":\n  \"Intermediate value theorem for two functions: if `f` and `g` are two continuous functions\\non a preconnected space and `f a ≤ g a` and `g b ≤ f b`, then for some `x` we have `f x = g x`. \"},\n {\"theorem\":\n  \"∀ {f : ℝ → ℝ}, Differentiable ℝ f → Differentiable ℝ (deriv f) → (∀ (x : ℝ), 0 ≤ deriv^[2] f x) → ConvexOn ℝ Set.univ f\",\n  \"isProp\": true,\n  \"docString\":\n  \"If a function `f` is twice differentiable on `ℝ`, and `f''` is nonnegative on `ℝ`,\\nthen `f` is convex on `ℝ`. \"},\n {\"theorem\":\n  \"∀ {f f' : ℝ → ℝ} {a b : ℝ},\\n  ContinuousOn f (Set.Icc a b) →\\n    (∀ (x : ℝ), x ∈ Set.Ico a b → ∀ (r : ℝ), f' x < r → ∃ᶠ (z : ℝ) in nhdsWithin x (Set.Ioi x), slope f x z < r) →\\n      ∀ {B B' : ℝ → ℝ},\\n        f a ≤ B a →\\n          (∀ (x : ℝ), HasDerivAt B (B' x) x) →\\n            (∀ (x : ℝ), x ∈ Set.Ico a b → f x = B x → f' x < B' x) → ∀ ⦃x : ℝ⦄, x ∈ Set.Icc a b → f x ≤ B x\",\n  \"isProp\": true,\n  \"docString\":\n  \"General fencing theorem for continuous functions with an estimate on the derivative.\\nLet `f` and `B` be continuous functions on `[a, b]` such that\\n\\n* `f a ≤ B a`;\\n* `B` has derivative `B'` everywhere on `ℝ`;\\n* for each `x ∈ [a, b)` the right-side limit inferior of `(f z - f x) / (z - x)`\\n  is bounded above by a function `f'`;\\n* we have `f' x < B' x` whenever `f x = B x`.\\n\\nThen `f x ≤ B x` everywhere on `[a, b]`. \"}]\n", "prompt_cons": "/-- Intermediate value theorem for two functions: if `f` and `g` are two functions continuous\non a preconnected set `s` and for some `a b ∈ s` we have `f a ≤ g a` and `g b ≤ f b`,\nthen for some `x ∈ s` we have `f x = g x`. -/\ntheorem ∀ {X : Type u} {α : Type v} [inst : TopologicalSpace X] [inst_1 : LinearOrder α] [inst_2 : TopologicalSpace α]\n  [inst_3 : OrderClosedTopology α] {s : Set X},\n  IsPreconnected s →\n    ∀ {a b : X},\n      a ∈ s →\n        b ∈ s → ∀ {f g : X → α}, ContinuousOn f s → ContinuousOn g s → f a ≤ g a → g b ≤ f b → ∃ x, x ∈ s ∧ f x = g x :=\n\n/-- Intermediate value theorem for two functions: if `f` and `g` are two continuous functions\non a preconnected space and `f a ≤ g a` and `g b ≤ f b`, then for some `x` we have `f x = g x`. -/\ntheorem ∀ {X : Type u} {α : Type v} [inst : TopologicalSpace X] [inst_1 : LinearOrder α] [inst_2 : TopologicalSpace α]\n  [inst_3 : OrderClosedTopology α] [inst_4 : PreconnectedSpace X] {a b : X} {f g : X → α},\n  Continuous f → Continuous g → f a ≤ g a → g b ≤ f b → ∃ x, f x = g x :=\n\n/-- If a function `f` is twice differentiable on `ℝ`, and `f''` is nonnegative on `ℝ`,\nthen `f` is convex on `ℝ`. -/\ntheorem ∀ {f : ℝ → ℝ}, Differentiable ℝ f → Differentiable ℝ (deriv f) → (∀ (x : ℝ), 0 ≤ deriv^[2] f x) → ConvexOn ℝ Set.univ f :=\n\n/-- General fencing theorem for continuous functions with an estimate on the derivative.\nLet `f` and `B` be continuous functions on `[a, b]` such that\n\n* `f a ≤ B a`;\n* `B` has derivative `B'` everywhere on `ℝ`;\n* for each `x ∈ [a, b)` the right-side limit inferior of `(f z - f x) / (z - x)`\n  is bounded above by a function `f'`;\n* we have `f' x < B' x` whenever `f x = B x`.\n\nThen `f x ≤ B x` everywhere on `[a, b]`. -/\ntheorem ∀ {f f' : ℝ → ℝ} {a b : ℝ},\n  ContinuousOn f (Set.Icc a b) →\n    (∀ (x : ℝ), x ∈ Set.Ico a b → ∀ (r : ℝ), f' x < r → ∃ᶠ (z : ℝ) in nhdsWithin x (Set.Ioi x), slope f x z < r) →\n      ∀ {B B' : ℝ → ℝ},\n        f a ≤ B a →\n          (∀ (x : ℝ), HasDerivAt B (B' x) x) →\n            (∀ (x : ℝ), x ∈ Set.Ico a b → f x = B x → f' x < B' x) → ∀ ⦃x : ℝ⦄, x ∈ Set.Icc a b → f x ≤ B x :=\n\n/-- Suppose $a \\in R^{1}, f$ is a twice-differentiable real function on $(a, \\infty)$, and $M_{0}, M_{1}, M_{2}$ are the least upper bounds of $|f(x)|,\\left|f^{\\prime}(x)\\right|,\\left|f^{\\prime \\prime}(x)\\right|$, respectively, on $(a, \\infty)$. Prove that $M_{1}^{2} \\leq 4 M_{0} M_{2} .$ -/\ntheorem", "choices": ["∀ {f : ℝ → ℝ}, Differentiable ℝ (Set.Ioi a) f → Differentiable ℝ (Set.Ioi a) (deriv f) →\n  (∀ M₀ M₁ M₂ : ℝ, M₀ = Sup (abs ∘ f '' Set.Ioi a) → M₁ = Sup (abs ∘ deriv f '' Set.Ioi a) → M₂ = Sup (abs ∘ deriv^[2] f '' Set.Ioi a) → M₁^2 ≤ 4 * M₀ * M₂) ", "∀ {f : ℝ → ℝ},\n  Differentiable ℝ f → Differentiable ℝ (deriv f) →\n  (∀ {a : ℝ}, a > 0 →\n    (∀ x, x > a →\n      (∃ M₀, (∀ z, z > a → abs (f z) ≤ M₀)) ∧\n      (∃ M₁, (∀ z, z > a → abs (deriv f z) ≤ M₁)) ∧\n      (∃ M₂, (∀ z, z > a → abs (deriv^[2] f z) ≤ M₂)))) →\n  ∀ { M₁ M₀ M₂ : ℝ}, 0 < M₁ ∧ 0 < M₀ ∧ 0 < M₂ → M₁ ^ 2 ≤ 4 * M₀ * M₂ ", "∀ {f : ℝ → ℝ} {a : ℝ} {M₀ M₁ M₂ : ℝ},\n  Differentiable ℝ f → Differentiable ℝ (deriv f) →\n    (∀ (x : ℝ), a < x → |f x| ≤ M₀ ∧ |deriv f x| ≤ M₁ ∧ |deriv^[2] f x| ≤ M₂) → M₁^2 ≤ 4 * M₀ * M₂ ", "∀ {f : ℝ → ℝ} {a : ℝ},\n  DifferentiableOn ℝ f (Set.Ioi a) →\n    DifferentiableOn ℝ (deriv f) (Set.Ioi a) →\n      ∀ (M₀ M₁ M₂ : ℝ),\n        (∀ (x : ℝ), x ∈ Set.Ioi a → abs (f x) ≤ M₀) →\n          (∀ (x : ℝ), x ∈ Set.Ioi a → abs (deriv f x) ≤ M₁) →\n            (∀ (x : ℝ), x ∈ Set.Ioi a → abs (deriv^[2] f x) ≤ M₂) → M₁ * M₁ ≤ 4 * M₀ * M₂ ", "forall {f : ℝ → ℝ} {a : ℝ} {M₀ M₁ M₂ : ℝ},\n  Differentiable ℝ f → Differentiable ℝ (deriv f) →\n    (∀ x, a < x → abs (f x) ≤ M₀) →\n      (∀ x, a < x → abs (deriv f x) ≤ M₁) →\n        (∀ x, a < x → abs (deriv^[2] f x) ≤ M₂) → M₁ ^ 2 ≤ 4 * M₀ * M₂ ", "∀ {f : ℝ → ℝ} {a : ℝ},\n  Differentiable ℝ f → Differentiable ℝ (deriv f) →\n    (∀ (x : ℝ), x > a → ∀ (M₀ M₁ M₂ : ℝ),\n      (M₀ ≥ 0 ∧ M₁ ≥ 0 ∧ M₂ ≥ 0) →\n        (abs (f x) ≤ M₀ ∧ abs (deriv f x) ≤ M₁ ∧ abs (deriv^[2] f x) ≤ M₂)) →\n          ∀ (M₁ M₀ M₂ : ℝ), M₁ * M₁ ≤ 4 * M₀ * M₂ ", "∀ {f : ℝ → ℝ} {a : ℝ} {M₀ M₁ M₂ : ℝ},\n  (∀ x : ℝ, x > a → DifferentiableAt ℝ f x) →\n  (∀ x : ℝ, x > a → DifferentiableAt ℝ (deriv f) x) →\n  (∀ x : ℝ, x > a → abs (f x) ≤ M₀) →\n  (∀ x : ℝ, x > a → abs (deriv f x) ≤ M₁) →\n  (∀ x : ℝ, x > a → abs (deriv^[2] f x) ≤ M₂) → M₁^2 ≤ 4 * M₀ * M₂ ", "∀ {f : ℝ → ℝ}, Differentiable ℝ f → Differentiable ℝ (deriv f) → ∀ {M₀ M₁ M₂ : ℝ},\n  (∀ x, x > a → abs (f x) ≤ M₀) → (∀ x, x > a → abs (deriv f x) ≤ M₁) → (∀ x, x > a → abs (deriv^[2] f x) ≤ M₂) → M₁^2 ≤ 4 * M₀ * M₂ ", "forall {a : ℝ} {f : ℝ → ℝ},\n  Differentiable ℝ f →\n    Differentiable ℝ (deriv f) →\n      (∃ M0 M1 M2 : ℝ,\n        (∀ x, a < x → abs (f x) ≤ M0) ∧\n        (∀ x, a < x → abs (deriv f x) ≤ M1) ∧\n        (∀ x, a < x → abs (deriv^[2] f x) ≤ M2)) →\n          ∃ M1 M0 M2 : ℝ, M1^2 ≤ 4 * M0 * M2 ", "∀ {f : ℝ → ℝ} {a : ℝ},\n  Differentiable ℝ f → Differentiable ℝ (deriv f) →\n    (∀ (x : ℝ), a < x →\n      (∀ (M₀ : ℝ), (∀ (y : ℝ), a < y → abs (f y) ≤ M₀) →\n        ∀ (M₁ : ℝ), (∀ (y : ℝ), a < y → abs (deriv f y) ≤ M₁) →\n          ∀ (M₂ : ℝ), (∀ (y : ℝ), a < y → abs (deriv^[2] f y) ≤ M₂) → M₁^2 ≤ 4 * M₀ * M₂)) "]}
{"docString": "Let $X$ be a topological space; let $A$ be a subset of $X$. Suppose that for each $x \\in A$ there is an open set $U$ containing $x$ such that $U \\subset A$. Show that $A$ is open in $X$.", "prompts": "[{\"theorem\":\n  \"∀ {X : Type u_1} [inst : TopologicalSpace X],\\n  (Pairwise fun x y => ∃ U, IsClopen U ∧ x ∈ U ∧ ¬y ∈ U) → IsTotallyDisconnected Set.univ\",\n  \"isProp\": true,\n  \"docString\":\n  \"Let `X` be a topological space, and suppose that for all distinct `x,y ∈ X`, there\\nis some clopen set `U` such that `x ∈ U` and `y ∉ U`. Then `X` is totally disconnected. \"},\n {\"theorem\":\n  \"∀ {α : Type u} [inst : TopologicalSpace α] [hα : LocallyCompactSpace α] {K U : Set α},\\n  IsCompact K → IsOpen U → K ⊆ U → ∃ L, IsCompact L ∧ K ⊆ interior L ∧ L ⊆ U\",\n  \"isProp\": true,\n  \"docString\":\n  \"In a locally compact space, for every containment `K ⊆ U` of a compact set `K` in an open\\nset `U`, there is a compact neighborhood `L` such that `K ⊆ L ⊆ U`: equivalently, there is a\\ncompact `L` such that `K ⊆ interior L` and `L ⊆ U`. \"},\n {\"theorem\":\n  \"∀ {X : Type u_1} [inst : TopologicalSpace X] {s t : Set X}, DiscreteTopology ↑s → t ⊆ s → DiscreteTopology ↑t\",\n  \"isProp\": true,\n  \"docString\":\n  \"Let `s, t ⊆ X` be two subsets of a topological space `X`.  If `t ⊆ s` and the topology induced\\nby `X`on `s` is discrete, then also the topology induces on `t` is discrete.  \"},\n {\"theorem\":\n  \"∀ {α : Type u} [inst : TopologicalSpace α] [inst_1 : T0Space α] {s : Set α},\\n  Set.Finite s → Set.Nonempty s → IsOpen s → ∃ x, x ∈ s ∧ IsOpen {x}\",\n  \"isProp\": true,\n  \"docString\":\n  \"Given an open finite set `S` in a T₀ space, there is some `x ∈ S` such that `{x}` is open. \"}]\n", "prompt_cons": "/-- Let `X` be a topological space, and suppose that for all distinct `x,y ∈ X`, there\nis some clopen set `U` such that `x ∈ U` and `y ∉ U`. Then `X` is totally disconnected. -/\ntheorem ∀ {X : Type u_1} [inst : TopologicalSpace X],\n  (Pairwise fun x y => ∃ U, IsClopen U ∧ x ∈ U ∧ ¬y ∈ U) → IsTotallyDisconnected Set.univ :=\n\n/-- In a locally compact space, for every containment `K ⊆ U` of a compact set `K` in an open\nset `U`, there is a compact neighborhood `L` such that `K ⊆ L ⊆ U`: equivalently, there is a\ncompact `L` such that `K ⊆ interior L` and `L ⊆ U`. -/\ntheorem ∀ {α : Type u} [inst : TopologicalSpace α] [hα : LocallyCompactSpace α] {K U : Set α},\n  IsCompact K → IsOpen U → K ⊆ U → ∃ L, IsCompact L ∧ K ⊆ interior L ∧ L ⊆ U :=\n\n/-- Let `s, t ⊆ X` be two subsets of a topological space `X`.  If `t ⊆ s` and the topology induced\nby `X`on `s` is discrete, then also the topology induces on `t` is discrete. -/\ntheorem ∀ {X : Type u_1} [inst : TopologicalSpace X] {s t : Set X}, DiscreteTopology ↑s → t ⊆ s → DiscreteTopology ↑t :=\n\n/-- Given an open finite set `S` in a T₀ space, there is some `x ∈ S` such that `{x}` is open. -/\ntheorem ∀ {α : Type u} [inst : TopologicalSpace α] [inst_1 : T0Space α] {s : Set α},\n  Set.Finite s → Set.Nonempty s → IsOpen s → ∃ x, x ∈ s ∧ IsOpen {x} :=\n\n/-- Let $X$ be a topological space; let $A$ be a subset of $X$. Suppose that for each $x \\in A$ there is an open set $U$ containing $x$ such that $U \\subset A$. Show that $A$ is open in $X$. -/\ntheorem", "choices": ["∀ {X : Type u_1} [inst : TopologicalSpace X] {A : Set X},\n  (∀ x, x ∈ A → ∃ U, IsOpen U ∧ x ∈ U ∧ U ⊆ A) → IsOpen A ", "∀ {X : Type u_1} [inst : TopologicalSpace X] {A : Set X},\n  (∀ x ∈ A, ∃ U, IsOpen U ∧ x ∈ U ∧ U ⊆ A) → IsOpen A ", "∀ {X : Type u_1} [inst : TopologicalSpace X] {A : Set X},\n  (∀ x ∈ A, ∃ U, IsOpen U ∧ x ∈ U ∧ U ⊆ A) → IsOpen A ", "forall {X : Type u_1} [inst : TopologicalSpace X] {A : Set X},\n  (∀ x ∈ A, ∃ U, IsOpen U ∧ x ∈ U ∧ U ⊆ A) → IsOpen A ", "∀ {X : Type u_1} [inst : TopologicalSpace X] {A : Set X},\n  (∀ x ∈ A, ∃ U, IsOpen U ∧ x ∈ U ∧ U ⊆ A) → IsOpen A ", "∀ {X : Type u_1} [inst : TopologicalSpace X] {A : Set X},\n  (∀ x ∈ A, ∃ U, IsOpen U ∧ x ∈ U ∧ U ⊆ A) → IsOpen A ", "∀ {X : Type u_1} [inst : TopologicalSpace X] {A : Set X},\n  (∀ x ∈ A, ∃ U, IsOpen U ∧ x ∈ U ∧ U ⊆ A) → IsOpen A ", "∀ {X : Type u_1} [inst : TopologicalSpace X] {A : Set X},\n  (∀ x ∈ A, ∃ U, IsOpen U ∧ x ∈ U ∧ U ⊆ A) → IsOpen A ", "∀ {X : Type u_1} [inst : TopologicalSpace X] {A : Set X},\n  (∀ x ∈ A, ∃ U, IsOpen U ∧ x ∈ U ∧ U ⊆ A) → IsOpen A ", "∀ {X : Type u_1} [inst : TopologicalSpace X] {A : Set X},\n  (∀ x ∈ A, ∃ U, IsOpen U ∧ x ∈ U ∧ U ⊆ A) → IsOpen A "]}
{"docString": "If $\\mathcal{T}_\\alpha$ is a family of topologies on $X$, show that $\\bigcap \\mathcal{T}_\\alpha$ is a topology on $X$.", "prompts": "[{\"theorem\":\n  \"∀ {α : Type u} [inst : TopologicalSpace α] {s : Set α} {ι : Type v},\\n  IsCompact s →\\n    ∀ (Z : ι → Set α),\\n      (∀ (i : ι), IsClosed (Z i)) →\\n        (∀ (t : Finset ι), Set.Nonempty (s ∩ ⋂ (i : ι) (_ : i ∈ t), Z i)) → Set.Nonempty (s ∩ ⋂ (i : ι), Z i)\",\n  \"isProp\": true,\n  \"docString\":\n  \"To show that a compact set intersects the intersection of a family of closed sets,\\nit is sufficient to show that it intersects every finite subfamily. \"},\n {\"theorem\":\n  \"∀ {α : Type u_2} {β : Type u_1} [inst : UniformSpace β] {𝔖 : Set (Set α)} [inst_1 : T2Space β],\\n  ⋃₀ 𝔖 = Set.univ → T2Space (UniformOnFun α β 𝔖)\",\n  \"isProp\": true,\n  \"docString\":\n  \"If `𝔖` covers `α`, then the topology of `𝔖`-convergence is T₂. \"},\n {\"theorem\":\n  \"∀ {α : Type u_1} {β : Type u_2} [inst : TopologicalSpace α] [inst_1 : TopologicalSpace β]\\n  [inst_2 : LocallyCompactSpace α] [inst_3 : T2Space β] {ι : Type u_3} {l : Filter ι} [inst_4 : Filter.NeBot l]\\n  (F : ι → C(α, β)),\\n  (∃ f, Filter.Tendsto F l (nhds f)) ↔\\n    ∀ (s : Set α), IsCompact s → ∃ f, Filter.Tendsto (fun i => ContinuousMap.restrict s (F i)) l (nhds f)\",\n  \"isProp\": true,\n  \"docString\":\n  \"A family `F` of functions in `C(α, β)` converges in the compact-open topology, if and only if\\nit converges in the compact-open topology on each compact subset of `α`. \"},\n {\"theorem\":\n  \"∀ {ι : Type u_2} {π : ι → Type u_3} [inst : (i : ι) → TopologicalSpace (π i)] {X : Type u_1} (f : (i : ι) → X → π i),\\n  Inducing fun x i => f i x\",\n  \"isProp\": true,\n  \"docString\":\n  \"Suppose `π i` is a family of topological spaces indexed by `i : ι`, and `X` is a type\\nendowed with a family of maps `f i : X → π i` for every `i : ι`, hence inducing a\\nmap `g : X → Π i, π i`. This lemma shows that infimum of the topologies on `X` induced by\\nthe `f i` as `i : ι` varies is simply the topology on `X` induced by `g : X → Π i, π i`\\nwhere `Π i, π i` is endowed with the usual product topology. \"}]\n", "prompt_cons": "/-- To show that a compact set intersects the intersection of a family of closed sets,\nit is sufficient to show that it intersects every finite subfamily. -/\ntheorem ∀ {α : Type u} [inst : TopologicalSpace α] {s : Set α} {ι : Type v},\n  IsCompact s →\n    ∀ (Z : ι → Set α),\n      (∀ (i : ι), IsClosed (Z i)) →\n        (∀ (t : Finset ι), Set.Nonempty (s ∩ ⋂ (i : ι) (_ : i ∈ t), Z i)) → Set.Nonempty (s ∩ ⋂ (i : ι), Z i) :=\n\n/-- If `𝔖` covers `α`, then the topology of `𝔖`-convergence is T₂. -/\ntheorem ∀ {α : Type u_2} {β : Type u_1} [inst : UniformSpace β] {𝔖 : Set (Set α)} [inst_1 : T2Space β],\n  ⋃₀ 𝔖 = Set.univ → T2Space (UniformOnFun α β 𝔖) :=\n\n/-- A family `F` of functions in `C(α, β)` converges in the compact-open topology, if and only if\nit converges in the compact-open topology on each compact subset of `α`. -/\ntheorem ∀ {α : Type u_1} {β : Type u_2} [inst : TopologicalSpace α] [inst_1 : TopologicalSpace β]\n  [inst_2 : LocallyCompactSpace α] [inst_3 : T2Space β] {ι : Type u_3} {l : Filter ι} [inst_4 : Filter.NeBot l]\n  (F : ι → C(α, β)),\n  (∃ f, Filter.Tendsto F l (nhds f)) ↔\n    ∀ (s : Set α), IsCompact s → ∃ f, Filter.Tendsto (fun i => ContinuousMap.restrict s (F i)) l (nhds f) :=\n\n/-- Suppose `π i` is a family of topological spaces indexed by `i : ι`, and `X` is a type\nendowed with a family of maps `f i : X → π i` for every `i : ι`, hence inducing a\nmap `g : X → Π i, π i`. This lemma shows that infimum of the topologies on `X` induced by\nthe `f i` as `i : ι` varies is simply the topology on `X` induced by `g : X → Π i, π i`\nwhere `Π i, π i` is endowed with the usual product topology. -/\ntheorem ∀ {ι : Type u_2} {π : ι → Type u_3} [inst : (i : ι) → TopologicalSpace (π i)] {X : Type u_1} (f : (i : ι) → X → π i),\n  Inducing fun x i => f i x :=\n\n/-- If $\\mathcal{T}_\\alpha$ is a family of topologies on $X$, show that $\\bigcap \\mathcal{T}_\\alpha$ is a topology on $X$. -/\ntheorem", "choices": ["∀ {α : Type u} {X : Type v} [inst : (a : α) → TopologicalSpace (X a)],\n  TopologicalSpace (⨅ (a : α), X a) ", "∀ {X : Type u} {ι : Type v} (T : ι → TopologicalSpace X),\n  TopologicalSpace X ", "∀ {X : Type u} {ι : Type u_1} (T : ι → TopologicalSpace X),\n  TopologicalSpace X ", "∀ {α : Type u_1} {X : Type u_2} {𝔗 : α → TopologicalSpace X},\n  TopologicalSpace X ", "∀ {α : Type u} {X : Type v} (t : α → TopologicalSpace X),\n  TopologicalSpace (Inf t) ", "∀ {α : Type u} {X : Type u_1} (T : α → TopologicalSpace X),\n  TopologicalSpace X ", "∀ {X : Type u_1} {ι : Type u_2} {T : ι → TopologicalSpace X},\n  TopologicalSpace.mkOfNhds (λ (x : X) (s : Set X), ∃ (i : ι), s ∈ (T i).nhds x) ", "∀ {X : Type u_1} {ι : Type u_2} (T : ι → TopologicalSpace X),\n  TopologicalSpace X ", "∀ {α : Type u} {X : Type u_1} (T : α → TopologicalSpace X),\n  TopologicalSpace X ", "∀ {α : Type u} {X : Type v} (T : α → TopologicalSpace X),\n  TopologicalSpace X "]}
{"docString": "Let $\\mathcal{T}_\\alpha$ be a family of topologies on $X$. Show that there is a unique smallest topology on $X$ containing all the collections $\\mathcal{T}_\\alpha$.", "prompts": "[{\"theorem\":\n  \"∀ {α : Type u_2} {β : Type u_1} [inst : UniformSpace β] {𝔖 : Set (Set α)} [inst_1 : T2Space β],\\n  ⋃₀ 𝔖 = Set.univ → T2Space (UniformOnFun α β 𝔖)\",\n  \"isProp\": true,\n  \"docString\":\n  \"If `𝔖` covers `α`, then the topology of `𝔖`-convergence is T₂. \"},\n {\"theorem\":\n  \"∀ {ι : Type u_2} {π : ι → Type u_3} [inst : (i : ι) → TopologicalSpace (π i)] {X : Type u_1} (f : (i : ι) → X → π i),\\n  Inducing fun x i => f i x\",\n  \"isProp\": true,\n  \"docString\":\n  \"Suppose `π i` is a family of topological spaces indexed by `i : ι`, and `X` is a type\\nendowed with a family of maps `f i : X → π i` for every `i : ι`, hence inducing a\\nmap `g : X → Π i, π i`. This lemma shows that infimum of the topologies on `X` induced by\\nthe `f i` as `i : ι` varies is simply the topology on `X` induced by `g : X → Π i, π i`\\nwhere `Π i, π i` is endowed with the usual product topology. \"},\n {\"theorem\":\n  \"∀ {α : Type u} [inst : TopologicalSpace α] {ι : Type u_1} [inst_1 : CompactSpace α] {f : ι → Set α},\\n  LocallyFinite f → Set.Finite {i | Set.Nonempty (f i)}\",\n  \"isProp\": true,\n  \"docString\":\n  \"If `α` is a compact space, then a locally finite family of sets of `α` can have only finitely\\nmany nonempty elements. \"},\n {\"theorem\":\n  \"∀ {α : Type u_1} {β : Type u_2} [inst : TopologicalSpace α] [inst_1 : TopologicalSpace β],\\n  ContinuousMap.compactOpen =\\n    ⨅ (s : Set α) (_ : IsCompact s), TopologicalSpace.induced (ContinuousMap.restrict s) ContinuousMap.compactOpen\",\n  \"isProp\": true,\n  \"docString\":\n  \"The compact-open topology on `C(α, β)` is equal to the infimum of the compact-open topologies\\non `C(s, β)` for `s` a compact subset of `α`.  The key point of the proof is that the union of the\\ncompact subsets of `α` is equal to the union of compact subsets of the compact subsets of `α`. \"}]\n", "prompt_cons": "/-- If `𝔖` covers `α`, then the topology of `𝔖`-convergence is T₂. -/\ntheorem ∀ {α : Type u_2} {β : Type u_1} [inst : UniformSpace β] {𝔖 : Set (Set α)} [inst_1 : T2Space β],\n  ⋃₀ 𝔖 = Set.univ → T2Space (UniformOnFun α β 𝔖) :=\n\n/-- Suppose `π i` is a family of topological spaces indexed by `i : ι`, and `X` is a type\nendowed with a family of maps `f i : X → π i` for every `i : ι`, hence inducing a\nmap `g : X → Π i, π i`. This lemma shows that infimum of the topologies on `X` induced by\nthe `f i` as `i : ι` varies is simply the topology on `X` induced by `g : X → Π i, π i`\nwhere `Π i, π i` is endowed with the usual product topology. -/\ntheorem ∀ {ι : Type u_2} {π : ι → Type u_3} [inst : (i : ι) → TopologicalSpace (π i)] {X : Type u_1} (f : (i : ι) → X → π i),\n  Inducing fun x i => f i x :=\n\n/-- If `α` is a compact space, then a locally finite family of sets of `α` can have only finitely\nmany nonempty elements. -/\ntheorem ∀ {α : Type u} [inst : TopologicalSpace α] {ι : Type u_1} [inst_1 : CompactSpace α] {f : ι → Set α},\n  LocallyFinite f → Set.Finite {i | Set.Nonempty (f i)} :=\n\n/-- The compact-open topology on `C(α, β)` is equal to the infimum of the compact-open topologies\non `C(s, β)` for `s` a compact subset of `α`.  The key point of the proof is that the union of the\ncompact subsets of `α` is equal to the union of compact subsets of the compact subsets of `α`. -/\ntheorem ∀ {α : Type u_1} {β : Type u_2} [inst : TopologicalSpace α] [inst_1 : TopologicalSpace β],\n  ContinuousMap.compactOpen =\n    ⨅ (s : Set α) (_ : IsCompact s), TopologicalSpace.induced (ContinuousMap.restrict s) ContinuousMap.compactOpen :=\n\n/-- Let $\\mathcal{T}_\\alpha$ be a family of topologies on $X$. Show that there is a unique smallest topology on $X$ containing all the collections $\\mathcal{T}_\\alpha$. -/\ntheorem", "choices": ["∀ {X : Type u} {ι : Type u_2} (T : ι → TopologicalSpace X),\n  ∃! (T₀ : TopologicalSpace X), ∀ (i : ι), T i ≤ T₀ ", "∀ {X : Type u} {ι : Type u_1} {T : ι → TopologicalSpace X},\n  ExistsUnique fun (T_min : TopologicalSpace X) => ∀ (α : ι), HasSubset.Subset (T α).sets (T_min.sets) ", "∀ {X : Type u} {ι : Type u_1} {T : ι → TopologicalSpace X},\n  ∃! (T' : TopologicalSpace X), ∀ i, T i ≤ T' ", "∀ {X : Type u_1} {ι : Type u_2} (T : ι → TopologicalSpace X),\n  ∃! (T₀ : TopologicalSpace X), ∀ (i : ι), T i ≤ T₀ ", "∀ {ι : Type u_1} {X : Type u_2} {T : ι → Set (Set X)},\n  ∃ (T₀ : Set (Set X)), (∀ (α : ι), T α ⊆ T₀) ∧ ∀ (T₁ : Set (Set X)), (∀ (α : ι), T α ⊆ T₁) → T₀ ⊆ T₁ ", "∀ {X : Type u} {ι : Type u_1} (T : ι → TopologicalSpace X),\n  ∃ (T' : TopologicalSpace X), (∀ (i : ι), T i ≤ T') ∧ ∀ (T'' : TopologicalSpace X), (∀ (i : ι), T i ≤ T'') → T' ≤ T'' ", "∀ {X : Type u_1} {ι : Type u_2} {𝔗 : ι → TopologicalSpace X},\n  ∃! (T : TopologicalSpace X), ∀ (i : ι), 𝔗 i ≤ T ", "∀ {X : Type u} {ι : Type u_1} {𝔗 : ι → TopologicalSpace X},\n  ∃! (T : TopologicalSpace X), ∀ i, TopologicalSpace.generate_from (𝔗 i).sets ≤ T ", "∀ {α : Type u} {X : Type u_1} (𝔗 : α → Set (Set X)),\n  ∃! (𝔗₀ : Set (Set X)), TopologicalSpace.GenerateFrom 𝔗₀ ∧ ∀ a, 𝔗 a ⊆ 𝔗₀ ", "∀ {α : Type u_1} {X : Type u_2} (T : α → TopologicalSpace X),\n  ∃! (T_min : TopologicalSpace X), (∀ T' ∈ T, T_min ≤ T') ∧ ∀ T'', (∀ T' ∈ T, T'' ≤ T') → T_min ≤ T'' "]}
{"docString": "Show that if $\\mathcal{A}$ is a basis for a topology on $X$, then the topology generated by $\\mathcal{A}$ equals the intersection of all topologies on $X$ that contain $\\mathcal{A}$.", "prompts": "[{\"theorem\":\n  \"∀ {α : Type u} [t : TopologicalSpace α] {s : Set (Set α)},\\n  t = TopologicalSpace.generateFrom s →\\n    TopologicalSpace.IsTopologicalBasis ((fun f => ⋂₀ f) '' {f | Set.Finite f ∧ f ⊆ s})\",\n  \"isProp\": true,\n  \"docString\":\n  \"If a family of sets `s` generates the topology, then intersections of finite\\nsubcollections of `s` form a topological basis. \"},\n {\"theorem\":\n  \"∀ {X : Type u_1} [inst : TopologicalSpace X] {Y : Type u_2} [inst_1 : TopologicalSpace Y] {π : X → Y} {V : Set (Set X)},\\n  TopologicalSpace.IsTopologicalBasis V →\\n    QuotientMap π → IsOpenMap π → TopologicalSpace.IsTopologicalBasis (Set.image π '' V)\",\n  \"isProp\": true,\n  \"docString\":\n  \"The image of a topological basis under an open quotient map is a topological basis. \"},\n {\"theorem\":\n  \"∀ {ι : Type u_2} {E : ι → Type u_1} [inst : (i : ι) → TopologicalSpace (E i)] {s : (i : ι) → Set (Set (E i))},\\n  (∀ (i : ι), TopologicalSpace.IsTopologicalBasis (s i)) →\\n    TopologicalSpace.IsTopologicalBasis (⋃ (i : ι), (fun u => Sigma.mk i '' u) '' s i)\",\n  \"isProp\": true,\n  \"docString\":\n  \"In a disjoint union space `Σ i, E i`, one can form a topological basis by taking the union of\\ntopological bases on each of the parts of the space. \"},\n {\"theorem\":\n  \"∀ {α : Type u} {β : Type u_1} [inst : TopologicalSpace α] [inst_1 : TopologicalSpace β] {s : Set (Set α)},\\n  TopologicalSpace.IsTopologicalBasis s →\\n    ∀ {t : Set (Set β)},\\n      TopologicalSpace.IsTopologicalBasis t →\\n        TopologicalSpace.IsTopologicalBasis ((fun u => Sum.inl '' u) '' s ∪ (fun u => Sum.inr '' u) '' t)\",\n  \"isProp\": true,\n  \"docString\":\n  \"In a sum space `α ⊕ β`, one can form a topological basis by taking the union of\\ntopological bases on each of the two components. \"}]\n", "prompt_cons": "/-- If a family of sets `s` generates the topology, then intersections of finite\nsubcollections of `s` form a topological basis. -/\ntheorem ∀ {α : Type u} [t : TopologicalSpace α] {s : Set (Set α)},\n  t = TopologicalSpace.generateFrom s →\n    TopologicalSpace.IsTopologicalBasis ((fun f => ⋂₀ f) '' {f | Set.Finite f ∧ f ⊆ s}) :=\n\n/-- The image of a topological basis under an open quotient map is a topological basis. -/\ntheorem ∀ {X : Type u_1} [inst : TopologicalSpace X] {Y : Type u_2} [inst_1 : TopologicalSpace Y] {π : X → Y} {V : Set (Set X)},\n  TopologicalSpace.IsTopologicalBasis V →\n    QuotientMap π → IsOpenMap π → TopologicalSpace.IsTopologicalBasis (Set.image π '' V) :=\n\n/-- In a disjoint union space `Σ i, E i`, one can form a topological basis by taking the union of\ntopological bases on each of the parts of the space. -/\ntheorem ∀ {ι : Type u_2} {E : ι → Type u_1} [inst : (i : ι) → TopologicalSpace (E i)] {s : (i : ι) → Set (Set (E i))},\n  (∀ (i : ι), TopologicalSpace.IsTopologicalBasis (s i)) →\n    TopologicalSpace.IsTopologicalBasis (⋃ (i : ι), (fun u => Sigma.mk i '' u) '' s i) :=\n\n/-- In a sum space `α ⊕ β`, one can form a topological basis by taking the union of\ntopological bases on each of the two components. -/\ntheorem ∀ {α : Type u} {β : Type u_1} [inst : TopologicalSpace α] [inst_1 : TopologicalSpace β] {s : Set (Set α)},\n  TopologicalSpace.IsTopologicalBasis s →\n    ∀ {t : Set (Set β)},\n      TopologicalSpace.IsTopologicalBasis t →\n        TopologicalSpace.IsTopologicalBasis ((fun u => Sum.inl '' u) '' s ∪ (fun u => Sum.inr '' u) '' t) :=\n\n/-- Show that if $\\mathcal{A}$ is a basis for a topology on $X$, then the topology generated by $\\mathcal{A}$ equals the intersection of all topologies on $X$ that contain $\\mathcal{A}$. -/\ntheorem", "choices": ["∀ {α : Type u} [t : TopologicalSpace α] {A : Set (Set α)},\n  TopologicalSpace.IsTopologicalBasis A →\n    TopologicalSpace.generateFrom A = ⋂₀ {t' : TopologicalSpace α | A ⊆ t'.is_open_set} ", "∀ {α : Type u} [t : TopologicalSpace α] {A : Set (Set α)},\n  TopologicalSpace.IsTopologicalBasis A →\n    t = TopologicalSpace.generateFrom A →\n      ∀ {u : TopologicalSpace α},\n        (A ⊆ u.1) → (t ≤ u) ", "∀ {α : Type u} [t : TopologicalSpace α] {A : Set (Set α)},\n  TopologicalSpace.IsTopologicalBasis A →\n    t = TopologicalSpace.generateFrom A →\n      t = inf {u | TopologicalSpace.generateFrom A ≤ u} ", "∀ {α : Type u} {A : Set (Set α)},\n  TopologicalSpace.IsTopologicalBasis A →\n    TopologicalSpace.generateFrom A = ⋂₀ {τ : TopologicalSpace α | A ⊆ τ.1} ", "∀ {α : Type u} {A : Set (Set α)},\n  TopologicalSpace.IsTopologicalBasis A →\n    TopologicalSpace.generateFrom A = ⋂₀ {t : TopologicalSpace α | A ⊆ t.2} ", "∀ {α : Type u} {A : Set (Set α)},\n  TopologicalSpace.IsTopologicalBasis A →\n    TopologicalSpace.generateFrom A = ⋂₀ {τ : TopologicalSpace α | A ⊆ τ.s} ", "∀ {α : Type u} (A : Set (Set α)),\n  TopologicalSpace.IsTopologicalBasis A →\n    TopologicalSpace.generateFrom A = ⋂₀ {T : TopologicalSpace α | A ⊆ T.basis_sets} ", "∀ {α : Type u} (A : Set (Set α)),\n  TopologicalSpace.IsTopologicalBasis A →\n    TopologicalSpace.generateFrom A = ⋂₀ {t : TopologicalSpace α | A ⊆ TopologicalSpace.IsOpen t} ", "∀ {α : Type u} [t : TopologicalSpace α] {A : Set (Set α)},\n  TopologicalSpace.IsTopologicalBasis A →\n    t = TopologicalSpace.generateFrom A →\n      t = ⋂₀ {T : TopologicalSpace α | A ⊆ T.1} ", "∀ {α : Type u} [t : TopologicalSpace α] {A : Set (Set α)},\n  TopologicalSpace.IsTopologicalBasis A →\n    TopologicalSpace.generateFrom A = Inf {τ : TopologicalSpace α | A ⊆ τ.1} "]}
{"docString": "Show that the lower limit topology $\\mathbb{R}_l$ and $K$-topology $\\mathbb{R}_K$ are not comparable.", "prompts": "[{\"theorem\":\n  \"∀ {K : Type u_1} {L : Type u_2} [inst : Field K] [inst_1 : Field L] [inst_2 : Algebra K L],\\n  Algebra.IsIntegral K L → IsTotallyDisconnected Set.univ\",\n  \"isProp\": true,\n  \"docString\":\n  \"If `L/K` is an algebraic field extension, then the Krull topology on `L ≃ₐ[K] L` is\\ntotally disconnected. \"},\n {\"theorem\":\n  \"∀ {α : Type u_1} [inst : Preorder α] [inst_1 : TopologicalSpace α] [inst_2 : LowerTopology α] {s : Set α},\\n  Set.Finite s → IsClosed ↑(upperClosure s)\",\n  \"isProp\": true,\n  \"docString\":\n  \"The upper closure of a finite set is closed in the lower topology. \"},\n {\"theorem\":\n  \"∀ {K : Type u_1} {L : Type u_2} [inst : Field K] [inst_1 : Field L] [inst_2 : Algebra K L],\\n  Algebra.IsIntegral K L → T2Space (L ≃ₐ[K] L)\",\n  \"isProp\": true,\n  \"docString\":\n  \"If `L/K` is an algebraic extension, then the Krull topology on `L ≃ₐ[K] L` is Hausdorff. \"},\n {\"theorem\":\n  \"∀ {𝕜 : Type u_1} [inst : NontriviallyNormedField 𝕜] {E : Type u_2} [inst_1 : SeminormedAddCommGroup E]\\n  [inst_2 : NormedSpace 𝕜 E], UniformSpace.toTopologicalSpace ≤ WeakDual.instTopologicalSpace\",\n  \"isProp\": true,\n  \"docString\":\n  \"The weak-star topology is coarser than the dual-norm topology. \"}]\n", "prompt_cons": "/-- If `L/K` is an algebraic field extension, then the Krull topology on `L ≃ₐ[K] L` is\ntotally disconnected. -/\ntheorem ∀ {K : Type u_1} {L : Type u_2} [inst : Field K] [inst_1 : Field L] [inst_2 : Algebra K L],\n  Algebra.IsIntegral K L → IsTotallyDisconnected Set.univ :=\n\n/-- The upper closure of a finite set is closed in the lower topology. -/\ntheorem ∀ {α : Type u_1} [inst : Preorder α] [inst_1 : TopologicalSpace α] [inst_2 : LowerTopology α] {s : Set α},\n  Set.Finite s → IsClosed ↑(upperClosure s) :=\n\n/-- If `L/K` is an algebraic extension, then the Krull topology on `L ≃ₐ[K] L` is Hausdorff. -/\ntheorem ∀ {K : Type u_1} {L : Type u_2} [inst : Field K] [inst_1 : Field L] [inst_2 : Algebra K L],\n  Algebra.IsIntegral K L → T2Space (L ≃ₐ[K] L) :=\n\n/-- The weak-star topology is coarser than the dual-norm topology. -/\ntheorem ∀ {𝕜 : Type u_1} [inst : NontriviallyNormedField 𝕜] {E : Type u_2} [inst_1 : SeminormedAddCommGroup E]\n  [inst_2 : NormedSpace 𝕜 E], UniformSpace.toTopologicalSpace ≤ WeakDual.instTopologicalSpace :=\n\n/-- Show that the lower limit topology $\\mathbb{R}_l$ and $K$-topology $\\mathbb{R}_K$ are not comparable. -/\ntheorem", "choices": ["NotComparableLowerLimitAndKTopology : NotComparable Order.topologicalSpace ", "lower_limit_not_comparable_k_topology : ¬(TopologicalSpace.coarserThan (lowerLimitTopology ℝ) (kTopology ℝ) ∨ TopologicalSpace.coarserThan (kTopology ℝ) (lowerLimitTopology ℝ)) ", "∀ {R : Type u_1} [inst : LinearOrderedField R] [inst_1 : TopologicalSpace R] [inst_2 : LowerLimitTopology R]\n  [inst_3 : KTopology R], ¬(TopologicalSpace.toUniformSpace ≤ LowerLimitTopology.toUniformSpace)\n  ∧ ¬(LowerLimitTopology.toUniformSpace ≤ TopologicalSpace.toUniformSpace) ", "∀ {α : Type u_1} [inst : LinearOrderedField α] [inst_1 : TopologicalSpace α] [inst_2 : LowerLimitTopology α]\n  [inst_3 : KTopology α], ¬(UniformSpace.toTopologicalSpace ≤ LowerLimitTopology.toTopologicalSpace) ∧\n  ¬(LowerLimitTopology.toTopologicalSpace ≤ KTopology.toTopologicalSpace) ", "∀ {α : Type u_1} [inst : Preorder α] [inst_1 : TopologicalSpace α] [inst_2 : LowerLimitTopology α] [inst_3 : KTopology α],\n  Not (LowerLimitTopology.toTopologicalSpace ≤ KTopology.toTopologicalSpace) ∧\n  Not (KTopology.toTopologicalSpace ≤ LowerLimitTopology.toTopologicalSpace) ", "∀ {R : Type u_1} [inst : LinearOrder R] [inst_1 : TopologicalSpace R] [inst_2 : LowerLimitTopology R] [inst_3 : KTopology R],\n  ¬(LowerLimitTopology.toTopologicalSpace ≤ KTopology.toTopologicalSpace) ∧\n  ¬(KTopology.toTopologicalSpace ≤ LowerLimitTopology.toTopologicalSpace) ", "∀ {α : Type u_1} [inst : LinearOrderedAddCommGroup α] [inst_1 : TopologicalSpace α] [inst_2 : OrderTopology α],\n  Not (TopologicalSpace.lowerLimitTopology α ≤ TopologicalSpace.KTopology α) ∧\n  Not (TopologicalSpace.KTopology α ≤ TopologicalSpace.lowerLimitTopology α) ", "∀ {𝕜 : Type u_1} [inst : NontriviallyNormedField 𝕜] {E : Type u_2} [inst_1 : SeminormedAddCommGroup E]\n  [inst_2 : NormedSpace 𝕜 E], ¬(LowerLimitTopologicalSpace ≤ KTopologicalSpace) ∧ ¬(KTopologicalSpace ≤ LowerLimitTopologicalSpace) ", "forall {R : Type u_1} [inst : LinearOrderedField R] [inst_1 : TopologicalSpace R] [inst_2 : OrderTopology R] [inst_3 : KTopology R],\n  ¬((LowerLimitTopologicalSpace R).toUniformSpace.toTopologicalSpace ≤ (KTopologyTopologicalSpace R).toUniformSpace.toTopologicalSpace) ∧\n  ¬((KTopologyTopologicalSpace R).toUniformSpace.toTopologicalSpace ≤ (LowerLimitTopologicalSpace R).toUniformSpace.toTopologicalSpace) ", "∀ {α : Type u_1} [inst : LinearOrder α] [inst_1 : TopologicalSpace α] [inst_2 : LowerLimitTopology α]\n  [inst_3 : KTopology α], noncomparable_topologies "]}
{"docString": "Show that the collection $\\{(a,b) \\mid a < b, a \\text{ and } b \\text{ rational}\\}$ is a basis that generates a topology different from the lower limit topology on $\\mathbb{R}$.", "prompts": "[{\"theorem\":\n  \"∀ {X : Type u_1} [inst : TopologicalSpace X] {S : Setoid X} {V : Set (Set X)},\\n  TopologicalSpace.IsTopologicalBasis V →\\n    IsOpenMap Quotient.mk' → TopologicalSpace.IsTopologicalBasis (Set.image Quotient.mk' '' V)\",\n  \"isProp\": true,\n  \"docString\":\n  \"The image of a topological basis \\\"downstairs\\\" in an open quotient is a topological basis. \"},\n {\"theorem\":\n  \"∀ {X : Type u_1} [inst : TopologicalSpace X] {Y : Type u_2} [inst_1 : TopologicalSpace Y] {π : X → Y} {V : Set (Set X)},\\n  TopologicalSpace.IsTopologicalBasis V →\\n    QuotientMap π → IsOpenMap π → TopologicalSpace.IsTopologicalBasis (Set.image π '' V)\",\n  \"isProp\": true,\n  \"docString\":\n  \"The image of a topological basis under an open quotient map is a topological basis. \"},\n {\"theorem\":\n  \"∀ {α : Type u_1} {E : Type u_2} {F : Type u_3} [inst : NormedAddCommGroup E] [inst_1 : NormedSpace ℝ E]\\n  [inst_2 : NormedAddCommGroup F] [inst_3 : NormedSpace ℝ F] {m : MeasurableSpace α} {μ : MeasureTheory.Measure α}\\n  [inst_4 : CompleteSpace F] {T : Set α → E →L[ℝ] F} {C : ℝ} (hT : MeasureTheory.DominatedFinMeasAdditive μ T C)\\n  {ι : Type u_4} {l : Filter ι} [inst_5 : Filter.IsCountablyGenerated l] {fs : ι → α → E} {f : α → E} (bound : α → ℝ),\\n  (∀ᶠ (n : ι) in l, MeasureTheory.AEStronglyMeasurable (fs n) μ) →\\n    (∀ᶠ (n : ι) in l, ∀ᵐ (a : α) ∂μ, ‖fs n a‖ ≤ bound a) →\\n      MeasureTheory.Integrable bound →\\n        (∀ᵐ (a : α) ∂μ, Filter.Tendsto (fun n => fs n a) l (nhds (f a))) →\\n          Filter.Tendsto (fun n => MeasureTheory.setToFun μ T hT (fs n)) l (nhds (MeasureTheory.setToFun μ T hT f))\",\n  \"isProp\": true,\n  \"docString\":\n  \"Lebesgue dominated convergence theorem for filters with a countable basis \"},\n {\"theorem\":\n  \"∀ {α : Type u_2} {m : MeasurableSpace α} {μ : MeasureTheory.Measure α} {ι : Type u_1} {l : Filter ι}\\n  [inst : Filter.IsCountablyGenerated l] {F : ι → α → ENNReal} {f : α → ENNReal} (bound : α → ENNReal),\\n  (∀ᶠ (n : ι) in l, Measurable (F n)) →\\n    (∀ᶠ (n : ι) in l, ∀ᵐ (a : α) ∂μ, F n a ≤ bound a) →\\n      ∫⁻ (a : α), bound a ∂μ ≠ ⊤ →\\n        (∀ᵐ (a : α) ∂μ, Filter.Tendsto (fun n => F n a) l (nhds (f a))) →\\n          Filter.Tendsto (fun n => ∫⁻ (a : α), F n a ∂μ) l (nhds (∫⁻ (a : α), f a ∂μ))\",\n  \"isProp\": true,\n  \"docString\":\n  \"Dominated convergence theorem for filters with a countable basis \"}]\n", "prompt_cons": "/-- The image of a topological basis \"downstairs\" in an open quotient is a topological basis. -/\ntheorem ∀ {X : Type u_1} [inst : TopologicalSpace X] {S : Setoid X} {V : Set (Set X)},\n  TopologicalSpace.IsTopologicalBasis V →\n    IsOpenMap Quotient.mk' → TopologicalSpace.IsTopologicalBasis (Set.image Quotient.mk' '' V) :=\n\n/-- The image of a topological basis under an open quotient map is a topological basis. -/\ntheorem ∀ {X : Type u_1} [inst : TopologicalSpace X] {Y : Type u_2} [inst_1 : TopologicalSpace Y] {π : X → Y} {V : Set (Set X)},\n  TopologicalSpace.IsTopologicalBasis V →\n    QuotientMap π → IsOpenMap π → TopologicalSpace.IsTopologicalBasis (Set.image π '' V) :=\n\n/-- Lebesgue dominated convergence theorem for filters with a countable basis -/\ntheorem ∀ {α : Type u_1} {E : Type u_2} {F : Type u_3} [inst : NormedAddCommGroup E] [inst_1 : NormedSpace ℝ E]\n  [inst_2 : NormedAddCommGroup F] [inst_3 : NormedSpace ℝ F] {m : MeasurableSpace α} {μ : MeasureTheory.Measure α}\n  [inst_4 : CompleteSpace F] {T : Set α → E →L[ℝ] F} {C : ℝ} (hT : MeasureTheory.DominatedFinMeasAdditive μ T C)\n  {ι : Type u_4} {l : Filter ι} [inst_5 : Filter.IsCountablyGenerated l] {fs : ι → α → E} {f : α → E} (bound : α → ℝ),\n  (∀ᶠ (n : ι) in l, MeasureTheory.AEStronglyMeasurable (fs n) μ) →\n    (∀ᶠ (n : ι) in l, ∀ᵐ (a : α) ∂μ, ‖fs n a‖ ≤ bound a) →\n      MeasureTheory.Integrable bound →\n        (∀ᵐ (a : α) ∂μ, Filter.Tendsto (fun n => fs n a) l (nhds (f a))) →\n          Filter.Tendsto (fun n => MeasureTheory.setToFun μ T hT (fs n)) l (nhds (MeasureTheory.setToFun μ T hT f)) :=\n\n/-- Dominated convergence theorem for filters with a countable basis -/\ntheorem ∀ {α : Type u_2} {m : MeasurableSpace α} {μ : MeasureTheory.Measure α} {ι : Type u_1} {l : Filter ι}\n  [inst : Filter.IsCountablyGenerated l] {F : ι → α → ENNReal} {f : α → ENNReal} (bound : α → ENNReal),\n  (∀ᶠ (n : ι) in l, Measurable (F n)) →\n    (∀ᶠ (n : ι) in l, ∀ᵐ (a : α) ∂μ, F n a ≤ bound a) →\n      ∫⁻ (a : α), bound a ∂μ ≠ ⊤ →\n        (∀ᵐ (a : α) ∂μ, Filter.Tendsto (fun n => F n a) l (nhds (f a))) →\n          Filter.Tendsto (fun n => ∫⁻ (a : α), F n a ∂μ) l (nhds (∫⁻ (a : α), f a ∂μ)) :=\n\n/-- Show that the collection $\\{(a,b) \\mid a < b, a \\text{ and } b \\text{ rational}\\}$ is a basis that generates a topology different from the lower limit topology on $\\mathbb{R}$. -/\ntheorem", "choices": ["∀ {α : Type u_2} {m : MeasurableSpace α} {μ : MeasureTheory.Measure α} {ι : Type u_1} {l : Filter ι}\n  [inst : Filter.IsCountablyGenerated l] {F : ι → α → ℝ} {f : α → ℝ} (bound : α → ℝ),\n  (∀ᶠ (n : ι) in l, Measurable (F n)) →\n    (∀ᶠ (n : ι) in l, ∀ᵐ (a : α) ∂μ, F n a ≤ bound a) →\n      ∫⁻ (a : α), ennreal.of_real (bound a) ∂μ ≠ ⊤ →\n        (∀ᵐ (a : α) ∂μ, Filter.Tendsto (fun n => F n a) l (nhds (f a))) →\n          Filter.Tendsto (fun n => ∫⁻ (a : α), ennreal.of_real (F n a) ∂μ) l (nhds (∫⁻ (a : α), ennreal.of_real (f a) ∂μ)) ", "∀ {α : Type u_1} [inst : TopologicalSpace α] {S : Set α} [inst_1 : LinearOrder α] [inst_2 : TopologicalSpace.SecondCountableTopology α]\n  [inst_3 : OrderTopology α] (ab_set : Set (α × α)),\n  (∀ (ab : α × α), ab ∈ ab_set ↔ (ab.fst < ab.snd ∧ Set.Range Rat.of_int ⊆ insert ab.fst (insert ab.snd Set.Univ))) →\n    TopologicalSpace.IsTopologicalBasis (SetOf fun I => ∃ ab ∈ ab_set, I = Set.Ioo ab.fst ab.snd) →\n      Not (TopologicalSpace.IsTopologicalBasis (SetOf fun I => ∃ a ∈ insert ⊥ Set.Univ, I = Set.Ici a)) ", "∀ {α : Type u_1} [inst : LinearOrder α] [inst_1 : TopologicalSpace α] [inst_2 : OrderTopology α] [inst_3 : DenselyOrdered α],\n  ¬TopologicalSpace.IsTopologicalBasis (SetOf fun s => ∃ a b : ℚ, a < b ∧ Ioo (a : α) (b : α) = s) ", "∀ {α : Type*} [inst : LinearOrder α] [inst_1 : TopologicalSpace α] [inst_2 : OrderTopology α] {ι : Type*} [inst_3 : Nonempty ι]\n  (l : ι → α) {a b : α} (hab : a < b) (ha : ∃ q : ℚ, a < q ∧ (q : α) ≤ b) (hb : ∃ q : ℚ, a ≤ (q : α) ∧ q < b),\n  ∃ u v : Set α, HasMem.Mem u (OrderTopology.BasisSet.IntervalBasis l) ∧ HasMem.Mem v (OrderTopology.BasisSet.IntervalBasis l) ∧\n    a ∈ u ∧ b ∈ v ∧ u ∩ v = ∅ ", "forall {α : Type u_1} [inst : TopologicalSpace α] {ι : Type u_2} {l : Filter ι} [inst_1 : Nonempty ι]\n  [inst_2 : Filter.IsCountablyGenerated l] {B : ι → Set α} {a : α}, (forall n : ι, IsOpen (B n)) →\n    Directed Superset B → (∀ (s : Set α), IsOpen s → a ∈ s → ∃ (i : ι), B i ⊆ s) →\n      (∃ (s : Set α), IsOpen s ∧ ¬(∃ (i : ι), B i ⊆ s)) ", "∀ {α : Type} (_inst_1 : TopologicalSpace α) {s : Set α},\n  (∃ (y : α), y ∈ s) →\n    (∃ (a b : ℚ), a < b ∧ ∀ (x : α), x ∈ s ↔ a < x ∧ x < b) →\n      TopologicalSpace.IsTopologicalBasis (SetOf (λ (t : Set α), ∃ (a b : ℚ), a < b ∧ ∀ (x : α), x ∈ t ↔ a < x ∧ x < b)) →\n        TopologicalSpace.GeneratesTopology (TopologicalSpace.coarserThan _) (nhdsWithin s (Set.Iio _)) ", "∀ {α : Type u_1} [inst : LinearOrder α] [inst_1 : TopologicalSpace α] [inst_2 : OrderTopology α] [inst_3 : DenselyOrdered α],\n  ∃ V : Set (Set α),\n    TopologicalSpace.IsTopologicalBasis V ∧\n      ∀ a b : α, a < b → ∃ u ∈ V, a ∈ u ∧ ∀ (v : Set α), a ∈ v → v ∈ V → v ⊆ u → b ∈ v → u = v ", "∀ {α : Type u_1} [inst : LinearOrder α] [inst_1 : TopologicalSpace α] [inst_2 : NoMinOrder α] [inst_3 : NoMaxOrder α],\n  (TopologicalSpace.IsTopologicalBasis {s : Set α | ∃ (a b : ℚ), a < b ∧ s = Set.Ioo a b}) →\n    (∃ (a b : ℚ), a < b ∧ ∀ (l : α), Filter.NeBot (𝓝[Set.Ico l (b : α)] l)) →\n      ¬TopologicalSpace.IsTopologicalBasis {s : Set α | ∃ (l : α), s = Set.Ico l (Inf {b : α | b > l})} ", "∀ {α : Type u_1} [inst : LinearOrder α] [inst_1 : TopologicalSpace α] [inst_2 : OrderTopology α] [inst_3 : DenseOrder α],\n  Set.Union (SetOf fun ab => ab.1 < ab.2 ∧ (∀ x, ab.1 < x ∧ x < ab.2 → x ∈ Set.Ioo ab.1 ab.2) ∧\n                                (∀ x, x < ab.1 ∨ ab.2 < x → x ∉ Set.Ioo ab.1 ab.2)) ≠ TopologicalSpace.generateFrom (SetOf Set.Ioi) ", "∀ {X : Type u_1} [inst : TopologicalSpace X],\n  let B "]}
{"docString": "A map $f: X \\rightarrow Y$ is said to be an open map if for every open set $U$ of $X$, the set $f(U)$ is open in $Y$. Show that $\\pi_{1}: X \\times Y \\rightarrow X$ and $\\pi_{2}: X \\times Y \\rightarrow Y$ are open maps.", "prompts": "[{\"theorem\":\n  \"∀ {α : Type u_1} {β : Type u_2} [inst : TopologicalSpace α] [inst_1 : TopologicalSpace β] {f : α → β},\\n  IsOpenMap f → Continuous f → Function.Surjective f → QuotientMap f\",\n  \"isProp\": true,\n  \"docString\": \"A continuous surjective open map is a quotient map. \"},\n {\"theorem\":\n  \"∀ {X : Type u} [inst : TopologicalSpace X] {ι : Type u_1} {Y : ι → Type u_2} [inst_1 : (i : ι) → TopologicalSpace (Y i)]\\n  {f₀ f₁ : (i : ι) → C(X, Y i)},\\n  (∀ (i : ι), ContinuousMap.Homotopic (f₀ i) (f₁ i)) →\\n    ContinuousMap.Homotopic (ContinuousMap.pi f₀) (ContinuousMap.pi f₁)\",\n  \"isProp\": true,\n  \"docString\":\n  \"If each `f₀ i : C(X, Y i)` is homotopic to `f₁ i : C(X, Y i)`, then `ContinuousMap.pi f₀` is\\nhomotopic to `ContinuousMap.pi f₁`. \"},\n {\"theorem\":\n  \"∀ {𝕜 : Type u} [hnorm : NontriviallyNormedField 𝕜] {E : Type v} [inst : AddCommGroup E] [inst_1 : Module 𝕜 E]\\n  [inst_2 : TopologicalSpace E] [inst_3 : TopologicalAddGroup E] [inst_4 : ContinuousSMul 𝕜 E] {F : Type w}\\n  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜 F] [inst_7 : TopologicalSpace F] [inst_8 : TopologicalAddGroup F]\\n  [inst_9 : ContinuousSMul 𝕜 F] [inst_10 : CompleteSpace 𝕜] [inst_11 : T2Space E] [inst_12 : FiniteDimensional 𝕜 E]\\n  (f : F →ₗ[𝕜] E), Function.Surjective ↑f → IsOpenMap ↑f\",\n  \"isProp\": true,\n  \"docString\":\n  \"A surjective linear map `f` with finite dimensional codomain is an open map. \"},\n {\"theorem\":\n  \"∀ {𝕜 : Type u_1} {V : Type u_2} {V₂ : Type u_4} {P : Type u_3} {P₂ : Type u_5} [inst : NormedField 𝕜]\\n  [inst_1 : SeminormedAddCommGroup V] [inst_2 : SeminormedAddCommGroup V₂] [inst_3 : NormedSpace 𝕜 V]\\n  [inst_4 : NormedSpace 𝕜 V₂] [inst_5 : PseudoMetricSpace P] [inst_6 : PseudoMetricSpace P₂]\\n  [inst_7 : NormedAddTorsor V P] [inst_8 : NormedAddTorsor V₂ P₂] {f : P →ᵃ[𝕜] P₂}, IsOpenMap ↑f.linear ↔ IsOpenMap ↑f\",\n  \"isProp\": true,\n  \"docString\":\n  \"If `f` is an affine map, then its linear part is an open map iff `f` is an open map. \"}]\n", "prompt_cons": "/-- A continuous surjective open map is a quotient map. -/\ntheorem ∀ {α : Type u_1} {β : Type u_2} [inst : TopologicalSpace α] [inst_1 : TopologicalSpace β] {f : α → β},\n  IsOpenMap f → Continuous f → Function.Surjective f → QuotientMap f :=\n\n/-- If each `f₀ i : C(X, Y i)` is homotopic to `f₁ i : C(X, Y i)`, then `ContinuousMap.pi f₀` is\nhomotopic to `ContinuousMap.pi f₁`. -/\ntheorem ∀ {X : Type u} [inst : TopologicalSpace X] {ι : Type u_1} {Y : ι → Type u_2} [inst_1 : (i : ι) → TopologicalSpace (Y i)]\n  {f₀ f₁ : (i : ι) → C(X, Y i)},\n  (∀ (i : ι), ContinuousMap.Homotopic (f₀ i) (f₁ i)) →\n    ContinuousMap.Homotopic (ContinuousMap.pi f₀) (ContinuousMap.pi f₁) :=\n\n/-- A surjective linear map `f` with finite dimensional codomain is an open map. -/\ntheorem ∀ {𝕜 : Type u} [hnorm : NontriviallyNormedField 𝕜] {E : Type v} [inst : AddCommGroup E] [inst_1 : Module 𝕜 E]\n  [inst_2 : TopologicalSpace E] [inst_3 : TopologicalAddGroup E] [inst_4 : ContinuousSMul 𝕜 E] {F : Type w}\n  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜 F] [inst_7 : TopologicalSpace F] [inst_8 : TopologicalAddGroup F]\n  [inst_9 : ContinuousSMul 𝕜 F] [inst_10 : CompleteSpace 𝕜] [inst_11 : T2Space E] [inst_12 : FiniteDimensional 𝕜 E]\n  (f : F →ₗ[𝕜] E), Function.Surjective ↑f → IsOpenMap ↑f :=\n\n/-- If `f` is an affine map, then its linear part is an open map iff `f` is an open map. -/\ntheorem ∀ {𝕜 : Type u_1} {V : Type u_2} {V₂ : Type u_4} {P : Type u_3} {P₂ : Type u_5} [inst : NormedField 𝕜]\n  [inst_1 : SeminormedAddCommGroup V] [inst_2 : SeminormedAddCommGroup V₂] [inst_3 : NormedSpace 𝕜 V]\n  [inst_4 : NormedSpace 𝕜 V₂] [inst_5 : PseudoMetricSpace P] [inst_6 : PseudoMetricSpace P₂]\n  [inst_7 : NormedAddTorsor V P] [inst_8 : NormedAddTorsor V₂ P₂] {f : P →ᵃ[𝕜] P₂}, IsOpenMap ↑f.linear ↔ IsOpenMap ↑f :=\n\n/-- A map $f: X \\rightarrow Y$ is said to be an open map if for every open set $U$ of $X$, the set $f(U)$ is open in $Y$. Show that $\\pi_{1}: X \\times Y \\rightarrow X$ and $\\pi_{2}: X \\times Y \\rightarrow Y$ are open maps. -/\ntheorem", "choices": ["open_map_prod_fst {X : Type u_1} {Y : Type u_2} [TopologicalSpace X] [TopologicalSpace Y] : IsOpenMap (Prod.fst : X × Y → X) ", "∀ {X Y : Type u} [inst : TopologicalSpace X] [inst_1 : TopologicalSpace Y],\n  IsOpenMap (Prod.fst : X × Y → X) ∧ IsOpenMap (Prod.snd : X × Y → Y) ", "forall {X Y : Type u} [inst : TopologicalSpace X] [inst_1 : TopologicalSpace Y],\n  IsOpenMap (Prod.fst : X × Y → X) ∧ IsOpenMap (Prod.snd : X × Y → Y) ", "prod_fst_open_map {X Y : Type*} [TopologicalSpace X] [TopologicalSpace Y] : IsOpenMap (Prod.fst : X × Y → X) ", "∀ {α : Type u_1} {β : Type u_2} [inst : TopologicalSpace α] [inst_1 : TopologicalSpace β],\n  IsOpenMap (Prod.fst : α × β → α) ∧ IsOpenMap (Prod.snd : α × β → β) ", "∀ {X Y : Type u} [inst : TopologicalSpace X] [inst_1 : TopologicalSpace Y],\n  IsOpenMap (Prod.fst : X × Y → X) ∧ IsOpenMap (Prod.snd : X × Y → Y) ", "∀ {X Y : Type u} [inst : TopologicalSpace X] [inst_1 : TopologicalSpace Y],\n  IsOpenMap (Prod.fst : X × Y → X) ∧ IsOpenMap (Prod.snd : X × Y → Y) ", "∀ {X Y : Type u} [inst : TopologicalSpace X] [inst_1 : TopologicalSpace Y],\n  IsOpenMap (Prod.fst : X × Y → X) ∧ IsOpenMap (Prod.snd : X × Y → Y) ", "∀ {X Y : Type u} [inst : TopologicalSpace X] [inst_1 : TopologicalSpace Y],\n  IsOpenMap (Prod.fst : X × Y → X) ∧ IsOpenMap (Prod.snd : X × Y → Y) ", "∀ {α : Type u_1} {β : Type u_2} [inst : TopologicalSpace α] [inst_1 : TopologicalSpace β],\n  IsOpenMap (@Prod.fst α β) ∧ IsOpenMap (@Prod.snd α β) "]}
{"docString": "Show that if $U$ is open in $X$ and $A$ is closed in $X$, then $U-A$ is open in $X$, and $A-U$ is closed in $X$.", "prompts": "[{\"theorem\":\n  \"∀ {M : Type u_1} [inst : TopologicalSpace M] [inst_1 : AddMonoid M] [inst_2 : ContinuousAdd M] {U : Set M},\\n  U ∈ nhds 0 → ∃ V, IsOpen V ∧ 0 ∈ V ∧ V + V ⊆ U\",\n  \"isProp\": true,\n  \"docString\":\n  \"Given an open neighborhood `U` of `0` there is an open neighborhood `V` of `0`\\nsuch that `V + V ⊆ U`.\"},\n {\"theorem\":\n  \"∀ {α : Type u} [inst : TopologicalSpace α] [inst_1 : T2Space α] {s : Set α},\\n  IsCompact s →\\n    ∀ {ι : Type u_1} (t : Finset ι) (U : ι → Set α),\\n      (∀ (i : ι), i ∈ t → IsOpen (U i)) →\\n        s ⊆ ⋃ (i : ι) (_ : i ∈ t), U i →\\n          ∃ K, (∀ (i : ι), IsCompact (K i)) ∧ (∀ (i : ι), K i ⊆ U i) ∧ s = ⋃ (i : ι) (_ : i ∈ t), K i\",\n  \"isProp\": true,\n  \"docString\":\n  \"For every finite open cover `Uᵢ` of a compact set, there exists a compact cover `Kᵢ ⊆ Uᵢ`. \"},\n {\"theorem\":\n  \"∀ {G : Type w} [inst : TopologicalSpace G] [inst_1 : AddZeroClass G] [inst_2 : ContinuousAdd G] {K U : Set G},\\n  IsCompact K → IsOpen U → K ⊆ U → ∃ V, V ∈ nhds 0 ∧ K + V ⊆ U\",\n  \"isProp\": true,\n  \"docString\":\n  \"Given a compact set `K` inside an open set `U`, there is an open neighborhood `V` of\\n`0` such that `K + V ⊆ U`.\"},\n {\"theorem\":\n  \"∀ {α : Type u} [inst : TopologicalSpace α] [inst_1 : T3Space α] {x y : α},\\n  x ≠ y →\\n    ∃ U₁,\\n      U₁ ∈ nhds x ∧\\n        ∃ V₁,\\n          V₁ ∈ nhds x ∧\\n            ∃ U₂,\\n              U₂ ∈ nhds y ∧\\n                ∃ V₂,\\n                  V₂ ∈ nhds y ∧ IsClosed V₁ ∧ IsClosed V₂ ∧ IsOpen U₁ ∧ IsOpen U₂ ∧ V₁ ⊆ U₁ ∧ V₂ ⊆ U₂ ∧ Disjoint U₁ U₂\",\n  \"isProp\": true,\n  \"docString\":\n  \"Given two points `x ≠ y`, we can find neighbourhoods `x ∈ V₁ ⊆ U₁` and `y ∈ V₂ ⊆ U₂`,\\nwith the `Vₖ` closed and the `Uₖ` open, such that the `Uₖ` are disjoint. \"}]\n", "prompt_cons": "/-- Given an open neighborhood `U` of `0` there is an open neighborhood `V` of `0`\nsuch that `V + V ⊆ U`. -/\ntheorem ∀ {M : Type u_1} [inst : TopologicalSpace M] [inst_1 : AddMonoid M] [inst_2 : ContinuousAdd M] {U : Set M},\n  U ∈ nhds 0 → ∃ V, IsOpen V ∧ 0 ∈ V ∧ V + V ⊆ U :=\n\n/-- For every finite open cover `Uᵢ` of a compact set, there exists a compact cover `Kᵢ ⊆ Uᵢ`. -/\ntheorem ∀ {α : Type u} [inst : TopologicalSpace α] [inst_1 : T2Space α] {s : Set α},\n  IsCompact s →\n    ∀ {ι : Type u_1} (t : Finset ι) (U : ι → Set α),\n      (∀ (i : ι), i ∈ t → IsOpen (U i)) →\n        s ⊆ ⋃ (i : ι) (_ : i ∈ t), U i →\n          ∃ K, (∀ (i : ι), IsCompact (K i)) ∧ (∀ (i : ι), K i ⊆ U i) ∧ s = ⋃ (i : ι) (_ : i ∈ t), K i :=\n\n/-- Given a compact set `K` inside an open set `U`, there is an open neighborhood `V` of\n`0` such that `K + V ⊆ U`. -/\ntheorem ∀ {G : Type w} [inst : TopologicalSpace G] [inst_1 : AddZeroClass G] [inst_2 : ContinuousAdd G] {K U : Set G},\n  IsCompact K → IsOpen U → K ⊆ U → ∃ V, V ∈ nhds 0 ∧ K + V ⊆ U :=\n\n/-- Given two points `x ≠ y`, we can find neighbourhoods `x ∈ V₁ ⊆ U₁` and `y ∈ V₂ ⊆ U₂`,\nwith the `Vₖ` closed and the `Uₖ` open, such that the `Uₖ` are disjoint. -/\ntheorem ∀ {α : Type u} [inst : TopologicalSpace α] [inst_1 : T3Space α] {x y : α},\n  x ≠ y →\n    ∃ U₁,\n      U₁ ∈ nhds x ∧\n        ∃ V₁,\n          V₁ ∈ nhds x ∧\n            ∃ U₂,\n              U₂ ∈ nhds y ∧\n                ∃ V₂,\n                  V₂ ∈ nhds y ∧ IsClosed V₁ ∧ IsClosed V₂ ∧ IsOpen U₁ ∧ IsOpen U₂ ∧ V₁ ⊆ U₁ ∧ V₂ ⊆ U₂ ∧ Disjoint U₁ U₂ :=\n\n/-- Show that if $U$ is open in $X$ and $A$ is closed in $X$, then $U-A$ is open in $X$, and $A-U$ is closed in $X$. -/\ntheorem", "choices": ["∀ {α : Type u} [inst : TopologicalSpace α] {U A : Set α},\n  IsOpen U → IsClosed A →\n    (IsOpen (U - A) ∧ IsClosed (A - U)) ", "∀ {X : Type u} [inst : TopologicalSpace X] {U A : Set X},\n  IsOpen U → IsClosed A → IsOpen (U \\ A) ∧ IsClosed (A \\ U) ", "∀ {α : Type u} [inst : TopologicalSpace α] {U A : Set α},\n  IsOpen U → IsClosed A → IsOpen (U \\ A) ∧ IsClosed (A \\ U) ", "∀ {α : Type u} [inst : TopologicalSpace α] {U A : Set α},\n  IsOpen U → IsClosed A → (IsOpen (U - A) ∧ IsClosed (A - U)) ", "forall {α : Type u} [inst : TopologicalSpace α] {U A : Set α},\n  IsOpen U → IsClosed A → IsOpen (U \\ A) ∧ IsClosed (A \\ U) ", "forall {α : Type u} [inst : TopologicalSpace α] {U A : Set α},\n  IsOpen U → IsClosed A → IsOpen (U \\ A) ∧ IsClosed (A \\ U) ", "∀ {α : Type u} [inst : TopologicalSpace α] {A U : Set α},\n  IsOpen U → IsClosed A →\n    IsOpen (U \\ A) ∧ IsClosed (A \\ U) ", "∀ {α : Type u} [inst : TopologicalSpace α] {U A : Set α},\n  IsOpen U → IsClosed A → IsOpen (U \\ A) ∧ IsClosed (A \\ U) ", "forall {α : Type u} [inst : TopologicalSpace α] {U A : Set α},\n  IsOpen U → IsClosed A → IsOpen (U - A) ∧ IsClosed (A - U) ", "∀ {α : Type u} [inst : TopologicalSpace α] {U A : Set α},\n  IsOpen U → IsClosed A → IsOpen (U \\ A) ∧ IsClosed (A \\ U) "]}
{"docString": "Let $Y$ be an ordered set in the order topology. Let $f, g: X \\rightarrow Y$ be continuous. Let $h: X \\rightarrow Y$ be the function $h(x)=\\min \\{f(x), g(x)\\}.$ Show that $h$ is continuous.", "prompts": "[{\"theorem\":\n  \"∀ {α : Type u} {β : Type v} [inst : TopologicalSpace α] [inst_1 : Preorder α] [t : OrderClosedTopology α]\\n  [inst_2 : TopologicalSpace β] {f g : β → α} {s : Set β},\\n  IsClosed s → ContinuousOn f s → ContinuousOn g s → IsClosed {x | x ∈ s ∧ f x ≤ g x}\",\n  \"isProp\": true,\n  \"docString\":\n  \"If `s` is a closed set and two functions `f` and `g` are continuous on `s`,\\nthen the set `{x ∈ s | f x ≤ g x}` is a closed set. \"},\n {\"theorem\":\n  \"∀ {α : Type u_1} {β : Type u_2} [inst : LinearOrder α] [inst_1 : TopologicalSpace α] [inst_2 : OrderClosedTopology α]\\n  [inst_3 : TopologicalSpace β] [inst_4 : Nonempty α] {f : β → α} {K : Set β},\\n  IsCompact K → ContinuousOn f K → BddBelow (f '' K)\",\n  \"isProp\": true,\n  \"docString\": \"A continuous function is bounded below on a compact set. \"},\n {\"theorem\":\n  \"∀ {𝕜 : Type u_3} [inst : NontriviallyNormedField 𝕜] {E : Type u_1} [inst_1 : NormedAddCommGroup E]\\n  [inst_2 : NormedSpace 𝕜 E] {F : Type u_2} [inst_3 : NormedAddCommGroup F] [inst_4 : NormedSpace 𝕜 F]\\n  [inst_5 : CompleteSpace F] [inst_6 : CompleteSpace E] (g : E →ₗ[𝕜] F),\\n  (∀ (u : ℕ → E) (x : E) (y : F),\\n      Filter.Tendsto u Filter.atTop (nhds x) → Filter.Tendsto (↑g ∘ u) Filter.atTop (nhds y) → y = ↑g x) →\\n    Continuous ↑g\",\n  \"isProp\": true,\n  \"docString\":\n  \"A useful form of the **closed graph theorem** : let `f` be a linear map between two Banach\\nspaces. To show that `f` is continuous, it suffices to show that for any convergent sequence\\n`uₙ ⟶ x`, if `f(uₙ) ⟶ y` then `y = f(x)`. \"},\n {\"theorem\":\n  \"∀ {f g : ℝ → ℝ} {a b : ℝ},\\n  a < b →\\n    ContinuousOn f (Set.Icc a b) →\\n      ContinuousOn g (Set.Icc a b) →\\n        (∀ (x : ℝ), x ∈ Set.Ioc a b → f x ≤ g x) →\\n          (∃ c, c ∈ Set.Icc a b ∧ f c < g c) → ∫ (x : ℝ) in a..b, f x < ∫ (x : ℝ) in a..b, g x\",\n  \"isProp\": true,\n  \"docString\":\n  \"If `f` and `g` are continuous on `[a, b]`, `a < b`, `f x ≤ g x` on this interval, and\\n`f c < g c` at some point `c ∈ [a, b]`, then `∫ x in a..b, f x < ∫ x in a..b, g x`. \"}]\n", "prompt_cons": "/-- If `s` is a closed set and two functions `f` and `g` are continuous on `s`,\nthen the set `{x ∈ s | f x ≤ g x}` is a closed set. -/\ntheorem ∀ {α : Type u} {β : Type v} [inst : TopologicalSpace α] [inst_1 : Preorder α] [t : OrderClosedTopology α]\n  [inst_2 : TopologicalSpace β] {f g : β → α} {s : Set β},\n  IsClosed s → ContinuousOn f s → ContinuousOn g s → IsClosed {x | x ∈ s ∧ f x ≤ g x} :=\n\n/-- A continuous function is bounded below on a compact set. -/\ntheorem ∀ {α : Type u_1} {β : Type u_2} [inst : LinearOrder α] [inst_1 : TopologicalSpace α] [inst_2 : OrderClosedTopology α]\n  [inst_3 : TopologicalSpace β] [inst_4 : Nonempty α] {f : β → α} {K : Set β},\n  IsCompact K → ContinuousOn f K → BddBelow (f '' K) :=\n\n/-- A useful form of the **closed graph theorem** : let `f` be a linear map between two Banach\nspaces. To show that `f` is continuous, it suffices to show that for any convergent sequence\n`uₙ ⟶ x`, if `f(uₙ) ⟶ y` then `y = f(x)`. -/\ntheorem ∀ {𝕜 : Type u_3} [inst : NontriviallyNormedField 𝕜] {E : Type u_1} [inst_1 : NormedAddCommGroup E]\n  [inst_2 : NormedSpace 𝕜 E] {F : Type u_2} [inst_3 : NormedAddCommGroup F] [inst_4 : NormedSpace 𝕜 F]\n  [inst_5 : CompleteSpace F] [inst_6 : CompleteSpace E] (g : E →ₗ[𝕜] F),\n  (∀ (u : ℕ → E) (x : E) (y : F),\n      Filter.Tendsto u Filter.atTop (nhds x) → Filter.Tendsto (↑g ∘ u) Filter.atTop (nhds y) → y = ↑g x) →\n    Continuous ↑g :=\n\n/-- If `f` and `g` are continuous on `[a, b]`, `a < b`, `f x ≤ g x` on this interval, and\n`f c < g c` at some point `c ∈ [a, b]`, then `∫ x in a..b, f x < ∫ x in a..b, g x`. -/\ntheorem ∀ {f g : ℝ → ℝ} {a b : ℝ},\n  a < b →\n    ContinuousOn f (Set.Icc a b) →\n      ContinuousOn g (Set.Icc a b) →\n        (∀ (x : ℝ), x ∈ Set.Ioc a b → f x ≤ g x) →\n          (∃ c, c ∈ Set.Icc a b ∧ f c < g c) → ∫ (x : ℝ) in a..b, f x < ∫ (x : ℝ) in a..b, g x :=\n\n/-- Let $Y$ be an ordered set in the order topology. Let $f, g: X \\rightarrow Y$ be continuous. Let $h: X \\rightarrow Y$ be the function $h(x)=\\min \\{f(x), g(x)\\}.$ Show that $h$ is continuous. -/\ntheorem", "choices": ["∀ {α : Type u} {β : Type v} [inst : TopologicalSpace α] [inst_1 : LinearOrder β] [inst_2 : TopologicalSpace β]\n  [inst_3 : OrderTopology β] {f g h : α → β},\n  Continuous f → Continuous g → (∀ x, h x = min (f x) (g x)) → Continuous h ", "∀ {α : Type u} {β : Type v} [inst : TopologicalSpace α] [inst_1 : Preorder α] [t : OrderClosedTopology α]\n  [inst_2 : TopologicalSpace β] {f g : β → α},\n  Continuous f → Continuous g → Continuous (λ (x : β), min (f x) (g x)) ", "∀ {α : Type u} {β : Type v} [inst : TopologicalSpace α] [inst_1 : LinearOrder α] [t : OrderTopology α]\n  [inst_2 : TopologicalSpace β] {f g : β → α},\n  Continuous f → Continuous g → Continuous (λ x, min (f x) (g x)) ", "∀ {α : Type u} {β : Type v} [inst : TopologicalSpace α] [inst_1 : TopologicalSpace β] [inst_2 : LinearOrder β]\n  [t : OrderTopology β] {f g : α → β},\n  Continuous f → Continuous g → Continuous (λ x, min (f x) (g x)) ", "∀ {α : Type u} {β : Type v} [inst : TopologicalSpace α] [inst_1 : LinearOrder α] [t : OrderTopology α]\n  [inst_2 : TopologicalSpace β] {f g : β → α},\n  Continuous f → Continuous g → Continuous (λ x, min (f x) (g x)) ", "∀ {α : Type u} {β : Type v} [inst : TopologicalSpace α] [inst_1 : LinearOrder α] [t : OrderTopology α]\n  [inst_2 : TopologicalSpace β] {f g : β → α},\n  Continuous f → Continuous g → Continuous (λ x, min (f x) (g x)) ", "∀ {α : Type u} {β : Type v} [inst : TopologicalSpace α] [inst_1 : LinearOrder β] [t : OrderTopology β]\n  [inst_2 : TopologicalSpace α] {f g : α → β},\n  Continuous f → Continuous g → Continuous (λ x, min (f x) (g x)) ", "∀ {X : Type u} {Y : Type v} [inst : TopologicalSpace X] [inst_2 : TopologicalSpace Y] [inst_3 : LinearOrder Y] [t : OrderTopology Y]\n  {f g : X → Y},\n  Continuous f → Continuous g → Continuous (λ x, min (f x) (g x)) ", "∀ {α : Type u} {β : Type v} [inst : TopologicalSpace α] [inst_1 : TopologicalSpace β] [inst_2 : LinearOrder β]\n  [t : OrderTopology β] {f g : α → β},\n  Continuous f → Continuous g → Continuous (λ x, min (f x) (g x)) ", "∀ {α : Type u} {β : Type v} [inst : TopologicalSpace α] [inst_1 : Preorder α] [t : OrderClosedTopology α]\n  [inst_2 : TopologicalSpace β] {f g : β → α} {s : Set β},\n  ContinuousOn f s → ContinuousOn g s → ContinuousOn (λ x, min (f x) (g x)) s "]}
{"docString": "Let $\\mathbf{x}_1, \\mathbf{x}_2, \\ldots$ be a sequence of the points of the product space $\\prod X_\\alpha$.  Show that this sequence converges to the point $\\mathbf{x}$ if and only if the sequence $\\pi_\\alpha(\\mathbf{x}_i)$ converges to $\\pi_\\alpha(\\mathbf{x})$ for each $\\alpha$.", "prompts": "[{\"theorem\":\n  \"∀ {α : Type u} {β : Type v} {ι : Type x} [inst : UniformSpace β] {F : ι → α → β} {f : α → β} {s : Set α} {p : Filter ι},\\n  TendstoUniformlyOn F f p s → ∀ {x : α}, x ∈ s → Filter.Tendsto (fun n => F n x) p (nhds (f x))\",\n  \"isProp\": true,\n  \"docString\": \"Uniform converence implies pointwise convergence. \"},\n {\"theorem\":\n  \"∀ {α : Type u} {β : Type v} [inst : UniformSpace α] [inst_1 : SemilatticeSup β] [inst_2 : CompleteSpace α] {u : β → α},\\n  CauchySeq u → ∃ x, Filter.Tendsto u Filter.atTop (nhds x)\",\n  \"isProp\": true,\n  \"docString\": \"A Cauchy sequence in a complete space converges \"},\n {\"theorem\":\n  \"∀ {α : Type u_1} {E : α → Type u_2} {p : ENNReal} [inst : (i : α) → NormedAddCommGroup (E i)] [_i : Fact (1 ≤ p)]\\n  {F : ℕ → { x // x ∈ lp E p }},\\n  CauchySeq F →\\n    ∀ {f : { x // x ∈ lp E p }},\\n      Filter.Tendsto (id fun i => ↑(F i)) Filter.atTop (nhds ↑f) → Filter.Tendsto F Filter.atTop (nhds f)\",\n  \"isProp\": true,\n  \"docString\":\n  \"If a sequence is Cauchy in the `lp E p` topology and pointwise convergent to an element `f` of\\n`lp E p`, then it converges to `f` in the `lp E p` topology. \"},\n {\"theorem\":\n  \"∀ {𝕜 : Type u_1} {𝕜₂ : Type u_2} {F : Type u_4} [inst : NormedAddCommGroup F] [inst_1 : NontriviallyNormedField 𝕜]\\n  [inst_2 : NontriviallyNormedField 𝕜₂] [inst_3 : NormedSpace 𝕜₂ F] {σ₁₂ : 𝕜 →+* 𝕜₂} {E' : Type u_3}\\n  [inst_4 : SeminormedAddCommGroup E'] [inst_5 : NormedSpace 𝕜 E'] [inst_6 : RingHomIsometric σ₁₂]\\n  {f : ℕ → E' →SL[σ₁₂] F} {g : E' →SL[σ₁₂] F},\\n  Filter.Tendsto (fun n x => ↑(f n) x) Filter.atTop (nhds ↑g) → CauchySeq f → Filter.Tendsto f Filter.atTop (nhds g)\",\n  \"isProp\": true,\n  \"docString\":\n  \"If a Cauchy sequence of continuous linear map converges to a continuous linear map pointwise,\\nthen it converges to the same map in norm. This lemma is used to prove that the space of continuous\\nlinear maps is complete provided that the codomain is a complete space. \"}]\n", "prompt_cons": "/-- Uniform converence implies pointwise convergence. -/\ntheorem ∀ {α : Type u} {β : Type v} {ι : Type x} [inst : UniformSpace β] {F : ι → α → β} {f : α → β} {s : Set α} {p : Filter ι},\n  TendstoUniformlyOn F f p s → ∀ {x : α}, x ∈ s → Filter.Tendsto (fun n => F n x) p (nhds (f x)) :=\n\n/-- A Cauchy sequence in a complete space converges -/\ntheorem ∀ {α : Type u} {β : Type v} [inst : UniformSpace α] [inst_1 : SemilatticeSup β] [inst_2 : CompleteSpace α] {u : β → α},\n  CauchySeq u → ∃ x, Filter.Tendsto u Filter.atTop (nhds x) :=\n\n/-- If a sequence is Cauchy in the `lp E p` topology and pointwise convergent to an element `f` of\n`lp E p`, then it converges to `f` in the `lp E p` topology. -/\ntheorem ∀ {α : Type u_1} {E : α → Type u_2} {p : ENNReal} [inst : (i : α) → NormedAddCommGroup (E i)] [_i : Fact (1 ≤ p)]\n  {F : ℕ → { x // x ∈ lp E p }},\n  CauchySeq F →\n    ∀ {f : { x // x ∈ lp E p }},\n      Filter.Tendsto (id fun i => ↑(F i)) Filter.atTop (nhds ↑f) → Filter.Tendsto F Filter.atTop (nhds f) :=\n\n/-- If a Cauchy sequence of continuous linear map converges to a continuous linear map pointwise,\nthen it converges to the same map in norm. This lemma is used to prove that the space of continuous\nlinear maps is complete provided that the codomain is a complete space. -/\ntheorem ∀ {𝕜 : Type u_1} {𝕜₂ : Type u_2} {F : Type u_4} [inst : NormedAddCommGroup F] [inst_1 : NontriviallyNormedField 𝕜]\n  [inst_2 : NontriviallyNormedField 𝕜₂] [inst_3 : NormedSpace 𝕜₂ F] {σ₁₂ : 𝕜 →+* 𝕜₂} {E' : Type u_3}\n  [inst_4 : SeminormedAddCommGroup E'] [inst_5 : NormedSpace 𝕜 E'] [inst_6 : RingHomIsometric σ₁₂]\n  {f : ℕ → E' →SL[σ₁₂] F} {g : E' →SL[σ₁₂] F},\n  Filter.Tendsto (fun n x => ↑(f n) x) Filter.atTop (nhds ↑g) → CauchySeq f → Filter.Tendsto f Filter.atTop (nhds g) :=\n\n/-- Let $\\mathbf{x}_1, \\mathbf{x}_2, \\ldots$ be a sequence of the points of the product space $\\prod X_\\alpha$.  Show that this sequence converges to the point $\\mathbf{x}$ if and only if the sequence $\\pi_\\alpha(\\mathbf{x}_i)$ converges to $\\pi_\\alpha(\\mathbf{x})$ for each $\\alpha$. -/\ntheorem", "choices": ["∀ {α : Type u_1} {ι : Type u_2} {X : α → Type u_3} [inst : (a : α) → TopologicalSpace (X a)] {x : Π a, X a} {x_seq : ι → Π a, X a} {p : Filter ι},\n  Filter.Tendsto x_seq p (nhds x) ↔ ∀ a, Filter.Tendsto (fun i => x_seq i a) p (nhds (x a)) ", "∀ {α : Type u} {β : α → Type v} {x : ℕ → (a : α) → β a} {limit : (a : α) → β a},\n  Filter.Tendsto x Filter.atTop (nhds limit) ↔ ∀ a, Filter.Tendsto (fun n => x n a) Filter.atTop (nhds (limit a)) ", "∀ {α : Type u_1} {β : Type u_2} {ι : Type u_3} [inst : (i : α) → TopologicalSpace (β i)] {x : ι → α → β} {y : α → β},\n  Filter.Tendsto x Filter.atTop (nhds y) ↔ ∀ i, Filter.Tendsto (fun n => x n i) Filter.atTop (nhds (y i)) ", "∀ {α : Type u} {β : α → Type v} [inst : (a : α) → TopologicalSpace (β a)] {x : ℕ → ((a : α) → β a)} {y : (a : α) → β a},\n  Filter.Tendsto x Filter.atTop (nhds y) ↔ ∀ a : α, Filter.Tendsto (fun n => x n a) Filter.atTop (nhds (y a)) ", "∀ {α : Type u_1} {β : Type u_2} [inst : TopologicalSpace β] {X : α → Type u_3} [inst_1 : (i : α) → TopologicalSpace (X i)]\n  {x : ℕ → (i : α) → X i} {f : (i : α) → X i},\n  Filter.Tendsto x Filter.atTop (nhds f) ↔ ∀ i, Filter.Tendsto (fun n => x n i) Filter.atTop (nhds (f i)) ", "∀ {α : Type u_1} {β : α → Type u_3} [_i : (a : α) → TopologicalSpace (β a)] {g : ℕ → (a : α) → β a} {f : (a : α) → β a},\n  Filter.Tendsto g Filter.atTop (nhds f) ↔ ∀ a, Filter.Tendsto (fun n => g n a) Filter.atTop (nhds (f a)) ", "∀ {α : Type u} {β : Type v} {ι : Type x} [inst : (a : α) → TopologicalSpace (β a)] {X : ι → (a : α) → β a} {x : (a : α) → β a},\n  Filter.Tendsto X Filter.atTop (nhds x) ↔ ∀ a : α, Filter.Tendsto (fun i => X i a) Filter.atTop (nhds (x a)) ", "∀ {α : Type u_1} {β : α → Type u_3} [inst : (a : α) → TopologicalSpace (β a)] {A : ℕ → (a : α) → β a} {x : (a : α) → β a},\n  Filter.Tendsto A Filter.atTop (nhds x) ↔ ∀ a : α, Filter.Tendsto (λ n, A n a) Filter.atTop (nhds (x a)) ", "∀ {α : Type u_1} {β : α → Type u_2} [_inst_1 : (a : α) → TopologicalSpace (β a)] {f : ℕ → ((a : α) → β a)} {x : ((a : α) → β a)},\n  Filter.Tendsto f Filter.atTop (nhds x) ↔\n  ∀ a : α, Filter.Tendsto (fun n => f n a) Filter.atTop (nhds (x a)) ", "∀ {α : Type u} {β : α → Type v} [inst : (a : α) → TopologicalSpace (β a)] {x : (a : α) → β a} {F : ℕ → (a : α) → β a},\n  Filter.Tendsto F Filter.atTop (nhds x) ↔ ∀ a : α, Filter.Tendsto (fun n => F n a) Filter.atTop (nhds (x a)) "]}
{"docString": "Define $f_{n}:[0,1] \\rightarrow \\mathbb{R}$ by the equation $f_{n}(x)=x^{n}$. Show that the sequence $\\left(f_{n}(x)\\right)$ converges for each $x \\in[0,1]$.", "prompts": "[{\"theorem\":\n  \"∀ (f : CircleDeg1Lift) (x : ℝ),\\n  Filter.Tendsto (fun n => (↑(f ^ n) x - x) / ↑n) Filter.atTop (nhds (CircleDeg1Lift.translationNumber f))\",\n  \"isProp\": true,\n  \"docString\":\n  \"For any `x : ℝ` the sequence $\\\\frac{f^n(x)-x}{n}$ tends to the translation number of `f`.\\nIn particular, this limit does not depend on `x`. \"},\n {\"theorem\":\n  \"∀ {α : Type u_1} {𝕜 : Type u_2} {E : Type u_3} {F : Type u_4} [inst : IsROrC 𝕜] [inst_1 : NormedAddCommGroup E]\\n  [inst_2 : NormedSpace 𝕜 E] [inst_3 : NormedAddCommGroup F] [inst_4 : CompleteSpace F] {u : α → ℝ}\\n  [inst_5 : NormedSpace 𝕜 F] {f : α → E → F} {f' : α → E → E →L[𝕜] F} {x₀ : E},\\n  Summable u →\\n    (∀ (n : α) (x : E), HasFDerivAt (f n) (f' n x) x) →\\n      (∀ (n : α) (x : E), ‖f' n x‖ ≤ u n) → (Summable fun n => f n x₀) → ∀ (x : E), Summable fun n => f n x\",\n  \"isProp\": true,\n  \"docString\":\n  \"Consider a series of functions `∑' n, f n x`. If the series converges at a\\npoint, and all functions in the series are differentiable with a summable bound on the derivatives,\\nthen the series converges everywhere. \"},\n {\"theorem\":\n  \"∀ {A : Type u_1} [inst : CommRing A] [inst_1 : Algebra ℚ A] (n : ℕ),\\n  (Finset.sum (Finset.range n) fun k => PowerSeries.exp A ^ k) =\\n    PowerSeries.mk fun p => Finset.sum (Finset.range n) fun k => ↑(k ^ p) * ↑(algebraMap ℚ A) (↑(Nat.factorial p))⁻¹\",\n  \"isProp\": true,\n  \"docString\":\n  \"Shows that\\n$\\\\sum_{k = 0}^{n - 1} (e^{X})^k = \\\\sum_{p = 0}^{\\\\infty} \\\\sum_{k = 0}^{n - 1} \\\\frac{k^p}{p!}X^p$. \"},\n {\"theorem\":\n  \"∀ {α : Type u_1} [inst : Preorder α] {f : α → α}, id ≤ f → ∀ (n : ℕ), id ≤ f^[n]\",\n  \"isProp\": true,\n  \"docString\":\n  \"If $x ≤ f x$ for all $x$ (we write this as `id ≤ f`), then the same is true for any iterate\\n`f^[n]` of `f`. \"}]\n", "prompt_cons": "/-- For any `x : ℝ` the sequence $\\frac{f^n(x)-x}{n}$ tends to the translation number of `f`.\nIn particular, this limit does not depend on `x`. -/\ntheorem ∀ (f : CircleDeg1Lift) (x : ℝ),\n  Filter.Tendsto (fun n => (↑(f ^ n) x - x) / ↑n) Filter.atTop (nhds (CircleDeg1Lift.translationNumber f)) :=\n\n/-- Consider a series of functions `∑' n, f n x`. If the series converges at a\npoint, and all functions in the series are differentiable with a summable bound on the derivatives,\nthen the series converges everywhere. -/\ntheorem ∀ {α : Type u_1} {𝕜 : Type u_2} {E : Type u_3} {F : Type u_4} [inst : IsROrC 𝕜] [inst_1 : NormedAddCommGroup E]\n  [inst_2 : NormedSpace 𝕜 E] [inst_3 : NormedAddCommGroup F] [inst_4 : CompleteSpace F] {u : α → ℝ}\n  [inst_5 : NormedSpace 𝕜 F] {f : α → E → F} {f' : α → E → E →L[𝕜] F} {x₀ : E},\n  Summable u →\n    (∀ (n : α) (x : E), HasFDerivAt (f n) (f' n x) x) →\n      (∀ (n : α) (x : E), ‖f' n x‖ ≤ u n) → (Summable fun n => f n x₀) → ∀ (x : E), Summable fun n => f n x :=\n\n/-- Shows that\n$\\sum_{k = 0}^{n - 1} (e^{X})^k = \\sum_{p = 0}^{\\infty} \\sum_{k = 0}^{n - 1} \\frac{k^p}{p!}X^p$. -/\ntheorem ∀ {A : Type u_1} [inst : CommRing A] [inst_1 : Algebra ℚ A] (n : ℕ),\n  (Finset.sum (Finset.range n) fun k => PowerSeries.exp A ^ k) =\n    PowerSeries.mk fun p => Finset.sum (Finset.range n) fun k => ↑(k ^ p) * ↑(algebraMap ℚ A) (↑(Nat.factorial p))⁻¹ :=\n\n/-- If $x ≤ f x$ for all $x$ (we write this as `id ≤ f`), then the same is true for any iterate\n`f^[n]` of `f`. -/\ntheorem ∀ {α : Type u_1} [inst : Preorder α] {f : α → α}, id ≤ f → ∀ (n : ℕ), id ≤ f^[n] :=\n\n/-- Define $f_{n}:[0,1] \\rightarrow \\mathbb{R}$ by the equation $f_{n}(x)=x^{n}$. Show that the sequence $\\left(f_{n}(x)\\right)$ converges for each $x \\in[0,1]$. -/\ntheorem", "choices": ["∀ (x : ℝ) (hx : 0 ≤ x ∧ x ≤ 1),\n  Filter.Tendsto (fun n => x ^ n) Filter.atTop (nhds 0) ", "∀ {α : Type u_1} [inst : TopologicalSpace α] [inst_1 : LinearOrderedRing α] [inst_2 : OrderTopology α] (s : ℕ → α → ℝ)\n  (hs : ∀ n x, 0 ≤ x ∧ x ≤ 1 → 0 ≤ s n x ∧ s n x ≤ x^n),\n  ∀ (x : α), 0 ≤ x ∧ x ≤ 1 → Filter.Tendsto (fun n => s n x) Filter.atTop (nhds 0) ", "∀ {α : Type u_1} [inst : LinearOrderedField α] [inst_1 : TopologicalSpace α] [inst_2 : OrderTopology α],\n  (∀ x : α, 0 ≤ x ∧ x ≤ 1) → ∀ (x : α), Filter.Tendsto (fun n => x ^ n) Filter.atTop (nhds 0) ", "∀ {α : Type u_1} [inst : LinearOrderedField α] [inst_1 : TopologicalSpace α] [inst_2 : OrderTopology α]\n  (x : α), x ∈ Set.Icc (0 : α) 1 → ∀ (n : ℕ), Filter.Tendsto (fun n => x ^ n) Filter.atTop (nhds 0) ", "∀ {α : Type u_1} [inst : LinearOrderedField α] [inst_1 : TopologicalSpace α] [inst_2 : OrderTopology α]\n  [inst_3 : Archimedean α] {x : α}, Zero.zero ≤ x → x ≤ One.one →\n    Filter.Tendsto (fun n => x ^ n) Filter.atTop (nhds Zero.zero) ", "∀ (x : ℝ) (hx : 0 ≤ x ∧ x ≤ 1),\n  Filter.Tendsto (fun n => x^n) Filter.atTop (nhds (if x < 1 then 0 else 1)) ", "∀ {α : Type u_1} [inst : LinearOrderedField α] [inst_1 : Archimedean α] [inst_2 : TopologicalSpace α]\n  [OrderTopology α] (x : α), x ∈ Set.Icc (0 : α) (1 : α) → Filter.Tendsto (fun n => x ^ n) Filter.atTop (nhds (0 : α)) ", "∀ {α : Type u_1} [inst : LinearOrderedRing α] [inst_1 : TopologicalSpace α] [inst_2 : OrderTopology α] (x : α),\n  0 ≤ x → x ≤ 1 → Filter.Tendsto (fun n => x ^ n) Filter.atTop (nhds 0) ", "∀ (n : ℕ) (x : ℝ), 0 ≤ x → x ≤ 1 →\n  Filter.Tendsto (fun n => x ^ n) Filter.atTop (nhds (ite (x < 1) 0 1)) ", "∀ {x : ℝ} (hx : x ∈ Icc (0 : ℝ) 1),\n  Filter.Tendsto (fun n => x ^ n) Filter.atTop (nhds 0) "]}
{"docString": "Let $X$ be a topological space and let $Y$ be a metric space. Let $f_{n}: X \\rightarrow Y$ be a sequence of continuous functions. Let $x_{n}$ be a sequence of points of $X$ converging to $x$. Show that if the sequence $\\left(f_{n}\\right)$ converges uniformly to $f$, then $\\left(f_{n}\\left(x_{n}\\right)\\right)$ converges to $f(x)$.", "prompts": "[{\"theorem\":\n  \"∀ {𝕜 : Type u_3} [inst : NontriviallyNormedField 𝕜] {E : Type u_1} [inst_1 : NormedAddCommGroup E]\\n  [inst_2 : NormedSpace 𝕜 E] {F : Type u_2} [inst_3 : NormedAddCommGroup F] [inst_4 : NormedSpace 𝕜 F]\\n  [inst_5 : CompleteSpace F] [inst_6 : CompleteSpace E] (g : E →ₗ[𝕜] F),\\n  (∀ (u : ℕ → E) (x : E) (y : F),\\n      Filter.Tendsto u Filter.atTop (nhds x) → Filter.Tendsto (↑g ∘ u) Filter.atTop (nhds y) → y = ↑g x) →\\n    Continuous ↑g\",\n  \"isProp\": true,\n  \"docString\":\n  \"A useful form of the **closed graph theorem** : let `f` be a linear map between two Banach\\nspaces. To show that `f` is continuous, it suffices to show that for any convergent sequence\\n`uₙ ⟶ x`, if `f(uₙ) ⟶ y` then `y = f(x)`. \"},\n {\"theorem\":\n  \"∀ {α : Type u} {β : Type v} {ι : Type x} [inst : UniformSpace β] {F : ι → α → β} {f : α → β} {x : α} {p : Filter ι}\\n  {g : ι → α} [inst_1 : TopologicalSpace α],\\n  ContinuousAt f x →\\n    Filter.Tendsto g p (nhds x) →\\n      (∀ (u : Set (β × β)), u ∈ uniformity β → ∃ t, t ∈ nhds x ∧ ∀ᶠ (n : ι) in p, ∀ (y : α), y ∈ t → (f y, F n y) ∈ u) →\\n        Filter.Tendsto (fun n => F n (g n)) p (nhds (f x))\",\n  \"isProp\": true,\n  \"docString\":\n  \"If `Fₙ` converges locally uniformly on a neighborhood of `x` to a function `f` which is\\ncontinuous at `x`, and `gₙ` tends to `x`, then `Fₙ (gₙ)` tends to `f x`. \"},\n {\"theorem\":\n  \"∀ {α : Type u₁} {β : Type u₂} [inst : TopologicalSpace α] [inst_1 : UniformSpace β] {f : C(α, β)} {ι : Type u₃}\\n  {p : Filter ι} {F : ι → C(α, β)} [inst_2 : CompactSpace α],\\n  Filter.Tendsto F p (nhds f) ↔ TendstoUniformly (fun i a => ↑(F i) a) (↑f) p\",\n  \"isProp\": true,\n  \"docString\":\n  \"Convergence in the compact-open topology is the same as uniform convergence for sequences of\\ncontinuous functions on a compact space. \"},\n {\"theorem\":\n  \"∀ {α : Type u} {β : Type v} {ι : Type x} [inst : UniformSpace β] {F : ι → α → β} {f : α → β} {s : Set α} {p : Filter ι},\\n  TendstoUniformlyOn F f p s → ∀ {x : α}, x ∈ s → Filter.Tendsto (fun n => F n x) p (nhds (f x))\",\n  \"isProp\": true,\n  \"docString\": \"Uniform converence implies pointwise convergence. \"}]\n", "prompt_cons": "/-- A useful form of the **closed graph theorem** : let `f` be a linear map between two Banach\nspaces. To show that `f` is continuous, it suffices to show that for any convergent sequence\n`uₙ ⟶ x`, if `f(uₙ) ⟶ y` then `y = f(x)`. -/\ntheorem ∀ {𝕜 : Type u_3} [inst : NontriviallyNormedField 𝕜] {E : Type u_1} [inst_1 : NormedAddCommGroup E]\n  [inst_2 : NormedSpace 𝕜 E] {F : Type u_2} [inst_3 : NormedAddCommGroup F] [inst_4 : NormedSpace 𝕜 F]\n  [inst_5 : CompleteSpace F] [inst_6 : CompleteSpace E] (g : E →ₗ[𝕜] F),\n  (∀ (u : ℕ → E) (x : E) (y : F),\n      Filter.Tendsto u Filter.atTop (nhds x) → Filter.Tendsto (↑g ∘ u) Filter.atTop (nhds y) → y = ↑g x) →\n    Continuous ↑g :=\n\n/-- If `Fₙ` converges locally uniformly on a neighborhood of `x` to a function `f` which is\ncontinuous at `x`, and `gₙ` tends to `x`, then `Fₙ (gₙ)` tends to `f x`. -/\ntheorem ∀ {α : Type u} {β : Type v} {ι : Type x} [inst : UniformSpace β] {F : ι → α → β} {f : α → β} {x : α} {p : Filter ι}\n  {g : ι → α} [inst_1 : TopologicalSpace α],\n  ContinuousAt f x →\n    Filter.Tendsto g p (nhds x) →\n      (∀ (u : Set (β × β)), u ∈ uniformity β → ∃ t, t ∈ nhds x ∧ ∀ᶠ (n : ι) in p, ∀ (y : α), y ∈ t → (f y, F n y) ∈ u) →\n        Filter.Tendsto (fun n => F n (g n)) p (nhds (f x)) :=\n\n/-- Convergence in the compact-open topology is the same as uniform convergence for sequences of\ncontinuous functions on a compact space. -/\ntheorem ∀ {α : Type u₁} {β : Type u₂} [inst : TopologicalSpace α] [inst_1 : UniformSpace β] {f : C(α, β)} {ι : Type u₃}\n  {p : Filter ι} {F : ι → C(α, β)} [inst_2 : CompactSpace α],\n  Filter.Tendsto F p (nhds f) ↔ TendstoUniformly (fun i a => ↑(F i) a) (↑f) p :=\n\n/-- Uniform converence implies pointwise convergence. -/\ntheorem ∀ {α : Type u} {β : Type v} {ι : Type x} [inst : UniformSpace β] {F : ι → α → β} {f : α → β} {s : Set α} {p : Filter ι},\n  TendstoUniformlyOn F f p s → ∀ {x : α}, x ∈ s → Filter.Tendsto (fun n => F n x) p (nhds (f x)) :=\n\n/-- Let $X$ be a topological space and let $Y$ be a metric space. Let $f_{n}: X \\rightarrow Y$ be a sequence of continuous functions. Let $x_{n}$ be a sequence of points of $X$ converging to $x$. Show that if the sequence $\\left(f_{n}\\right)$ converges uniformly to $f$, then $\\left(f_{n}\\left(x_{n}\\right)\\right)$ converges to $f(x)$. -/\ntheorem", "choices": ["∀ {α : Type u} {β : Type v} {ι : Type x} [inst : TopologicalSpace α] [inst_1 : MetricSpace β] {F : ι → C(α, β)} {f : α → β} {x : α} {p : Filter ι}\n  {g : ι → α},\n  Filter.Tendsto g p (nhds x) →\n    (∀ (ε : ℝ), 0 < ε → ∃ (N : ι), ∀ (i : ι), N ≤ i → ∀ (y : α), dist (F i y) (f y) < ε) →\n      Filter.Tendsto (fun n => ↑(F n) (g n)) p (nhds (f x)) ", "∀ {α : Type u} {β : Type v} {ι : Type x} [inst : TopologicalSpace α] [inst_1 : MetricSpace β] {x : α} {p : Filter ι} {f : α → β}\n  {F : ι → (α → β)} (h : Continuous f) (h₁ : Filter.TendstoUniformly F f p) (g : ι → α) (h₂ : Filter.Tendsto g p (nhds x)),\n  Filter.Tendsto (fun n => F n (g n)) p (nhds (f x)) ", "∀ {α : Type u} {β : Type v} {ι : Type x} [inst : TopologicalSpace α] [inst_1 : MetricSpace β] {F : ι → C(α, β)} {f : C(α, β)} {p : Filter ι}\n  {x : α} {g : ι → α},\n  Filter.Tendsto g p (nhds x) →\n    TendstoUniformly (fun i a => ↑(F i) a) (↑f) p →\n      Filter.Tendsto (fun n => ↑(F n) (g n)) p (nhds (↑f x)) ", "∀ {α : Type u} {β : Type v} {ι : Type x} [inst : TopologicalSpace α] [inst_1 : MetricSpace β] {F : ι → C(α, β)} {f : C(α, β)} {x : α} {p : Filter ι}\n  {g : ι → α},\n  Filter.Tendsto g p (nhds x) →\n    TendstoUniformly F (↑f) p →\n      Filter.Tendsto (fun n => ↑(F n) (g n)) p (nhds (↑f x)) ", "∀ {α : Type u} {β : Type v} {ι : Type x} [inst : TopologicalSpace α] [inst_1 : MetricSpace β] {F : ι → α → β} {f : α → β} {x : α} {p : Filter ι} {g : ι → α},\n  Continuous f →\n    Filter.Tendsto g p (nhds x) →\n      TendstoUniformly F f p →\n        Filter.Tendsto (fun n => F n (g n)) p (nhds (f x)) ", "∀ {α : Type u} {β : Type v} {ι : Type x} [inst : TopologicalSpace α] [inst_1 : MetricSpace β] {F : ι → C(α, β)} {f : C(α, β)} {x : α} {p : Filter ι}\n  {g : ι → α},\n  Filter.Tendsto g p (nhds x) →\n    TendstoUniformly F f p →\n      Filter.Tendsto (fun n => F n (g n)) p (nhds (f x)) ", "∀ {α : Type u} {β : Type v} {ι : Type x} [inst : TopologicalSpace α] [inst_1 : MetricSpace β]\n  {F : ι → α → β} {f : α → β} {x : α} {p : Filter ι} {g : ι → α},\n  Continuous f →\n    Filter.Tendsto g p (nhds x) →\n      TendstoUniformly F f p →\n        Filter.Tendsto (fun n => F n (g n)) p (nhds (f x)) ", "∀ {α : Type u} {β : Type v} {ι : Type x} [inst : TopologicalSpace α] [inst_1 : MetricSpace β] {F : ι → C(α, β)} {f : α → β}\n  {x : α} {p : Filter ι} {g : ι → α},\n  Filter.Tendsto g p (nhds x) →\n    TendstoUniformly (fun i a => ↑(F i) a) (f) p →\n      Filter.Tendsto (fun n => ↑(F n) (g n)) p (nhds (f x)) ", "∀ {α : Type u} {β : Type v} {ι : Type x} [inst : TopologicalSpace α] [inst_1 : MetricSpace β] {F : ι → C(α, β)} {f : C(α, β)}\n  {x : α} {p : Filter ι} {g : ι → α},\n  Filter.Tendsto g p (nhds x) →\n    TendstoUniformly F f p →\n      Filter.Tendsto (fun n => ↑(F n) (g n)) p (nhds (↑f x)) ", "∀ {α : Type u} {β : Type v} {ι : Type x} [inst : TopologicalSpace α] [inst_1 : MetricSpace β] {F : ι → C(α, β)} {f : C(α, β)}\n  {x : α} {p : Filter ι} {g : ι → α},\n  Filter.Tendsto g p (nhds x) →\n    TendstoUniformly F (↑f) p →\n      Filter.Tendsto (fun n => ↑(F n) (g n)) p (nhds (↑f x)) "]}
{"docString": "If $A \\subset X$, a retraction of $X$ onto $A$ is a continuous map $r: X \\rightarrow A$ such that $r(a)=a$ for each $a \\in A$. Show that a retraction is a quotient map.", "prompts": "[{\"theorem\":\n  \"∀ {α : Type u_1} {β : Type u_2} [inst : TopologicalSpace α] [inst_1 : TopologicalSpace β] {f : α → β},\\n  IsOpenMap f → Continuous f → Function.Surjective f → QuotientMap f\",\n  \"isProp\": true,\n  \"docString\": \"A continuous surjective open map is a quotient map. \"},\n {\"theorem\":\n  \"∀ {α : Type u} {β : Type v} [inst : TopologicalSpace α] [inst_1 : TopologicalSpace β] [inst_2 : CompactSpace α]\\n  [inst_3 : T2Space β] {f : α → β}, Function.Surjective f → Continuous f → QuotientMap f\",\n  \"isProp\": true,\n  \"docString\":\n  \"A continuous surjective map from a compact space to a Hausdorff space is a quotient map. \"},\n {\"theorem\": \"∀ {α : Type u_1} (r : Setoid α), Setoid.ker Quotient.mk'' = r\",\n  \"isProp\": true,\n  \"docString\":\n  \"The kernel of the quotient map induced by an equivalence relation r equals r. \"},\n {\"theorem\":\n  \"∀ {E : ℕ → Type u_1} [inst : (n : ℕ) → TopologicalSpace (E n)] [inst_1 : ∀ (n : ℕ), DiscreteTopology (E n)]\\n  {s : Set ((n : ℕ) → E n)},\\n  IsClosed s → Set.Nonempty s → ∃ f, (∀ (x : (n : ℕ) → E n), x ∈ s → f x = x) ∧ Set.range f = s ∧ Continuous f\",\n  \"isProp\": true,\n  \"docString\":\n  \"Given a closed nonempty subset `s` of `Π (n : ℕ), E n`, there exists a retraction onto this\\nset, i.e., a continuous map with range equal to `s`, equal to the identity on `s`. \"}]\n", "prompt_cons": "/-- A continuous surjective open map is a quotient map. -/\ntheorem ∀ {α : Type u_1} {β : Type u_2} [inst : TopologicalSpace α] [inst_1 : TopologicalSpace β] {f : α → β},\n  IsOpenMap f → Continuous f → Function.Surjective f → QuotientMap f :=\n\n/-- A continuous surjective map from a compact space to a Hausdorff space is a quotient map. -/\ntheorem ∀ {α : Type u} {β : Type v} [inst : TopologicalSpace α] [inst_1 : TopologicalSpace β] [inst_2 : CompactSpace α]\n  [inst_3 : T2Space β] {f : α → β}, Function.Surjective f → Continuous f → QuotientMap f :=\n\n/-- The kernel of the quotient map induced by an equivalence relation r equals r. -/\ntheorem ∀ {α : Type u_1} (r : Setoid α), Setoid.ker Quotient.mk'' = r :=\n\n/-- Given a closed nonempty subset `s` of `Π (n : ℕ), E n`, there exists a retraction onto this\nset, i.e., a continuous map with range equal to `s`, equal to the identity on `s`. -/\ntheorem ∀ {E : ℕ → Type u_1} [inst : (n : ℕ) → TopologicalSpace (E n)] [inst_1 : ∀ (n : ℕ), DiscreteTopology (E n)]\n  {s : Set ((n : ℕ) → E n)},\n  IsClosed s → Set.Nonempty s → ∃ f, (∀ (x : (n : ℕ) → E n), x ∈ s → f x = x) ∧ Set.range f = s ∧ Continuous f :=\n\n/-- If $A \\subset X$, a retraction of $X$ onto $A$ is a continuous map $r: X \\rightarrow A$ such that $r(a)=a$ for each $a \\in A$. Show that a retraction is a quotient map. -/\ntheorem", "choices": ["∀ {α : Type u_1} {β : Type u_2} [inst : TopologicalSpace α] [inst_1 : TopologicalSpace β] {f : α → β} {A : Set α},\n  IsClosed A → Continuous f → (∀ a ∈ A, f a = a) → Set.range f = A → QuotientMap f ", "∀ {α : Type u_1} {β : Type u_2} [inst : TopologicalSpace α] [inst_1 : TopologicalSpace β] {f : α → β} {A : Set α},\n  IsSubSet A → Continuous f → (∀ a ∈ A, f a = a) → Set.range f = A → QuotientMap f ", "∀ {α : Type u_1} {β : Type u_2} [inst : TopologicalSpace α] [inst_1 : TopologicalSpace β] {f : α → β} {A : Set α},\n  IsRetraction f A → Continuous f → Set.range f = A → QuotientMap f ", "∀ {α : Type u_1} {β : Type u_2} [inst : TopologicalSpace α] [inst_1 : TopologicalSpace β] {A : Set α} {r : α → β},\n  (∀ (a : α), a ∈ A → r a = a) → Set.range r = A → Continuous r → QuotientMap r ", "∀ {α : Type u_1} {β : Type u_2} [inst : TopologicalSpace α] [inst_1 : TopologicalSpace β] {A : Set α} {r : α → β},\n  IsRetraction A r → Continuous r → QuotientMap r ", "∀ {α : Type u_1} {β : Type u_2} [inst : TopologicalSpace α] [inst_1 : TopologicalSpace β] {f : α → β} {s : Set α},\n  (∀ (x : α), x ∈ s → f x = x) → Set.range f = s → Continuous f → QuotientMap f ", "forall {α : Type u_1} {β : Type u_2} [inst : TopologicalSpace α] [inst_1 : TopologicalSpace β] {f : α → β},\n  Continuous f → Set.range f = β → (∀ (x : α), f x = x) → QuotientMap f ", "∀ {α : Type u_1} {β : Type u_2} [inst : TopologicalSpace α] [inst_1 : TopologicalSpace β] {f : α → β} {A : Set α},\n  IsSubset A Set.Univ → (∀ a, a ∈ A → f a = a) → Continuous f → Set.range f = A → QuotientMap f ", "∀ {α : Type u_1} {β : Type u_2} [inst : TopologicalSpace α] [inst_1 : TopologicalSpace β] {A : Set α} {r : α → β},\n  Set.range r = A → (∀ a ∈ A, r a = a) → Continuous r → QuotientMap r ", "∀ {α : Type u_1} {β : Type u_2} [inst : TopologicalSpace α] [inst_1 : TopologicalSpace β] {f : α → β},\n  Continuous f → (∀ x : α, f x ∈ s → f x = x) → Set.range f = s → QuotientMap f "]}
{"docString": "Let $\\left\\{A_{n}\\right\\}$ be a sequence of connected subspaces of $X$, such that $A_{n} \\cap A_{n+1} \\neq \\varnothing$ for all $n$. Show that $\\bigcup A_{n}$ is connected.", "prompts": "[{\"theorem\":\n  \"∀ {α : Type u} [inst : TopologicalSpace α] [self : ConnectedSpace α], Nonempty α\",\n  \"isProp\": true,\n  \"docString\": \"A connected space is nonempty. \"},\n {\"theorem\":\n  \"∀ {α : Type u} [inst : TopologicalSpace α] {s : Set α} {ι : Type v},\\n  IsCompact s →\\n    ∀ (Z : ι → Set α),\\n      (∀ (i : ι), IsClosed (Z i)) →\\n        (∀ (t : Finset ι), Set.Nonempty (s ∩ ⋂ (i : ι) (_ : i ∈ t), Z i)) → Set.Nonempty (s ∩ ⋂ (i : ι), Z i)\",\n  \"isProp\": true,\n  \"docString\":\n  \"To show that a compact set intersects the intersection of a family of closed sets,\\nit is sufficient to show that it intersects every finite subfamily. \"},\n {\"theorem\":\n  \"∀ {E : Type u_1} [inst : AddCommGroup E] [inst_1 : Module ℝ E] [inst_2 : TopologicalSpace E]\\n  [inst_3 : TopologicalAddGroup E] [inst_4 : ContinuousSMul ℝ E] {s : Set E},\\n  Convex ℝ s → Set.Nonempty s → IsConnected s\",\n  \"isProp\": true,\n  \"docString\": \"A nonempty convex set is connected. \"},\n {\"theorem\":\n  \"∀ {α : Type u} {β : Type v} [inst : TopologicalSpace α] [inst_1 : TopologicalSpace β] [inst_2 : CompactSpace α]\\n  [inst_3 : CompactSpace β], CompactSpace (α ⊕ β)\",\n  \"isProp\": true,\n  \"docString\": \"The disjoint union of two compact spaces is compact. \"}]\n", "prompt_cons": "/-- A connected space is nonempty. -/\ntheorem ∀ {α : Type u} [inst : TopologicalSpace α] [self : ConnectedSpace α], Nonempty α :=\n\n/-- To show that a compact set intersects the intersection of a family of closed sets,\nit is sufficient to show that it intersects every finite subfamily. -/\ntheorem ∀ {α : Type u} [inst : TopologicalSpace α] {s : Set α} {ι : Type v},\n  IsCompact s →\n    ∀ (Z : ι → Set α),\n      (∀ (i : ι), IsClosed (Z i)) →\n        (∀ (t : Finset ι), Set.Nonempty (s ∩ ⋂ (i : ι) (_ : i ∈ t), Z i)) → Set.Nonempty (s ∩ ⋂ (i : ι), Z i) :=\n\n/-- A nonempty convex set is connected. -/\ntheorem ∀ {E : Type u_1} [inst : AddCommGroup E] [inst_1 : Module ℝ E] [inst_2 : TopologicalSpace E]\n  [inst_3 : TopologicalAddGroup E] [inst_4 : ContinuousSMul ℝ E] {s : Set E},\n  Convex ℝ s → Set.Nonempty s → IsConnected s :=\n\n/-- The disjoint union of two compact spaces is compact. -/\ntheorem ∀ {α : Type u} {β : Type v} [inst : TopologicalSpace α] [inst_1 : TopologicalSpace β] [inst_2 : CompactSpace α]\n  [inst_3 : CompactSpace β], CompactSpace (α ⊕ β) :=\n\n/-- Let $\\left\\{A_{n}\\right\\}$ be a sequence of connected subspaces of $X$, such that $A_{n} \\cap A_{n+1} \\neq \\varnothing$ for all $n$. Show that $\\bigcup A_{n}$ is connected. -/\ntheorem", "choices": ["∀ {α : Type u} [inst : TopologicalSpace α] {ι : Type v} [inst_1 : Preorder ι] (A : ι → Set α),\n  (∀ n : ι, IsConnected (A n)) → (∀ n : ι, Set.Nonempty (A n ∩ A (n+1))) → IsConnected (⋃ (n : ι), A n) ", "∀ {α : Type u} [inst : TopologicalSpace α] {A : ℕ → Set α},\n  (∀ (n : ℕ), IsConnected (A n)) →\n    (∀ (n : ℕ), Set.Nonempty (A n ∩ A (n + 1))) → IsConnected (⋃ (n : ℕ), A n) ", "∀ {α : Type u} [inst : TopologicalSpace α] {ι : Type v} [lt : LinearOrder ι] [succ : SuccOrder ι] {A : ι → Set α},\n  (∀ (i : ι), IsConnected (A i)) →\n    (∀ (i : ι), Set.Nonempty (A i ∩ A (SuccOrder.succ i))) → IsConnected (⋃ (i : ι), A i) ", "∀ {α : Type u} [inst : TopologicalSpace α] {ι : Type v} [inst_1 : Preorder ι] (A : ι → Set α),\n  (∀ (n : ι), IsConnected (A n)) →\n    (∀ (n : ι), Set.Nonempty (A n ∩ A (n + 1))) → IsConnected (⋃ (n : ι), A n) ", "∀ {α : Type u} [inst : TopologicalSpace α] {ι : Type v} [inst_1 : Preorder ι] (A : ι → Set α),\n  (∀ (i : ι), IsConnected (A i)) →\n    (∀ (i : ι), Set.Nonempty (A i ∩ A (i + 1))) → IsConnected (⋃ (i : ι), A i) ", "forall {α : Type u} [inst : TopologicalSpace α] {ι : Type v} [inst_2 : Preorder ι] {A : ι → Set α},\n  (∀ (n : ι), IsConnected (A n)) →\n    (∀ (n : ι), Set.Nonempty (A n ∩ A (n+1))) → IsConnected (⋃ (n : ι), A n) ", "∀ {α : Type u} [inst : TopologicalSpace α] {ι : Type v} [inst_1 : Preorder ι] (A : ι → Set α),\n  (∀ (n : ι), IsConnected (A n)) →\n    (∀ (n : ι), Set.Nonempty (A n ∩ A (n+1))) → IsConnected (⋃ (n : ι), A n) ", "∀ {α : Type u} [inst : TopologicalSpace α] {A : ℕ → Set α},\n  (∀ (n : ℕ), IsConnected (A n)) →\n    (∀ (n : ℕ), Set.Nonempty (A n ∩ A (n + 1))) → IsConnected (⋃ (n : ℕ), A n) ", "∀ {α : Type u} [inst : TopologicalSpace α] {ι : ℕ} (A : ι → Set α),\n   (∀ (n : ι), IsConnected (A n)) →\n     (∀ (n : ι), Set.Nonempty (A n ∩ A (n + 1))) → IsConnected (⋃ (n : ι), A n) ", "∀ {α : Type u} [inst : TopologicalSpace α] {ι : Type v} [inst_2 : Preorder ι] (A : ι → Set α),\n  (∀ (n : ι), IsConnected (A n)) → (∀ (n : ι), Set.Nonempty (A n ∩ A (n+1))) → IsConnected (⋃ (n : ι), A n) "]}
{"docString": "Show that if $X$ is an infinite set, it is connected in the finite complement topology.", "prompts": "[{\"theorem\":\n  \"∀ {α : Type u_1} [inst : Preorder α] [inst_1 : TopologicalSpace α] [inst_2 : LowerTopology α] {s : Set α},\\n  Set.Finite s → IsClosed ↑(upperClosure s)\",\n  \"isProp\": true,\n  \"docString\":\n  \"The upper closure of a finite set is closed in the lower topology. \"},\n {\"theorem\":\n  \"∀ {α : Type u_1} [inst : Infinite α], IrreducibleSpace (CofiniteTopology α)\",\n  \"isProp\": true,\n  \"docString\":\n  \"An infinite type with cofinite topology is an irreducible topological space. \"},\n {\"theorem\":\n  \"∀ {α : Type u} [inst : TopologicalSpace α] {s : Set α} {ι : Type v},\\n  IsCompact s →\\n    ∀ (Z : ι → Set α),\\n      (∀ (i : ι), IsClosed (Z i)) →\\n        (∀ (t : Finset ι), Set.Nonempty (s ∩ ⋂ (i : ι) (_ : i ∈ t), Z i)) → Set.Nonempty (s ∩ ⋂ (i : ι), Z i)\",\n  \"isProp\": true,\n  \"docString\":\n  \"To show that a compact set intersects the intersection of a family of closed sets,\\nit is sufficient to show that it intersects every finite subfamily. \"},\n {\"theorem\":\n  \"∀ {M : Type w} {A : Set M} {L : FirstOrder.Language} [inst : FirstOrder.Language.Structure L M] {α : Type u₁}\\n  {β : Type u_1} {s : Set (β → M)},\\n  Set.Definable A L s → ∀ (f : α → β) [inst_1 : Finite α] [inst_2 : Finite β], Set.Definable A L ((fun g => g ∘ f) '' s)\",\n  \"isProp\": true,\n  \"docString\": \"Shows that definability is closed under finite projections. \"}]\n", "prompt_cons": "/-- The upper closure of a finite set is closed in the lower topology. -/\ntheorem ∀ {α : Type u_1} [inst : Preorder α] [inst_1 : TopologicalSpace α] [inst_2 : LowerTopology α] {s : Set α},\n  Set.Finite s → IsClosed ↑(upperClosure s) :=\n\n/-- An infinite type with cofinite topology is an irreducible topological space. -/\ntheorem ∀ {α : Type u_1} [inst : Infinite α], IrreducibleSpace (CofiniteTopology α) :=\n\n/-- To show that a compact set intersects the intersection of a family of closed sets,\nit is sufficient to show that it intersects every finite subfamily. -/\ntheorem ∀ {α : Type u} [inst : TopologicalSpace α] {s : Set α} {ι : Type v},\n  IsCompact s →\n    ∀ (Z : ι → Set α),\n      (∀ (i : ι), IsClosed (Z i)) →\n        (∀ (t : Finset ι), Set.Nonempty (s ∩ ⋂ (i : ι) (_ : i ∈ t), Z i)) → Set.Nonempty (s ∩ ⋂ (i : ι), Z i) :=\n\n/-- Shows that definability is closed under finite projections. -/\ntheorem ∀ {M : Type w} {A : Set M} {L : FirstOrder.Language} [inst : FirstOrder.Language.Structure L M] {α : Type u₁}\n  {β : Type u_1} {s : Set (β → M)},\n  Set.Definable A L s → ∀ (f : α → β) [inst_1 : Finite α] [inst_2 : Finite β], Set.Definable A L ((fun g => g ∘ f) '' s) :=\n\n/-- Show that if $X$ is an infinite set, it is connected in the finite complement topology. -/\ntheorem", "choices": ["∀ {X : Type u} [inst : Infinite X], ConnectedSpace (CofiniteTopology X) ", "∀ {α : Type u_1} [inst : Infinite α], ConnectedSpace (CofiniteTopology α) ", "∀ {α : Type u_1} [inst : Infinite α], ConnectedSpace (CofiniteTopology α) ", "∀ {α : Type u_1} [inst : Infinite α], IsConnected (CofiniteTopology α) ", "∀ {α : Type u_1} [inst : Infinite α], ConnectedSpace (CofiniteTopology α) ", "∀ {α : Type u_1} [inst : Infinite α], ConnectedSpace (CofiniteTopology α) ", "∀ {α : Type u_1} [inst : Infinite α], IsConnectedSpace (CofiniteTopology α) ", "∀ {α : Type u_1} [inst : Infinite α], ConnectedSpace (CofiniteTopology α) ", "∀ {α : Type u_1} [inst : Infinite α], ConnectedSpace (CofiniteTopology α) ", "∀ {X : Type u_1} [inst : Infinite X], ConnectedSpace (CofiniteTopology X) "]}
{"docString": "Let $A$ be a proper subset of $X$, and let $B$ be a proper subset of $Y$. If $X$ and $Y$ are connected, show that $(X \\times Y)-(A \\times B)$ is connected.", "prompts": "[{\"theorem\":\n  \"∀ {α : Type u} [inst : TopologicalSpace α] {s : Set α},\\n  (∀ (x : α), x ∈ s → ∀ (y : α), y ∈ s → ∃ t, t ⊆ s ∧ x ∈ t ∧ y ∈ t ∧ IsPreconnected t) → IsPreconnected s\",\n  \"isProp\": true,\n  \"docString\":\n  \"If any two points of a set are contained in a preconnected subset,\\nthen the original set is preconnected as well. \"},\n {\"theorem\":\n  \"∀ {α : Type u} [inst : TopologicalSpace α] [self : NormalSpace α] (s t : Set α),\\n  IsClosed s → IsClosed t → Disjoint s t → SeparatedNhds s t\",\n  \"isProp\": true,\n  \"docString\":\n  \"Two disjoint sets in a normal space admit disjoint neighbourhoods. \"},\n {\"theorem\":\n  \"∀ {α : Type u} [inst : TopologicalSpace α] {s : Set α}, IsConnected s → IsConnected (closure s)\",\n  \"isProp\": true,\n  \"docString\": \"The closure of a connected set is connected as well. \"},\n {\"theorem\":\n  \"∀ {α : Type u} [inst : TopologicalSpace α] {S : Set (Set α)},\\n  DirectedOn (fun x x_1 => x ⊆ x_1) S → (∀ (s : Set α), s ∈ S → IsPreconnected s) → IsPreconnected (⋃₀ S)\",\n  \"isProp\": true,\n  \"docString\":\n  \"The directed sUnion of a set S of preconnected subsets is preconnected. \"}]\n", "prompt_cons": "/-- If any two points of a set are contained in a preconnected subset,\nthen the original set is preconnected as well. -/\ntheorem ∀ {α : Type u} [inst : TopologicalSpace α] {s : Set α},\n  (∀ (x : α), x ∈ s → ∀ (y : α), y ∈ s → ∃ t, t ⊆ s ∧ x ∈ t ∧ y ∈ t ∧ IsPreconnected t) → IsPreconnected s :=\n\n/-- Two disjoint sets in a normal space admit disjoint neighbourhoods. -/\ntheorem ∀ {α : Type u} [inst : TopologicalSpace α] [self : NormalSpace α] (s t : Set α),\n  IsClosed s → IsClosed t → Disjoint s t → SeparatedNhds s t :=\n\n/-- The closure of a connected set is connected as well. -/\ntheorem ∀ {α : Type u} [inst : TopologicalSpace α] {s : Set α}, IsConnected s → IsConnected (closure s) :=\n\n/-- The directed sUnion of a set S of preconnected subsets is preconnected. -/\ntheorem ∀ {α : Type u} [inst : TopologicalSpace α] {S : Set (Set α)},\n  DirectedOn (fun x x_1 => x ⊆ x_1) S → (∀ (s : Set α), s ∈ S → IsPreconnected s) → IsPreconnected (⋃₀ S) :=\n\n/-- Let $A$ be a proper subset of $X$, and let $B$ be a proper subset of $Y$. If $X$ and $Y$ are connected, show that $(X \\times Y)-(A \\times B)$ is connected. -/\ntheorem", "choices": ["∀ {α : Type u} {β : Type v} [inst_α : TopologicalSpace α] [inst_β : TopologicalSpace β] {X : Set α} {Y : Set β} {A : Set α} {B : Set β},\n  IsConnected X → IsConnected Y → A ⊂ X → B ⊂ Y → IsConnected ((X.prod Y) \\ (A.prod B)) ", "∀ {α : Type u} {β : Type v} [inst_α : TopologicalSpace α] [inst_β : TopologicalSpace β] {X : Set α} {Y : Set β} {A : Set α} {B : Set β},\n  X ⊆ A → A ≠ X → Y ⊆ B → B ≠ Y → IsConnected X → IsConnected Y → IsConnected ((X.product Y) - (A.product B)) ", "∀ {α : Type u} {β : Type v} [inst₁ : TopologicalSpace α] [inst₂ : TopologicalSpace β]\n  {X : Set α} {Y : Set β} {A : Set α} {B : Set β}, IsConnected X → IsConnected Y → A ⊂ X → B ⊂ Y →\n  IsConnected ((X.prod Y) \\ (A.prod B)) ", "∀ {α : Type u} {β : Type v} [instα : TopologicalSpace α] [instβ : TopologicalSpace β]\n  {X : Set α} {Y : Set β} {A : Set α} {B : Set β},\n  IsConnected X → IsConnected Y → A ⊂ X → B ⊂ Y → IsConnected ((X.prod Y) - (A.prod B)) ", "∀ {α : Type u} {β : Type v} [instα : TopologicalSpace α] [instβ : TopologicalSpace β]\n  (X : Set α) (Y : Set β) (A : Set α) (B : Set β),\n  IsConnected X → IsConnected Y → A ⊂ X → B ⊂ Y → \n  IsConnected ((X × Y) - (A × B)) ", "∀ {α : Type u} {β : Type v} [inst : TopologicalSpace α] [inst_1 : TopologicalSpace β]\n  {A : Set α} {B : Set β} {X : Set α} {Y : Set β},\n  A ⊆ X → B ⊆ Y → A ≠ X → B ≠ Y →\n  IsConnected X → IsConnected Y →\n  IsConnected ((X × Y) - (A × B)) ", "∀ {α : Type u} {β : Type v} [instα : TopologicalSpace α] [instβ : TopologicalSpace β]\n  (X : Set α) (Y : Set β) (A : Set α) (B : Set β),\n  A ⊂ X → B ⊂ Y → IsConnected X → IsConnected Y → IsConnected ((X × Y) - (A × B)) ", "∀ {α : Type u} {β : Type v} [inst1 : TopologicalSpace α] [inst2 : TopologicalSpace β]\n  {X : Set α} {Y : Set β} {A : Set α} {B : Set β}, IsProperSubset A X → IsProperSubset B Y\n  → IsConnected X → IsConnected Y → IsConnected ((X.prod Y) - (A.prod B)) ", "∀ {α : Type u} {β : Type v} [inst1 : TopologicalSpace α] [inst2 : TopologicalSpace β]\n  {X : Set α} {Y : Set β} {A : Set α} {B : Set β},\n  IsConnected X → IsConnected Y → A ⊂ X → B ⊂ Y →\n  IsConnected ((X.prod Y) - (A.prod B)) ", "∀ {α : Type u} {β : Type v} [instα : TopologicalSpace α] [instβ : TopologicalSpace β]\n  {X : Set α} {Y : Set β} {A : Set α} {B : Set β},\n  IsProperSubset A X → IsProperSubset B Y → IsConnected X → IsConnected Y →\n  IsConnected ((X × Y) - (A × B)) "]}
{"docString": "Let $f: S^{1} \\rightarrow \\mathbb{R}$ be a continuous map. Show there exists a point $x$ of $S^{1}$ such that $f(x)=f(-x)$.", "prompts": "[{\"theorem\":\n  \"∀ {α : Type u_2} {𝕜 : Type u_1} {f : α → 𝕜} {S : Set α} [inst : TopologicalSpace α] [inst_1 : TopologicalSpace 𝕜]\\n  [inst_2 : T1Space 𝕜] [inst_3 : Ring 𝕜] [inst_4 : NoZeroDivisors 𝕜],\\n  IsPreconnected S → ContinuousOn f S → Set.EqOn (f ^ 2) 1 S → Set.EqOn f 1 S ∨ Set.EqOn f (-1) S\",\n  \"isProp\": true,\n  \"docString\":\n  \"If `f` is a function `α → 𝕜` which is continuous on a preconnected set `S`, and\\n`f ^ 2 = 1` on `S`, then either `f = 1` on `S`, or `f = -1` on `S`. \"},\n {\"theorem\":\n  \"∀ (f : CircleDeg1Lift), Continuous ↑f → ∃ x, ↑f x = x + CircleDeg1Lift.translationNumber f\",\n  \"isProp\": true,\n  \"docString\":\n  \"If `f` is a continuous monotone map `ℝ → ℝ`, `f (x + 1) = f x + 1`, then there exists `x`\\nsuch that `f x = x + τ f`. \"},\n {\"theorem\":\n  \"∀ {G₀ : Type u_1} [inst : Zero G₀] [inst_1 : Inv G₀] [inst_2 : TopologicalSpace G₀] [self : HasContinuousInv₀ G₀]\\n  ⦃x : G₀⦄, x ≠ 0 → ContinuousAt Inv.inv x\",\n  \"isProp\": true,\n  \"docString\": \"The map `fun x ↦ x⁻¹` is continuous at all nonzero points. \"},\n {\"theorem\":\n  \"∀ {F : Type u_1} {A : outParam (Type u_2)} {B : outParam (Type u_3)} [inst : Monoid A] [inst_1 : Monoid B]\\n  [inst_2 : TopologicalSpace A] [inst_3 : TopologicalSpace B] [self : ContinuousMonoidHomClass F A B] (f : F),\\n  Continuous ↑f\",\n  \"isProp\": true,\n  \"docString\": \"Proof of the continuity of the map. \"}]\n", "prompt_cons": "/-- If `f` is a function `α → 𝕜` which is continuous on a preconnected set `S`, and\n`f ^ 2 = 1` on `S`, then either `f = 1` on `S`, or `f = -1` on `S`. -/\ntheorem ∀ {α : Type u_2} {𝕜 : Type u_1} {f : α → 𝕜} {S : Set α} [inst : TopologicalSpace α] [inst_1 : TopologicalSpace 𝕜]\n  [inst_2 : T1Space 𝕜] [inst_3 : Ring 𝕜] [inst_4 : NoZeroDivisors 𝕜],\n  IsPreconnected S → ContinuousOn f S → Set.EqOn (f ^ 2) 1 S → Set.EqOn f 1 S ∨ Set.EqOn f (-1) S :=\n\n/-- If `f` is a continuous monotone map `ℝ → ℝ`, `f (x + 1) = f x + 1`, then there exists `x`\nsuch that `f x = x + τ f`. -/\ntheorem ∀ (f : CircleDeg1Lift), Continuous ↑f → ∃ x, ↑f x = x + CircleDeg1Lift.translationNumber f :=\n\n/-- The map `fun x ↦ x⁻¹` is continuous at all nonzero points. -/\ntheorem ∀ {G₀ : Type u_1} [inst : Zero G₀] [inst_1 : Inv G₀] [inst_2 : TopologicalSpace G₀] [self : HasContinuousInv₀ G₀]\n  ⦃x : G₀⦄, x ≠ 0 → ContinuousAt Inv.inv x :=\n\n/-- Proof of the continuity of the map. -/\ntheorem ∀ {F : Type u_1} {A : outParam (Type u_2)} {B : outParam (Type u_3)} [inst : Monoid A] [inst_1 : Monoid B]\n  [inst_2 : TopologicalSpace A] [inst_3 : TopologicalSpace B] [self : ContinuousMonoidHomClass F A B] (f : F),\n  Continuous ↑f :=\n\n/-- Let $f: S^{1} \\rightarrow \\mathbb{R}$ be a continuous map. Show there exists a point $x$ of $S^{1}$ such that $f(x)=f(-x)$. -/\ntheorem", "choices": ["∀ {α : Type u_1} {f : α → ℝ} {S : Set α} [inst : TopologicalSpace α] [H : IsPreconnected S],\n  ContinuousOn f S → S ⊆ Circle → ∃ x, ∃ H, f x = f (-x) ", "∀ {α : Type u_1} {f : α → ℝ} {S : Set α} [inst : TopologicalSpace α] [inst_1 : TopologicalSpace ℝ] [inst_2 : T1Space ℝ] [inst_3 : NoZeroDivisors ℝ],\n  ContinuousOn f S → IsAntipodalOn S → ∃ x, f x = f (-x) ", "∀ {𝕜 : Type u_2} [inst : LinearOrderedField 𝕜] [inst_1 : TopologicalSpace 𝕜] [inst_2 : OrderTopology 𝕜] {f : Circle → 𝕜},\n  Continuous f → ∃ x : Circle, f x = f (-x) ", "forall {α : Type u_1} [inst : TopologicalSpace α] [inst_1 : Circle α] {𝕜 : Type u_2} [inst_2 : TopologicalSpace 𝕜] {f : α → 𝕜},\n  Continuous f → ∃ x, f x = f (-x) ", "∀ {α : Type u_1} {𝕜 : Type u_2} {f : α → 𝕜} {S : Set α} [inst : TopologicalSpace α] [inst_1 : TopologicalSpace 𝕜]\n  [inst_2 : T1Space 𝕜] [inst_3 : Ring 𝕜] [inst_4 : NoZeroDivisors 𝕜],\n  IsPreconnected S → ContinuousOn f S → Set.EqOn (f ^ 2) 1 S → Set.EqOn f 1 S ∨ Set.EqOn f (-1) S ", "∀ {f : Circle → ℝ} [inst : TopologicalSpace Circle] [inst_1 : TopologicalSpace ℝ],\n  Continuous f → ∃ x, f x = f (-x) ", "∀ {α : Type u_1} {β : Type u_2} [inst : TopologicalSpace α] [inst_1 : TopologicalSpace β] [inst_2 : AddGroup α] [inst_3 : AddGroup β] [self : AddAntilipschitzWith α β] (f : α →+ β),\n  Continuous f → ∃ x, f x = f (-x) ", "∀ {f : Circle → ℝ} [inst : TopologicalSpace Circle] [inst_1 : TopologicalSpace ℝ],\n  Continuous f → ∃ x : Circle, f x = f (-x) ", "∀ {α : Type u_1} {β : Type u_2} [inst : TopologicalSpace α] [inst_1 : TopologicalSpace β] [BorderedHeawood : CompactSpace α] [Mycielski : T2Space α] [Trivial : T2Space β] (f : α → β), Continuous f → ∃ x, f x = f (-x) ", "∀ {f : Circle → ℝ}, Continuous f → ∃ x, f x = f (-x) "]}
{"docString": "Let $X$ be locally path connected. Show that every connected open set in $X$ is path connected.", "prompts": "[{\"theorem\":\n  \"∀ {E : Type u_1} [inst : AddCommGroup E] [inst_1 : Module ℝ E] [inst_2 : TopologicalSpace E]\\n  [inst_3 : TopologicalAddGroup E] [inst_4 : ContinuousSMul ℝ E] {s : Set E},\\n  Convex ℝ s → Set.Nonempty s → IsPathConnected s\",\n  \"isProp\": true,\n  \"docString\": \"A nonempty convex set is path connected. \"},\n {\"theorem\":\n  \"∀ {α : Type u_2} {β : Type u_1} [inst : TopologicalSpace α] [inst_1 : TopologicalSpace β] [i : LocallyConnectedSpace β],\\n  α ≃ₜ β → LocallyConnectedSpace α\",\n  \"isProp\": true,\n  \"docString\":\n  \"If the codomain of a homeomorphism is a locally connected space, then the domain is also\\na locally connected space. \"},\n {\"theorem\":\n  \"∀ {X : Type u_1} [inst : TopologicalSpace X] [self : PathConnectedSpace X] (x y : X), Joined x y\",\n  \"isProp\": true,\n  \"docString\":\n  \"Any two points in a path-connected space must be joined by a continuous path. \"},\n {\"theorem\":\n  \"∀ {X : Type u_1} [inst : TopologicalSpace X],\\n  (Pairwise fun x y => ∃ U, IsClopen U ∧ x ∈ U ∧ ¬y ∈ U) → IsTotallyDisconnected Set.univ\",\n  \"isProp\": true,\n  \"docString\":\n  \"Let `X` be a topological space, and suppose that for all distinct `x,y ∈ X`, there\\nis some clopen set `U` such that `x ∈ U` and `y ∉ U`. Then `X` is totally disconnected. \"}]\n", "prompt_cons": "/-- A nonempty convex set is path connected. -/\ntheorem ∀ {E : Type u_1} [inst : AddCommGroup E] [inst_1 : Module ℝ E] [inst_2 : TopologicalSpace E]\n  [inst_3 : TopologicalAddGroup E] [inst_4 : ContinuousSMul ℝ E] {s : Set E},\n  Convex ℝ s → Set.Nonempty s → IsPathConnected s :=\n\n/-- If the codomain of a homeomorphism is a locally connected space, then the domain is also\na locally connected space. -/\ntheorem ∀ {α : Type u_2} {β : Type u_1} [inst : TopologicalSpace α] [inst_1 : TopologicalSpace β] [i : LocallyConnectedSpace β],\n  α ≃ₜ β → LocallyConnectedSpace α :=\n\n/-- Any two points in a path-connected space must be joined by a continuous path. -/\ntheorem ∀ {X : Type u_1} [inst : TopologicalSpace X] [self : PathConnectedSpace X] (x y : X), Joined x y :=\n\n/-- Let `X` be a topological space, and suppose that for all distinct `x,y ∈ X`, there\nis some clopen set `U` such that `x ∈ U` and `y ∉ U`. Then `X` is totally disconnected. -/\ntheorem ∀ {X : Type u_1} [inst : TopologicalSpace X],\n  (Pairwise fun x y => ∃ U, IsClopen U ∧ x ∈ U ∧ ¬y ∈ U) → IsTotallyDisconnected Set.univ :=\n\n/-- Let $X$ be locally path connected. Show that every connected open set in $X$ is path connected. -/\ntheorem", "choices": ["∀ {X : Type u_1} [inst : TopologicalSpace X] [i : LocallyPathConnectedSpace X] {U : Set X},\n  IsOpen U → IsConnected U → IsPathConnected U ", "forall {X : Type u_1} [inst : TopologicalSpace X] [self : LocallyPathConnectedSpace X] (U : Set X),\n  IsConnected U → IsOpen U → IsPathConnected U ", "∀ {X : Type u_1} [inst : TopologicalSpace X] [self : LocallyPathConnectedSpace X] {U : Set X},\n  IsOpen U → IsConnected U → IsPathConnected U ", "∀ {X : Type u_1} [inst : TopologicalSpace X] [self : LocallyPathConnectedSpace X] {s : Set X},\n  IsOpen s → IsConnected s → IsPathConnected s ", "∀ {X : Type u_1} [inst : TopologicalSpace X] [i : LocallyPathConnectedSpace X] {U : Set X},\n  IsConnected U → IsOpen U → IsPathConnected U ", "∀ {X : Type u_1} [inst : TopologicalSpace X] [inst_1 : LocallyPathConnectedSpace X] (U : Set X),\n  IsOpen U → IsConnected U → IsPathConnected U ", "∀ {X : Type u_1} [inst : TopologicalSpace X] [self : LocallyPathConnectedSpace X] {U : Set X},\n  IsConnected U → IsOpen U → IsPathConnected U ", "∀ {X : Type u_1} [inst : TopologicalSpace X] [self : LocallyPathConnectedSpace X] {U : Set X},\n  IsConnected U → IsOpen U → IsPathConnected U ", "∀ {X : Type u_1} [inst : TopologicalSpace X] [self : LocallyPathConnectedSpace X] {U : Set X},\n  IsOpen U → IsConnected U → IsPathConnected U ", "∀ {X : Type u_1} [inst : TopologicalSpace X] [self : LocallyPathConnectedSpace X] {U : Set X},\n  IsOpen U → IsConnected U → IsPathConnected U "]}
{"docString": "Let $X$ be a compact Hausdorff space. Let $\\mathcal{A}$ be a collection of closed connected subsets of $X$ that is simply ordered by proper inclusion. Then $Y=\\bigcap_{A \\in \\mathcal{A}} A$ is connected.", "prompts": "[{\"theorem\":\n  \"∀ {α : Type u} [inst : TopologicalSpace α] {s t : Set α}, IsCompact s → IsClosed t → IsCompact (s ∩ t)\",\n  \"isProp\": true,\n  \"docString\":\n  \"The intersection of a compact set and a closed set is a compact set. \"},\n {\"theorem\":\n  \"∀ {α : Type u} [inst : TopologicalSpace α] {s t : Set α}, IsCompact t → IsClosed s → IsCompact (s ∩ t)\",\n  \"isProp\": true,\n  \"docString\":\n  \"The intersection of a closed set and a compact set is a compact set. \"},\n {\"theorem\":\n  \"∀ {α : Type u} [inst : TopologicalSpace α] {s t : Set α}, IsCompact s → IsClosed t → t ⊆ s → IsCompact t\",\n  \"isProp\": true,\n  \"docString\": \"A closed subset of a compact set is a compact set. \"},\n {\"theorem\":\n  \"∀ {α : Type u} {β : Type v} [inst : TopologicalSpace α] [inst_1 : TopologicalSpace β] [inst_2 : CompactSpace α]\\n  [inst_3 : T2Space β] {f : α → β}, Continuous f → IsClosedMap f\",\n  \"isProp\": true,\n  \"docString\":\n  \"A continuous map from a compact space to a Hausdorff space is a closed map. \"}]\n", "prompt_cons": "/-- The intersection of a compact set and a closed set is a compact set. -/\ntheorem ∀ {α : Type u} [inst : TopologicalSpace α] {s t : Set α}, IsCompact s → IsClosed t → IsCompact (s ∩ t) :=\n\n/-- The intersection of a closed set and a compact set is a compact set. -/\ntheorem ∀ {α : Type u} [inst : TopologicalSpace α] {s t : Set α}, IsCompact t → IsClosed s → IsCompact (s ∩ t) :=\n\n/-- A closed subset of a compact set is a compact set. -/\ntheorem ∀ {α : Type u} [inst : TopologicalSpace α] {s t : Set α}, IsCompact s → IsClosed t → t ⊆ s → IsCompact t :=\n\n/-- A continuous map from a compact space to a Hausdorff space is a closed map. -/\ntheorem ∀ {α : Type u} {β : Type v} [inst : TopologicalSpace α] [inst_1 : TopologicalSpace β] [inst_2 : CompactSpace α]\n  [inst_3 : T2Space β] {f : α → β}, Continuous f → IsClosedMap f :=\n\n/-- Let $X$ be a compact Hausdorff space. Let $\\mathcal{A}$ be a collection of closed connected subsets of $X$ that is simply ordered by proper inclusion. Then $Y=\\bigcap_{A \\in \\mathcal{A}} A$ is connected. -/\ntheorem", "choices": ["∀ {α : Type u} [inst : TopologicalSpace α] [inst_1 : CompactSpace α] [inst_2 : T2Space α],\n  ∀ (A : Set (Set α)), (∀ (a : Set α), a ∈ A → IsClosed a ∧ IsConnected a) →\n  Zorn.Chain HasSubset.Subset A → IsConnected (⋂₀ A) ", "∀ {α : Type u} [inst : TopologicalSpace α] [inst_1 : CompactSpace α] [inst_2 : T2Space α],\n  ∀ {𝒜 : Set (Set α)}, (∀ A ∈ 𝒜, IsClosed A ∧ IsConnected A) →\n  Zorn.Chain HasSubset.Subset 𝒜 →\n  IsConnected (⋂₀ 𝒜) ", "∀ {α : Type u} [inst : TopologicalSpace α] [inst_1 : CompactSpace α] [inst_2 : T2Space α] \n  {A : Set (Set α)}, (∀ (a : Set α), a ∈ A → IsConnected a ∧ IsClosed a) → \n  SimpleOrder A → IsConnected (⋂₀ A) ", "∀ {α : Type u} [inst : TopologicalSpace α] [inst_1 : CompactSpace α] [inst_2 : T2Space α],\n  ∀ (A : Set (Set α)), (∀ a ∈ A, IsClosed a ∧ IsConnected a) → Zorn.Chain HasSubset.Subset A →\n    IsConnected (⋂₀ A) ", "∀ {α : Type u} [inst : TopologicalSpace α] [inst_1 : CompactSpace α] [inst_2 : T2Space α],\n  ∀ (A : Set (Set α)), (∀ (a : Set α), a ∈ A → (IsClosed a ∧ IsConnected a)) →\n  Zorn.Chain HasSubset.Subset A → ∃ (Y : Set α), Y = ⋂₀ A ∧ IsConnected Y ", "∀ {α : Type u} [inst : TopologicalSpace α] [inst_1 : CompactSpace α] [inst_2 : T2Space α],\n  ∀ (A : Set (Set α)), ∀ (Y : Set α),\n  (∀ (s : Set α), s ∈ A → IsClosed s ∧ IsConnected s) →\n  Zorn.Chain (⊆) A → (∀ (s : Set α), s ∈ A → Y ⊆ s) →\n  IsConnected Y ", "∀ {α : Type u} [inst : TopologicalSpace α] [inst_1 : CompactSpace α] [inst_2 : T2Space α]\n  {A : Set (Set α)}, (∀ a ∈ A, IsClosed a ∧ IsConnected a) → DirectedOn (⊂) A → IsConnected (⋂₀ A) ", "∀ {α : Type u} [inst : TopologicalSpace α] [inst_1 : CompactSpace α] [inst_2 : T2Space α],\n  ∀ (A : Set (Set α)), (∀ (a : Set α), a ∈ A → IsClosed a ∧ IsConnected a) →\n  (∀ (a₁ a₂ : Set α), a₁ ∈ A → a₂ ∈ A → a₁ ⊆ a₂ ∨ a₂ ⊆ a₁) →\n  IsConnected (⋂₀ A) ", "∀ {α : Type u} [inst : TopologicalSpace α] [inst_1 : CompactSpace α] [inst_2 : T2Space α], \n  ∀ (A : Set (Set α)), (∀ a ∈ A, IsClosed a ∧ IsConnected a) → (∀ a b ∈ A, a ⊆ b ∨ b ⊆ a) → \n  IsConnected (⋂₀ A) ", "∀ {X : Type u} [inst : TopologicalSpace X] [inst_1 : CompactSpace X] [inst_2 : T2Space X] {A : Set (Set X)}, \n  (∀ a ∈ A, IsClosed a ∧ IsConnected a) → \n  Zorn.Chain (⊆) A → \n  IsConnected (⋂₀ A) "]}
{"docString": "Show that a connected metric space having more than one point is uncountable.", "prompts": "[{\"theorem\":\n  \"∀ {α : Type u_2} {β : Type u_1} {f : α → β} {mα : MeasurableSpace α} [inst : MeasurableSpace β]\\n  [inst_1 : TopologicalSpace β] [inst_2 : TopologicalSpace.PseudoMetrizableSpace β]\\n  [inst_3 : TopologicalSpace.SecondCountableTopology β] [inst_4 : OpensMeasurableSpace β],\\n  Measurable f → MeasureTheory.StronglyMeasurable f\",\n  \"isProp\": true,\n  \"docString\":\n  \"In a space with second countable topology, measurable implies strongly measurable. \"},\n {\"theorem\":\n  \"∀ {X : Type u_1} [inst : TopologicalSpace X] [h : TopologicalSpace.PseudoMetrizableSpace X],\\n  TopologicalSpace.FirstCountableTopology X\",\n  \"isProp\": true,\n  \"docString\": \"Every pseudo-metrizable space is first countable. \"},\n {\"theorem\":\n  \"∀ {X : Type u_1} [inst : TopologicalSpace X] {S : Setoid X} [inst_1 : TopologicalSpace.SecondCountableTopology X],\\n  IsOpenMap Quotient.mk' → TopologicalSpace.SecondCountableTopology (Quotient S)\",\n  \"isProp\": true,\n  \"docString\":\n  \"An open quotient of a second countable space is second countable. \"},\n {\"theorem\":\n  \"∀ {α : Type u} [t : TopologicalSpace α] [inst : TopologicalSpace.SeparableSpace α] {ι : Type u_1} {s : ι → Set α}\\n  {a : Set ι},\\n  Set.PairwiseDisjoint a s →\\n    (∀ (i : ι), i ∈ a → IsOpen (s i)) → (∀ (i : ι), i ∈ a → Set.Nonempty (s i)) → Set.Countable a\",\n  \"isProp\": true,\n  \"docString\":\n  \"In a separable space, a family of nonempty disjoint open sets is countable. \"}]\n", "prompt_cons": "/-- In a space with second countable topology, measurable implies strongly measurable. -/\ntheorem ∀ {α : Type u_2} {β : Type u_1} {f : α → β} {mα : MeasurableSpace α} [inst : MeasurableSpace β]\n  [inst_1 : TopologicalSpace β] [inst_2 : TopologicalSpace.PseudoMetrizableSpace β]\n  [inst_3 : TopologicalSpace.SecondCountableTopology β] [inst_4 : OpensMeasurableSpace β],\n  Measurable f → MeasureTheory.StronglyMeasurable f :=\n\n/-- Every pseudo-metrizable space is first countable. -/\ntheorem ∀ {X : Type u_1} [inst : TopologicalSpace X] [h : TopologicalSpace.PseudoMetrizableSpace X],\n  TopologicalSpace.FirstCountableTopology X :=\n\n/-- An open quotient of a second countable space is second countable. -/\ntheorem ∀ {X : Type u_1} [inst : TopologicalSpace X] {S : Setoid X} [inst_1 : TopologicalSpace.SecondCountableTopology X],\n  IsOpenMap Quotient.mk' → TopologicalSpace.SecondCountableTopology (Quotient S) :=\n\n/-- In a separable space, a family of nonempty disjoint open sets is countable. -/\ntheorem ∀ {α : Type u} [t : TopologicalSpace α] [inst : TopologicalSpace.SeparableSpace α] {ι : Type u_1} {s : ι → Set α}\n  {a : Set ι},\n  Set.PairwiseDisjoint a s →\n    (∀ (i : ι), i ∈ a → IsOpen (s i)) → (∀ (i : ι), i ∈ a → Set.Nonempty (s i)) → Set.Countable a :=\n\n/-- Show that a connected metric space having more than one point is uncountable. -/\ntheorem", "choices": ["∀ {X : Type u_1} [inst : TopologicalSpace X] [inst_1 : MetricSpace X] [inst_2 : TopologicalSpace.ConnectedSpace X],\n  Nonempty (X × X) → Set.Nonempty X → ¬Set.Countable X ", "∀ {X : Type u_1} [inst : MetricSpace X] [inst_1 : TopologicalSpace X] [inst_2 : TopologicalSpace.ConnectedSpace X],\n  Set.Nonempty X → Set.Nonempty (SetOf fun x => x ≠ X) → Set.Noncountable X ", "∀ {X : Type u_1} [inst : MetricSpace X] [inst_1 : TopologicalSpace.ConnectedSpace X],\n  Nonempty (X × X →₀ X) → Set.Uncountable X ", "∀ {X : Type u_1} [inst : MetricSpace X] [inst_1 : TopologicalSpace.ConnectedSpace X],\n  2 ≤ cardinal.mk X → ¬ Set.Countable X ", "∀ {X : Type u_1} [inst : MetricSpace X] [inst_1 : TopologicalSpace.ConnectedSpace X] [inst_2 : Nonempty X] [inst_3 : Nontrivial X],\n  Set.Uncountable (Set.Univ : Set X) ", "forall {X : Type u_1} [inst : TopologicalSpace X] [inst_1 : MetricSpace X] [inst_2 : TopologicalSpace.ConnectedSpace X],\n  (Exists (x₀ : X), Exists (x₁ : X), x₀ ≠ x₁) → ¬Set.Countable (Set.Univ : Set X) ", "∀ {X : Type u_1} [inst : MetricSpace X] [TopologicalSpace.SecondCountableTopology X]\n  [TopologicalSpace.ConnectedSpace X] [Nonempty X] [Nontrivial X],\n  Set.Uncountable (Set.Univ : Set X) ", "∀ {X : Type u_1} [inst : TopologicalSpace X] [inst_1 : MetricSpace X] [inst_2 : TopologicalSpace.ConnectedSpace X],\n  Set.Nonempty (SetOf fun x => ¬(x = Classical.choice inst_2.nonempty)) →\n  ¬Set.Countable (SetOf fun x => ¬(x = Classical.choice inst_2.nonempty)) ", "∀ {X : Type u_1} [inst : TopologicalSpace X] [inst_1 : MetricSpace X] [inst_2 : TopologicalSpace.ConnectedSpace X],\n  Nonempty X → Set.Countable X → False ", "∀ {X : Type u_1} [inst : MetricSpace X] [inst_1 : TopologicalSpace.ConnectedSpace X],\n  2 ≤ Cardinal.mk X → ¬Set.Countable X "]}
{"docString": "Show that X is countably compact if and only if every nested sequence $C_1 \\supset C_2 \\supset \\cdots$ of closed nonempty sets of X has a nonempty intersection.", "prompts": "[{\"theorem\":\n  \"∀ {α : Type u} [inst : TopologicalSpace α] {s : Set α} {ι : Type v},\\n  IsCompact s →\\n    ∀ (Z : ι → Set α),\\n      (∀ (i : ι), IsClosed (Z i)) →\\n        (∀ (t : Finset ι), Set.Nonempty (s ∩ ⋂ (i : ι) (_ : i ∈ t), Z i)) → Set.Nonempty (s ∩ ⋂ (i : ι), Z i)\",\n  \"isProp\": true,\n  \"docString\":\n  \"To show that a compact set intersects the intersection of a family of closed sets,\\nit is sufficient to show that it intersects every finite subfamily. \"},\n {\"theorem\":\n  \"∀ {α : Type u} [inst : TopologicalSpace α] {ι : Type v} [hι : Nonempty ι] (Z : ι → Set α),\\n  Directed (fun x x_1 => x ⊇ x_1) Z →\\n    (∀ (i : ι), Set.Nonempty (Z i)) →\\n      (∀ (i : ι), IsCompact (Z i)) → (∀ (i : ι), IsClosed (Z i)) → Set.Nonempty (⋂ (i : ι), Z i)\",\n  \"isProp\": true,\n  \"docString\":\n  \"Cantor's intersection theorem:\\nthe intersection of a directed family of nonempty compact closed sets is nonempty. \"},\n {\"theorem\":\n  \"∀ {α : Type u_1} [inst : TopologicalSpace α] [inst_1 : LocallyCompactSpace α] [inst_2 : Nonempty α],\\n  Nonempty (TopologicalSpace.PositiveCompacts α)\",\n  \"isProp\": true,\n  \"docString\":\n  \"In a nonempty locally compact space, there exists a compact set with nonempty interior. \"},\n {\"theorem\":\n  \"∀ {X : Type u_1} [inst : UniformSpace X] {s : Set X} [inst_1 : Filter.IsCountablyGenerated (uniformity X)],\\n  IsSeqCompact s → IsCompact s\",\n  \"isProp\": true,\n  \"docString\":\n  \"If `𝓤 β` is countably generated, then any sequentially compact set is compact. \"}]\n", "prompt_cons": "/-- To show that a compact set intersects the intersection of a family of closed sets,\nit is sufficient to show that it intersects every finite subfamily. -/\ntheorem ∀ {α : Type u} [inst : TopologicalSpace α] {s : Set α} {ι : Type v},\n  IsCompact s →\n    ∀ (Z : ι → Set α),\n      (∀ (i : ι), IsClosed (Z i)) →\n        (∀ (t : Finset ι), Set.Nonempty (s ∩ ⋂ (i : ι) (_ : i ∈ t), Z i)) → Set.Nonempty (s ∩ ⋂ (i : ι), Z i) :=\n\n/-- Cantor's intersection theorem:\nthe intersection of a directed family of nonempty compact closed sets is nonempty. -/\ntheorem ∀ {α : Type u} [inst : TopologicalSpace α] {ι : Type v} [hι : Nonempty ι] (Z : ι → Set α),\n  Directed (fun x x_1 => x ⊇ x_1) Z →\n    (∀ (i : ι), Set.Nonempty (Z i)) →\n      (∀ (i : ι), IsCompact (Z i)) → (∀ (i : ι), IsClosed (Z i)) → Set.Nonempty (⋂ (i : ι), Z i) :=\n\n/-- In a nonempty locally compact space, there exists a compact set with nonempty interior. -/\ntheorem ∀ {α : Type u_1} [inst : TopologicalSpace α] [inst_1 : LocallyCompactSpace α] [inst_2 : Nonempty α],\n  Nonempty (TopologicalSpace.PositiveCompacts α) :=\n\n/-- If `𝓤 β` is countably generated, then any sequentially compact set is compact. -/\ntheorem ∀ {X : Type u_1} [inst : UniformSpace X] {s : Set X} [inst_1 : Filter.IsCountablyGenerated (uniformity X)],\n  IsSeqCompact s → IsCompact s :=\n\n/-- Show that X is countably compact if and only if every nested sequence $C_1 \\supset C_2 \\supset \\cdots$ of closed nonempty sets of X has a nonempty intersection. -/\ntheorem", "choices": ["∀ {α : Type u} [inst : TopologicalSpace α],\n  IsCountablyCompact α ↔\n    ∀ {ι : Type v} [hι : Nonempty ι] (Z : ι → Set α),\n      Directed (fun x x_1 => x ⊇ x_1) Z →\n        (∀ (i : ι), Set.Nonempty (Z i)) →\n          (∀ (i : ι), IsClosed (Z i)) → Set.Nonempty (⋂ (i : ι), Z i) ", "∀ {X : Type u_1} [inst : TopologicalSpace X],\n  TopologicalSpace.IsCountablyCompact X ↔\n    ∀ (Z : ℕ → Set X),\n      (∀ n : ℕ, Set.Nonempty (Z n)) →\n        (∀ n : ℕ, IsClosed (Z n)) →\n          (∀ n m : ℕ, m ≥ n → Z m ⊆ Z n) → Set.Nonempty (⋂ (n : ℕ), Z n) ", "forall {α : Type u} [inst : TopologicalSpace α],\n  IsCountablyCompact α ↔\n    ∀ (C : ℕ → Set α),\n      (∀ (n : ℕ), IsClosed (C n)) →\n        (∀ (n : ℕ), Set.Nonempty (C n)) →\n          (∀ (n : ℕ), C n ⊇ C (n + 1)) → Set.Nonempty (⋂ (n : ℕ), C n) ", "∀ {α : Type u} [inst : TopologicalSpace α],\n  IsCountablyCompact α ↔\n    ∀ (Z : ℕ → Set α),\n      (∀ (i : ℕ), IsClosed (Z i)) →\n        (∀ (i : ℕ), Set.Nonempty (Z i)) →\n          (∀ (i : ℕ), Z (i+1) ⊆ Z i) → Set.Nonempty (⋂ (i : ℕ), Z i) ", "∀ {X : Type u_1} [inst : TopologicalSpace X],\n  IsCountablyCompact X ↔\n    ∀ {ι : Type v} [hι : Nonempty ι] (C : ι → Set X),\n      (∀ (i : ι), IsClosed (C i)) →\n        (∀ (i : ι), Set.Nonempty (C i)) →\n          Directed (fun x x_1 => x ⊇ x_1) C → Set.Nonempty (⋂ (i : ι), C i) ", "∀ {X : Type u_1} [inst : TopologicalSpace X],\n  IsCountablyCompact X ↔\n    ∀ (C : ℕ → Set X),\n      (∀ (n : ℕ), IsClosed (C n)) →\n        (∀ (n : ℕ), Set.Nonempty (C n)) → (∀ (n : ℕ), C n ⊇ C (n + 1)) → Set.Nonempty (⋂ (n : ℕ), C n) ", "∀ {α : Type u} [inst : TopologicalSpace α] {ι : Type v} [hι : Nonempty ι] (C : ι → Set α),\n  Directed (fun x x_1 => x ⊇ x_1) C →\n    (∀ (i : ι), Set.Nonempty (C i)) →\n      (∀ (i : ι), IsClosed (C i)) → (IsCountablyCompact α ↔ Set.Nonempty (⋂ (i : ι), C i)) ", "∀ {α : Type u} [inst : TopologicalSpace α],\n  IsCountablyCompact α ↔\n    ∀ (F : ℕ → Set α),\n      (∀ (n : ℕ), IsClosed (F n)) →\n        (∀ (n : ℕ), Set.Nonempty (F n)) →\n          (∀ (n : ℕ), F (n + 1) ⊆ F n) → Set.Nonempty (⋂ (n : ℕ), F n) ", "∀ {α : Type u} [inst : TopologicalSpace α],\n  IsCountablyCompact α ↔\n    ∀ (Z : ℕ → Set α),\n      (∀ (i : ℕ), Set.Nonempty (Z i)) →\n        (∀ (i : ℕ), IsClosed (Z i)) →\n          (∀ (i j : ℕ), i ≤ j → Z j ⊆ Z i) → Set.Nonempty (⋂ (i : ℕ), Z i) ", "∀ {α : Type u} [inst : TopologicalSpace α], \n  IsCountablyCompact α ↔ \n    (∀ (Z : ℕ → Set α), \n      (∀ (i : ℕ), IsClosed (Z i)) → \n        (∀ (i : ℕ), Set.Nonempty (Z i)) → \n          (∀ (i j : ℕ), i ≤ j → Z j ⊆ Z i) → Set.Nonempty (⋂ (i : ℕ), Z i)) "]}
{"docString": "Show that the rationals $\\mathbb{Q}$ are not locally compact.", "prompts": "[{\"theorem\":\n  \"∀ {α : Type u_1} [inst : TopologicalSpace α] [inst_1 : LocallyCompactSpace α] [inst_2 : Nonempty α],\\n  Nonempty (TopologicalSpace.PositiveCompacts α)\",\n  \"isProp\": true,\n  \"docString\":\n  \"In a nonempty locally compact space, there exists a compact set with nonempty interior. \"},\n {\"theorem\": \"¬Set.Countable Set.univ\",\n  \"isProp\": true,\n  \"docString\": \"The complex numbers are not countable. \"},\n {\"theorem\":\n  \"∀ {ι : Type u_1} {π : ι → Type u_2} [inst : (i : ι) → TopologicalSpace (π i)]\\n  [inst_1 : ∀ (i : ι), LocallyCompactSpace (π i)] [inst_2 : ∀ (i : ι), CompactSpace (π i)],\\n  LocallyCompactSpace ((i : ι) → π i)\",\n  \"isProp\": true,\n  \"docString\": \"For spaces that are not Hausdorff. \"},\n {\"theorem\":\n  \"∀ {α : Type u_1} [inst : TopologicalSpace α] [self : NoncompactSpace α], ¬IsCompact Set.univ\",\n  \"isProp\": true,\n  \"docString\": \"In a noncompact space, `Set.univ` is not a compact set. \"}]\n", "prompt_cons": "/-- In a nonempty locally compact space, there exists a compact set with nonempty interior. -/\ntheorem ∀ {α : Type u_1} [inst : TopologicalSpace α] [inst_1 : LocallyCompactSpace α] [inst_2 : Nonempty α],\n  Nonempty (TopologicalSpace.PositiveCompacts α) :=\n\n/-- The complex numbers are not countable. -/\ntheorem ¬Set.Countable Set.univ :=\n\n/-- For spaces that are not Hausdorff. -/\ntheorem ∀ {ι : Type u_1} {π : ι → Type u_2} [inst : (i : ι) → TopologicalSpace (π i)]\n  [inst_1 : ∀ (i : ι), LocallyCompactSpace (π i)] [inst_2 : ∀ (i : ι), CompactSpace (π i)],\n  LocallyCompactSpace ((i : ι) → π i) :=\n\n/-- In a noncompact space, `Set.univ` is not a compact set. -/\ntheorem ∀ {α : Type u_1} [inst : TopologicalSpace α] [self : NoncompactSpace α], ¬IsCompact Set.univ :=\n\n/-- Show that the rationals $\\mathbb{Q}$ are not locally compact. -/\ntheorem", "choices": ["¬LocallyCompactSpace ℚ ", "¬LocallyCompactSpace ℚ ", "¬LocallyCompactSpace ℚ ", "¬LocallyCompactSpace Q ", "¬LocallyCompactSpace ℚ ", "¬LocallyCompactSpace ℚ ", "¬LocallyCompactSpace ℝ ", "¬LocallyCompactSpace Q ", "¬LocallyCompactSpace ℚ ", "¬LocallyCompactSpace ℚ "]}
{"docString": "Show that if $X$ is a Hausdorff space that is locally compact at the point $x$, then for each neighborhood $U$ of $x$, there is a neighborhood $V$ of $x$ such that $\\bar{V}$ is compact and $\\bar{V} \\subset U$.", "prompts": "[{\"theorem\":\n  \"∀ {α : Type u} [inst : TopologicalSpace α] [inst_1 : T2Space α],\\n  (∀ (x : α), ∃ s, s ∈ nhds x ∧ IsCompact s) → LocallyCompactSpace α\",\n  \"isProp\": true,\n  \"docString\":\n  \"If every points of a Hausdorff space admits a compact neighborhood, then this space is locally\\ncompact. \"},\n {\"theorem\":\n  \"∀ {α : Type u} [inst : TopologicalSpace α] [inst_1 : LocallyCompactSpace α] (x : α), ∃ K, IsCompact K ∧ K ∈ nhds x\",\n  \"isProp\": true,\n  \"docString\":\n  \"In a locally compact space every point has a compact neighborhood. \"},\n {\"theorem\":\n  \"∀ {α : Type u_1} [inst : TopologicalSpace α] [self : LocallyCompactSpace α] (x : α) (n : Set α),\\n  n ∈ nhds x → ∃ s, s ∈ nhds x ∧ s ⊆ n ∧ IsCompact s\",\n  \"isProp\": true,\n  \"docString\":\n  \"In a locally compact space,\\nevery neighbourhood of every point contains a compact neighbourhood of that same point. \"},\n {\"theorem\":\n  \"∀ {α : Type u} [inst : TopologicalSpace α] [hα : LocallyCompactSpace α] {K U : Set α},\\n  IsCompact K → IsOpen U → K ⊆ U → ∃ L, IsCompact L ∧ K ⊆ interior L ∧ L ⊆ U\",\n  \"isProp\": true,\n  \"docString\":\n  \"In a locally compact space, for every containment `K ⊆ U` of a compact set `K` in an open\\nset `U`, there is a compact neighborhood `L` such that `K ⊆ L ⊆ U`: equivalently, there is a\\ncompact `L` such that `K ⊆ interior L` and `L ⊆ U`. \"}]\n", "prompt_cons": "/-- If every points of a Hausdorff space admits a compact neighborhood, then this space is locally\ncompact. -/\ntheorem ∀ {α : Type u} [inst : TopologicalSpace α] [inst_1 : T2Space α],\n  (∀ (x : α), ∃ s, s ∈ nhds x ∧ IsCompact s) → LocallyCompactSpace α :=\n\n/-- In a locally compact space every point has a compact neighborhood. -/\ntheorem ∀ {α : Type u} [inst : TopologicalSpace α] [inst_1 : LocallyCompactSpace α] (x : α), ∃ K, IsCompact K ∧ K ∈ nhds x :=\n\n/-- In a locally compact space,\nevery neighbourhood of every point contains a compact neighbourhood of that same point. -/\ntheorem ∀ {α : Type u_1} [inst : TopologicalSpace α] [self : LocallyCompactSpace α] (x : α) (n : Set α),\n  n ∈ nhds x → ∃ s, s ∈ nhds x ∧ s ⊆ n ∧ IsCompact s :=\n\n/-- In a locally compact space, for every containment `K ⊆ U` of a compact set `K` in an open\nset `U`, there is a compact neighborhood `L` such that `K ⊆ L ⊆ U`: equivalently, there is a\ncompact `L` such that `K ⊆ interior L` and `L ⊆ U`. -/\ntheorem ∀ {α : Type u} [inst : TopologicalSpace α] [hα : LocallyCompactSpace α] {K U : Set α},\n  IsCompact K → IsOpen U → K ⊆ U → ∃ L, IsCompact L ∧ K ⊆ interior L ∧ L ⊆ U :=\n\n/-- Show that if $X$ is a Hausdorff space that is locally compact at the point $x$, then for each neighborhood $U$ of $x$, there is a neighborhood $V$ of $x$ such that $\\bar{V}$ is compact and $\\bar{V} \\subset U$. -/\ntheorem", "choices": ["∀ {α : Type u} [inst : TopologicalSpace α] [inst_1 : T2Space α] (x : α) (U : Set α),\n  LocallyCompactSpace α → U ∈ nhds x → ∃ V, V ∈ nhds x ∧ IsCompact (closure V) ∧ closure V ⊆ U ", "∀ {α : Type u} [inst : TopologicalSpace α] [inst_1 : T2Space α] [inst_2 : LocallyCompactSpace α] (x : α) (U : Set α),\n  U ∈ nhds x → ∃ V, V ∈ nhds x ∧ IsCompact (closure V) ∧ closure V ⊆ U ", "∀ {α : Type u} [inst : TopologicalSpace α] [inst_1 : T2Space α] [inst_2 : LocallyCompactSpace α] (x : α) (U : Set α),\n  U ∈ nhds x → ∃ V, V ∈ nhds x ∧ IsCompact (Closure V) ∧ Closure V ⊆ U ", "∀ {α : Type u} [inst : TopologicalSpace α] [inst_1 : T2Space α] (x : α) (U : Set α),\n  U ∈ nhds x → LocallyCompactSpace α → ∃ V, V ∈ nhds x ∧ IsCompact (Closure V) ∧ Closure V ⊆ U ", "∀ {α : Type u} [inst : TopologicalSpace α] [inst_1 : T2Space α] [inst_2 : LocallyCompactSpace α] (x : α) (U : Set α),\n  U ∈ nhds x → ∃ V, V ∈ nhds x ∧ IsCompact (Closure V) ∧ Closure V ⊆ U ", "∀ {α : Type u} [inst : TopologicalSpace α] [inst_1 : T2Space α] [inst_2 : LocallyCompactSpace α] (x : α) (U : Set α),\n  U ∈ nhds x → ∃ V, V ∈ nhds x ∧ IsCompact (closure V) ∧ closure V ⊆ U ", "∀ {α : Type u} [inst : TopologicalSpace α] [inst_1 : T2Space α] [inst_2 : LocallyCompactSpace α] (x : α) (U : Set α),\n  U ∈ nhds x → ∃ V, V ∈ nhds x ∧ IsCompact (closure V) ∧ closure V ⊆ U ", "∀ {α : Type u} [inst : TopologicalSpace α] [inst_1 : T2Space α] [inst_2 : LocallyCompactSpace α] (x : α) (U : Set α),\n  U ∈ nhds x → ∃ V, V ∈ nhds x ∧ IsCompact (closure V) ∧ closure V ⊆ U ", "∀ {α : Type u} [inst : TopologicalSpace α] [inst_1 : T2Space α] [inst_2 : LocallyCompactSpace α] (x : α) (U : Set α),\n  U ∈ nhds x → ∃ V, V ∈ nhds x ∧ IsCompact (Closure V) ∧ Closure V ⊆ U ", "∀ {α : Type u} [inst : TopologicalSpace α] [inst_1 : T2Space α] [inst_2 : LocallyCompactSpace α] (x : α) (U : Set α),\n  U ∈ nhds x → ∃ V, V ∈ nhds x ∧ IsCompact (closure V) ∧ closure V ⊆ U "]}
{"docString": "Show that if $X$ has a countable dense subset, every collection of disjoint open sets in $X$ is countable.", "prompts": "[{\"theorem\":\n  \"∀ {α : Type u_1} [inst : TopologicalSpace α] [inst_1 : BaireSpace α] {S : Set (Set α)},\\n  (∀ (s : Set α), s ∈ S → IsOpen s) → Set.Countable S → (∀ (s : Set α), s ∈ S → Dense s) → Dense (⋂₀ S)\",\n  \"isProp\": true,\n  \"docString\":\n  \"Baire theorem: a countable intersection of dense open sets is dense. Formulated here with ⋂₀. \"},\n {\"theorem\":\n  \"∀ {α : Type u} [t : TopologicalSpace α] [self : TopologicalSpace.SeparableSpace α], ∃ s, Set.Countable s ∧ Dense s\",\n  \"isProp\": true,\n  \"docString\": \"There exists a countable dense set. \"},\n {\"theorem\":\n  \"∀ {α : Type u_2} {β : Type u_1} [inst : TopologicalSpace α] [inst_1 : BaireSpace α] {S : Set β} {f : β → Set α},\\n  (∀ (s : β), s ∈ S → IsOpen (f s)) →\\n    Set.Countable S → (∀ (s : β), s ∈ S → Dense (f s)) → Dense (⋂ (s : β) (_ : s ∈ S), f s)\",\n  \"isProp\": true,\n  \"docString\":\n  \"Baire theorem: a countable intersection of dense open sets is dense. Formulated here with\\nan index set which is a countable set in any type. \"},\n {\"theorem\":\n  \"∀ {α : Type u_2} {β : Type u_1} [inst : TopologicalSpace α] [inst_1 : BaireSpace α] {S : Set β} {f : β → Set α},\\n  (∀ (s : β), s ∈ S → IsClosed (f s)) →\\n    Set.Countable S → ⋃ (s : β) (_ : s ∈ S), f s = Set.univ → Dense (⋃ (s : β) (_ : s ∈ S), interior (f s))\",\n  \"isProp\": true,\n  \"docString\":\n  \"Baire theorem: if countably many closed sets cover the whole space, then their interiors\\nare dense. Formulated here with an index set which is a countable set in any type. \"}]\n", "prompt_cons": "/-- Baire theorem: a countable intersection of dense open sets is dense. Formulated here with ⋂₀. -/\ntheorem ∀ {α : Type u_1} [inst : TopologicalSpace α] [inst_1 : BaireSpace α] {S : Set (Set α)},\n  (∀ (s : Set α), s ∈ S → IsOpen s) → Set.Countable S → (∀ (s : Set α), s ∈ S → Dense s) → Dense (⋂₀ S) :=\n\n/-- There exists a countable dense set. -/\ntheorem ∀ {α : Type u} [t : TopologicalSpace α] [self : TopologicalSpace.SeparableSpace α], ∃ s, Set.Countable s ∧ Dense s :=\n\n/-- Baire theorem: a countable intersection of dense open sets is dense. Formulated here with\nan index set which is a countable set in any type. -/\ntheorem ∀ {α : Type u_2} {β : Type u_1} [inst : TopologicalSpace α] [inst_1 : BaireSpace α] {S : Set β} {f : β → Set α},\n  (∀ (s : β), s ∈ S → IsOpen (f s)) →\n    Set.Countable S → (∀ (s : β), s ∈ S → Dense (f s)) → Dense (⋂ (s : β) (_ : s ∈ S), f s) :=\n\n/-- Baire theorem: if countably many closed sets cover the whole space, then their interiors\nare dense. Formulated here with an index set which is a countable set in any type. -/\ntheorem ∀ {α : Type u_2} {β : Type u_1} [inst : TopologicalSpace α] [inst_1 : BaireSpace α] {S : Set β} {f : β → Set α},\n  (∀ (s : β), s ∈ S → IsClosed (f s)) →\n    Set.Countable S → ⋃ (s : β) (_ : s ∈ S), f s = Set.univ → Dense (⋃ (s : β) (_ : s ∈ S), interior (f s)) :=\n\n/-- Show that if $X$ has a countable dense subset, every collection of disjoint open sets in $X$ is countable. -/\ntheorem", "choices": ["forall {α : Type u} [t : TopologicalSpace α] [self : TopologicalSpace.SeparableSpace α] {S : Set (Set α)},\n  (∀ (s : Set α), s ∈ S → IsOpen s) → Pairwise (Disjoint on S) → Set.Countable S ", "forall {α : Type u} [t : TopologicalSpace α] [self : TopologicalSpace.SeparableSpace α] {S : Set (Set α)},\n  (∀ (s : Set α), s ∈ S → IsOpen s) → pairwise (Disjoint on S) → Set.Countable S ", "∀ {α : Type u} [t : TopologicalSpace α] [self : TopologicalSpace.SeparableSpace α] {S : Set (Set α)},\n  (∀ (s : Set α), s ∈ S → IsOpen s) → (∀ (s t : Set α), s ∈ S → t ∈ S → s ≠ t → Disjoint s t) → Set.Countable S ", "∀ {α : Type u} [t : TopologicalSpace α] [self : TopologicalSpace.SeparableSpace α] {S : Set (Set α)},\n  (∀ (s : Set α), s ∈ S → IsOpen s) → Pairwise (Disjoint on S) → Set.Countable S ", "∀ {α : Type u} [t : TopologicalSpace α] [self : TopologicalSpace.SeparableSpace α] {S : Set (Set α)},\n  (∀ (s : Set α), s ∈ S → IsOpen s) →\n    (∀ (s t : Set α), s ∈ S → t ∈ S → s ≠ t → s ∩ t = ∅) → Set.Countable S ", "forall {α : Type u} [t : TopologicalSpace α] [self : TopologicalSpace.SeparableSpace α] {S : Set (Set α)},\n  (∀ (s : Set α), s ∈ S → IsOpen s) → PairwiseDisjoint S → Set.Countable S ", "forall {α : Type u} [t : TopologicalSpace α] [self : TopologicalSpace.SeparableSpace α] {S : Set (Set α)},\n  (∀ (s : Set α), s ∈ S → IsOpen s) → Pairwise (Disjoint on S) → Set.Countable S ", "forall {α : Type u} [t : TopologicalSpace α] [self : TopologicalSpace.SeparableSpace α] {S : Set (Set α)},\n  (∀ (s : Set α), s ∈ S → IsOpen s) → PairwiseDisjoint S → Set.Countable S ", "∀ {α : Type u} [t : TopologicalSpace α] [self : TopologicalSpace.SeparableSpace α] {S : Set (Set α)},\n  (∀ (s : Set α), s ∈ S → IsOpen s) → Pairwise (Disjoint on S) → Set.Countable S ", "∀ {α : Type u} [t : TopologicalSpace α] [self : TopologicalSpace.SeparableSpace α] {S : Set (Set α)},\n  (∀ (s : Set α), s ∈ S → IsOpen s) → Pairwise (Disjoint on S) → Set.Countable S "]}
{"docString": "Show that if $X$ is normal, every pair of disjoint closed sets have neighborhoods whose closures are disjoint.", "prompts": "[{\"theorem\":\n  \"∀ {α : Type u} [inst : TopologicalSpace α] [self : NormalSpace α] (s t : Set α),\\n  IsClosed s → IsClosed t → Disjoint s t → SeparatedNhds s t\",\n  \"isProp\": true,\n  \"docString\":\n  \"Two disjoint sets in a normal space admit disjoint neighbourhoods. \"},\n {\"theorem\":\n  \"∀ {α : Type u} [inst : TopologicalSpace α] {Z a b : Set α},\\n  IsClopen Z → Z ⊆ a ∪ b → IsOpen a → IsOpen b → Disjoint a b → IsClopen (Z ∩ a)\",\n  \"isProp\": true,\n  \"docString\":\n  \"The intersection of a disjoint covering by two open sets of a clopen set will be clopen. \"},\n {\"theorem\":\n  \"∀ {α : Type u} [inst : PseudoMetricSpace α] {s t : Set α},\\n  Metric.hausdorffDist (closure s) (closure t) = Metric.hausdorffDist s t\",\n  \"isProp\": true,\n  \"docString\":\n  \"The Hausdorff distance between two sets and their closures coincide \"},\n {\"theorem\":\n  \"∀ {α : Type u} [inst : TopologicalSpace α] [self : T2Space α] (x y : α),\\n  x ≠ y → ∃ u v, IsOpen u ∧ IsOpen v ∧ x ∈ u ∧ y ∈ v ∧ Disjoint u v\",\n  \"isProp\": true,\n  \"docString\":\n  \"Every two points in a Hausdorff space admit disjoint open neighbourhoods. \"}]\n", "prompt_cons": "/-- Two disjoint sets in a normal space admit disjoint neighbourhoods. -/\ntheorem ∀ {α : Type u} [inst : TopologicalSpace α] [self : NormalSpace α] (s t : Set α),\n  IsClosed s → IsClosed t → Disjoint s t → SeparatedNhds s t :=\n\n/-- The intersection of a disjoint covering by two open sets of a clopen set will be clopen. -/\ntheorem ∀ {α : Type u} [inst : TopologicalSpace α] {Z a b : Set α},\n  IsClopen Z → Z ⊆ a ∪ b → IsOpen a → IsOpen b → Disjoint a b → IsClopen (Z ∩ a) :=\n\n/-- The Hausdorff distance between two sets and their closures coincide -/\ntheorem ∀ {α : Type u} [inst : PseudoMetricSpace α] {s t : Set α},\n  Metric.hausdorffDist (closure s) (closure t) = Metric.hausdorffDist s t :=\n\n/-- Every two points in a Hausdorff space admit disjoint open neighbourhoods. -/\ntheorem ∀ {α : Type u} [inst : TopologicalSpace α] [self : T2Space α] (x y : α),\n  x ≠ y → ∃ u v, IsOpen u ∧ IsOpen v ∧ x ∈ u ∧ y ∈ v ∧ Disjoint u v :=\n\n/-- Show that if $X$ is normal, every pair of disjoint closed sets have neighborhoods whose closures are disjoint. -/\ntheorem", "choices": ["∀ {α : Type u} [inst : TopologicalSpace α] [self : NormalSpace α] (s t : Set α),\n  IsClosed s → IsClosed t → Disjoint s t → ∃ u v, IsOpen u ∧ IsOpen v ∧ s ⊆ u ∧ t ⊆ v ∧ Disjoint (closure u) (closure v) ", "∀ {α : Type u} [inst : TopologicalSpace α] [self : NormalSpace α] (s t : Set α),\n  IsClosed s → IsClosed t → Disjoint s t → ∃ u v, IsOpen u ∧ IsOpen v ∧ s ⊆ u ∧ t ⊆ v ∧ Disjoint (closure u) (closure v) ", "∀ {α : Type u} [inst : TopologicalSpace α] [self : NormalSpace α] (s t : Set α),\n  IsClosed s → IsClosed t → Disjoint s t → ∃ u v, IsOpen u ∧ IsOpen v ∧ s ⊆ u ∧ t ⊆ v ∧ Disjoint (closure u) (closure v) ", "∀ {α : Type u} [inst : TopologicalSpace α] [self : NormalSpace α] (s t : Set α),\n  IsClosed s → IsClosed t → Disjoint s t → ∃ u v, IsOpen u ∧ IsOpen v ∧ s ⊆ u ∧ t ⊆ v ∧ Disjoint (closure u) (closure v) ", "∀ {α : Type u} [inst : TopologicalSpace α] [self : NormalSpace α] (s t : Set α),\n  IsClosed s → IsClosed t → Disjoint s t → ∃ u v, IsOpen u ∧ IsOpen v ∧ s ⊆ u ∧ t ⊆ v ∧ Disjoint (closure u) (closure v) ", "∀ {α : Type u} [inst : TopologicalSpace α] [self : NormalSpace α] (s t : Set α),\n  IsClosed s → IsClosed t → Disjoint s t → ∃ u v, IsOpen u ∧ IsOpen v ∧ s ⊆ u ∧ t ⊆ v ∧ Disjoint (closure u) (closure v) ", "∀ {α : Type u} [inst : TopologicalSpace α] [self : NormalSpace α] (s t : Set α),\n  IsClosed s → IsClosed t → Disjoint s t → SeparatedClosuresNhds s t ", "∀ {α : Type u} [inst : TopologicalSpace α] [self : NormalSpace α] (s t : Set α),\n  IsClosed s → IsClosed t → Disjoint s t → ∃ u v, IsOpen u ∧ IsOpen v ∧ s ⊆ u ∧ t ⊆ v ∧ Disjoint (closure u) (closure v) ", "∀ {α : Type u} [inst : TopologicalSpace α] [self : NormalSpace α] (s t : Set α),\n  IsClosed s → IsClosed t → Disjoint s t → ∃ u v, IsOpen u ∧ IsOpen v ∧ s ⊆ u ∧ t ⊆ v ∧ Disjoint (closure u) (closure v) ", "∀ {α : Type u} [inst : TopologicalSpace α] [self : NormalSpace α] (s t : Set α),\n  IsClosed s → IsClosed t → Disjoint s t → ∃ u v, IsOpen u ∧ IsOpen v ∧ s ⊆ u ∧ t ⊆ v ∧ Disjoint (closure u) (closure v) "]}
{"docString": "Show that a closed subspace of a normal space is normal.", "prompts": "[{\"theorem\":\n  \"∀ {𝕜 : Type u} [inst : NontriviallyNormedField 𝕜] {E : Type v} [inst_1 : NormedAddCommGroup E]\\n  [inst_2 : NormedSpace 𝕜 E] [inst_3 : CompleteSpace 𝕜] (s : Submodule 𝕜 E)\\n  [inst_4 : FiniteDimensional 𝕜 { x // x ∈ s }], IsClosed ↑s\",\n  \"isProp\": true,\n  \"docString\": \"A finite-dimensional subspace is closed. \"},\n {\"theorem\":\n  \"∀ {G : Type u_1} [inst : TopologicalSpace G] [inst_1 : Group G] [inst_2 : TopologicalGroup G] (N : Subgroup G)\\n  [inst_3 : Subgroup.Normal N], Subgroup.Normal (Subgroup.topologicalClosure N)\",\n  \"isProp\": true,\n  \"docString\": \"The topological closure of a normal subgroup is normal.\"},\n {\"theorem\":\n  \"∀ {α : Type u} [inst : TopologicalSpace α] [self : NormalSpace α] (s t : Set α),\\n  IsClosed s → IsClosed t → Disjoint s t → SeparatedNhds s t\",\n  \"isProp\": true,\n  \"docString\":\n  \"Two disjoint sets in a normal space admit disjoint neighbourhoods. \"},\n {\"theorem\":\n  \"∀ {K : Type u_1} {V : Type u_2} [inst : Field K] [inst_1 : AddCommGroup V] [inst_2 : Module K V]\\n  (W : Projectivization.Subspace K V), Projectivization.Subspace.span ↑W = W\",\n  \"isProp\": true,\n  \"docString\": \"The span of a subspace is the subspace. \"}]\n", "prompt_cons": "/-- A finite-dimensional subspace is closed. -/\ntheorem ∀ {𝕜 : Type u} [inst : NontriviallyNormedField 𝕜] {E : Type v} [inst_1 : NormedAddCommGroup E]\n  [inst_2 : NormedSpace 𝕜 E] [inst_3 : CompleteSpace 𝕜] (s : Submodule 𝕜 E)\n  [inst_4 : FiniteDimensional 𝕜 { x // x ∈ s }], IsClosed ↑s :=\n\n/-- The topological closure of a normal subgroup is normal. -/\ntheorem ∀ {G : Type u_1} [inst : TopologicalSpace G] [inst_1 : Group G] [inst_2 : TopologicalGroup G] (N : Subgroup G)\n  [inst_3 : Subgroup.Normal N], Subgroup.Normal (Subgroup.topologicalClosure N) :=\n\n/-- Two disjoint sets in a normal space admit disjoint neighbourhoods. -/\ntheorem ∀ {α : Type u} [inst : TopologicalSpace α] [self : NormalSpace α] (s t : Set α),\n  IsClosed s → IsClosed t → Disjoint s t → SeparatedNhds s t :=\n\n/-- The span of a subspace is the subspace. -/\ntheorem ∀ {K : Type u_1} {V : Type u_2} [inst : Field K] [inst_1 : AddCommGroup V] [inst_2 : Module K V]\n  (W : Projectivization.Subspace K V), Projectivization.Subspace.span ↑W = W :=\n\n/-- Show that a closed subspace of a normal space is normal. -/\ntheorem", "choices": ["∀ {α : Type u} [inst : TopologicalSpace α] [self : NormalSpace α] (s : Subspace α),\n  IsClosed ↑s → NormalSpace {x // x ∈ s} ", "∀ {α : Type u} [inst : TopologicalSpace α] [self : NormalSpace α] (s : Subspace α),\n  IsClosed ↑s → Subspace.Normal s ", "∀ {α : Type u} [inst : TopologicalSpace α] [self : NormalSpace α] (s : Subspace α),\n  IsClosed ↑s → NormalSpace { x // x ∈ s } ", "∀ {α : Type u} [inst : TopologicalSpace α] [self : NormalSpace α] (s : Subspace α),\n  IsClosed ↑s → NormalSpace {x // x ∈ s} ", "∀ {α : Type u} [inst : TopologicalSpace α] [self : NormalSpace α] (s : Subspace α),\n  IsClosed ↑s → NormalSpace { x // x ∈ s } ", "∀ {α : Type u} [inst : TopologicalSpace α] [self : NormalSpace α] (s : Subspace α),\n  IsClosed ↑s → NormalSpace {x // x ∈ s} ", "∀ {α : Type u} [inst : TopologicalSpace α] [self : NormalSpace α] (s : Set α),\n  IsClosed s → NormalSpace (Subtype (λ (x : α), x ∈ s)) ", "∀ {α : Type u} [inst : TopologicalSpace α] [self : NormalSpace α] (s : Subspace α),\n  IsClosed ↑s → NormalSpace (Subspace α) ", "∀ {α : Type u} [inst : TopologicalSpace α] [self : NormalSpace α] (s : Subspace α),\n  IsClosed ↑s → NormalSpace ↑s ", "∀ {α : Type u} [inst : TopologicalSpace α] [self : NormalSpace α] (s : Submodule α),\n  IsClosed ↑s → NormalSpace ↑s "]}
{"docString": "Show that if $\\prod X_\\alpha$ is regular, then so is $X_\\alpha$. Assume that each $X_\\alpha$ is nonempty.", "prompts": "[{\"theorem\":\n  \"∀ {G : Type u_1} [inst : Group G] [inst_1 : TopologicalSpace G] [inst_2 : T2Space G] [inst_3 : TopologicalGroup G]\\n  [inst_4 : MeasurableSpace G] [inst_5 : BorelSpace G] [inst_6 : TopologicalSpace.SecondCountableTopology G]\\n  {μ : MeasureTheory.Measure G} [inst_7 : MeasureTheory.SigmaFinite μ]\\n  [inst : MeasureTheory.Measure.IsMulLeftInvariant μ] {K : Set G},\\n  IsCompact K → Set.Nonempty (interior K) → ↑↑μ K ≠ ⊤ → MeasureTheory.Measure.Regular μ\",\n  \"isProp\": true,\n  \"docString\":\n  \"To show that an invariant σ-finite measure is regular it is sufficient to show that it is finite\\non some compact set with non-empty interior. \"},\n {\"theorem\":\n  \"∀ {G : Type u_1} [inst : AddGroup G] [inst_1 : TopologicalSpace G] [inst_2 : T2Space G] [inst_3 : TopologicalAddGroup G]\\n  [inst_4 : MeasurableSpace G] [inst_5 : BorelSpace G] [inst_6 : TopologicalSpace.SecondCountableTopology G]\\n  {μ : MeasureTheory.Measure G} [inst_7 : MeasureTheory.SigmaFinite μ]\\n  [inst : MeasureTheory.Measure.IsAddLeftInvariant μ] {K : Set G},\\n  IsCompact K → Set.Nonempty (interior K) → ↑↑μ K ≠ ⊤ → MeasureTheory.Measure.Regular μ\",\n  \"isProp\": true,\n  \"docString\":\n  \"To show that an invariant σ-finite measure is regular it is sufficient to show that it is finite on\\nsome compact set with non-empty interior.\"},\n {\"theorem\":\n  \"∀ {α : Type u} [inst : TopologicalSpace α] {ι : Type u_1} [inst_1 : CompactSpace α] {f : ι → Set α},\\n  LocallyFinite f → Set.Finite {i | Set.Nonempty (f i)}\",\n  \"isProp\": true,\n  \"docString\":\n  \"If `α` is a compact space, then a locally finite family of sets of `α` can have only finitely\\nmany nonempty elements. \"},\n {\"theorem\":\n  \"∀ {R : Type u_1} [inst : Semigroup R] {a b : R}, IsRegular (a * b) ∧ IsRegular (b * a) ↔ IsRegular a ∧ IsRegular b\",\n  \"isProp\": true,\n  \"docString\":\n  \"Two elements `a` and `b` are regular if and only if both products `a * b` and `b * a`\\nare regular. \"}]\n", "prompt_cons": "/-- To show that an invariant σ-finite measure is regular it is sufficient to show that it is finite\non some compact set with non-empty interior. -/\ntheorem ∀ {G : Type u_1} [inst : Group G] [inst_1 : TopologicalSpace G] [inst_2 : T2Space G] [inst_3 : TopologicalGroup G]\n  [inst_4 : MeasurableSpace G] [inst_5 : BorelSpace G] [inst_6 : TopologicalSpace.SecondCountableTopology G]\n  {μ : MeasureTheory.Measure G} [inst_7 : MeasureTheory.SigmaFinite μ]\n  [inst : MeasureTheory.Measure.IsMulLeftInvariant μ] {K : Set G},\n  IsCompact K → Set.Nonempty (interior K) → ↑↑μ K ≠ ⊤ → MeasureTheory.Measure.Regular μ :=\n\n/-- To show that an invariant σ-finite measure is regular it is sufficient to show that it is finite on\nsome compact set with non-empty interior. -/\ntheorem ∀ {G : Type u_1} [inst : AddGroup G] [inst_1 : TopologicalSpace G] [inst_2 : T2Space G] [inst_3 : TopologicalAddGroup G]\n  [inst_4 : MeasurableSpace G] [inst_5 : BorelSpace G] [inst_6 : TopologicalSpace.SecondCountableTopology G]\n  {μ : MeasureTheory.Measure G} [inst_7 : MeasureTheory.SigmaFinite μ]\n  [inst : MeasureTheory.Measure.IsAddLeftInvariant μ] {K : Set G},\n  IsCompact K → Set.Nonempty (interior K) → ↑↑μ K ≠ ⊤ → MeasureTheory.Measure.Regular μ :=\n\n/-- If `α` is a compact space, then a locally finite family of sets of `α` can have only finitely\nmany nonempty elements. -/\ntheorem ∀ {α : Type u} [inst : TopologicalSpace α] {ι : Type u_1} [inst_1 : CompactSpace α] {f : ι → Set α},\n  LocallyFinite f → Set.Finite {i | Set.Nonempty (f i)} :=\n\n/-- Two elements `a` and `b` are regular if and only if both products `a * b` and `b * a`\nare regular. -/\ntheorem ∀ {R : Type u_1} [inst : Semigroup R] {a b : R}, IsRegular (a * b) ∧ IsRegular (b * a) ↔ IsRegular a ∧ IsRegular b :=\n\n/-- Show that if $\\prod X_\\alpha$ is regular, then so is $X_\\alpha$. Assume that each $X_\\alpha$ is nonempty. -/\ntheorem", "choices": ["∀ {ι : Type u_1} {α : ι → Type u_2} [t : (i : ι) → TopologicalSpace (α i)]\n  [T : TopologicalSpace (Π (i : ι), α i)] [reg : T2Space (Π (i : ι), α i)] (h : ∀ i, Nonempty (α i)),\n  (∀ (i : ι), IsCompact (Set.Range (λ (x : α i), Function.update (λ (i : ι), Classical.choice (h i)) i x))) →\n  (∀ (i : ι), IsRegular (t i)) ", "∀ {α : Type u} {β : Type v} [inst : TopologicalSpace α] [inst_1 : TopologicalSpace β] [inst_2 : T2Space α] [inst_3 : T2Space β]\n  [inst_4 : ∀ (a : α), Nonempty β] [inst_5 : ∀ (b : β), Nonempty α], RegularSpace (α × β) → RegularSpace α ∧ RegularSpace β ", "∀ {ι : Type u_1} {α : ι → Type u} [_inst : ∀ (i : ι), TopologicalSpace (α i)] [_inst_1 : ∀ (i : ι), Nonempty (α i)]\n  [inst : T2Space (Π (i : ι), α i)] (hreg : RegularSpace (Π (i : ι), α i)) (i : ι), RegularSpace (α i) ", "∀ {α : Type u} {β : α → Type v} [inst : (a : α) → TopologicalSpace (β a)] [inst_1 : (a : α) → T2Space (β a)]\n  [inst_2 : ∀ a, Nonempty (β a)] {ι : Type u_1} [inst_3 : Semigroup ι]\n  {π : (a : α) → ι → β a} [inst_4 : (a : α) → IsInvariant (π a)],\n  (∀ a, IsRegular (π a)) → IsRegular (function.uncurry π) ", "∀ {ι : Type u_1} {α : ι → Type u_2} [inst : (i : ι) → TopologicalSpace (α i)]\n  [inst_1 : (i : ι) → Nonempty (α i)] [inst_2 : T2Space (Π (i : ι), α i)] [inst_3 : RegularSpace (Π (i : ι), α i)],\n  (∀ i, RegularSpace (α i)) ", "∀ {ι : Type u_1} {α : ι → Type u_2} [inst : (i : ι) → TopologicalSpace (α i)] [inst_1 : (i : ι) → T2Space (α i)]\n  [inst_2 : (i : ι) → Nonempty (α i)] {X : (i : ι) → Set (α i)},\n  (∀ i, IsCompact (X i)) → IsCompact (set.Pi Set.Univ X) → (∀ i, IsCompact (X i)) ", "∀ {ι : Type u_1} {α : ι → Type u_2} [inst : (i : ι) → TopologicalSpace (α i)] [inst_1 : (i : ι) → T2Space (α i)]\n  [inst_2 : Π (i : ι), Nonempty (α i)] [inst_3 : RegularSpace (Π (i : ι), α i)]\n  (i : ι), RegularSpace (α i) ", "∀ {ι : Type u_1} {α : ι → Type u_2} [inst : (i : ι) → TopologicalSpace (α i)] [inst_1 : (i : ι) → Nonempty (α i)]\n  [inst_2 : T2Space ((i : ι) → α i)] [inst_3 : ∀ (i : ι), T2Space (α i)] [inst_4 : RegularSpace ((i : ι) → α i)], \n  (∀ i, RegularSpace (α i)) ", "∀ {ι : Type u_1} {α : ι → Type u_2} [_inst : (i : ι) → TopologicalSpace (α i)] [_inst_1 : ∀ (i : ι), Nonempty (α i)]\n  [inst : T2Space ((i : ι) → α i)] [inst_2 : RegularSpace ((i : ι) → α i)] (i : ι),\n  RegularSpace (α i) ", "∀ {α : Type u} {β : α → Type v} [_inst : (a : α) → TopologicalSpace (β a)] [_inst_1 : (a : α) → Nonempty (β a)]\n  [inst : (a : α) → T2Space (β a)] {t : TopologicalSpace (Π (a : α), β a)} [inst_1 : T2Space (Π (a : α), β a)]\n  [inst_2 : ∀ (a : α), TopologicalSpace (Π (a : α), β a)] [inst_3 : ∀ (a : α), T2Space (Π (a : α), β a)],\n  (∀ (a : α), IsRegularSpace (β a)) → IsRegularSpace (Π (a : α), β a) "]}
{"docString": "Show that every locally compact Hausdorff space is regular.", "prompts": "[{\"theorem\":\n  \"∀ {G : Type w} [inst : TopologicalSpace G] (μ : MeasureTheory.Content G) [inst_1 : T2Space G] [S : MeasurableSpace G]\\n  [inst_2 : BorelSpace G] [inst_3 : LocallyCompactSpace G],\\n  MeasureTheory.Measure.Regular (MeasureTheory.Content.measure μ)\",\n  \"isProp\": true,\n  \"docString\":\n  \"In a locally compact space, any measure constructed from a content is regular. \"},\n {\"theorem\":\n  \"∀ {X : Type u_1} [inst : TopologicalSpace X] [inst_1 : LocallyCompactSpace X] [inst_2 : T2Space X],\\n  NormalSpace (OnePoint X)\",\n  \"isProp\": true,\n  \"docString\":\n  \"The one point compactification of a locally compact Hausdorff space is a normal (hence,\\nHausdorff and regular) topological space. \"},\n {\"theorem\":\n  \"∀ {α : Type u} [inst : TopologicalSpace α] [inst_1 : T2Space α],\\n  (∀ (x : α), ∃ s, s ∈ nhds x ∧ IsCompact s) → LocallyCompactSpace α\",\n  \"isProp\": true,\n  \"docString\":\n  \"If every points of a Hausdorff space admits a compact neighborhood, then this space is locally\\ncompact. \"},\n {\"theorem\":\n  \"∀ {X : Type u_1} [inst : EMetricSpace X] [inst_1 : SigmaCompactSpace X] [inst_2 : MeasurableSpace X]\\n  [inst_3 : BorelSpace X] (μ : MeasureTheory.Measure X) [inst_4 : MeasureTheory.IsLocallyFiniteMeasure μ],\\n  MeasureTheory.Measure.Regular μ\",\n  \"isProp\": true,\n  \"docString\":\n  \"Any locally finite measure on a `σ`-compact (e)metric space is regular. \"}]\n", "prompt_cons": "/-- In a locally compact space, any measure constructed from a content is regular. -/\ntheorem ∀ {G : Type w} [inst : TopologicalSpace G] (μ : MeasureTheory.Content G) [inst_1 : T2Space G] [S : MeasurableSpace G]\n  [inst_2 : BorelSpace G] [inst_3 : LocallyCompactSpace G],\n  MeasureTheory.Measure.Regular (MeasureTheory.Content.measure μ) :=\n\n/-- The one point compactification of a locally compact Hausdorff space is a normal (hence,\nHausdorff and regular) topological space. -/\ntheorem ∀ {X : Type u_1} [inst : TopologicalSpace X] [inst_1 : LocallyCompactSpace X] [inst_2 : T2Space X],\n  NormalSpace (OnePoint X) :=\n\n/-- If every points of a Hausdorff space admits a compact neighborhood, then this space is locally\ncompact. -/\ntheorem ∀ {α : Type u} [inst : TopologicalSpace α] [inst_1 : T2Space α],\n  (∀ (x : α), ∃ s, s ∈ nhds x ∧ IsCompact s) → LocallyCompactSpace α :=\n\n/-- Any locally finite measure on a `σ`-compact (e)metric space is regular. -/\ntheorem ∀ {X : Type u_1} [inst : EMetricSpace X] [inst_1 : SigmaCompactSpace X] [inst_2 : MeasurableSpace X]\n  [inst_3 : BorelSpace X] (μ : MeasureTheory.Measure X) [inst_4 : MeasureTheory.IsLocallyFiniteMeasure μ],\n  MeasureTheory.Measure.Regular μ :=\n\n/-- Show that every locally compact Hausdorff space is regular. -/\ntheorem", "choices": ["∀ {α : Type u} [inst : TopologicalSpace α] [inst_1 : T2Space α] [inst_2 : LocallyCompactSpace α],\n  RegularSpace α ", "forall {X : Type u_1} [inst : TopologicalSpace X] [inst_1 : LocallyCompactSpace X] [inst_2 : T2Space X],\n  RegularSpace X ", "∀ {X : Type u_1} [inst : TopologicalSpace X] [inst_1 : LocallyCompactSpace X] [inst_2 : T2Space X],\n  RegularSpace X ", "∀ {α : Type u} [inst : TopologicalSpace α] [inst_1 : LocallyCompactSpace α] [inst_2 : T2Space α],\n  RegularSpace α ", "∀ {X : Type u_1} [inst : TopologicalSpace X] [inst_1 : LocallyCompactSpace X] [inst_2 : T2Space X],\n  RegularSpace X ", "∀ {X : Type u_1} [inst : TopologicalSpace X] [inst_1 : LocallyCompactSpace X] [inst_2 : T2Space X],\n  RegularSpace X ", "∀ {X : Type u_1} [inst : TopologicalSpace X] [inst_1 : LocallyCompactSpace X] [inst_2 : T2Space X],\n  RegularSpace X ", "∀ {α : Type u} [inst : TopologicalSpace α] [inst_1 : LocallyCompactSpace α] [inst_2 : T2Space α],\n  RegularSpace α ", "∀ {α : Type u} [inst : TopologicalSpace α] [inst_1 : LocallyCompactSpace α] [inst_2 : T2Space α],\n  IsRegularSpace α ", "∀ {X : Type u_1} [inst : TopologicalSpace X] [inst_1 : LocallyCompactSpace X] [inst_2 : T2Space X],\n  RegularSpace X "]}
{"docString": "Let $X$ be completely regular, let $A$ and $B$ be disjoint closed subsets of $X$. Show that if $A$ is compact, there is a continuous function $f \\colon X \\rightarrow [0, 1]$ such that $f(A) = \\{0\\}$ and $f(B) = \\{1\\}$.", "prompts": "[{\"theorem\":\n  \"∀ {X : Type u_1} [inst : TopologicalSpace X] (Λ : BoundedContinuousFunction X NNReal →ₗ[NNReal] NNReal)\\n  (K : TopologicalSpace.Compacts X), Set.Nonempty (↑Λ '' {f | ∀ (x : X), x ∈ K → 1 ≤ ↑f x})\",\n  \"isProp\": true,\n  \"docString\":\n  \"For any compact subset `K ⊆ X`, there exist some bounded continuous nonnegative\\nfunctions f on X such that `f ≥ 1` on K. \"},\n {\"theorem\":\n  \"∀ {E : Type uE} [inst : NormedAddCommGroup E] [inst_1 : NormedSpace ℝ E] [inst_2 : FiniteDimensional ℝ E] {H : Type uH}\\n  [inst_3 : TopologicalSpace H] (I : ModelWithCorners ℝ E H) {M : Type uM} [inst_4 : TopologicalSpace M]\\n  [inst_5 : ChartedSpace H M] [inst_6 : SmoothManifoldWithCorners I M] [inst_7 : T2Space M]\\n  [inst_8 : SigmaCompactSpace M] {s t : Set M},\\n  IsClosed s → IsClosed t → Disjoint s t → ∃ f, Set.EqOn (↑f) 0 s ∧ Set.EqOn (↑f) 1 t ∧ ∀ (x : M), ↑f x ∈ Set.Icc 0 1\",\n  \"isProp\": true,\n  \"docString\":\n  \"Given two disjoint closed sets in a Hausdorff σ-compact finite dimensional manifold, there\\nexists an infinitely smooth function that is equal to `0` on one of them and is equal to one on the\\nother. \"},\n {\"theorem\":\n  \"∀ {α : Type u_1} {β : Type u_2} [inst : LinearOrder α] [inst_1 : TopologicalSpace α] [inst_2 : OrderClosedTopology α]\\n  [inst_3 : TopologicalSpace β] [inst_4 : Nonempty α] {f : β → α} {K : Set β},\\n  IsCompact K → ContinuousOn f K → BddBelow (f '' K)\",\n  \"isProp\": true,\n  \"docString\": \"A continuous function is bounded below on a compact set. \"},\n {\"theorem\":\n  \"∀ {α : Type u_1} {β : Type u_2} [inst : LinearOrder α] [inst_1 : TopologicalSpace α] [inst_2 : OrderClosedTopology α]\\n  [inst_3 : TopologicalSpace β] [inst_4 : Nonempty α] {f : β → α} {K : Set β},\\n  IsCompact K → ContinuousOn f K → BddAbove (f '' K)\",\n  \"isProp\": true,\n  \"docString\": \"A continuous function is bounded above on a compact set. \"}]\n", "prompt_cons": "/-- For any compact subset `K ⊆ X`, there exist some bounded continuous nonnegative\nfunctions f on X such that `f ≥ 1` on K. -/\ntheorem ∀ {X : Type u_1} [inst : TopologicalSpace X] (Λ : BoundedContinuousFunction X NNReal →ₗ[NNReal] NNReal)\n  (K : TopologicalSpace.Compacts X), Set.Nonempty (↑Λ '' {f | ∀ (x : X), x ∈ K → 1 ≤ ↑f x}) :=\n\n/-- Given two disjoint closed sets in a Hausdorff σ-compact finite dimensional manifold, there\nexists an infinitely smooth function that is equal to `0` on one of them and is equal to one on the\nother. -/\ntheorem ∀ {E : Type uE} [inst : NormedAddCommGroup E] [inst_1 : NormedSpace ℝ E] [inst_2 : FiniteDimensional ℝ E] {H : Type uH}\n  [inst_3 : TopologicalSpace H] (I : ModelWithCorners ℝ E H) {M : Type uM} [inst_4 : TopologicalSpace M]\n  [inst_5 : ChartedSpace H M] [inst_6 : SmoothManifoldWithCorners I M] [inst_7 : T2Space M]\n  [inst_8 : SigmaCompactSpace M] {s t : Set M},\n  IsClosed s → IsClosed t → Disjoint s t → ∃ f, Set.EqOn (↑f) 0 s ∧ Set.EqOn (↑f) 1 t ∧ ∀ (x : M), ↑f x ∈ Set.Icc 0 1 :=\n\n/-- A continuous function is bounded below on a compact set. -/\ntheorem ∀ {α : Type u_1} {β : Type u_2} [inst : LinearOrder α] [inst_1 : TopologicalSpace α] [inst_2 : OrderClosedTopology α]\n  [inst_3 : TopologicalSpace β] [inst_4 : Nonempty α] {f : β → α} {K : Set β},\n  IsCompact K → ContinuousOn f K → BddBelow (f '' K) :=\n\n/-- A continuous function is bounded above on a compact set. -/\ntheorem ∀ {α : Type u_1} {β : Type u_2} [inst : LinearOrder α] [inst_1 : TopologicalSpace α] [inst_2 : OrderClosedTopology α]\n  [inst_3 : TopologicalSpace β] [inst_4 : Nonempty α] {f : β → α} {K : Set β},\n  IsCompact K → ContinuousOn f K → BddAbove (f '' K) :=\n\n/-- Let $X$ be completely regular, let $A$ and $B$ be disjoint closed subsets of $X$. Show that if $A$ is compact, there is a continuous function $f \\colon X \\rightarrow [0, 1]$ such that $f(A) = \\{0\\}$ and $f(B) = \\{1\\}$. -/\ntheorem", "choices": ["∀ {X : Type u_1} [inst : TopologicalSpace X] [inst_1 : T2Space X] [inst_2 : CompletelyRegularSpace X] {A B : Set X},\n  IsCompact A → IsClosed A → IsClosed B → Disjoint A B → ∃ f, Set.EqOn (↑f) 0 A ∧ Set.EqOn (↑f) 1 B ∧ ∀ (x : X), ↑f x ∈ Set.Icc 0 1 ", "∀ {X : Type u_1} [inst : TopologicalSpace X] [inst_1 : T2Space X] [inst_2 : CompletelyRegularSpace X] {A B : Set X},\n  IsCompact A → IsClosed A → IsClosed B → Disjoint A B → ∃ f : X →ᵇ ℝ,\n  Set.EqOn (↑f) 0 A ∧ Set.EqOn (↑f) 1 B ∧ ∀ (x : X), ↑f x ∈ Set.Icc 0 1 ", "∀ {X : Type u_1} [inst : TopologicalSpace X] [inst_1 : T2Space X] [inst_2 : CompletelyRegularSpace X]\n  {A B : Set X}, IsClosed A → IsClosed B → Disjoint A B → IsCompact A →\n  ∃ f : X → ℝ, Continuous f ∧ Set.EqOn (↑f) 0 A ∧ Set.EqOn (↑f) 1 B ∧ ∀ (x : X), ↑f x ∈ Set.Icc 0 1 ", "∀ {X : Type u_1} [inst : TopologicalSpace X] [_inst_1 : T2Space X] [_inst_2 : TotallyDisconnectedSpace X] {A B : Set X},\n  IsCompact A → IsClosed A → IsClosed B → Disjoint A B → ∃ (f : X →₀ ℝ), Set.EqOn (↑f) 0 A ∧ Set.EqOn (↑f) 1 B ∧ ∀ (x : X), ↑f x ∈ Set.Icc 0 1 ", "∀ {X : Type u_1} [inst : TopologicalSpace X] [inst_1 : T2Space X] [inst_2 : CompletelyRegularSpace X] {A B : Set X},\n  IsCompact A → IsClosed A → IsClosed B → Disjoint A B → ∃ f, Set.EqOn (↑f) 0 A ∧ Set.EqOn (↑f) 1 B ∧ ∀ (x : X), ↑f x ∈ Set.Icc 0 1 ", "∀ {X : Type u_1} [inst : TopologicalSpace X] [inst_1 : T2_space X] [inst_2 : CompletelyRegularSpace X]\n  {A B : Set X}, IsCompact A → IsClosed A → IsClosed B → Disjoint A B →\n  ∃ f : X →ᵇ ℝ, Set.EqOn (↑f) 0 A ∧ Set.EqOn (↑f) 1 B ∧ ∀ (x : X), ↑f x ∈ Set.Icc 0 1 ", "∀ {X : Type u_1} [inst : TopologicalSpace X] [inst_1 : T2Space X] [inst_2 : CompletelyRegularSpace X]\n  {A B : Set X}, IsCompact A → IsClosed A → IsClosed B → Disjoint A B →\n  ∃ f : X →ₛₗ[RingHom.id ℝ] ℝ, Set.EqOn (↑f) 0 A ∧ Set.EqOn (↑f) 1 B ∧ ∀ (x : X), ↑f x ∈ Set.Icc 0 1 ", "∀ {X : Type u_1} [inst : TopologicalSpace X] [inst_1 : T1Space X] [inst_2 : T2Space X] {A B : Set X},\n  IsCompact A → IsClosed A → IsClosed B → Disjoint A B → ∃ f, Set.EqOn (↑f) 0 A ∧ Set.EqOn (↑f) 1 B ∧ ∀ (x : X), ↑f x ∈ Set.Icc 0 1 ", "∀ {X : Type u_1} [inst : TopologicalSpace X] [inst_1 : T2Space X] [inst_2 : RegularSpace X]\n  {A B : Set X}, IsCompact A → IsClosed A → IsClosed B → Disjoint A B →\n  ∃ f : X →ᵇ ℝ, Set.EqOn (↑f) 0 A ∧ Set.EqOn (↑f) 1 B ∧ ∀ (x : X), ↑f x ∈ Set.Icc 0 1 ", "∀ {X : Type u_1} [inst : TopologicalSpace X] [inst_1 : T1Space X] [inst_2 : CompletelyRegularSpace X] {A B : Set X},\n  IsClosed A → IsClosed B → Disjoint A B → IsCompact A →\n  ∃ f : X →ᵇ ℝ, Set.EqOn (↑f) 0 A ∧ Set.EqOn (↑f) 1 B ∧ ∀ (x : X), ↑f x ∈ Set.Icc 0 1 "]}
{"docString": "Let $X$ be completely regular. Show that $X$ is connected if and only if the Stone-Čech compactification of $X$ is connected.", "prompts": "[{\"theorem\":\n  \"∀ {X : Type u_1} [inst : TopologicalSpace X], CompactSpace (OnePoint X)\",\n  \"isProp\": true,\n  \"docString\":\n  \"For any topological space `X`, its one point compactification is a compact space. \"},\n {\"theorem\":\n  \"∀ {X : Type u_1} [inst : TopologicalSpace X] (S : DiscreteQuotient X) [inst_1 : CompactSpace X],\\n  Finite (Quotient S.toSetoid)\",\n  \"isProp\": true,\n  \"docString\":\n  \"If `X` is a compact space, then any discrete quotient of `X` is finite. \"},\n {\"theorem\":\n  \"∀ {X : Type u_1} [inst : TopologicalSpace X] [inst_1 : PreconnectedSpace X] [inst_2 : NoncompactSpace X],\\n  ConnectedSpace (OnePoint X)\",\n  \"isProp\": true,\n  \"docString\":\n  \"If `X` is not a compact space, then `OnePoint X` is a connected space. \"},\n {\"theorem\":\n  \"∀ {E : Type u_1} [inst : AddCommGroup E] [inst_1 : Module ℝ E] [inst_2 : TopologicalSpace E]\\n  [inst_3 : TopologicalAddGroup E] [inst_4 : ContinuousSMul ℝ E] {s : Set E},\\n  Convex ℝ s → Set.Nonempty s → IsConnected s\",\n  \"isProp\": true,\n  \"docString\": \"A nonempty convex set is connected. \"}]\n", "prompt_cons": "/-- For any topological space `X`, its one point compactification is a compact space. -/\ntheorem ∀ {X : Type u_1} [inst : TopologicalSpace X], CompactSpace (OnePoint X) :=\n\n/-- If `X` is a compact space, then any discrete quotient of `X` is finite. -/\ntheorem ∀ {X : Type u_1} [inst : TopologicalSpace X] (S : DiscreteQuotient X) [inst_1 : CompactSpace X],\n  Finite (Quotient S.toSetoid) :=\n\n/-- If `X` is not a compact space, then `OnePoint X` is a connected space. -/\ntheorem ∀ {X : Type u_1} [inst : TopologicalSpace X] [inst_1 : PreconnectedSpace X] [inst_2 : NoncompactSpace X],\n  ConnectedSpace (OnePoint X) :=\n\n/-- A nonempty convex set is connected. -/\ntheorem ∀ {E : Type u_1} [inst : AddCommGroup E] [inst_1 : Module ℝ E] [inst_2 : TopologicalSpace E]\n  [inst_3 : TopologicalAddGroup E] [inst_4 : ContinuousSMul ℝ E] {s : Set E},\n  Convex ℝ s → Set.Nonempty s → IsConnected s :=\n\n/-- Let $X$ be completely regular. Show that $X$ is connected if and only if the Stone-Čech compactification of $X$ is connected. -/\ntheorem", "choices": ["∀ {X : Type u_1} [inst : TopologicalSpace X] [inst_1 : T0Space X] [inst_2 : CompletelyRegular X],\n  ConnectedSpace X ↔ ConnectedSpace (StoneCech X) ", "∀ {X : Type u_1} [inst : TopologicalSpace X] [inst_1 : CompletelyRegularSpace X],\n  ConnectedSpace X ↔ ConnectedSpace (StoneCech X) ", "∀ {X : Type u_1} [inst : TopologicalSpace X] [inst_1 : CompletelyRegularSpace X],\n  ConnectedSpace X ↔ ConnectedSpace (StoneCech X) ", "∀ {X : Type u_1} [inst : TopologicalSpace X] [inst_1 : PreconnectedSpace X] [inst_2 : T0Space X] [inst_3 : CompletelyRegular X],\n  ConnectedSpace (StoneCech X) ↔ ConnectedSpace X ", "∀ {X : Type u_1} [inst : TopologicalSpace X] [inst_1 : T0Space X] [inst_2 : PreconnectedSpace X] [inst_3 : CompletelyRegular X],\n  ConnectedSpace (StoneCechCompactification X) ↔ ConnectedSpace X ", "∀ {X : Type u_1} [inst : TopologicalSpace X] [inst_1 : T2Space X] [inst_2 : PreconnectedSpace X] [inst_3 : TotallySeparatedSpace X]\n  [inst_4 : RegularSpace X] [inst_5 : NormalSpace X],\n  ConnectedSpace (StoneCech X) ↔ ConnectedSpace X ", "∀ {X : Type u_1} [inst : TopologicalSpace X] [inst_1 : PreconnectedSpace X] [inst_2 : CompletelyRegularSpace X],\n  ConnectedSpace (StoneCech X) ↔ ConnectedSpace X ", "∀ {X : Type u_1} [inst : TopologicalSpace X] [inst_1 : T2Space X] [inst_2 : PreconnectedSpace X] [inst_3 : CompletelyRegularSpace X],\n  ConnectedSpace (StoneCech X) ↔ ConnectedSpace X ", "∀ {X : Type u_1} [inst : TopologicalSpace X] [inst_1 : CompletelyRegularSpace X],\n  ConnectedSpace X ↔ ConnectedSpace (StoneCech X) ", "∀ {X : Type u_1} [inst : TopologicalSpace X] [inst_1 : PreconnectedSpace X] [inst_2 : CompletelyRegularSpace X],\n  ConnectedSpace X ↔ ConnectedSpace (StoneCechCompactification X) "]}
{"docString": "Prove that $-(-v) = v$ for every $v \\in V$.", "prompts": "[{\"theorem\":\n  \"∀ {𝕜 : Type u_2} {E : Type u_1} [inst : IsROrC 𝕜] [inst_1 : NormedAddCommGroup E] [inst_2 : InnerProductSpace 𝕜 E]\\n  (v : E), ↑(reflection (Submodule.span 𝕜 {v})ᗮ) v = -v\",\n  \"isProp\": true,\n  \"docString\": \"The reflection in `(𝕜 ∙ v)ᗮ` of `v` is `-v`. \"},\n {\"theorem\":\n  \"∀ {α : Type u_2} {n : Type u_1} [inst : AddGroup n] {v : n → α},\\n  Matrix.IsSymm (Matrix.circulant v) → ∀ (i : n), v (-i) = v i\",\n  \"isProp\": true,\n  \"docString\": \"If `circulant v` is symmetric, `∀ i j : I, v (- i) = v i`. \"},\n {\"theorem\":\n  \"∀ {α : Type u} [self : Rack α] (x : α), Function.LeftInverse (Rack.invAct x) (Shelf.act x)\",\n  \"isProp\": true,\n  \"docString\": \"Proof of left inverse \"},\n {\"theorem\":\n  \"∀ {α : Type u} [self : Rack α] (x : α), Function.RightInverse (Rack.invAct x) (Shelf.act x)\",\n  \"isProp\": true,\n  \"docString\": \"Proof of right inverse \"}]\n", "prompt_cons": "/-- The reflection in `(𝕜 ∙ v)ᗮ` of `v` is `-v`. -/\ntheorem ∀ {𝕜 : Type u_2} {E : Type u_1} [inst : IsROrC 𝕜] [inst_1 : NormedAddCommGroup E] [inst_2 : InnerProductSpace 𝕜 E]\n  (v : E), ↑(reflection (Submodule.span 𝕜 {v})ᗮ) v = -v :=\n\n/-- If `circulant v` is symmetric, `∀ i j : I, v (- i) = v i`. -/\ntheorem ∀ {α : Type u_2} {n : Type u_1} [inst : AddGroup n] {v : n → α},\n  Matrix.IsSymm (Matrix.circulant v) → ∀ (i : n), v (-i) = v i :=\n\n/-- Proof of left inverse -/\ntheorem ∀ {α : Type u} [self : Rack α] (x : α), Function.LeftInverse (Rack.invAct x) (Shelf.act x) :=\n\n/-- Proof of right inverse -/\ntheorem ∀ {α : Type u} [self : Rack α] (x : α), Function.RightInverse (Rack.invAct x) (Shelf.act x) :=\n\n/-- Prove that $-(-v) = v$ for every $v \\in V$. -/\ntheorem", "choices": ["∀ {𝕜 : Type u_2} {E : Type u_1} [inst : IsROrC 𝕜] [inst_1 : NormedAddCommGroup E] [inst_2 : InnerProductSpace 𝕜 E]\n  (v : E), -(-v) = v ", "∀ {𝕜 : Type u_2} {E : Type u_1} [inst : IsROrC 𝕜] [inst_1 : NormedAddCommGroup E] [inst_2 : InnerProductSpace 𝕜 E]\n  (v : E), -(-v) = v ", "∀ {𝕜 : Type u_2} {E : Type u_1} [inst : IsROrC 𝕜] [inst_1 : NormedAddCommGroup E] [inst_2 : InnerProductSpace 𝕜 E]\n  (v : E), -(-v) = v ", "∀ {𝕜 : Type u_2} {E : Type u_1} [inst : Ring 𝕜] [inst_1 : AddCommGroup E] [inst_2 : Module 𝕜 E]\n  (v : E), -(-v) = v ", "∀ {𝕜 : Type u_2} {V : Type u_1} [inst : Ring 𝕜] [inst_1 : AddCommGroup V] [inst_2 : Module 𝕜 V] (v : V), -(-v) = v ", "∀ {𝕜 : Type u_2} {E : Type u_1} [inst : IsROrC 𝕜] [inst_1 : NormedAddCommGroup E] [inst_2 : InnerProductSpace 𝕜 E]\n  (v : E), -(-v) = v ", "∀ {𝕜 : Type u_2} {E : Type u_1} [inst : IsROrC 𝕜] [inst_1 : NormedAddCommGroup E] [inst_2 : InnerProductSpace 𝕜 E]\n  (v : E), -(-v) = v ", "∀ {𝕜 : Type u_2} {E : Type u_1} [inst : IsROrC 𝕜] [inst_1 : NormedAddCommGroup E] [inst_2 : InnerProductSpace 𝕜 E]\n  (v : E), -(-v) = v ", "∀ {𝕜 : Type u_2} {E : Type u_1} [inst : IsROrC 𝕜] [inst_1 : NormedAddCommGroup E] [inst_2 : InnerProductSpace 𝕜 E]\n  (v : E), -(-v) = v ", "∀ {𝕜 : Type u_2} {E : Type u_1} [inst : IsROrC 𝕜] [inst_1 : NormedAddCommGroup E] [inst_2 : InnerProductSpace 𝕜 E]\n  (v : E), -(-v) = v "]}
{"docString": "Give an example of a nonempty subset $U$ of $\\mathbf{R}^2$ such that $U$ is closed under addition and under taking additive inverses (meaning $-u \\in U$ whenever $u \\in U$), but $U$ is not a subspace of $\\mathbf{R}^2$.", "prompts": "[{\"theorem\":\n  \"∀ {R : Type u} [inst : NonUnitalNonAssocRing R] (s : NonUnitalSubring R) {x y : R}, x ∈ s → y ∈ s → x + y ∈ s\",\n  \"isProp\": true,\n  \"docString\": \"A non-unital subring is closed under addition. \"},\n {\"theorem\":\n  \"∀ {M : Type u_1} [inst : TopologicalSpace M] [inst_1 : AddMonoid M] [inst_2 : ContinuousAdd M] {U : Set M},\\n  U ∈ nhds 0 → ∃ V, IsOpen V ∧ 0 ∈ V ∧ V + V ⊆ U\",\n  \"isProp\": true,\n  \"docString\":\n  \"Given an open neighborhood `U` of `0` there is an open neighborhood `V` of `0`\\nsuch that `V + V ⊆ U`.\"},\n {\"theorem\":\n  \"∀ {R : Type u} [inst : NonUnitalNonAssocRing R] (s : NonUnitalSubring R) {x y : R}, x ∈ s → y ∈ s → x - y ∈ s\",\n  \"isProp\": true,\n  \"docString\": \"A non-unital subring is closed under subtraction \"},\n {\"theorem\":\n  \"∀ {α : Type u} [inst : EMetricSpace α] {s : Set α}, IsClosed s → IsClosed {t | ↑t ⊆ s}\",\n  \"isProp\": true,\n  \"docString\": \"Subsets of a given closed subset form a closed set \"}]\n", "prompt_cons": "/-- A non-unital subring is closed under addition. -/\ntheorem ∀ {R : Type u} [inst : NonUnitalNonAssocRing R] (s : NonUnitalSubring R) {x y : R}, x ∈ s → y ∈ s → x + y ∈ s :=\n\n/-- Given an open neighborhood `U` of `0` there is an open neighborhood `V` of `0`\nsuch that `V + V ⊆ U`. -/\ntheorem ∀ {M : Type u_1} [inst : TopologicalSpace M] [inst_1 : AddMonoid M] [inst_2 : ContinuousAdd M] {U : Set M},\n  U ∈ nhds 0 → ∃ V, IsOpen V ∧ 0 ∈ V ∧ V + V ⊆ U :=\n\n/-- A non-unital subring is closed under subtraction -/\ntheorem ∀ {R : Type u} [inst : NonUnitalNonAssocRing R] (s : NonUnitalSubring R) {x y : R}, x ∈ s → y ∈ s → x - y ∈ s :=\n\n/-- Subsets of a given closed subset form a closed set -/\ntheorem ∀ {α : Type u} [inst : EMetricSpace α] {s : Set α}, IsClosed s → IsClosed {t | ↑t ⊆ s} :=\n\n/-- Give an example of a nonempty subset $U$ of $\\mathbf{R}^2$ such that $U$ is closed under addition and under taking additive inverses (meaning $-u \\in U$ whenever $u \\in U$), but $U$ is not a subspace of $\\mathbf{R}^2$. -/\ntheorem", "choices": ["Sorry, I cannot provide an example as I can only translate the givens to Lean Theorem Prover code.", "I cannot provide examples or counterexamples as I am a coding assistant who translates natural language to Lean Theorem Prover code. Please ask me to translate a theorem or statement into Lean code.", "Sorry, I cannot provide examples or counterexamples as I am a coding assistant designed to translate natural language to Lean Theorem Prover code. Please provide another statement to be translated into Lean code.", "Sorry, I cannot create examples using Lean Theorem Prover code. Please provide another example for me to translate.", "I am an AI language model, and I cannot provide examples from real life or create theorems that are not related to Lean Theorem Prover code. However, I can help you write the code for the theorem statement that you would like to prove. Please provide a theorem statement or a specific topic, and I will do my best to help.", "I am an AI language model, and I can only translate natural language to Lean Theorem Prover code following given examples. This statement cannot be translated to Lean code because it is asking for an example rather than stating a theorem. Please provide a theorem statement or a different example for me to translate.", "Sorry, I cannot provide an example as I am designed to translate natural language to Lean Theorem Prover code. Please provide a statement that you would like me to translate into Lean code.", "Sorry, I cannot provide examples as I can only translate statements to Lean Theorem Prover code. Please provide another statement that you would like me to convert to Lean Theorem Prover code.", "I am an AI language model, and I cannot give an example as requested. However, I can help you write a theorem about a nonempty subset U of ℝ^2 that is closed under addition and under taking additive inverses, but U is not a subspace of ℝ^2.\n\n```lean\ntheorem closed_not_subspace :\n  ∀ {R : Type u} [inst : AddCommGroup R] (U : Set (R × R)),\n  (∀ {x y : R × R}, x ∈ U → y ∈ U → x + y ∈ U) ∧\n  (∀ {x : R × R}, x ∈ U → -x ∈ U) →\n  (∃ u : R × R, u ∈ U) →\n  ¬(∀ x : R × R, x ∈ U → ∀ a : R, (a, 0) * x ∈ U) ", "/-- A non-unital subring is closed under addition. -/\ntheorem non_unital_subring_add_closure {R : Type u} [inst : NonUnitalNonAssocRing R] (s : NonUnitalSubring R) {x y : R} : x ∈ s → y ∈ s → x + y ∈ s "]}
{"docString": "Prove that the intersection of any collection of subspaces of $V$ is a subspace of $V$.", "prompts": "[{\"theorem\":\n  \"∀ {K : Type u_3} {V : Type u_2} [inst : Field K] [inst_1 : AddCommGroup V] [inst_2 : Module K V] {ι : Sort u_1}\\n  (s : ι → Set (ℙ K V)),\\n  Projectivization.Subspace.span (⋃ (i : ι), s i) = ⨆ (i : ι), Projectivization.Subspace.span (s i)\",\n  \"isProp\": true,\n  \"docString\":\n  \"The supremum of a collection of subspaces is equal to the span of the union of the\\ncollection. \"},\n {\"theorem\":\n  \"∀ {α : Type u} [inst : TopologicalSpace α] {s : Set α} {ι : Type v},\\n  IsCompact s →\\n    ∀ (Z : ι → Set α),\\n      (∀ (i : ι), IsClosed (Z i)) →\\n        (∀ (t : Finset ι), Set.Nonempty (s ∩ ⋂ (i : ι) (_ : i ∈ t), Z i)) → Set.Nonempty (s ∩ ⋂ (i : ι), Z i)\",\n  \"isProp\": true,\n  \"docString\":\n  \"To show that a compact set intersects the intersection of a family of closed sets,\\nit is sufficient to show that it intersects every finite subfamily. \"},\n {\"theorem\":\n  \"∀ {k : Type u_1} {V : Type u_2} {P : Type u_3} [inst : Ring k] [inst_1 : AddCommGroup V] [inst_2 : Module k V]\\n  [inst_3 : AddTorsor V P] {s1 s2 : AffineSubspace k P},\\n  AffineSubspace.direction s1 = AffineSubspace.direction s2 → Set.Nonempty (↑s1 ∩ ↑s2) → s1 = s2\",\n  \"isProp\": true,\n  \"docString\":\n  \"Two affine subspaces with the same direction and nonempty intersection are equal. \"},\n {\"theorem\":\n  \"∀ {K : Type u_2} {V : Type u_1} [inst : Field K] [inst_1 : AddCommGroup V] [inst_2 : Module K V] (S T : Set (ℙ K V)),\\n  Projectivization.Subspace.span (S ∪ T) = Projectivization.Subspace.span S ⊔ Projectivization.Subspace.span T\",\n  \"isProp\": true,\n  \"docString\":\n  \"The supremum of two subspaces is equal to the span of their union. \"}]\n", "prompt_cons": "/-- The supremum of a collection of subspaces is equal to the span of the union of the\ncollection. -/\ntheorem ∀ {K : Type u_3} {V : Type u_2} [inst : Field K] [inst_1 : AddCommGroup V] [inst_2 : Module K V] {ι : Sort u_1}\n  (s : ι → Set (ℙ K V)),\n  Projectivization.Subspace.span (⋃ (i : ι), s i) = ⨆ (i : ι), Projectivization.Subspace.span (s i) :=\n\n/-- To show that a compact set intersects the intersection of a family of closed sets,\nit is sufficient to show that it intersects every finite subfamily. -/\ntheorem ∀ {α : Type u} [inst : TopologicalSpace α] {s : Set α} {ι : Type v},\n  IsCompact s →\n    ∀ (Z : ι → Set α),\n      (∀ (i : ι), IsClosed (Z i)) →\n        (∀ (t : Finset ι), Set.Nonempty (s ∩ ⋂ (i : ι) (_ : i ∈ t), Z i)) → Set.Nonempty (s ∩ ⋂ (i : ι), Z i) :=\n\n/-- Two affine subspaces with the same direction and nonempty intersection are equal. -/\ntheorem ∀ {k : Type u_1} {V : Type u_2} {P : Type u_3} [inst : Ring k] [inst_1 : AddCommGroup V] [inst_2 : Module k V]\n  [inst_3 : AddTorsor V P] {s1 s2 : AffineSubspace k P},\n  AffineSubspace.direction s1 = AffineSubspace.direction s2 → Set.Nonempty (↑s1 ∩ ↑s2) → s1 = s2 :=\n\n/-- The supremum of two subspaces is equal to the span of their union. -/\ntheorem ∀ {K : Type u_2} {V : Type u_1} [inst : Field K] [inst_1 : AddCommGroup V] [inst_2 : Module K V] (S T : Set (ℙ K V)),\n  Projectivization.Subspace.span (S ∪ T) = Projectivization.Subspace.span S ⊔ Projectivization.Subspace.span T :=\n\n/-- Prove that the intersection of any collection of subspaces of $V$ is a subspace of $V$. -/\ntheorem", "choices": ["∀ {K : Type u_3} {V : Type u_2} [inst : Field K] [inst_1 : AddCommGroup V] [inst_2 : Module K V] {ι : Sort u_1}\n  (s : ι → Set (ℙ K V)),\n  IsSubspace (⋂ (i : ι), s i) ", "∀ {K : Type u_3} {V : Type u_2} [inst : Field K] [inst_1 : AddCommGroup V] [inst_2 : Module K V] {ι : Sort u_1}\n  (s : ι → Set (ℙ K V)),\n  Projectivization.Subspace (⋂ (i : ι), s i) :", "∀ {K : Type u_2} {V : Type u_1} [inst : Field K] [inst_1 : AddCommGroup V] [inst_2 : Module K V] {ι : Sort u_3}\n  (s : ι → Set (ℙ K V)),\n  ∀ (x y : ℙ K V) (c : K), x ∈ (⋂ (i : ι), Projectivization.Subspace.span (s i)) → y ∈ (⋂ (i : ι), Projectivization.Subspace.span (s i)) →\n    x + y ∈ (⋂ (i : ι), Projectivization.Subspace.span (s i)) ∧ c • x ∈ (⋂ (i : ι), Projectivization.Subspace.span (s i)) ", "∀ {K : Type u_2} {V : Type u_1} [inst : Field K] [inst_1 : AddCommGroup V] [inst_2 : Module K V] {ι : Type u_3}\n  (S : ι → Set (ℙ K V)),\n  Projectivization.Subspace.is_subspace (⋂ (i : ι), Projectivization.Subspace.span (S i)) ", "∀ {K : Type u_1} {V : Type u_2} [inst : Field K] [inst_1 : AddCommGroup V] [inst_2 : Module K V] {ι : Sort u_3}\n  (s : ι → Projectivization.Subspace K V),\n  IsSubspace K V (⋂ (i : ι), s i) ", "∀ {K : Type u_3} {V : Type u_2} [inst : Field K] [inst_1 : AddCommGroup V] [inst_2 : Module K V] {ι : Type u_1}\n  (s : ι → Set (ℙ K V)),\n  IsSubspace (⋂ (i : ι), Projectivization.Subspace.span (s i)) ", "∀ {K : Type u_2} {V : Type u_1} [inst : Field K] [inst_1 : AddCommGroup V] [inst_2 : Module K V] {ι : Sort u_3}\n  (s : ι → Set (ℙ K V)),\n  IsSubspace (⋂ (i : ι), s i) ", "∀ {K : Type u_2} {V : Type u_1} [inst : Field K] [inst_1 : AddCommGroup V] [inst_2 : Module K V] {ι : Sort u_3}\n  (s : ι → Set (ℙ K V)),\n  IsSubspace (⋂ (i : ι), Projectivization.Subspace.span (s i)) ", "∀ {K : Type u_2} {V : Type u_1} [inst : Field K] [inst_1 : AddCommGroup V] [inst_2 : Module K V] {ι : Type u_3}\n  (s : ι → Set (ℙ K V)),\n  Projectivization.Subspace.intersection s = ⨅ (i : ι), Projectivization.Subspace.span (s i) ", "∀ {K : Type u_2} {V : Type u_1} [inst : Field K] [inst_1 : AddCommGroup V] [inst_2 : Module K V] {ι : Sort u_3}\n  (s : ι → Set (ℙ K V)),\n  ∀ (x y : V) (c : K),\n    (∀ (i : ι), x ∈ Projectivization.Subspace.span (s i)) →\n    (∀ (i : ι), y ∈ Projectivization.Subspace.span (s i)) →\n    (∀ (i : ι), x + y ∈ Projectivization.Subspace.span (s i)) ∧\n    (∀ (i : ι), c • x ∈ Projectivization.Subspace.span (s i)) "]}
{"docString": "Show that every linear map from a one-dimensional vector space to itself is multiplication by some scalar. More precisely, prove that if $\\operatorname{dim} V=1$ and $T \\in \\mathcal{L}(V, V)$, then there exists $a \\in \\mathbf{F}$ such that $T v=a v$ for all $v \\in V$.", "prompts": "[{\"theorem\":\n  \"∀ {𝕜 : Type u_1} [inst : NontriviallyNormedField 𝕜] {V : Type u_2} [inst_1 : NormedAddCommGroup V]\\n  [inst_2 : NormedSpace 𝕜 V],\\n  Smooth (ModelWithCorners.prod (modelWithCornersSelf 𝕜 𝕜) (modelWithCornersSelf 𝕜 V)) (modelWithCornersSelf 𝕜 V)\\n    fun p => p.fst • p.snd\",\n  \"isProp\": true,\n  \"docString\":\n  \"On any vector space, multiplication by a scalar is a smooth operation. \"},\n {\"theorem\":\n  \"∀ {R : Type u} {M : Type v} {M₂ : Type w} [inst : Semiring R] [inst_1 : AddCommMonoid M] [inst_2 : AddCommMonoid M₂]\\n  [inst_3 : Module R M] [inst_4 : Module R M₂] {f : M → M₂}, IsLinearMap R f → ∀ (c : R) (x : M), f (c • x) = c • f x\",\n  \"isProp\": true,\n  \"docString\": \"A linear map preserves scalar multiplication. \"},\n {\"theorem\":\n  \"∀ {K : Type u} {V : Type v} [inst : DivisionRing K] [inst_1 : AddCommGroup V] [inst_2 : Module K V]\\n  [inst_3 : FiniteDimensional K V] {f g : V →ₗ[K] V}, f * g = 1 → g * f = 1\",\n  \"isProp\": true,\n  \"docString\":\n  \"In a finite-dimensional space, if linear maps are inverse to each other on one side then they\\nare also inverse to each other on the other side. \"},\n {\"theorem\":\n  \"∀ {R : Type u_1} {M : Type u_2} [inst : Semiring R] [inst_1 : AddCommGroup M] (self : Module.Core R M) (x : M),\\n  1 • x = x\",\n  \"isProp\": true,\n  \"docString\": \"Scalar multiplication by one is the identity. \"}]\n", "prompt_cons": "/-- On any vector space, multiplication by a scalar is a smooth operation. -/\ntheorem ∀ {𝕜 : Type u_1} [inst : NontriviallyNormedField 𝕜] {V : Type u_2} [inst_1 : NormedAddCommGroup V]\n  [inst_2 : NormedSpace 𝕜 V],\n  Smooth (ModelWithCorners.prod (modelWithCornersSelf 𝕜 𝕜) (modelWithCornersSelf 𝕜 V)) (modelWithCornersSelf 𝕜 V)\n    fun p => p.fst • p.snd :=\n\n/-- A linear map preserves scalar multiplication. -/\ntheorem ∀ {R : Type u} {M : Type v} {M₂ : Type w} [inst : Semiring R] [inst_1 : AddCommMonoid M] [inst_2 : AddCommMonoid M₂]\n  [inst_3 : Module R M] [inst_4 : Module R M₂] {f : M → M₂}, IsLinearMap R f → ∀ (c : R) (x : M), f (c • x) = c • f x :=\n\n/-- In a finite-dimensional space, if linear maps are inverse to each other on one side then they\nare also inverse to each other on the other side. -/\ntheorem ∀ {K : Type u} {V : Type v} [inst : DivisionRing K] [inst_1 : AddCommGroup V] [inst_2 : Module K V]\n  [inst_3 : FiniteDimensional K V] {f g : V →ₗ[K] V}, f * g = 1 → g * f = 1 :=\n\n/-- Scalar multiplication by one is the identity. -/\ntheorem ∀ {R : Type u_1} {M : Type u_2} [inst : Semiring R] [inst_1 : AddCommGroup M] (self : Module.Core R M) (x : M),\n  1 • x = x :=\n\n/-- Show that every linear map from a one-dimensional vector space to itself is multiplication by some scalar. More precisely, prove that if $\\operatorname{dim} V=1$ and $T \\in \\mathcal{L}(V, V)$, then there exists $a \\in \\mathbf{F}$ such that $T v=a v$ for all $v \\in V$. -/\ntheorem", "choices": ["∀ {K : Type u} {V : Type v} [inst : DivisionRing K] [inst_1 : AddCommGroup V] [inst_2 : Module K V]\n  [inst_3 : FiniteDimensional K V] [hin : FiniteDimensional.finrank K V = 1] (f : V →ₗ[K] V),\n  ∃ (a : K), ∀ (x : V), f x = a • x ", "∀ {K : Type u} {V : Type v} [inst : DivisionRing K] [inst_1 : AddCommGroup V] [inst_2 : Module K V]\n  [inst_3 : FiniteDimensional K V] [h_dim : findim K V = 1] (T : V →ₗ[K] V), ∃ (a : K), ∀ (v : V), T v = a • v ", "∀ {K : Type u} {V : Type v} [inst : DivisionRing K] [inst_1 : AddCommGroup V] [inst_2 : Module K V]\n  [inst_3 : FiniteDimensional K V] [nontrivial : Nontrivial V], FiniteDimensional.finrank K V = 1 →\n  ∀ (f : V →ₗ[K] V) (v : V), ∃ (a : K), f v = a • v ", "∀ {K : Type u} {V : Type v} [inst : DivisionRing K] [inst_1 : AddCommGroup V] [inst_2 : Module K V]\n  [inst_3 : FiniteDimensional K V] [inst_4 : dim K V = 1] (T : V →ₗ[K] V) (v : V),\n  ∃ (a : K), T v = a • v ", "∀ {K : Type u} {V : Type v} [inst : DivisionRing K] [inst_1 : AddCommGroup V] [inst_2 : Module K V]\n  [inst_3 : FiniteDimensional K V] [inst_4 : FiniteDimensional.finrank K V = 1] {f : V →ₗ[K] V}, ∃ a : K, ∀ v : V, f v = a • v ", "∀ {K : Type u} {V : Type v} [inst : DivisionRing K] [inst_1 : AddCommGroup V] [inst_2 : Module K V]\n  [inst_3 : FiniteDimensional K V] [inst_4 : FiniteDimensional.finrank K V = 1] (T : V →ₗ[K] V),\n  ∃ a : K, ∀ v : V, T v = a • v ", "∀ {𝕜 : Type u} {V : Type v} [inst : Field 𝕜] [inst_1 : AddCommGroup V] [inst_2 : Module 𝕜 V] [inst_3 : FiniteDimensional 𝕜 V]\n  (h_dim : FiniteDimensional.finrank 𝕜 V = 1) (T : V →ₗ[𝕜] V), ∃ (a : 𝕜), ∀ (v : V), T v = a • v ", "∀ {K : Type u} {V : Type v} [inst : DivisionRing K] [inst_1 : AddCommGroup V] [inst_2 : Module K V]\n  [inst_3 : FiniteDimensional K V] [inst_4 : HasBasisSingleOne V], ∃ a : K, ∀ v : V, (LinearMap.id - a • LinearMap.id) v = 0 ", "∀ {K : Type u} {V : Type v} [inst : DivisionRing K] [inst_1 : AddCommGroup V] [inst_2 : Module K V] [inst_3 : FiniteDimensional K V]\n  (h_dim : findim K V = 1) (T : V →ₗ[K] V), ∃ (a : K), ∀ (v : V), T v = a • v ", "∀ {𝕜 : Type u_1} [inst : Field 𝕜] {V : Type u_2} [inst_1 : AddCommGroup V] [inst_2 : Module 𝕜 V]\n  [inst_3 : FiniteDimensional 𝕜 V], FiniteDimensional.finrank 𝕜 V = 1 → ∀ (f : V →ₗ[𝕜] V), ∃ a : 𝕜, ∀ v : V, f v = a • v "]}
{"docString": "Suppose $p \\in \\mathcal{P}(\\mathbf{C})$ has degree $m$. Prove that $p$ has $m$ distinct roots if and only if $p$ and its derivative $p^{\\prime}$ have no roots in common.", "prompts": "[{\"theorem\":\n  \"∀ (p : Polynomial ℝ),\\n  Finset.card (Multiset.toFinset (Polynomial.roots p)) ≤\\n    Finset.card\\n        (Multiset.toFinset (Polynomial.roots (↑Polynomial.derivative p)) \\\\ Multiset.toFinset (Polynomial.roots p)) +\\n      1\",\n  \"isProp\": true,\n  \"docString\":\n  \"The number of roots of a real polynomial `p` is at most the number of roots of its derivative\\nthat are not roots of `p` plus one. \"},\n {\"theorem\":\n  \"∀ {K : Type v} [inst : Field K] {p : Polynomial K},\\n  Polynomial.Splits (RingHom.id K) p ↔ ↑Multiset.card (Polynomial.roots p) = Polynomial.natDegree p\",\n  \"isProp\": true,\n  \"docString\":\n  \"A polynomial splits if and only if it has as many roots as its degree. \"},\n {\"theorem\":\n  \"∀ {p : ℕ} [hp : Fact (Nat.Prime p)] (m : ℕ), padicNorm p ↑m = 1 ↔ ¬p ∣ m\",\n  \"isProp\": true,\n  \"docString\":\n  \"The `p`-adic norm of a natural `m` is one iff `p` doesn't divide `m`. \"},\n {\"theorem\":\n  \"∀ {n : ℕ} {K : Type u_1} [inst : CommRing K] {μ : K},\\n  IsPrimitiveRoot μ n →\\n    ∀ [inst_1 : IsDomain K] [inst_2 : CharZero K] {p : ℕ} [hprime : Fact (Nat.Prime p)],\\n      ¬p ∣ n → minpoly ℤ μ = minpoly ℤ (μ ^ p)\",\n  \"isProp\": true,\n  \"docString\":\n  \"If `p` is a prime that does not divide `n`,\\nthen the minimal polynomials of a primitive `n`-th root of unity `μ`\\nand of `μ ^ p` are the same. \"}]\n", "prompt_cons": "/-- The number of roots of a real polynomial `p` is at most the number of roots of its derivative\nthat are not roots of `p` plus one. -/\ntheorem ∀ (p : Polynomial ℝ),\n  Finset.card (Multiset.toFinset (Polynomial.roots p)) ≤\n    Finset.card\n        (Multiset.toFinset (Polynomial.roots (↑Polynomial.derivative p)) \\ Multiset.toFinset (Polynomial.roots p)) +\n      1 :=\n\n/-- A polynomial splits if and only if it has as many roots as its degree. -/\ntheorem ∀ {K : Type v} [inst : Field K] {p : Polynomial K},\n  Polynomial.Splits (RingHom.id K) p ↔ ↑Multiset.card (Polynomial.roots p) = Polynomial.natDegree p :=\n\n/-- The `p`-adic norm of a natural `m` is one iff `p` doesn't divide `m`. -/\ntheorem ∀ {p : ℕ} [hp : Fact (Nat.Prime p)] (m : ℕ), padicNorm p ↑m = 1 ↔ ¬p ∣ m :=\n\n/-- If `p` is a prime that does not divide `n`,\nthen the minimal polynomials of a primitive `n`-th root of unity `μ`\nand of `μ ^ p` are the same. -/\ntheorem ∀ {n : ℕ} {K : Type u_1} [inst : CommRing K] {μ : K},\n  IsPrimitiveRoot μ n →\n    ∀ [inst_1 : IsDomain K] [inst_2 : CharZero K] {p : ℕ} [hprime : Fact (Nat.Prime p)],\n      ¬p ∣ n → minpoly ℤ μ = minpoly ℤ (μ ^ p) :=\n\n/-- Suppose $p \\in \\mathcal{P}(\\mathbf{C})$ has degree $m$. Prove that $p$ has $m$ distinct roots if and only if $p$ and its derivative $p^{\\prime}$ have no roots in common. -/\ntheorem", "choices": ["forall {R : Type u} [inst : CommRing R] [IsDomain R] [inst_1 : CharZero R] (p : Polynomial R),\n  Polynomial.degree p = ↑(Polynomial.natDegree p) →\n    ((∀ (a : R), multiplicity a (Polynomial.roots p) = 1) ↔\n      Multiset.Disjoint (Polynomial.roots p) (Polynomial.roots (Polynomial.derivative p))) ", "∀ {K : Type v} [inst : Field K] {p : Polynomial K},\n  (Polynomial.degree p = m) →\n  (Multiset.Nodup (Polynomial.roots p) ↔\n    ∀ (a : K), Polynomial.IsRoot p a → ¬Polynomial.IsRoot (Polynomial.derivative p) a) ", "∀ {K : Type v} [inst : Field K] [inst_1 : CharZero K] {p : Polynomial K},\n  Polynomial.degree p = ↑(Polynomial.natDegree p) →\n    (Finset.card (Multiset.toFinset (Polynomial.roots p)) = Polynomial.natDegree p ↔\n       Multiset.disjoint (Polynomial.roots p) (Polynomial.roots (↑Polynomial.derivative p))) ", "∀ (p : Polynomial ℂ),\n  Polynomial.natDegree p = Finset.card (Multiset.toFinset (Polynomial.roots p)) ↔\n    disjoint (Multiset.toFinset (Polynomial.roots (↑Polynomial.derivative p))) (Multiset.toFinset (Polynomial.roots p)) ", "forall {R : Type u} [inst : CommRing R] [IsDomain R] [CharZero R] (p : Polynomial R),\n  Polynomial.degree p = ↑(Polynomial.natDegree p) →\n    (Finset.card (Multiset.toFinset (Polynomial.roots p)) = Polynomial.natDegree p ↔\n      Multiset.disjoint (Polynomial.roots p) (Polynomial.roots (Polynomial.derivative p))) ", "∀ {K : Type v} [inst : Field K] {p : Polynomial K},\n  (∀ a : K, multiplicity a (Polynomial.roots p) ≤ 1) ↔\n    Multiset.Disjoint (Polynomial.roots p) (Polynomial.roots (↑Polynomial.derivative p)) ", "∀ {K : Type v} [inst : Field K] {p : Polynomial K},\n  (Finset.card (Multiset.toFinset (Polynomial.roots p)) = Polynomial.natDegree p ∧\n    ∀ x, Polynomial.eval x p = 0 → Polynomial.eval x (↑Polynomial.derivative p) ≠ 0) ↔\n  Multiset.Disjoint (Polynomial.roots p) (Polynomial.roots (↑Polynomial.derivative p)) ", "∀ (p : Polynomial ℂ), (∀ x : ℂ, (Polynomial.isRoot p x → Polynomial.multiplicity x p = 1) ↔\n  ∀ x : ℂ, (Polynomial.isRoot p x → ¬Polynomial.isRoot (Polynomial.derivative p) x)) ", "forall {K : Type v} [inst : Field K] {p : Polynomial K},\n  (p.nat_degree = Multiset.card (Polynomial.roots p) ∧ ∀ (a : K), Multiset.count a (Polynomial.roots p) = 1) ↔\n    ∀ (a : K), Polynomial.eval a p = 0 → Polynomial.eval a (Polynomial.derivative p) ≠ 0 ", "forall {R : Type u} [inst : CommRing R] [IsDomain R] [CharZero R] (p : Polynomial R),\n  (Polynomial.degree p = Polynomial.degree (Polynomial.derivative p) + 1 ∧\n   (∀ a : R, multiplicity a (Polynomial.roots p) = 1)) ↔\n  Multiset.Disjoint (Polynomial.roots p) (Polynomial.roots (Polynomial.derivative p)) "]}
{"docString": "Suppose that $S, T \\in \\mathcal{L}(V)$ are such that $S T=T S$. Prove that $\\operatorname{null} (T-\\lambda I)$ is invariant under $S$ for every $\\lambda \\in \\mathbf{F}$.", "prompts": "[{\"theorem\":\n  \"∀ {𝕜 : Type u_1} {X : Type u_2} [inst : IsROrC 𝕜] [inst_1 : TopologicalSpace X] {S : Set C(X, 𝕜)},\\n  (∀ (f : C(X, 𝕜)), f ∈ S → ↑(AlgHom.compLeftContinuous ℝ ↑IsROrC.conjAe (_ : Continuous ↑IsROrC.conjCle)) f ∈ S) →\\n    ContinuousMap.ConjInvariantSubalgebra (Subalgebra.restrictScalars ℝ (Algebra.adjoin 𝕜 S))\",\n  \"isProp\": true,\n  \"docString\":\n  \"If a set `S` is conjugation-invariant, then its `𝕜`-span is conjugation-invariant. \"},\n {\"theorem\":\n  \"∀ {G : Type u_1} [inst : MeasurableSpace G] [inst_1 : Mul G] [inst_2 : MeasurableMul G] (μ : MeasureTheory.Measure G),\\n  (∀ (g : G) (A : Set G), MeasurableSet A → ↑↑μ ((fun h => g * h) ⁻¹' A) = ↑↑μ A) ↔\\n    MeasureTheory.Measure.IsMulLeftInvariant μ\",\n  \"isProp\": true,\n  \"docString\":\n  \"An alternative way to prove that `μ` is left invariant under multiplication. \"},\n {\"theorem\":\n  \"∀ {R : Type u} [inst : CommSemiring R] {S : Type u_1} [inst_1 : CommRing S] [inst_2 : Algebra R S] (S' : Subalgebra R S)\\n  {ι : Type u_2} (ι' : Finset ι) (s l : ι → S),\\n  (Finset.sum ι' fun i => l i * s i) = 1 →\\n    (∀ (i : ι), s i ∈ S') → (∀ (i : ι), l i ∈ S') → ∀ (x : S), (∀ (i : ι), ∃ n, s i ^ n • x ∈ S') → x ∈ S'\",\n  \"isProp\": true,\n  \"docString\":\n  \"Suppose we are given `∑ i, lᵢ * sᵢ = 1` in `S`, and `S'` a subalgebra of `S` that contains\\n`lᵢ` and `sᵢ`. To check that an `x : S` falls in `S'`, we only need to show that\\n`sᵢ ^ n • x ∈ S'` for some `n` for each `sᵢ`. \"},\n {\"theorem\":\n  \"∀ {G : Type u_1} [inst : MeasurableSpace G] [inst_1 : Mul G] [inst_2 : MeasurableMul G] (μ : MeasureTheory.Measure G),\\n  (∀ (g : G) (A : Set G), MeasurableSet A → ↑↑μ ((fun h => h * g) ⁻¹' A) = ↑↑μ A) ↔\\n    MeasureTheory.Measure.IsMulRightInvariant μ\",\n  \"isProp\": true,\n  \"docString\":\n  \"An alternative way to prove that `μ` is right invariant under multiplication. \"}]\n", "prompt_cons": "/-- If a set `S` is conjugation-invariant, then its `𝕜`-span is conjugation-invariant. -/\ntheorem ∀ {𝕜 : Type u_1} {X : Type u_2} [inst : IsROrC 𝕜] [inst_1 : TopologicalSpace X] {S : Set C(X, 𝕜)},\n  (∀ (f : C(X, 𝕜)), f ∈ S → ↑(AlgHom.compLeftContinuous ℝ ↑IsROrC.conjAe (_ : Continuous ↑IsROrC.conjCle)) f ∈ S) →\n    ContinuousMap.ConjInvariantSubalgebra (Subalgebra.restrictScalars ℝ (Algebra.adjoin 𝕜 S)) :=\n\n/-- An alternative way to prove that `μ` is left invariant under multiplication. -/\ntheorem ∀ {G : Type u_1} [inst : MeasurableSpace G] [inst_1 : Mul G] [inst_2 : MeasurableMul G] (μ : MeasureTheory.Measure G),\n  (∀ (g : G) (A : Set G), MeasurableSet A → ↑↑μ ((fun h => g * h) ⁻¹' A) = ↑↑μ A) ↔\n    MeasureTheory.Measure.IsMulLeftInvariant μ :=\n\n/-- Suppose we are given `∑ i, lᵢ * sᵢ = 1` in `S`, and `S'` a subalgebra of `S` that contains\n`lᵢ` and `sᵢ`. To check that an `x : S` falls in `S'`, we only need to show that\n`sᵢ ^ n • x ∈ S'` for some `n` for each `sᵢ`. -/\ntheorem ∀ {R : Type u} [inst : CommSemiring R] {S : Type u_1} [inst_1 : CommRing S] [inst_2 : Algebra R S] (S' : Subalgebra R S)\n  {ι : Type u_2} (ι' : Finset ι) (s l : ι → S),\n  (Finset.sum ι' fun i => l i * s i) = 1 →\n    (∀ (i : ι), s i ∈ S') → (∀ (i : ι), l i ∈ S') → ∀ (x : S), (∀ (i : ι), ∃ n, s i ^ n • x ∈ S') → x ∈ S' :=\n\n/-- An alternative way to prove that `μ` is right invariant under multiplication. -/\ntheorem ∀ {G : Type u_1} [inst : MeasurableSpace G] [inst_1 : Mul G] [inst_2 : MeasurableMul G] (μ : MeasureTheory.Measure G),\n  (∀ (g : G) (A : Set G), MeasurableSet A → ↑↑μ ((fun h => h * g) ⁻¹' A) = ↑↑μ A) ↔\n    MeasureTheory.Measure.IsMulRightInvariant μ :=\n\n/-- Suppose that $S, T \\in \\mathcal{L}(V)$ are such that $S T=T S$. Prove that $\\operatorname{null} (T-\\lambda I)$ is invariant under $S$ for every $\\lambda \\in \\mathbf{F}$. -/\ntheorem", "choices": ["∀ {𝕜 : Type u_1} {V : Type u_2} [inst : Field 𝕜] [inst_1 : AddCommGroup V] [inst_2 : Module 𝕜 V]\n  (S T : LinearMap 𝕜 V V), (S.comp T = T.comp S) →\n    ∀ (λ : 𝕜), LinearMap.range (LinearMap.comp S (LinearMap.projKerOfLe (T - λ • LinearMap.id) ⊤ (_ : (T - λ • LinearMap.id).ker ≤ ⊤))) = (T - λ • LinearMap.id).ker ", "∀ {𝕜 : Type u_1} {V : Type u_2} [inst : Field 𝕜] [inst_1 : AddCommGroup V] [inst_2 : Module 𝕜 V] (S T : LinearMap 𝕜 V V) (λ : 𝕜),\n  (S.comp T = T.comp S) →\n    ∀ (v : V), (T - λ • LinearMap.id) v = 0 → (T - λ • LinearMap.id) (S v) = 0 ", "∀ {𝕜 : Type u_1} {V : Type u_2} [inst : Field 𝕜] [inst_1 : AddCommGroup V] [inst_2 : Module 𝕜 V] (S T : LinearMap 𝕜 V V) (λ : 𝕜),\n  (T.comp S = S.comp T) →\n    (∀ (x : V), (∃ (c : 𝕜), x - c • T x = λ • x) → (∃ (c : 𝕜), x - c • S T x = λ • x)) ", "∀ {F : Type u} [inst : Field F] {V : Type u_1} [inst_1 : AddCommGroup V] [inst_2 : Module F V] (S T : LinearMap F V V),\n  (S.comp T = T.comp S) → ∀ (λ : F), Submodule.map S (LinearMap.nullSpace (T - C F V λ)) = LinearMap.nullSpace (T - C F V λ) ", "∀ {F : Type u} [inst : Field F] {V : Type u_1} [inst_1 : AddCommGroup V] [inst_2 : Module F V]\n  (S : LinearMap F V V) (T : LinearMap F V V),\n  (∀ (v : V), S (T v) = T (S v)) →\n    ∀ (λ : F), Submodule.map S (LinearMap.ker (T - λ • LinearMap.id)) ≤\n      LinearMap.ker (T - λ • LinearMap.id) ", "∀ {F : Type u_1} {V : Type u_2} [inst : Field F] [inst_1 : AddCommGroup V] [inst_2 : Module F V] (S T : LinearMap F V),\n  (∀ (x : V), S (T x) = T (S x)) →\n    ∀ (λ : F), LinearMap.ker (LinearMap.sub T (coeFn (RingHom.id F) λ * LinearMap.id)) ≤\n      LinearMap.ker (LinearMap.sub (S.comp (LinearMap.sub T (coeFn (RingHom.id F) λ * LinearMap.id)))\n        (coeFn (RingHom.id F) λ * LinearMap.id)) ", "∀ {F : Type u} {V : Type v} [inst : Field F] [inst_1 : AddCommGroup V] [inst_2 : Module F V] (S T : LinearMap F V V),\n  (S.comp T = T.comp S) → ∀ (λ : F), LinearMap.IsInvariantSubspace S (LinearMap.nullSpace (LinearMap.sub T (coeFn (RingHom.id F) λ * LinearMap.id))) ", "∀ {𝕜 : Type u_1} {V : Type u_2} [inst : Field 𝕜] [inst_1 : AddCommGroup V] [inst_2 : Module 𝕜 V] {S T : End 𝕜 V},\n  (S.comp T = T.comp S) → ∀ (λ : 𝕜), (Submodule.map S (ker (T - Algebra.id 𝕜 V * λ))).to_add_submonoid = (ker (T - Algebra.id 𝕜 V * λ)).to_add_submonoid ", "∀ {𝕜 : Type u_1} {V : Type u_2} [inst : Field 𝕜] [inst_1 : AddCommGroup V] [inst_2 : Module 𝕜 V]\n  (S T : End 𝕜 V) (hST : S.comp T = T.comp S),\n  ∀ (λ : 𝕜), Submodule.map S (End.nullSpace (T - λ • 1)) ≤ End.nullSpace (T - λ • 1) ", "∀ {F : Type u_1} {V : Type u_2} [inst : Field F] [inst_1 : AddCommGroup V] [inst_2 : Module F V] (S T : LinearMap F V),\n  (S.comp T = T.comp S) → (∀ (λ : F), LinearMap.IsInvariantSubmodule S (LinearMap.nullSpace (T - λ • LinearMap.id))) "]}
{"docString": "Suppose $T \\in \\mathcal{L}(V)$ is such that every vector in $V$ is an eigenvector of $T$. Prove that $T$ is a scalar multiple of the identity operator.", "prompts": "[{\"theorem\":\n  \"∀ {𝕜 : Type u_1} [inst : NontriviallyNormedField 𝕜] {V : Type u_2} [inst_1 : NormedAddCommGroup V]\\n  [inst_2 : NormedSpace 𝕜 V],\\n  Smooth (ModelWithCorners.prod (modelWithCornersSelf 𝕜 𝕜) (modelWithCornersSelf 𝕜 V)) (modelWithCornersSelf 𝕜 V)\\n    fun p => p.fst • p.snd\",\n  \"isProp\": true,\n  \"docString\":\n  \"On any vector space, multiplication by a scalar is a smooth operation. \"},\n {\"theorem\":\n  \"∀ (K : Type u_2) {V : Type u_1} [inst : DivisionRing K] [inst_1 : AddCommGroup V] [inst_2 : Module K V] (v w : V)\\n  (hv : v ≠ 0) (hw : w ≠ 0), Projectivization.mk K v hv = Projectivization.mk K w hw ↔ ∃ a, a • w = v\",\n  \"isProp\": true,\n  \"docString\":\n  \"Two nonzero vectors go to the same point in projective space if and only if one is\\na scalar multiple of the other. \"},\n {\"theorem\":\n  \"∀ {F : Type u_1} [inst : NormedAddCommGroup F] [inst_1 : InnerProductSpace ℝ F] (x : F) (r : ℝ),\\n  inner x (r • x) = r * (‖x‖ * ‖x‖)\",\n  \"isProp\": true,\n  \"docString\": \"The inner product of a vector with a multiple of itself. \"},\n {\"theorem\":\n  \"∀ {R : Type u_1} [inst : CommRing R] {M : Type u_2} [inst_1 : AddCommGroup M] [inst_2 : Module R M]\\n  {Q : QuadraticForm R M} (a b : M),\\n  ↑(CliffordAlgebra.ι Q) a * ↑(CliffordAlgebra.ι Q) b + ↑(CliffordAlgebra.ι Q) b * ↑(CliffordAlgebra.ι Q) a =\\n    ↑(algebraMap R (CliffordAlgebra Q)) (QuadraticForm.polar (↑Q) a b)\",\n  \"isProp\": true,\n  \"docString\": \"The symmetric product of vectors is a scalar \"}]\n", "prompt_cons": "/-- On any vector space, multiplication by a scalar is a smooth operation. -/\ntheorem ∀ {𝕜 : Type u_1} [inst : NontriviallyNormedField 𝕜] {V : Type u_2} [inst_1 : NormedAddCommGroup V]\n  [inst_2 : NormedSpace 𝕜 V],\n  Smooth (ModelWithCorners.prod (modelWithCornersSelf 𝕜 𝕜) (modelWithCornersSelf 𝕜 V)) (modelWithCornersSelf 𝕜 V)\n    fun p => p.fst • p.snd :=\n\n/-- Two nonzero vectors go to the same point in projective space if and only if one is\na scalar multiple of the other. -/\ntheorem ∀ (K : Type u_2) {V : Type u_1} [inst : DivisionRing K] [inst_1 : AddCommGroup V] [inst_2 : Module K V] (v w : V)\n  (hv : v ≠ 0) (hw : w ≠ 0), Projectivization.mk K v hv = Projectivization.mk K w hw ↔ ∃ a, a • w = v :=\n\n/-- The inner product of a vector with a multiple of itself. -/\ntheorem ∀ {F : Type u_1} [inst : NormedAddCommGroup F] [inst_1 : InnerProductSpace ℝ F] (x : F) (r : ℝ),\n  inner x (r • x) = r * (‖x‖ * ‖x‖) :=\n\n/-- The symmetric product of vectors is a scalar -/\ntheorem ∀ {R : Type u_1} [inst : CommRing R] {M : Type u_2} [inst_1 : AddCommGroup M] [inst_2 : Module R M]\n  {Q : QuadraticForm R M} (a b : M),\n  ↑(CliffordAlgebra.ι Q) a * ↑(CliffordAlgebra.ι Q) b + ↑(CliffordAlgebra.ι Q) b * ↑(CliffordAlgebra.ι Q) a =\n    ↑(algebraMap R (CliffordAlgebra Q)) (QuadraticForm.polar (↑Q) a b) :=\n\n/-- Suppose $T \\in \\mathcal{L}(V)$ is such that every vector in $V$ is an eigenvector of $T$. Prove that $T$ is a scalar multiple of the identity operator. -/\ntheorem", "choices": ["∀ {K : Type u_1} [inst : Field K] {V : Type u_2} [inst_1 : AddCommGroup V] [inst_2 : Module K V] {T : LinearMap K V V}\n  (h_eigenvector : ∀ (v : V), v ≠ 0 → ∃ (a : K), T v = a • v),\n  ∃ (c : K), ∀ (v : V), T v = c • v ", "∀ {K : Type u_1} [inst : Field K] {V : Type u_2} [inst_1 : AddCommGroup V] [inst_2 : Module K V] {T : End K V},\n  (∀ (v : V), v ≠ 0 → ∃ (c : K), T v = c • v) → ∃ (a : K), T = a • LinearMap.id ", "∀ {K : Type u_1} [inst : Field K] {V : Type u_2} [inst_1 : AddCommGroup V] [inst_2 : Module K V] {T : LinearMap K V V},\n  (∀ v : V, v ≠ 0 → ∃ a : K, T v = a • v) → (∃ c : K, ∀ v : V, T v = c • v) ", "∀ {K : Type u_1} [inst : Field K] {V : Type u_2} [inst_1 : AddCommGroup V] [inst_2 : Module K V] (T : End K V),\n  (∀ (v : V), v ≠ 0 → ∃ a, T v = a • v) → ∃ c, ∀ (v : V), T v = c • v ", "∀ {K : Type u_1} [inst : Field K] {V : Type u_2} [inst_1 : AddCommGroup V] [inst_2 : Module K V] \n  (T : LinearMap K V V) (h : ∀ v : V, v ≠ 0 → ∃ a, T v = a • v),\n  ∃ a : K, T = LinearMap.smulRight a ", "∀ {K : Type u_1} [inst : Field K] {V : Type u_2} [inst_1 : AddCommGroup V] [inst_2 : Module K V]\n  (T : LinearMap K V V) (h : ∀ v : V, v ≠ 0 → ∃ a, T v = a • v),\n  ∃ c, ∀ v : V, T v = c • v ", "∀ {𝕜 : Type u_1} [inst : Field 𝕜] {V : Type u_2} [inst_1 : AddCommGroup V] [inst_2 : Module 𝕜 V]\n  {T : LinearMap 𝕜 V V}, (∀ v : V, ∃ a, T v = a • v) → ∃ a, T = a • LinearMap.id ", "∀ {K : Type u_1} [inst : Field K] {V : Type u_2} [inst_1 : AddCommGroup V] [inst_2 : Module K V]\n  (T : LinearMap K V V), (∀ v : V, ∃ a : K, T v = a • v) → (∃ c : K, T = c • LinearMap.id) ", "∀ {K : Type u_1} [inst : Field K] {V : Type u_2} [inst_1 : AddCommGroup V] [inst_2 : Module K V]\n  (T : End K V), (∀ v : V, ∃ a : K, T v = a • v) → ∃ c : K, ∀ v : V, T v = c • v ", "∀ {K : Type u_1} [inst : Field K] {V : Type u_2} [inst_1 : AddCommGroup V] [inst_2 : Module K V]\n  (T : End K V) (h_eigen : ∀ v : V, v ≠ 0 → ∃ c : K, T v = c • v),\n  ∃ c : K, ∀ v : V, T v = c • v "]}
{"docString": "Suppose that $T \\in \\mathcal{L}(V)$ has $\\operatorname{dim} V$ distinct eigenvalues and that $S \\in \\mathcal{L}(V)$ has the same eigenvectors as $T$ (not necessarily with the same eigenvalues). Prove that $S T=T S$.", "prompts": "[{\"theorem\":\n  \"∀ {𝕜 : Type u_1} [inst : IsROrC 𝕜] [dec_𝕜 : DecidableEq 𝕜] {E : Type u_2} [inst_1 : NormedAddCommGroup E]\\n  [inst_2 : InnerProductSpace 𝕜 E] {T : E →ₗ[𝕜] E} (hT : LinearMap.IsSymmetric T) [inst_3 : FiniteDimensional 𝕜 E]\\n  {n : ℕ} (hn : FiniteDimensional.finrank 𝕜 E = n) (v : E) (i : Fin n),\\n  ↑(LinearMap.IsSymmetric.eigenvectorBasis hT hn).repr (↑T v) i =\\n    ↑(LinearMap.IsSymmetric.eigenvalues hT hn i) * ↑(LinearMap.IsSymmetric.eigenvectorBasis hT hn).repr v i\",\n  \"isProp\": true,\n  \"docString\":\n  \"*Diagonalization theorem*, *spectral theorem*; version 2: A self-adjoint operator `T` on a\\nfinite-dimensional inner product space `E` acts diagonally on the identification of `E` with\\nEuclidean space induced by an orthonormal basis of eigenvectors of `T`. \"},\n {\"theorem\":\n  \"∀ {𝕜 : Type u_1} [inst : IsROrC 𝕜] [dec_𝕜 : DecidableEq 𝕜] {E : Type u_2} [inst_1 : NormedAddCommGroup E]\\n  [inst_2 : InnerProductSpace 𝕜 E] {T : E →ₗ[𝕜] E} (hT : LinearMap.IsSymmetric T) [inst_3 : FiniteDimensional 𝕜 E]\\n  (v : E) (μ : Module.End.Eigenvalues T),\\n  ↑(LinearMap.IsSymmetric.diagonalization hT) (↑T v) μ = ↑T μ • ↑(LinearMap.IsSymmetric.diagonalization hT) v μ\",\n  \"isProp\": true,\n  \"docString\":\n  \"*Diagonalization theorem*, *spectral theorem*; version 1: A self-adjoint operator `T` on a\\nfinite-dimensional inner product space `E` acts diagonally on the decomposition of `E` into the\\ndirect sum of the eigenspaces of `T`. \"},\n {\"theorem\":\n  \"∀ {R : Type u} [inst : Ring R] {M : Type v} [inst_1 : AddCommGroup M] [inst_2 : Module R M] {M₁ : Type v}\\n  [inst_3 : AddCommGroup M₁] [inst_4 : Module R M₁], (M ≃ₗ[R] M₁) → Module.rank R M = Module.rank R M₁\",\n  \"isProp\": true,\n  \"docString\":\n  \"Two linearly equivalent vector spaces have the same dimension. \"},\n {\"theorem\":\n  \"∀ {K : Type v} {V : Type w} [inst : Field K] [inst_1 : AddCommGroup V] [inst_2 : Module K V] (f : Module.End K V),\\n  CompleteLattice.Independent (Module.End.eigenspace f)\",\n  \"isProp\": true,\n  \"docString\":\n  \"The eigenspaces of a linear operator form an independent family of subspaces of `V`.  That is,\\nany eigenspace has trivial intersection with the span of all the other eigenspaces. \"}]\n", "prompt_cons": "/-- *Diagonalization theorem*, *spectral theorem*; version 2: A self-adjoint operator `T` on a\nfinite-dimensional inner product space `E` acts diagonally on the identification of `E` with\nEuclidean space induced by an orthonormal basis of eigenvectors of `T`. -/\ntheorem ∀ {𝕜 : Type u_1} [inst : IsROrC 𝕜] [dec_𝕜 : DecidableEq 𝕜] {E : Type u_2} [inst_1 : NormedAddCommGroup E]\n  [inst_2 : InnerProductSpace 𝕜 E] {T : E →ₗ[𝕜] E} (hT : LinearMap.IsSymmetric T) [inst_3 : FiniteDimensional 𝕜 E]\n  {n : ℕ} (hn : FiniteDimensional.finrank 𝕜 E = n) (v : E) (i : Fin n),\n  ↑(LinearMap.IsSymmetric.eigenvectorBasis hT hn).repr (↑T v) i =\n    ↑(LinearMap.IsSymmetric.eigenvalues hT hn i) * ↑(LinearMap.IsSymmetric.eigenvectorBasis hT hn).repr v i :=\n\n/-- *Diagonalization theorem*, *spectral theorem*; version 1: A self-adjoint operator `T` on a\nfinite-dimensional inner product space `E` acts diagonally on the decomposition of `E` into the\ndirect sum of the eigenspaces of `T`. -/\ntheorem ∀ {𝕜 : Type u_1} [inst : IsROrC 𝕜] [dec_𝕜 : DecidableEq 𝕜] {E : Type u_2} [inst_1 : NormedAddCommGroup E]\n  [inst_2 : InnerProductSpace 𝕜 E] {T : E →ₗ[𝕜] E} (hT : LinearMap.IsSymmetric T) [inst_3 : FiniteDimensional 𝕜 E]\n  (v : E) (μ : Module.End.Eigenvalues T),\n  ↑(LinearMap.IsSymmetric.diagonalization hT) (↑T v) μ = ↑T μ • ↑(LinearMap.IsSymmetric.diagonalization hT) v μ :=\n\n/-- Two linearly equivalent vector spaces have the same dimension. -/\ntheorem ∀ {R : Type u} [inst : Ring R] {M : Type v} [inst_1 : AddCommGroup M] [inst_2 : Module R M] {M₁ : Type v}\n  [inst_3 : AddCommGroup M₁] [inst_4 : Module R M₁], (M ≃ₗ[R] M₁) → Module.rank R M = Module.rank R M₁ :=\n\n/-- The eigenspaces of a linear operator form an independent family of subspaces of `V`.  That is,\nany eigenspace has trivial intersection with the span of all the other eigenspaces. -/\ntheorem ∀ {K : Type v} {V : Type w} [inst : Field K] [inst_1 : AddCommGroup V] [inst_2 : Module K V] (f : Module.End K V),\n  CompleteLattice.Independent (Module.End.eigenspace f) :=\n\n/-- Suppose that $T \\in \\mathcal{L}(V)$ has $\\operatorname{dim} V$ distinct eigenvalues and that $S \\in \\mathcal{L}(V)$ has the same eigenvectors as $T$ (not necessarily with the same eigenvalues). Prove that $S T=T S$. -/\ntheorem", "choices": ["∀ {K : Type v} {V : Type w} [inst : Field K] [inst_1 : AddCommGroup V] [inst_2 : Module K V]\n  {T S : Module.End K V} (hT : Module.End.HasDistinctEigenvectors T) (hS : Module.End.HasSameEigenvectors T S),\n  T * S = S * T ", "∀ {𝕜 : Type u_1} [inst : IsROrC 𝕜] [dec_𝕜 : DecidableEq 𝕜] {E : Type u_2} [inst_1 : NormedAddCommGroup E]\n  [inst_2 : InnerProductSpace 𝕜 E] {T S : E →ₗ[𝕜] E} [inst_3 : FiniteDimensional 𝕜 E]\n  (hT : LinearMap.IsSymmetric T) (hS : LinearMap.IsSymmetric S)\n  (h_eigen : ∀ μ : Module.End.Eigenvalues T, ∃ ν : Module.End.Eigenvalues S, Module.End.eigenspace T μ = Module.End.eigenspace S ν),\n  T.comp S = S.comp T ", "∀ {K : Type v} {V : Type w} [inst : Field K] [inst_1 : AddCommGroup V] [inst_2 : Module K V] \n  (T S : Module.End K V) (hT : FiniteDimensional.finrank K V = Module.End.eigenvalues T.card) \n  (hTS : ∀ v : V, (∃ μ : K, Module.End.eigenspace T μ v ≠ 0) → (∃ μ : K, Module.End.eigenspace S μ v ≠ 0)),\n  T * S = S * T ", "forall {K : Type v} {V : Type w} [inst : Field K] [inst_1 : AddCommGroup V] [inst_2 : Module K V] {T S : Module.End K V}\n  (hT : FiniteDimensional.finrank K V = (Module.End.eigenvalues T).size)\n  (hTS : ∀ u μ, Module.End.HasEigenvector T (u, μ) → Module.End.HasEigenvector S (u, μ)),\n  T * S = S * T ", "∀ {K : Type u} [inst : Field K] {V : Type v} [inst_1 : AddCommGroup V] [inst_2 : Module K V] {T S : Module.End K V}\n  [inst_3 : FiniteDimensional K V] (hT : Module.End.HasDistinctEigenvalues T) (hS : Module.End.HasSameEigenvectors T S),\n  T * S = S * T ", "∀ {K : Type v} {V : Type w} [inst : Field K] [inst_1 : AddCommGroup V] [inst_2 : Module K V] {T S : Module.End K V}\n  (ht : LinearMap.IsDiagonalizable T) (hs : LinearMap.HasSameEigenvectors T S),\n  T * S = S * T ", "∀ {K : Type v} {V : Type w} [inst : Field K] [inst_1 : AddCommGroup V] [inst_2 : Module K V] {T S : Module.End K V},\n  (Module.rank K V = (Module.End.eigenvalues T).card) →\n  (∀ μ : K, Module.End.eigenspace T μ = Module.End.eigenspace S μ) →\n  T.comp S = S.comp T ", "∀ {𝕜 : Type u_1} [inst : IsROrC 𝕜] [dec_𝕜 : DecidableEq 𝕜] {E : Type u_2} [inst_1 : NormedAddCommGroup E]\n  [inst_2 : InnerProductSpace 𝕜 E] {T S : E →ₗ[𝕜] E} [inst_3 : FiniteDimensional 𝕜 E]\n  (hT : LinearMap.IsSymmetric T) (hS : LinearMap.EigenvaluesSameEigenvectors hT S),\n  T * S = S * T ", "forall {K : Type v} {V : Type w} [inst : Field K] [inst_1 : AddCommGroup V] [inst_2 : Module K V] {T S : Module.End K V}\n  (hT : Module.End.HasDistinctEigenvectors T) (hS : Module.End.HasSameEigenvectors T S),\n  T * S = S * T ", "∀ {K : Type v} {V : Type w} [inst : Field K] [inst_1 : AddCommGroup V] [inst_2 : Module K V]\n  {T S : Module.End K V} (h_distinct : Module.End.eigenvalues T = Finset.card (Module.rank K V))\n  (h_eigenvectors : ∀ v : V, Module.End.eigenspace T v ⊆ Module.End.eigenspace S v), T * S = S * T "]}
{"docString": "Suppose $u, v \\in V$. Prove that $\\langle u, v\\rangle=0$ if and only if $\\|u\\| \\leq\\|u+a v\\|$ for all $a \\in \\mathbf{F}$.", "prompts": "[{\"theorem\":\n  \"∀ {E : Type u_1} [inst : NormedAddCommGroup E] [inst_1 : NormedSpace ℝ E] [inst_2 : MeasurableSpace E]\\n  [inst_3 : BorelSpace E] [inst_4 : FiniteDimensional ℝ E] (μ : MeasureTheory.Measure E)\\n  [inst_5 : MeasureTheory.Measure.IsAddHaarMeasure μ] {s : Set E} (u : ℕ → E),\\n  Metric.Bounded s →\\n    Metric.Bounded (Set.range u) → Pairwise (Disjoint on fun n => {u n} + s) → MeasurableSet s → ↑↑μ s = 0\",\n  \"isProp\": true,\n  \"docString\":\n  \"If a set is disjoint of its translates by infinitely many bounded vectors, then it has measure\\nzero. This auxiliary lemma proves this assuming additionally that the set is bounded. \"},\n {\"theorem\":\n  \"∀ {K : Type u_1} {v : K} {n : ℕ} [inst : LinearOrderedField K] [inst_1 : FloorRing K],\\n  ¬GeneralizedContinuedFraction.TerminatedAt (GeneralizedContinuedFraction.of v) n →\\n    |v - GeneralizedContinuedFraction.convergents (GeneralizedContinuedFraction.of v) n| ≤\\n      1 /\\n        (GeneralizedContinuedFraction.denominators (GeneralizedContinuedFraction.of v) n *\\n          GeneralizedContinuedFraction.denominators (GeneralizedContinuedFraction.of v) (n + 1))\",\n  \"isProp\": true,\n  \"docString\": \"Shows that `|v - Aₙ / Bₙ| ≤ 1 / (Bₙ * Bₙ₊₁)`. \"},\n {\"theorem\":\n  \"∀ {α : Type u_1} [inst : MeasurableSpace α] {s : MeasureTheory.SignedMeasure α} {u v w : Set α},\\n  MeasurableSet u →\\n    MeasurableSet v →\\n      MeasurableSet w →\\n        MeasureTheory.VectorMeasure.restrict s u ≤ MeasureTheory.VectorMeasure.restrict 0 u →\\n          ↑s w = 0 → w ⊆ u → v ⊆ w → ↑s v = 0\",\n  \"isProp\": true,\n  \"docString\":\n  \"A subset `v` of a null-set `w` has zero measure if `w` is a subset of a negative set `u`. \"},\n {\"theorem\":\n  \"∀ {α : Type u_1} [inst : MeasurableSpace α] {s : MeasureTheory.SignedMeasure α} {u v w : Set α},\\n  MeasurableSet u →\\n    MeasurableSet v →\\n      MeasurableSet w →\\n        MeasureTheory.VectorMeasure.restrict 0 u ≤ MeasureTheory.VectorMeasure.restrict s u →\\n          ↑s w = 0 → w ⊆ u → v ⊆ w → ↑s v = 0\",\n  \"isProp\": true,\n  \"docString\":\n  \"A subset `v` of a null-set `w` has zero measure if `w` is a subset of a positive set `u`. \"}]\n", "prompt_cons": "/-- If a set is disjoint of its translates by infinitely many bounded vectors, then it has measure\nzero. This auxiliary lemma proves this assuming additionally that the set is bounded. -/\ntheorem ∀ {E : Type u_1} [inst : NormedAddCommGroup E] [inst_1 : NormedSpace ℝ E] [inst_2 : MeasurableSpace E]\n  [inst_3 : BorelSpace E] [inst_4 : FiniteDimensional ℝ E] (μ : MeasureTheory.Measure E)\n  [inst_5 : MeasureTheory.Measure.IsAddHaarMeasure μ] {s : Set E} (u : ℕ → E),\n  Metric.Bounded s →\n    Metric.Bounded (Set.range u) → Pairwise (Disjoint on fun n => {u n} + s) → MeasurableSet s → ↑↑μ s = 0 :=\n\n/-- Shows that `|v - Aₙ / Bₙ| ≤ 1 / (Bₙ * Bₙ₊₁)`. -/\ntheorem ∀ {K : Type u_1} {v : K} {n : ℕ} [inst : LinearOrderedField K] [inst_1 : FloorRing K],\n  ¬GeneralizedContinuedFraction.TerminatedAt (GeneralizedContinuedFraction.of v) n →\n    |v - GeneralizedContinuedFraction.convergents (GeneralizedContinuedFraction.of v) n| ≤\n      1 /\n        (GeneralizedContinuedFraction.denominators (GeneralizedContinuedFraction.of v) n *\n          GeneralizedContinuedFraction.denominators (GeneralizedContinuedFraction.of v) (n + 1)) :=\n\n/-- A subset `v` of a null-set `w` has zero measure if `w` is a subset of a negative set `u`. -/\ntheorem ∀ {α : Type u_1} [inst : MeasurableSpace α] {s : MeasureTheory.SignedMeasure α} {u v w : Set α},\n  MeasurableSet u →\n    MeasurableSet v →\n      MeasurableSet w →\n        MeasureTheory.VectorMeasure.restrict s u ≤ MeasureTheory.VectorMeasure.restrict 0 u →\n          ↑s w = 0 → w ⊆ u → v ⊆ w → ↑s v = 0 :=\n\n/-- A subset `v` of a null-set `w` has zero measure if `w` is a subset of a positive set `u`. -/\ntheorem ∀ {α : Type u_1} [inst : MeasurableSpace α] {s : MeasureTheory.SignedMeasure α} {u v w : Set α},\n  MeasurableSet u →\n    MeasurableSet v →\n      MeasurableSet w →\n        MeasureTheory.VectorMeasure.restrict 0 u ≤ MeasureTheory.VectorMeasure.restrict s u →\n          ↑s w = 0 → w ⊆ u → v ⊆ w → ↑s v = 0 :=\n\n/-- Suppose $u, v \\in V$. Prove that $\\langle u, v\\rangle=0$ if and only if $\\|u\\| \\leq\\|u+a v\\|$ for all $a \\in \\mathbf{F}$. -/\ntheorem", "choices": ["∀ {F : Type u_1} {E : Type u_2} [inst : Ring F] [inst_1 : IsDomain F] [inst_2 : AddCommGroup E] [inst_3 : Module F E]\n  (u v : E),\n  InnerProductSpace.inner u v = 0 ↔ ∀ (a : F), ∥u∥ ≤ ∥u + a • v∥ ", "∀ {𝕜 : Type u_1} {E : Type u_2} [inst : IsROrC 𝕜] [inst_1 : InnerProductSpace 𝕜 E] {u v : E},\n  inner u v = 0 ↔ ∀ (a : 𝕜), ∥u∥ ≤ ∥u + a • v∥ ", "∀ {𝕜 : Type u_1} {E : Type u_2} [inst : IsROrC 𝕜] [inst_1 : InnerProductSpace 𝕜 E] (u v : E),\n  inner u v = 0 ↔ ∀ (a : 𝕜), (∥u∥ ≤ ∥u + a • v∥) ", "∀ {𝕜 : Type u_1} {E : Type u_2} [inst : IsROrC 𝕜] [inst_1 : InnerProductSpace 𝕜 E] (u v : E),\n  inner u v = 0 ↔ ∀ (a : 𝕜), ∥u∥ ≤ ∥u + a • v∥ ", "∀ {𝕜 : Type u_1} {E : Type u_2} [inst : IsROrC 𝕜] [inst_1 : InnerProductSpace 𝕜 E] {u v : E},\n  (inner u v = 0) ↔ (∀ (a : 𝕜), ∥u∥ ≤ ∥u + a • v∥) ", "∀ {𝕜 : Type u_1} {E : Type u_2} [inst : IsROrC 𝕜] [inst_1 : InnerProductSpace 𝕜 E] {u v : E},\n  inner u v = 0 ↔ ∀ (a : 𝕜), ∥u∥ ≤ ∥u + a • v∥ ", "∀ {𝔽 : Type u_1} {E : Type u_2} [inst : NondiscreteNormedField 𝔽] [inst_1 : NormedGroup E] [inst_2 : NormedSpace 𝔽 E]\n  (u v : E) (a : 𝔽), inner u v = 0 ↔ ∀ a, ∥u∥ ≤ ∥u + a • v∥ ", "∀ {F : Type u_1} {E : Type u_2} [inst : LinearOrderedField F] [inst_1 : AddCommGroup E] [inst_2 : VectorSpace F E]\n  [inst_3 : Module F ℝ] [inst_4 : IsScalarTower F ℝ (Set E)] (u v : E) (norm : E → ℝ),\n  (∀ a, norm u ≤ norm (u + a • v)) ↔ inner u v = 0 ", "∀ {𝔽 : Type u_1} [inst : IsROrC 𝔽] {E : Type u_2} [inst_1 : InnerProductSpace 𝔽 E] (u v : E),\n  inner u v = 0 ↔ ∀ (a : 𝔽), ∥u∥ ≤ ∥u + a • v∥ ", "∀ {𝕜 : Type u_1} {E : Type u_2} [inst : IsROrC 𝕜] [inst_1 : InnerProductSpace 𝕜 E] {u v : E},\n  inner u v = 0 ↔ ∀ (a : 𝕜), ∥u∥ ≤ ∥u + a • v∥ "]}
{"docString": "Prove that if $V$ is a complex inner-product space, then $\\langle u, v\\rangle=\\frac{\\|u+v\\|^{2}-\\|u-v\\|^{2}+\\|u+i v\\|^{2} i-\\|u-i v\\|^{2} i}{4}$ for all $u, v \\in V$.", "prompts": "[{\"theorem\":\n  \"∀ {G : Type u_1} [inst : NormedAddCommGroup G] [inst_1 : InnerProductSpace ℝ G] (f : G ≃ₗᵢ[ℝ] ℂ) (x y : G),\\n  inner x y = (↑(starRingEnd ℂ) (↑f x) * ↑f y).re\",\n  \"isProp\": true,\n  \"docString\":\n  \"The inner product on an inner product space of dimension 2 can be evaluated in terms\\nof a complex-number representation of the space. \"},\n {\"theorem\":\n  \"∀ {E : Type u_1} [inst : NormedAddCommGroup E] [inst_1 : InnerProductSpace ℝ E]\\n  [inst_2 : Fact (FiniteDimensional.finrank ℝ E = 2)] (o : Orientation ℝ E (Fin 2)) (f : E ≃ₗᵢ[ℝ] ℂ),\\n  ↑(Orientation.map (Fin 2) f.toLinearEquiv) o = Complex.orientation →\\n    ∀ (x y : E), ↑(↑(Orientation.areaForm o) x) y = (↑(starRingEnd ℂ) (↑f x) * ↑f y).im\",\n  \"isProp\": true,\n  \"docString\":\n  \"The area form on an oriented real inner product space of dimension 2 can be evaluated in terms\\nof a complex-number representation of the space. \"},\n {\"theorem\":\n  \"∀ {F : Type u_1} [inst : NormedAddCommGroup F] [inst_1 : InnerProductSpace ℝ F] (x y : F),\\n  inner x y * inner x y ≤ inner x x * inner y y\",\n  \"isProp\": true,\n  \"docString\": \"Cauchy–Schwarz inequality for real inner products. \"},\n {\"theorem\":\n  \"∀ {V : Type u_1} [inst : NormedAddCommGroup V] [inst_1 : InnerProductSpace ℝ V]\\n  [inst_2 : Fact (FiniteDimensional.finrank ℝ V = 2)] (o : Orientation ℝ V (Fin 2)) (θ : Real.Angle) (f : V ≃ₗᵢ[ℝ] ℂ),\\n  ↑(Orientation.map (Fin 2) f.toLinearEquiv) o = Complex.orientation →\\n    ∀ (x : V), ↑f (↑(Orientation.rotation o θ) x) = ↑(Real.Angle.expMapCircle θ) * ↑f x\",\n  \"isProp\": true,\n  \"docString\":\n  \"Rotation in an oriented real inner product space of dimension 2 can be evaluated in terms of a\\ncomplex-number representation of the space. \"}]\n", "prompt_cons": "/-- The inner product on an inner product space of dimension 2 can be evaluated in terms\nof a complex-number representation of the space. -/\ntheorem ∀ {G : Type u_1} [inst : NormedAddCommGroup G] [inst_1 : InnerProductSpace ℝ G] (f : G ≃ₗᵢ[ℝ] ℂ) (x y : G),\n  inner x y = (↑(starRingEnd ℂ) (↑f x) * ↑f y).re :=\n\n/-- The area form on an oriented real inner product space of dimension 2 can be evaluated in terms\nof a complex-number representation of the space. -/\ntheorem ∀ {E : Type u_1} [inst : NormedAddCommGroup E] [inst_1 : InnerProductSpace ℝ E]\n  [inst_2 : Fact (FiniteDimensional.finrank ℝ E = 2)] (o : Orientation ℝ E (Fin 2)) (f : E ≃ₗᵢ[ℝ] ℂ),\n  ↑(Orientation.map (Fin 2) f.toLinearEquiv) o = Complex.orientation →\n    ∀ (x y : E), ↑(↑(Orientation.areaForm o) x) y = (↑(starRingEnd ℂ) (↑f x) * ↑f y).im :=\n\n/-- Cauchy–Schwarz inequality for real inner products. -/\ntheorem ∀ {F : Type u_1} [inst : NormedAddCommGroup F] [inst_1 : InnerProductSpace ℝ F] (x y : F),\n  inner x y * inner x y ≤ inner x x * inner y y :=\n\n/-- Rotation in an oriented real inner product space of dimension 2 can be evaluated in terms of a\ncomplex-number representation of the space. -/\ntheorem ∀ {V : Type u_1} [inst : NormedAddCommGroup V] [inst_1 : InnerProductSpace ℝ V]\n  [inst_2 : Fact (FiniteDimensional.finrank ℝ V = 2)] (o : Orientation ℝ V (Fin 2)) (θ : Real.Angle) (f : V ≃ₗᵢ[ℝ] ℂ),\n  ↑(Orientation.map (Fin 2) f.toLinearEquiv) o = Complex.orientation →\n    ∀ (x : V), ↑f (↑(Orientation.rotation o θ) x) = ↑(Real.Angle.expMapCircle θ) * ↑f x :=\n\n/-- Prove that if $V$ is a complex inner-product space, then $\\langle u, v\\rangle=\\frac{\\|u+v\\|^{2}-\\|u-v\\|^{2}+\\|u+i v\\|^{2} i-\\|u-i v\\|^{2} i}{4}$ for all $u, v \\in V$. -/\ntheorem", "choices": ["∀ {V : Type u_1} [inst : NormedAddCommGroup V] [inst_1 : InnerProductSpace ℂ V] (u v : V),\n  inner u v = ((norm (u + v))^2 - (norm (u - v))^2 + (norm (u + I • v))^2 * I - (norm (u - I • v))^2 * I) / 4 ", "∀ {V : Type u_1} [inst : NormedAddCommGroup V] [inst_1 : InnerProductSpace ℂ V] (u v : V),\n  inner u v = ((norm (u + v) ^ 2 - norm (u - v) ^ 2 + ((norm (u + I • v) ^ 2 - norm (u - I • v) ^ 2) * I)) / 4 ", "forall {V : Type u_1} [inst : NormedAddCommGroup V] [inst_1 : InnerProductSpace ℂ V] (u v : V),\n  inner u v = (norm (u + v) ^ 2 - norm (u - v) ^ 2 + (norm (u + I • v) ^ 2 - norm (u - I • v) ^ 2) * I) / 4 ", "∀ {V : Type u_1} [inst : NormedAddCommGroup V] [inst_1 : InnerProductSpace ℂ V] (u v : V),\n  inner u v = ((∥u + v∥ ^ 2 - ∥u - v∥ ^ 2 + ∥u + ((I : ℂ) * v)∥ ^ 2 * I - ∥u - ((I : ℂ) * v)∥ ^ 2 * I) / 4) ", "∀ {V : Type u_1} [inst : NormedAddCommGroup V] [inst_1 : InnerProductSpace ℂ V] (u v : V),\n  inner u v = ((∥u + v∥ ^ 2 - ∥u - v∥ ^ 2) + (∥u + I • v∥ ^ 2 * I - ∥u - I • v∥ ^ 2 * I)) / 4 ", "∀ {V : Type u_1} [inst : NormedAddCommGroup V] [inst_1 : InnerProductSpace ℂ V] (u v : V),\n  inner u v = ((norm_sq (u + v) - norm_sq (u - v) + (norm_sq (u + I • v) - norm_sq (u - I • v)) * I) / 4) ", "∀ {V : Type u_1} [inst : NormedAddCommGroup V] [inst_1 : InnerProductSpace ℂ V] (u v : V),\n  inner u v = (↑(norm (u + v)) ^ 2 - ↑(norm (u - v)) ^ 2 + ↑(norm (u + I • v)) ^ 2 * I - ↑(norm (u - I • v)) ^ 2 * I) / 4 ", "∀ {V : Type u_1} [inst : NormedAddCommGroup V] [inst_1 : InnerProductSpace ℂ V] (u v : V),\n  inner u v = ((norm (u + v) ^ 2 - norm (u - v) ^ 2 + (norm (u + I • v) ^ 2) * I - (norm (u - I • v) ^ 2) * I) / 4 ", "∀ {V : Type u_1} [inst : NormedAddCommGroup V] [inst_1 : InnerProductSpace ℂ V] (u v : V),\n  inner u v = (((norm (u + v))^2 - (norm (u - v))^2) + (norm (u + I • v))^2 * I - (norm (u - I • v))^2 * I) / 4 ", "∀ {V : Type u_1} [inst : NormedAddCommGroup V] [inst_1 : InnerProductSpace ℂ V] (u v : V),\ninner u v = (norm (u + v) ^ 2 - norm (u - v) ^ 2 + (norm (u + (I * v)) ^ 2 - norm (u - (I * v)) ^ 2) * I) / 4 "]}
{"docString": "Suppose $U$ is a subspace of $V$. Prove that $U^{\\perp}=\\{0\\}$ if and only if $U=V$", "prompts": "[{\"theorem\":\n  \"∀ {𝕜 : Type u_1} {E : Type u_2} [inst : IsROrC 𝕜] [inst_1 : NormedAddCommGroup E] [inst_2 : InnerProductSpace 𝕜 E]\\n  {U V : Submodule 𝕜 E} [inst_3 : HasOrthogonalProjection U],\\n  ContinuousLinearMap.comp (orthogonalProjection U) (Submodule.subtypeL V) = 0 ↔ U ⟂ V\",\n  \"isProp\": true,\n  \"docString\":\n  \"The projection into `U` from `V` is the zero map if and only if `U` and `V` are orthogonal. \"},\n {\"theorem\":\n  \"∀ {𝕜 : Type u_1} {E : Type u_2} [inst : IsROrC 𝕜] [inst_1 : NormedAddCommGroup E] [inst_2 : InnerProductSpace 𝕜 E]\\n  {U V : Submodule 𝕜 E} [inst_3 : HasOrthogonalProjection U],\\n  U ⟂ V → ContinuousLinearMap.comp (orthogonalProjection U) (Submodule.subtypeL V) = 0\",\n  \"isProp\": true,\n  \"docString\":\n  \"The projection into `U` from an orthogonal submodule `V` is the zero map. \"},\n {\"theorem\":\n  \"∀ {E : Type u_1} [inst : NormedAddCommGroup E] [inst_1 : NormedSpace ℝ E] [inst_2 : MeasurableSpace E]\\n  [inst_3 : BorelSpace E] [inst_4 : FiniteDimensional ℝ E] (μ : MeasureTheory.Measure E)\\n  [inst_5 : MeasureTheory.Measure.IsAddHaarMeasure μ] (s : Submodule ℝ E), s ≠ ⊤ → ↑↑μ ↑s = 0\",\n  \"isProp\": true,\n  \"docString\": \"A strict vector subspace has measure zero. \"},\n {\"theorem\":\n  \"∀ {V : Type u_1} {P : Type u_2} [inst : NormedAddCommGroup V] [inst_1 : InnerProductSpace ℝ V] [inst_2 : MetricSpace P]\\n  [inst_3 : NormedAddTorsor V P] {s : AffineSubspace ℝ P} [inst_4 : Nonempty { x // x ∈ s }]\\n  [inst_5 : HasOrthogonalProjection (AffineSubspace.direction s)] {p : P},\\n  dist p ↑(↑(EuclideanGeometry.orthogonalProjection s) p) = 0 ↔ p ∈ s\",\n  \"isProp\": true,\n  \"docString\":\n  \"The distance to a point's orthogonal projection is 0 iff it lies in the subspace. \"}]\n", "prompt_cons": "/-- The projection into `U` from `V` is the zero map if and only if `U` and `V` are orthogonal. -/\ntheorem ∀ {𝕜 : Type u_1} {E : Type u_2} [inst : IsROrC 𝕜] [inst_1 : NormedAddCommGroup E] [inst_2 : InnerProductSpace 𝕜 E]\n  {U V : Submodule 𝕜 E} [inst_3 : HasOrthogonalProjection U],\n  ContinuousLinearMap.comp (orthogonalProjection U) (Submodule.subtypeL V) = 0 ↔ U ⟂ V :=\n\n/-- The projection into `U` from an orthogonal submodule `V` is the zero map. -/\ntheorem ∀ {𝕜 : Type u_1} {E : Type u_2} [inst : IsROrC 𝕜] [inst_1 : NormedAddCommGroup E] [inst_2 : InnerProductSpace 𝕜 E]\n  {U V : Submodule 𝕜 E} [inst_3 : HasOrthogonalProjection U],\n  U ⟂ V → ContinuousLinearMap.comp (orthogonalProjection U) (Submodule.subtypeL V) = 0 :=\n\n/-- A strict vector subspace has measure zero. -/\ntheorem ∀ {E : Type u_1} [inst : NormedAddCommGroup E] [inst_1 : NormedSpace ℝ E] [inst_2 : MeasurableSpace E]\n  [inst_3 : BorelSpace E] [inst_4 : FiniteDimensional ℝ E] (μ : MeasureTheory.Measure E)\n  [inst_5 : MeasureTheory.Measure.IsAddHaarMeasure μ] (s : Submodule ℝ E), s ≠ ⊤ → ↑↑μ ↑s = 0 :=\n\n/-- The distance to a point's orthogonal projection is 0 iff it lies in the subspace. -/\ntheorem ∀ {V : Type u_1} {P : Type u_2} [inst : NormedAddCommGroup V] [inst_1 : InnerProductSpace ℝ V] [inst_2 : MetricSpace P]\n  [inst_3 : NormedAddTorsor V P] {s : AffineSubspace ℝ P} [inst_4 : Nonempty { x // x ∈ s }]\n  [inst_5 : HasOrthogonalProjection (AffineSubspace.direction s)] {p : P},\n  dist p ↑(↑(EuclideanGeometry.orthogonalProjection s) p) = 0 ↔ p ∈ s :=\n\n/-- Suppose $U$ is a subspace of $V$. Prove that $U^{\\perp}=\\{0\\}$ if and only if $U=V$ -/\ntheorem", "choices": ["∀ {𝕜 : Type u_1} {E : Type u_2} [inst : IsROrC 𝕜] [inst_1 : NormedAddCommGroup E] [inst_2 : InnerProductSpace 𝕜 E]\n  {U V : Submodule 𝕜 E},\n  (U⊓V).orthogonal = ⊥ ↔ U = V ", "∀ {𝕜 : Type u_1} {E : Type u_2} [inst : IsROrC 𝕜] [inst_1 : NormedAddCommGroup E] [inst_2 : InnerProductSpace 𝕜 E]\n  {U V : Submodule 𝕜 E},\n  U ≤ V → (U.orthogonal = ⊥ ↔ U = V) ", "forall {𝕜 : Type u_1} {E : Type u_2} [inst : IsROrC 𝕜] [inst_1 : NormedAddCommGroup E] [inst_2 : InnerProductSpace 𝕜 E]\n  (U V : Submodule 𝕜 E),\n  Uᗮ = ⊥ ↔ U = V ", "∀ {𝕜 : Type u_1} {E : Type u_2} [inst : IsROrC 𝕜] [inst_1 : NormedAddCommGroup E] [inst_2 : InnerProductSpace 𝕜 E]\n  {U V : Submodule 𝕜 E},\n  (U ⊓ Vᗮ = ⊥) ↔ (U = V) ", "∀ {𝕜 : Type u_1} {E : Type u_2} [inst : IsROrC 𝕜] [inst_1 : NormedAddCommGroup E] [inst_2 : InnerProductSpace 𝕜 E]\n  {U V : Submodule 𝕜 E} [inst_3 : HasOrthogonalProjection U],\n  (U.orthogonal = ⊥) ↔ (U = V) ", "forall {𝕜 : Type u_1} {E : Type u_2} [inst : IsROrC 𝕜] [inst_1 : NormedAddCommGroup E] [inst_2 : InnerProductSpace 𝕜 E]\n  {U V : Submodule 𝕜 E},\n  U.orthogonal = ⊥ ↔ U = V ", "∀ {𝕜 : Type u_1} {E : Type u_2} [inst : IsROrC 𝕜] [inst_1 : NormedAddCommGroup E] [inst_2 : InnerProductSpace 𝕜 E]\n  {U V : Submodule 𝕜 E},\n  U.orthogonal = ⊥ ↔ U = V ", "∀ {𝕜 : Type u_1} {E : Type u_2} [inst : IsROrC 𝕜] [inst_1 : NormedAddCommGroup E] [inst_2 : InnerProductSpace 𝕜 E]\n  {U V : Submodule 𝕜 E}, U ≤ V → (U.orthogonal = ⊥ ↔ U = V) ", "∀ {𝕜 : Type u_1} {E : Type u_2} [inst : IsROrC 𝕜] [inst_1 : NormedAddCommGroup E] [inst_2 : InnerProductSpace 𝕜 E]\n  {U V : Submodule 𝕜 E},\n  Uᗮ = ⊥ ↔ U = V ", "∀ {𝕜 : Type u_1} {E : Type u_2} [inst : IsROrC 𝕜] [inst_1 : NormedAddCommGroup E] [inst_2 : InnerProductSpace 𝕜 E]\n  {U V : Submodule 𝕜 E} [inst_3 : HasOrthogonalProjection U],\n  (U.orthogonal ⊆ (⊥ : Submodule 𝕜 E)) ↔ U = V "]}
{"docString": "Prove that if $T \\in \\mathcal{L}(V)$ is normal, then $\\operatorname{range} T=\\operatorname{range} T^{*}.$", "prompts": "[{\"theorem\":\n  \"∀ {R : Type u_1} {M : Type u_2} [inst : CommRing R] [inst_1 : AddCommGroup M] [inst_2 : Module R M] (W : Submodule R M),\\n  LinearMap.range (LinearMap.dualMap (Submodule.mkQ W)) = Submodule.dualAnnihilator W\",\n  \"isProp\": true,\n  \"docString\":\n  \"That $\\\\operatorname{im}(q^* : (V/W)^* \\\\to V^*) = \\\\operatorname{ann}(W)$. \"},\n {\"theorem\":\n  \"∀ {𝕜 : Type u_1} {𝕜₂ : Type u_2} {F : Type u_4} [inst : NormedAddCommGroup F] [inst_1 : NontriviallyNormedField 𝕜]\\n  [inst_2 : NontriviallyNormedField 𝕜₂] [inst_3 : NormedSpace 𝕜₂ F] {σ₁₂ : 𝕜 →+* 𝕜₂} {E' : Type u_3}\\n  [inst_4 : SeminormedAddCommGroup E'] [inst_5 : NormedSpace 𝕜 E'] [inst_6 : RingHomIsometric σ₁₂]\\n  {f : ℕ → E' →SL[σ₁₂] F} {g : E' →SL[σ₁₂] F},\\n  Filter.Tendsto (fun n x => ↑(f n) x) Filter.atTop (nhds ↑g) → CauchySeq f → Filter.Tendsto f Filter.atTop (nhds g)\",\n  \"isProp\": true,\n  \"docString\":\n  \"If a Cauchy sequence of continuous linear map converges to a continuous linear map pointwise,\\nthen it converges to the same map in norm. This lemma is used to prove that the space of continuous\\nlinear maps is complete provided that the codomain is a complete space. \"},\n {\"theorem\": \"∀ {x : ℝ}, Liouville x → Transcendental ℤ x\",\n  \"isProp\": true,\n  \"docString\": \"**Liouville's Theorem** \"},\n {\"theorem\":\n  \"∀ {𝕜 : Type u_2} {E : Type u_1} [inst : NormedField 𝕜] [inst_1 : AddCommGroup E] [inst_2 : Module 𝕜 E]\\n  {p q : Seminorm 𝕜 E} {x : E}, BddBelow (Set.range fun u => ↑p u + ↑q (x - u))\",\n  \"isProp\": true,\n  \"docString\":\n  \"Auxiliary lemma to show that the infimum of seminorms is well-defined. \"}]\n", "prompt_cons": "/-- That $\\operatorname{im}(q^* : (V/W)^* \\to V^*) = \\operatorname{ann}(W)$. -/\ntheorem ∀ {R : Type u_1} {M : Type u_2} [inst : CommRing R] [inst_1 : AddCommGroup M] [inst_2 : Module R M] (W : Submodule R M),\n  LinearMap.range (LinearMap.dualMap (Submodule.mkQ W)) = Submodule.dualAnnihilator W :=\n\n/-- If a Cauchy sequence of continuous linear map converges to a continuous linear map pointwise,\nthen it converges to the same map in norm. This lemma is used to prove that the space of continuous\nlinear maps is complete provided that the codomain is a complete space. -/\ntheorem ∀ {𝕜 : Type u_1} {𝕜₂ : Type u_2} {F : Type u_4} [inst : NormedAddCommGroup F] [inst_1 : NontriviallyNormedField 𝕜]\n  [inst_2 : NontriviallyNormedField 𝕜₂] [inst_3 : NormedSpace 𝕜₂ F] {σ₁₂ : 𝕜 →+* 𝕜₂} {E' : Type u_3}\n  [inst_4 : SeminormedAddCommGroup E'] [inst_5 : NormedSpace 𝕜 E'] [inst_6 : RingHomIsometric σ₁₂]\n  {f : ℕ → E' →SL[σ₁₂] F} {g : E' →SL[σ₁₂] F},\n  Filter.Tendsto (fun n x => ↑(f n) x) Filter.atTop (nhds ↑g) → CauchySeq f → Filter.Tendsto f Filter.atTop (nhds g) :=\n\n/-- **Liouville's Theorem** -/\ntheorem ∀ {x : ℝ}, Liouville x → Transcendental ℤ x :=\n\n/-- Auxiliary lemma to show that the infimum of seminorms is well-defined. -/\ntheorem ∀ {𝕜 : Type u_2} {E : Type u_1} [inst : NormedField 𝕜] [inst_1 : AddCommGroup E] [inst_2 : Module 𝕜 E]\n  {p q : Seminorm 𝕜 E} {x : E}, BddBelow (Set.range fun u => ↑p u + ↑q (x - u)) :=\n\n/-- Prove that if $T \\in \\mathcal{L}(V)$ is normal, then $\\operatorname{range} T=\\operatorname{range} T^{*}.$ -/\ntheorem", "choices": ["∀ {𝕜 : Type u_1} {V : Type u_2} [inst : Field 𝕜] [inst_1 : AddCommGroup V] [inst_2 : Module 𝕜 V] [inst_3 : StarModule 𝕜 V]\n  {T : V →ₗ[𝕜] V} (hT : LinearMap.IsNormal T), LinearMap.range T = LinearMap.range (LinearMap.star T) ", "∀ {𝕜 : Type u_1} {V : Type u_2} [inst : Field 𝕜] [inst_1 : AddCommGroup V] [inst_2 : Module 𝕜 V]\n  [inst_3 : StarModule 𝕜 V] [inst_4 : FiniteDimensional 𝕜 V] {T : V →SL[RingHom.id 𝕜] V},\n  LinearMap.IsNormal T → LinearMap.range T = LinearMap.range (LinearMap.adj T) ", "∀ {𝕜 : Type u_1} {V : Type u_2} [inst : Field 𝕜] [inst_1 : AddCommGroup V] [inst_2 : Module 𝕜 V] [inst_3 : StarModule 𝕜 V]\n  {T : V →SL[RingHom.id 𝕜] V}, LinearMap.IsNormal T → LinearMap.range T = LinearMap.range (LinearMap.adjoint T) ", "∀ {𝕜 : Type u_1} {V : Type u_2} [inst : Field 𝕜] [inst_1 : AddCommGroup V] [inst_2 : Module 𝕜 V] [inst_3 : StarModule 𝕜 V]\n  (T : V →ₛₗ[RingHom.id 𝕜] V), LinearMap.IsNormal T → LinearMap.range T = LinearMap.range (LinearMap.star T) ", "∀ {𝕜 : Type u_1} {V : Type u_2} [inst : Field 𝕜] [inst_1 : InnerProductSpace 𝕜 V] (T : V →ₗ[𝕜] V),\n  LinearMap.IsNormal T → LinearMap.range T = LinearMap.range (LinearMap.adjoint T) ", "∀ {𝕜 : Type u_1} {V : Type u_2} [inst : Field 𝕜] [inst_1 : AddCommGroup V] [inst_2 : Module 𝕜 V] [inst_3 : StarModule 𝕜 V]\n  {T : V →ₗ[𝕜] V}, LinearMap.normal T → LinearMap.range T = LinearMap.range (LinearMap.adjoint T) ", "∀ {𝕜 : Type u_1} {V : Type u_2} [inst : Field 𝕜] [inst_1 : AddCommGroup V] [inst_2 : Module 𝕜 V]\n  [inst_3 : StarModule 𝕜 V] (T : V →ₛₗ[RingHom.id 𝕜] V) [inst_4 : StarLinearIsometry T],\n  LinearMap.range T = LinearMap.range (LinearMap.adjoint T) ", "∀ {𝕜 : Type u_1} {V : Type u_2} [inst : Field 𝕜] [inst_1 : AddCommGroup V] [inst_2 : Module 𝕜 V] [inst_3 : StarModule 𝕜 V]\n  {T : V →ₗ[𝕜] V}, LinearMap.normal T → LinearMap.range T = LinearMap.range (LinearMap.adjoint T) ", "∀ {𝕜 : Type u_1} {V : Type u_2} [inst : Field 𝕜] [inst_1 : AddCommGroup V] [inst_2 : Module 𝕜 V] {T : V →ₗ[𝕜] V}\n  [inst_3 : StarModule 𝕜 V], T.is_normal → LinearMap.range T = LinearMap.range (LinearMap.star T) ", "∀ {𝕜 : Type u_1} {V : Type u_2} [inst : Field 𝕜] [inst_1 : AddCommGroup V] [inst_2 : Module 𝕜 V] [inst_3 : StarModule 𝕜 V]\n  {T : V →ₗ[𝕜] V}, IsNormal T → LinearMap.range T = LinearMap.range (T.star) "]}
{"docString": "Suppose $V$ is a complex inner-product space and $T \\in \\mathcal{L}(V)$ is a normal operator such that $T^{9}=T^{8}$. Prove that $T$ is self-adjoint and $T^{2}=T$.", "prompts": "[{\"theorem\":\n  \"∀ {𝕜 : Type u_1} {E : Type u_2} [inst : IsROrC 𝕜] [inst_1 : NormedAddCommGroup E] [inst_2 : InnerProductSpace 𝕜 E]\\n  [inst_3 : CompleteSpace E] {A : E →L[𝕜] E}, IsSelfAdjoint A → LinearMap.IsSymmetric ↑A\",\n  \"isProp\": true,\n  \"docString\":\n  \"Every self-adjoint operator on an inner product space is symmetric. \"},\n {\"theorem\":\n  \"∀ {𝕜 : Type u_1} [inst : IsROrC 𝕜] [dec_𝕜 : DecidableEq 𝕜] {E : Type u_2} [inst_1 : NormedAddCommGroup E]\\n  [inst_2 : InnerProductSpace 𝕜 E] {T : E →ₗ[𝕜] E} (hT : LinearMap.IsSymmetric T) [inst_3 : FiniteDimensional 𝕜 E]\\n  {n : ℕ} (hn : FiniteDimensional.finrank 𝕜 E = n) (v : E) (i : Fin n),\\n  ↑(LinearMap.IsSymmetric.eigenvectorBasis hT hn).repr (↑T v) i =\\n    ↑(LinearMap.IsSymmetric.eigenvalues hT hn i) * ↑(LinearMap.IsSymmetric.eigenvectorBasis hT hn).repr v i\",\n  \"isProp\": true,\n  \"docString\":\n  \"*Diagonalization theorem*, *spectral theorem*; version 2: A self-adjoint operator `T` on a\\nfinite-dimensional inner product space `E` acts diagonally on the identification of `E` with\\nEuclidean space induced by an orthonormal basis of eigenvectors of `T`. \"},\n {\"theorem\":\n  \"∀ {𝕜 : Type u_1} [inst : IsROrC 𝕜] [dec_𝕜 : DecidableEq 𝕜] {E : Type u_2} [inst_1 : NormedAddCommGroup E]\\n  [inst_2 : InnerProductSpace 𝕜 E] {T : E →ₗ[𝕜] E} (hT : LinearMap.IsSymmetric T) [inst_3 : FiniteDimensional 𝕜 E]\\n  (v : E) (μ : Module.End.Eigenvalues T),\\n  ↑(LinearMap.IsSymmetric.diagonalization hT) (↑T v) μ = ↑T μ • ↑(LinearMap.IsSymmetric.diagonalization hT) v μ\",\n  \"isProp\": true,\n  \"docString\":\n  \"*Diagonalization theorem*, *spectral theorem*; version 1: A self-adjoint operator `T` on a\\nfinite-dimensional inner product space `E` acts diagonally on the decomposition of `E` into the\\ndirect sum of the eigenspaces of `T`. \"},\n {\"theorem\":\n  \"∀ {𝕜 : Type u_1} [inst : IsROrC 𝕜] {E : Type u_2} [inst_1 : NormedAddCommGroup E] [inst_2 : InnerProductSpace 𝕜 E]\\n  {T : E →ₗ[𝕜] E},\\n  LinearMap.IsSymmetric T →\\n    OrthogonalFamily 𝕜 (fun μ => { x // x ∈ Module.End.eigenspace T μ }) fun μ =>\\n      Submodule.subtypeₗᵢ (Module.End.eigenspace T μ)\",\n  \"isProp\": true,\n  \"docString\":\n  \"The eigenspaces of a self-adjoint operator are mutually orthogonal. \"}]\n", "prompt_cons": "/-- Every self-adjoint operator on an inner product space is symmetric. -/\ntheorem ∀ {𝕜 : Type u_1} {E : Type u_2} [inst : IsROrC 𝕜] [inst_1 : NormedAddCommGroup E] [inst_2 : InnerProductSpace 𝕜 E]\n  [inst_3 : CompleteSpace E] {A : E →L[𝕜] E}, IsSelfAdjoint A → LinearMap.IsSymmetric ↑A :=\n\n/-- *Diagonalization theorem*, *spectral theorem*; version 2: A self-adjoint operator `T` on a\nfinite-dimensional inner product space `E` acts diagonally on the identification of `E` with\nEuclidean space induced by an orthonormal basis of eigenvectors of `T`. -/\ntheorem ∀ {𝕜 : Type u_1} [inst : IsROrC 𝕜] [dec_𝕜 : DecidableEq 𝕜] {E : Type u_2} [inst_1 : NormedAddCommGroup E]\n  [inst_2 : InnerProductSpace 𝕜 E] {T : E →ₗ[𝕜] E} (hT : LinearMap.IsSymmetric T) [inst_3 : FiniteDimensional 𝕜 E]\n  {n : ℕ} (hn : FiniteDimensional.finrank 𝕜 E = n) (v : E) (i : Fin n),\n  ↑(LinearMap.IsSymmetric.eigenvectorBasis hT hn).repr (↑T v) i =\n    ↑(LinearMap.IsSymmetric.eigenvalues hT hn i) * ↑(LinearMap.IsSymmetric.eigenvectorBasis hT hn).repr v i :=\n\n/-- *Diagonalization theorem*, *spectral theorem*; version 1: A self-adjoint operator `T` on a\nfinite-dimensional inner product space `E` acts diagonally on the decomposition of `E` into the\ndirect sum of the eigenspaces of `T`. -/\ntheorem ∀ {𝕜 : Type u_1} [inst : IsROrC 𝕜] [dec_𝕜 : DecidableEq 𝕜] {E : Type u_2} [inst_1 : NormedAddCommGroup E]\n  [inst_2 : InnerProductSpace 𝕜 E] {T : E →ₗ[𝕜] E} (hT : LinearMap.IsSymmetric T) [inst_3 : FiniteDimensional 𝕜 E]\n  (v : E) (μ : Module.End.Eigenvalues T),\n  ↑(LinearMap.IsSymmetric.diagonalization hT) (↑T v) μ = ↑T μ • ↑(LinearMap.IsSymmetric.diagonalization hT) v μ :=\n\n/-- The eigenspaces of a self-adjoint operator are mutually orthogonal. -/\ntheorem ∀ {𝕜 : Type u_1} [inst : IsROrC 𝕜] {E : Type u_2} [inst_1 : NormedAddCommGroup E] [inst_2 : InnerProductSpace 𝕜 E]\n  {T : E →ₗ[𝕜] E},\n  LinearMap.IsSymmetric T →\n    OrthogonalFamily 𝕜 (fun μ => { x // x ∈ Module.End.eigenspace T μ }) fun μ =>\n      Submodule.subtypeₗᵢ (Module.End.eigenspace T μ) :=\n\n/-- Suppose $V$ is a complex inner-product space and $T \\in \\mathcal{L}(V)$ is a normal operator such that $T^{9}=T^{8}$. Prove that $T$ is self-adjoint and $T^{2}=T$. -/\ntheorem", "choices": ["∀ {𝕜 : Type u_1} [inst : IsROrC 𝕜] {E : Type u_2} [inst_1 : NormedAddCommGroup E] [inst_2 : InnerProductSpace 𝕜 E]\n  {T : E →ₗ[𝕜] E},\n  (LinearMap.IsNormal T ∧ T ^ 9 = T ^ 8) → (LinearMap.IsSelfAdjoint T ∧ T ^ 2 = T) ", "forall {𝕜 : Type u_1} [inst : IsROrC 𝕜] {E : Type u_2} [inst_1 : NormedAddCommGroup E] [inst_2 : InnerProductSpace 𝕜 E]\n  {T : E →ₗ[𝕜] E},\n  LinearMap.IsNormal T → T ^ 9 = T ^ 8 → IsSelfAdjoint T ∧ T ^ 2 = T ", "∀ {𝕜 : Type u_1} [inst : IsROrC 𝕜] {E : Type u_2} [inst_1 : NormedAddCommGroup E] [inst_2 : InnerProductSpace 𝕜 E]\n  {T : E →ₗ[𝕜] E},\n  LinearMap.IsNormal T → T ^ 9 = T ^ 8 → LinearMap.IsSymmetric T ∧ T ^ 2 = T ", "forall {𝕜 : Type u_1} {E : Type u_2} [inst : IsROrC 𝕜] [inst_1 : NormedAddCommGroup E] [inst_2 : InnerProductSpace 𝕜 E]\n  {T : E →ₗ[𝕜] E}, T^9 = T^8 → LinearMap.IsNormal T → LinearMap.IsSelfAdjoint T ∧ T^2 = T ", "forall {V : Type u} [inst : InnerProductSpace ℂ V] {T : V →ₗ[ℂ] V} (hT : T * T.adjoint = T.adjoint * T),\n  (T ^ 9 = T ^ 8) -> IsSelfAdjoint T ∧ (T ^ 2 = T) ", "∀ {𝕜 : Type u_1} [inst : IsROrC 𝕜] {E : Type u_2} [inst_1 : NormedAddCommGroup E] [inst_2 : InnerProductSpace 𝕜 E]\n  {T : E →ₗ[𝕜] E}, LinearMap.IsNormal T → T ^ 9 = T ^ 8 → IsSelfAdjoint T ∧ T ^ 2 = T ", "∀ {𝕜 : Type u_1} {E : Type u_2} [inst : IsROrC 𝕜] [inst_1 : NormedAddCommGroup E] [inst_2 : InnerProductSpace 𝕜 E]\n  {T : E →ₗ[𝕜] E}, LinearMap.IsNormal T → T ^ 9 = T ^ 8 → LinearMap.IsSelfAdjoint T ∧ T ^ 2 = T ", "forall {𝕜 : Type u_1} [inst : IsROrC 𝕜] {E : Type u_2} [inst_1 : NormedAddCommGroup E] [inst_2 : InnerProductSpace 𝕜 E]\n  {T : E →ₗ[𝕜] E},\n  LinearMap.IsNormal T → T ^ 9 = T ^ 8 → LinearMap.IsSelfAdjoint T ∧ T ^ 2 = T ", "∀ {𝕜 : Type u_1} {E : Type u_2} [inst : IsROrC 𝕜] [dec_𝕜 : DecidableEq 𝕜] [inst_1 : NormedAddCommGroup E]\n  [inst_2 : InnerProductSpace 𝕜 E] {T : E →ₗ[𝕜] E}, LinearMap.IsNormal T → (T ^ 9 = T ^ 8) →\n    (LinearMap.IsSymmetric T ∧ (T ^ 2 = T)) ", "∀ {𝕜 : Type u_1} [inst : IsROrC 𝕜] {E : Type u_2} [inst_1 : NormedAddCommGroup E] [inst_2 : InnerProductSpace 𝕜 E]\n  {T : E →ₗ[𝕜] E},\n  (LinearMap.IsNormal T ∧ T ^ 9 = T ^ 8) →\n    (IsSelfAdjoint T ∧ T ^ 2 = T) "]}
{"docString": "Suppose $T \\in \\mathcal{L}(V)$ is self-adjoint, $\\lambda \\in \\mathbf{F}$, and $\\epsilon>0$. Prove that if there exists $v \\in V$ such that $\\|v\\|=1$ and $\\|T v-\\lambda v\\|<\\epsilon,$ then $T$ has an eigenvalue $\\lambda^{\\prime}$ such that $\\left|\\lambda-\\lambda^{\\prime}\\right|<\\epsilon$.", "prompts": "[{\"theorem\":\n  \"∀ {𝕜 : Type u_1} [inst : IsROrC 𝕜] {E : Type u_2} [inst_1 : NormedAddCommGroup E] [inst_2 : InnerProductSpace 𝕜 E]\\n  {T : E →ₗ[𝕜] E}, LinearMap.IsSymmetric T → ∀ {μ : 𝕜}, Module.End.HasEigenvalue T μ → ↑(starRingEnd 𝕜) μ = μ\",\n  \"isProp\": true,\n  \"docString\": \"The eigenvalues of a self-adjoint operator are real. \"},\n {\"theorem\":\n  \"∀ {𝕜 : Type u_1} {E : Type u_2} [inst : IsROrC 𝕜] [inst_1 : NormedAddCommGroup E] [inst_2 : InnerProductSpace 𝕜 E]\\n  [inst_3 : FiniteDimensional 𝕜 E] {A : E →ₗ[𝕜] E}, IsSelfAdjoint A ↔ ↑LinearMap.adjoint A = A\",\n  \"isProp\": true,\n  \"docString\":\n  \"A continuous linear operator is self-adjoint iff it is equal to its adjoint. \"},\n {\"theorem\":\n  \"∀ {𝕜 : Type u_1} [inst : IsROrC 𝕜] [dec_𝕜 : DecidableEq 𝕜] {E : Type u_2} [inst_1 : NormedAddCommGroup E]\\n  [inst_2 : InnerProductSpace 𝕜 E] {T : E →ₗ[𝕜] E} (hT : LinearMap.IsSymmetric T) [inst_3 : FiniteDimensional 𝕜 E]\\n  {n : ℕ} (hn : FiniteDimensional.finrank 𝕜 E = n) (v : E) (i : Fin n),\\n  ↑(LinearMap.IsSymmetric.eigenvectorBasis hT hn).repr (↑T v) i =\\n    ↑(LinearMap.IsSymmetric.eigenvalues hT hn i) * ↑(LinearMap.IsSymmetric.eigenvectorBasis hT hn).repr v i\",\n  \"isProp\": true,\n  \"docString\":\n  \"*Diagonalization theorem*, *spectral theorem*; version 2: A self-adjoint operator `T` on a\\nfinite-dimensional inner product space `E` acts diagonally on the identification of `E` with\\nEuclidean space induced by an orthonormal basis of eigenvectors of `T`. \"},\n {\"theorem\":\n  \"∀ {𝕜 : Type u_1} [inst : IsROrC 𝕜] {E : Type u_2} [inst_1 : NormedAddCommGroup E] [inst_2 : InnerProductSpace 𝕜 E]\\n  {T : E →ₗ[𝕜] E},\\n  LinearMap.IsSymmetric T →\\n    OrthogonalFamily 𝕜 (fun μ => { x // x ∈ Module.End.eigenspace T μ }) fun μ =>\\n      Submodule.subtypeₗᵢ (Module.End.eigenspace T μ)\",\n  \"isProp\": true,\n  \"docString\":\n  \"The eigenspaces of a self-adjoint operator are mutually orthogonal. \"}]\n", "prompt_cons": "/-- The eigenvalues of a self-adjoint operator are real. -/\ntheorem ∀ {𝕜 : Type u_1} [inst : IsROrC 𝕜] {E : Type u_2} [inst_1 : NormedAddCommGroup E] [inst_2 : InnerProductSpace 𝕜 E]\n  {T : E →ₗ[𝕜] E}, LinearMap.IsSymmetric T → ∀ {μ : 𝕜}, Module.End.HasEigenvalue T μ → ↑(starRingEnd 𝕜) μ = μ :=\n\n/-- A continuous linear operator is self-adjoint iff it is equal to its adjoint. -/\ntheorem ∀ {𝕜 : Type u_1} {E : Type u_2} [inst : IsROrC 𝕜] [inst_1 : NormedAddCommGroup E] [inst_2 : InnerProductSpace 𝕜 E]\n  [inst_3 : FiniteDimensional 𝕜 E] {A : E →ₗ[𝕜] E}, IsSelfAdjoint A ↔ ↑LinearMap.adjoint A = A :=\n\n/-- *Diagonalization theorem*, *spectral theorem*; version 2: A self-adjoint operator `T` on a\nfinite-dimensional inner product space `E` acts diagonally on the identification of `E` with\nEuclidean space induced by an orthonormal basis of eigenvectors of `T`. -/\ntheorem ∀ {𝕜 : Type u_1} [inst : IsROrC 𝕜] [dec_𝕜 : DecidableEq 𝕜] {E : Type u_2} [inst_1 : NormedAddCommGroup E]\n  [inst_2 : InnerProductSpace 𝕜 E] {T : E →ₗ[𝕜] E} (hT : LinearMap.IsSymmetric T) [inst_3 : FiniteDimensional 𝕜 E]\n  {n : ℕ} (hn : FiniteDimensional.finrank 𝕜 E = n) (v : E) (i : Fin n),\n  ↑(LinearMap.IsSymmetric.eigenvectorBasis hT hn).repr (↑T v) i =\n    ↑(LinearMap.IsSymmetric.eigenvalues hT hn i) * ↑(LinearMap.IsSymmetric.eigenvectorBasis hT hn).repr v i :=\n\n/-- The eigenspaces of a self-adjoint operator are mutually orthogonal. -/\ntheorem ∀ {𝕜 : Type u_1} [inst : IsROrC 𝕜] {E : Type u_2} [inst_1 : NormedAddCommGroup E] [inst_2 : InnerProductSpace 𝕜 E]\n  {T : E →ₗ[𝕜] E},\n  LinearMap.IsSymmetric T →\n    OrthogonalFamily 𝕜 (fun μ => { x // x ∈ Module.End.eigenspace T μ }) fun μ =>\n      Submodule.subtypeₗᵢ (Module.End.eigenspace T μ) :=\n\n/-- Suppose $T \\in \\mathcal{L}(V)$ is self-adjoint, $\\lambda \\in \\mathbf{F}$, and $\\epsilon>0$. Prove that if there exists $v \\in V$ such that $\\|v\\|=1$ and $\\|T v-\\lambda v\\|<\\epsilon,$ then $T$ has an eigenvalue $\\lambda^{\\prime}$ such that $\\left|\\lambda-\\lambda^{\\prime}\\right|<\\epsilon$. -/\ntheorem", "choices": ["forall {𝕜 : Type u_1} [inst : IsROrC 𝕜] {E : Type u_2} [inst_1 : NormedAddCommGroup E] [inst_2 : InnerProductSpace 𝕜 E]\n  {T : E →ₗ[𝕜] E},\n  LinearMap.IsSymmetric T →\n    ∀ (λ : 𝕜) (ε : ℝ), 0 < ε →\n    (∃ (v : E), ∥v∥ = 1 ∧ ∥T v - λ • v∥ < ε) →\n    ∃ λ' : 𝕜, HasMem.Mem λ' (LinearMap.IsSymmetric.eigenvalues T) ∧ abs (λ - λ') < ε ", "forall {𝕜 : Type u_1} [inst : IsROrC 𝕜] {E : Type u_2} [inst_1 : NormedAddCommGroup E] [inst_2 : InnerProductSpace 𝕜 E]\n  {T : E →ₗ[𝕜] E}, LinearMap.IsSymmetric T → ∀ {λ : 𝕜} {ε : ℝ},\n  0 < ε → (∃ v : E, 1 = innerProductSpace.norm v ∧ ε > innerProductSpace.norm (T v - λ • v)) →\n  ∃ (λ' : 𝕜), Module.End.HasEigenvalue T λ' ∧ IsROrC.abs (λ - λ') < ε ", "forall {𝕜 : Type u_1} [inst : IsROrC 𝕜] {E : Type u_2} [inst_1 : NormedAddCommGroup E] [inst_2 : InnerProductSpace 𝕜 E]\n  {T : E →ₗ[𝕜] E},\n  LinearMap.IsSymmetric T →\n    ∀ (λ : 𝕜) (ε : ℝ), 0 < ε →\n      (∃ (v : E), ∥v∥ = 1 ∧ ∥T v - λ • v∥ < ε) →\n        ∃ (λ' : 𝕜), Module.End.HasEigenvalue T λ' ∧ abs (λ - λ') < ε ", "∀ {𝕜 : Type u_1} [inst : IsROrC 𝕜] {E : Type u_2} [inst_1 : NormedAddCommGroup E] [inst_2 : InnerProductSpace 𝕜 E]\n  {T : E →ₗ[𝕜] E} (hT : LinearMap.IsSymmetric T) {λ : 𝕜} {ε : ℝ} (hε : 0 < ε) {v : E},\n  ∥v∥ = 1 → ∥↑T v - λ • v∥ < ε →\n    ∃ λ' : 𝕜, Module.End.HasEigenvalue T λ' ∧ IsROrC.abs (λ - λ') < ε ", "∀ {𝕜 : Type u_1} [inst : IsROrC 𝕜] {E : Type u_2} [inst_1 : NormedAddCommGroup E] [inst_2 : InnerProductSpace 𝕜 E]\n  {T : E →ₗ[𝕜] E}, LinearMap.IsSymmetric T → ∀ {λ : 𝕜} {ε : ℝ}, 0 < ε →\n    (∃ v : E, ∥v∥ = 1 ∧ ∥T v - λ • v∥ < ε) → ∃ λ' : 𝕜, Module.End.HasEigenvalue T λ' ∧ abs (λ - λ') < ε ", "∀ {𝕜 : Type u_1} [inst : IsROrC 𝕜] {E : Type u_2} [inst_1 : NormedAddCommGroup E] [inst_2 : InnerProductSpace 𝕜 E]\n  {T : E →ₗ[𝕜] E}, LinearMap.IsSymmetric T → ∀ (λ : 𝕜) (ε : ℝ), 0 < ε →\n  (∃ (v : E), ∥v∥ = 1 ∧ ∥T v - λ • v∥ < ε) →\n  ∃ (λ' : 𝕜), Module.End.HasEigenvalue T λ' ∧ abs (λ - λ') < ε ", "∀ {𝕜 : Type u_1} [inst : IsROrC 𝕜] {E : Type u_2} [inst_1 : NormedAddCommGroup E] [inst_2 : InnerProductSpace 𝕜 E]\n  {T : E →ₗ[𝕜] E}, LinearMap.IsSymmetric T → ∀ {λ : 𝕜} {ε : ℝ}, 0 < ε →\n  (∃ (v : E), ∥v∥ = 1 ∧ ∥T v - λ • v∥ < ε) →\n  (∃ (λ' : 𝕜), Module.End.HasEigenvalue T λ' ∧ IsROrC.abs (λ - λ') < ε) ", "∀ {𝕜 : Type u_1} [inst : IsROrC 𝕜] {E : Type u_2} [inst_1 : NormedAddCommGroup E] [inst_2 : InnerProductSpace 𝕜 E]\n  {T : E →ₗ[𝕜] E} (hT : LinearMap.IsSymmetric T) {λ : 𝕜} {ε : ℝ} (hε : 0 < ε) {v : E} (hv₁ : ∥v∥ = 1) (hv₂ : ∥T v - λ v∥ < ε),\n  ∃ λ' : 𝕜, Module.End.HasEigenvalue T λ' ∧ ∥λ - λ'∥ < ε ", "∀ {𝕜 : Type u_1} [inst : IsROrC 𝕜] {E : Type u_2} [inst_1 : NormedAddCommGroup E] [inst_2 : InnerProductSpace 𝕜 E]\n  {T : E →ₗ[𝕜] E}, LinearMap.IsSymmetric T → ∀ {λ : 𝕜} {ε : ℝ}, 0 < ε →\n    (∃ v : E, ∥v∥ = 1 ∧ ∥↑T v - λ • v∥ < ε) →\n    ∃ λ' : 𝕜, Module.End.HasEigenvalue T λ' ∧ IsROrC.abs (λ - λ') < ε ", "forall {𝕜 : Type u_1} [inst : IsROrC 𝕜] {E : Type u_2} [inst_1 : NormedAddCommGroup E] [inst_2 : InnerProductSpace 𝕜 E]\n  {T : E →ₗ[𝕜] E}, LinearMap.IsSymmetric T →\n  ∀ {λ : 𝕜} {ε : ℝ}, 0 < ε →\n    (∃ v : E, ∥v∥ = 1 ∧ ∥T v - λ • v∥ < ε) →\n      ∃ λ' : 𝕜, Module.End.HasEigenvalue T λ' ∧ abs (IsROrC.re (λ - λ')) < ε "]}
{"docString": "For all odd $n$ show that $8 \\mid n^{2}-1$.", "prompts": "[{\"theorem\": \"∀ {n : ℕ}, n % 4 = 1 → (-1) ^ (n / 2) = 1\",\n  \"isProp\": true,\n  \"docString\": \"If `n % 4 = 1`, then `(-1)^(n/2) = 1`. \"},\n {\"theorem\": \"∀ {n : ℕ}, n % 4 = 3 → (-1) ^ (n / 2) = -1\",\n  \"isProp\": true,\n  \"docString\": \"If `n % 4 = 3`, then `(-1)^(n/2) = -1`. \"},\n {\"theorem\": \"∀ {p n : ℕ}, Nat.Prime p → p ∣ n → IsSquare (-1) → p % 4 ≠ 3\",\n  \"isProp\": true,\n  \"docString\":\n  \"If a prime `p` divides `n` such that `-1` is a square modulo `n`, then `p % 4 ≠ 3`. \"},\n {\"theorem\": \"∀ {n : ℕ}, ↑(Nat.factorial (n - 1)) = -1 → n ≠ 1 → Nat.Prime n\",\n  \"isProp\": true,\n  \"docString\":\n  \"For `n ≠ 1`, `(n-1)!` is congruent to `-1` modulo `n` only if n is prime. \"}]\n", "prompt_cons": "/-- If `n % 4 = 1`, then `(-1)^(n/2) = 1`. -/\ntheorem ∀ {n : ℕ}, n % 4 = 1 → (-1) ^ (n / 2) = 1 :=\n\n/-- If `n % 4 = 3`, then `(-1)^(n/2) = -1`. -/\ntheorem ∀ {n : ℕ}, n % 4 = 3 → (-1) ^ (n / 2) = -1 :=\n\n/-- If a prime `p` divides `n` such that `-1` is a square modulo `n`, then `p % 4 ≠ 3`. -/\ntheorem ∀ {p n : ℕ}, Nat.Prime p → p ∣ n → IsSquare (-1) → p % 4 ≠ 3 :=\n\n/-- For `n ≠ 1`, `(n-1)!` is congruent to `-1` modulo `n` only if n is prime. -/\ntheorem ∀ {n : ℕ}, ↑(Nat.factorial (n - 1)) = -1 → n ≠ 1 → Nat.Prime n :=\n\n/-- For all odd $n$ show that $8 \\mid n^{2}-1$. -/\ntheorem", "choices": ["∀ {n : ℕ}, n % 2 = 1 → 8 ∣ (n ^ 2 - 1) ", "∀ {n : ℕ}, n % 2 = 1 → 8 ∣ n ^ 2 - 1 ", "∀ {n : ℕ}, n % 2 = 1 → (n^2 - 1) % 8 = 0 ", "∀ {n : ℕ}, n % 2 = 1 → 8 ∣ (n ^ 2 - 1) ", "∀ {n : ℕ}, n % 2 = 1 → 8 ∣ (n ^ 2 - 1) ", "forall_odd_n_eight_divides_n_squared_minus_one : ∀ {n : ℕ}, n % 2 = 1 → 8 ∣ (n ^ 2 - 1) ", "∀ {n : ℕ}, n % 2 = 1 → (n ^ 2 - 1) % 8 = 0 ", "∀ {n : ℕ}, n % 2 = 1 → 8 ∣ n^2 - 1 ", "∀ {n : ℕ}, odd n → 8 ∣ n ^ 2 - 1 ", "forall_odd_n_eight_divides_n_squared_minus_one : ∀ (n : ℕ), n % 2 = 1 → 8 ∣ (n ^ 2 - 1) "]}
{"docString": "Show that 2 is divisible by $(1+i)^{2}$ in $\\mathbb{Z}[i]$.", "prompts": "[{\"theorem\":\n  \"∀ (n : ℕ), (∑' (i : ℕ), if n ≤ i then 2⁻¹ ^ i else 0) = 2 * 2⁻¹ ^ n\",\n  \"isProp\": true,\n  \"docString\": \"The sum of `2⁻¹ ^ i` for `n ≤ i` equals `2 * 2⁻¹ ^ n`. \"},\n {\"theorem\":\n  \"∀ {p : ℕ} [inst : Fact (Nat.Prime p)], p ≠ 2 → (IsSquare 2 ↔ p % 8 = 1 ∨ p % 8 = 7)\",\n  \"isProp\": true,\n  \"docString\":\n  \"`2` is a square modulo an odd prime `p` iff `p` is congruent to `1` or `7` mod `8`. \"},\n {\"theorem\": \"∀ (z : ℂ), ↑z.im = (z - ↑(starRingEnd ℂ) z) / (2 * Complex.I)\",\n  \"isProp\": true,\n  \"docString\":\n  \"A complex number `z` minus its conjugate `conj z` is `2i` times its imaginary part. \"},\n {\"theorem\":\n  \"∀ {K : Type u} (L : Type v) [inst : Field K] [inst_1 : Field L] [inst_2 : Algebra K L] {k : ℕ},\\n  2 ≤ k →\\n    ∀ [inst_3 : IsCyclotomicExtension {2 ^ k} K L],\\n      Irreducible (Polynomial.cyclotomic (2 ^ k) K) → ↑(Algebra.norm K) (IsCyclotomicExtension.zeta (2 ^ k) K L - 1) = 2\",\n  \"isProp\": true,\n  \"docString\":\n  \"If `Irreducible (cyclotomic (2 ^ k) K)` (in particular for `K = ℚ`) and `k` is at least `2`,\\nthen the norm of `zeta (2 ^ k) K L - 1` is `2`. \"}]\n", "prompt_cons": "/-- The sum of `2⁻¹ ^ i` for `n ≤ i` equals `2 * 2⁻¹ ^ n`. -/\ntheorem ∀ (n : ℕ), (∑' (i : ℕ), if n ≤ i then 2⁻¹ ^ i else 0) = 2 * 2⁻¹ ^ n :=\n\n/-- `2` is a square modulo an odd prime `p` iff `p` is congruent to `1` or `7` mod `8`. -/\ntheorem ∀ {p : ℕ} [inst : Fact (Nat.Prime p)], p ≠ 2 → (IsSquare 2 ↔ p % 8 = 1 ∨ p % 8 = 7) :=\n\n/-- A complex number `z` minus its conjugate `conj z` is `2i` times its imaginary part. -/\ntheorem ∀ (z : ℂ), ↑z.im = (z - ↑(starRingEnd ℂ) z) / (2 * Complex.I) :=\n\n/-- If `Irreducible (cyclotomic (2 ^ k) K)` (in particular for `K = ℚ`) and `k` is at least `2`,\nthen the norm of `zeta (2 ^ k) K L - 1` is `2`. -/\ntheorem ∀ {K : Type u} (L : Type v) [inst : Field K] [inst_1 : Field L] [inst_2 : Algebra K L] {k : ℕ},\n  2 ≤ k →\n    ∀ [inst_3 : IsCyclotomicExtension {2 ^ k} K L],\n      Irreducible (Polynomial.cyclotomic (2 ^ k) K) → ↑(Algebra.norm K) (IsCyclotomicExtension.zeta (2 ^ k) K L - 1) = 2 :=\n\n/-- Show that 2 is divisible by $(1+i)^{2}$ in $\\mathbb{Z}[i]$. -/\ntheorem", "choices": ["divisible_by_2 : (2 : ℤ[i]) = (1 + I) ^ 2 ", "2 ∣ (1 + Complex.I) ^ 2 ", "2 ∣ (1 + Complex.I) ^ 2 ", "2 * (1 + Complex.I) * (1 - Complex.I) = (1 + Complex.I) ^ 2 ", "(2 : ℤ[i]) = (1 + I) ^ 2 ", "(2 : ℤ[i]) = (1 + I) ^ 2 ", "2 ∣ (1 + Complex.i) ^ 2 ", "divisible_by_2_pow : (2 : ℤ[i]) ∣ (1 + Complex.I) ^ 2 ", "2 ∣ (1 + Complex.I) * (1 + Complex.I) ", "(2 : ℤ[i]) = (1 + I) ^ 2 "]}
{"docString": "Define $\\wedge(n)=\\log p$ if $n$ is a power of $p$ and zero otherwise. Prove that $\\sum_{A \\mid n} \\mu(n / d) \\log d$ $=\\wedge(n)$.", "prompts": "[{\"theorem\":\n  \"∀ {A : Type u_1} [inst : CommRing A] [inst_1 : Algebra ℚ A] (n : ℕ),\\n  (Finset.sum (Finset.range n) fun k => PowerSeries.exp A ^ k) =\\n    PowerSeries.mk fun p => Finset.sum (Finset.range n) fun k => ↑(k ^ p) * ↑(algebraMap ℚ A) (↑(Nat.factorial p))⁻¹\",\n  \"isProp\": true,\n  \"docString\":\n  \"Shows that\\n$\\\\sum_{k = 0}^{n - 1} (e^{X})^k = \\\\sum_{p = 0}^{\\\\infty} \\\\sum_{k = 0}^{n - 1} \\\\frac{k^p}{p!}X^p$. \"},\n {\"theorem\":\n  \"∀ {p n r b : ℕ},\\n  Nat.Prime p → Nat.log p n < b → (p ^ r ∣ Nat.factorial n ↔ r ≤ Finset.sum (Finset.Ico 1 b) fun i => n / p ^ i)\",\n  \"isProp\": true,\n  \"docString\":\n  \"A prime power divides `n!` iff it is at most the sum of the quotients `n / p ^ i`.\\nThis sum is expressed over the set `Ico 1 b` where `b` is any bound greater than `log p n` \"},\n {\"theorem\":\n  \"∃ c, ∀ (n : ℕ), Real.log (Stirling.stirlingSeq 1) - Real.log (Stirling.stirlingSeq (Nat.succ n)) ≤ c\",\n  \"isProp\": true,\n  \"docString\":\n  \"For any `n`, we have `log_stirlingSeq 1 - log_stirlingSeq n ≤ 1/4 * ∑' 1/k^2`  \"},\n {\"theorem\": \"∀ (n k : ℕ), Nat.factorization (n ^ k) = k • Nat.factorization n\",\n  \"isProp\": true,\n  \"docString\":\n  \"For any `p`, the power of `p` in `n^k` is `k` times the power in `n` \"}]\n", "prompt_cons": "/-- Shows that\n$\\sum_{k = 0}^{n - 1} (e^{X})^k = \\sum_{p = 0}^{\\infty} \\sum_{k = 0}^{n - 1} \\frac{k^p}{p!}X^p$. -/\ntheorem ∀ {A : Type u_1} [inst : CommRing A] [inst_1 : Algebra ℚ A] (n : ℕ),\n  (Finset.sum (Finset.range n) fun k => PowerSeries.exp A ^ k) =\n    PowerSeries.mk fun p => Finset.sum (Finset.range n) fun k => ↑(k ^ p) * ↑(algebraMap ℚ A) (↑(Nat.factorial p))⁻¹ :=\n\n/-- A prime power divides `n!` iff it is at most the sum of the quotients `n / p ^ i`.\nThis sum is expressed over the set `Ico 1 b` where `b` is any bound greater than `log p n` -/\ntheorem ∀ {p n r b : ℕ},\n  Nat.Prime p → Nat.log p n < b → (p ^ r ∣ Nat.factorial n ↔ r ≤ Finset.sum (Finset.Ico 1 b) fun i => n / p ^ i) :=\n\n/-- For any `n`, we have `log_stirlingSeq 1 - log_stirlingSeq n ≤ 1/4 * ∑' 1/k^2` -/\ntheorem ∃ c, ∀ (n : ℕ), Real.log (Stirling.stirlingSeq 1) - Real.log (Stirling.stirlingSeq (Nat.succ n)) ≤ c :=\n\n/-- For any `p`, the power of `p` in `n^k` is `k` times the power in `n` -/\ntheorem ∀ (n k : ℕ), Nat.factorization (n ^ k) = k • Nat.factorization n :=\n\n/-- Define $\\wedge(n)=\\log p$ if $n$ is a power of $p$ and zero otherwise. Prove that $\\sum_{A \\mid n} \\mu(n / d) \\log d$ $=\\wedge(n)$. -/\ntheorem", "choices": ["∀ {p n : ℕ},\n  (PowerSeries.coeff ℤ n (PowerSeries.mvPowerSeriesX Nat.prime p)) = if n = 1 then Nat.log p else 0 ", "∀ {p n : ℕ}, Nat.Prime p →\n  (let wedge ", "∀ {p n : ℕ} (hn : n ≠ 0),\n  (Finset.sum (Nat.divisors n) fun d => Moebius.moebius d * Real.log (n / d)) =\n    if (Nat.Prime p ∧ ∃ k, n = p ^ k) then Real.log p else 0 ", "forall {p n m d : ℕ} (hprime : Nat.Prime p),\n  n ≠ 0 → n = p ^ m → d ≠ 0 → (Finset.sum (Nat.divisors n) (fun d => μ (n / d) * Nat.log d) = Nat.log p) ", "forall {p : ℕ} (n : ℕ), (n = p ^ (Nat.find_greatest (fun m => p ^ m ∣ n) n) → (Finset.sum (Nat.divisors n) (λ d => μ (n / d) * Nat.log d) = Nat.log p)) ", "/-- Define `log_p n = log p` if `n` is a power of `p` and zero otherwise. -/\ndef log_p (p n : ℕ) : ℕ ", "forall {n : ℕ}, (Finset.sum (Nat.divisors n) fun d => Moebius.moebius d * Real.log (n / d)) = ite (Nat.PrimePower n) (Real.log (Nat.minFac n)) 0 ", "∀ (n : ℕ), (Finset.sum (Nat.divisors n) fun d => (μ (n / d)) * (Real.log d)) = if h : ∃ (p : ℕ) [hp : Nat.Prime p], ∃ (k : ℕ), p ^ k = n then Real.log (Nat.minFac n) else 0 ", "forall {p n : ℕ} (hp : Nat.Prime p),\n  (Finset.sum (Nat.divisors n) fun d => μ (n / d) * Nat.log p d) = if h : n = p^Nat.log p n then Nat.log p n else 0 ", "∀ {p n : ℕ} (hp : Nat.Prime p),\n  (Finset.sum (Finset.filter (fun d => d ∣ n) (Finset.range (Nat.succ n))) fun d => μ (n / d) * Nat.log d) =\n    if h : p ^ Nat.log p n = n then Nat.log p else 0 "]}
{"docString": "Show that there are infinitely many primes congruent to $-1$ modulo 6 .", "prompts": "[{\"theorem\":\n  \"∀ {k : ℕ}, k ≠ 0 → Set.Infinite {p | Nat.Prime p ∧ p ≡ 1 [MOD k]}\",\n  \"isProp\": true,\n  \"docString\":\n  \"For any positive `k : ℕ` there are infinitely many primes `p` such that `p ≡ 1 [MOD k]`. \"},\n {\"theorem\": \"∀ {n : ℕ}, ↑(Nat.factorial (n - 1)) = -1 → n ≠ 1 → Nat.Prime n\",\n  \"isProp\": true,\n  \"docString\":\n  \"For `n ≠ 1`, `(n-1)!` is congruent to `-1` modulo `n` only if n is prime. \"},\n {\"theorem\":\n  \"∀ {a b c : ℤ}, a % b = c → Int.natAbs (a - c) < Int.natAbs b → a = c\",\n  \"isProp\": true,\n  \"docString\":\n  \"If two integers are congruent to a sufficiently large modulus,\\nthey are equal. \"},\n {\"theorem\":\n  \"∀ {n : ℕ}, n ≠ 0 → ∀ (d : ℕ), ∃ᶠ (m : ℕ) in Filter.atTop, m ≡ d [MOD n]\",\n  \"isProp\": true,\n  \"docString\": \"Infinitely many natural numbers are equal to `d` mod `n`. \"}]\n", "prompt_cons": "/-- For any positive `k : ℕ` there are infinitely many primes `p` such that `p ≡ 1 [MOD k]`. -/\ntheorem ∀ {k : ℕ}, k ≠ 0 → Set.Infinite {p | Nat.Prime p ∧ p ≡ 1 [MOD k]} :=\n\n/-- For `n ≠ 1`, `(n-1)!` is congruent to `-1` modulo `n` only if n is prime. -/\ntheorem ∀ {n : ℕ}, ↑(Nat.factorial (n - 1)) = -1 → n ≠ 1 → Nat.Prime n :=\n\n/-- If two integers are congruent to a sufficiently large modulus,\nthey are equal. -/\ntheorem ∀ {a b c : ℤ}, a % b = c → Int.natAbs (a - c) < Int.natAbs b → a = c :=\n\n/-- Infinitely many natural numbers are equal to `d` mod `n`. -/\ntheorem ∀ {n : ℕ}, n ≠ 0 → ∀ (d : ℕ), ∃ᶠ (m : ℕ) in Filter.atTop, m ≡ d [MOD n] :=\n\n/-- Show that there are infinitely many primes congruent to $-1$ modulo 6 . -/\ntheorem", "choices": ["Set.Infinite {p | Nat.Prime p ∧ p ≡ -1 [MOD 6]} ", "Set.Infinite {p | Nat.Prime p ∧ p ≡ -1 [MOD 6]} ", "Set.Infinite {p | Nat.Prime p ∧ p ≡ -1 [MOD 6]} ", "Set.Infinite {p | Nat.Prime p ∧ p ≡ -1 [MOD 6]} ", "∀ {k : ℕ}, k ≠ 0 → Set.Infinite {p | Nat.Prime p ∧ p ≡ -1 [MOD k]} ", "∀ {k : ℕ}, k ≠ 0 → Set.Infinite {p | Nat.Prime p ∧ p ≡ -1 [MOD k]} ", "Set.Infinite {p | Nat.Prime p ∧ p ≡ -1 [MOD 6]} ", "∀ {k : ℕ}, k ≠ 0 → Set.Infinite {p | Nat.Prime p ∧ p ≡ -1 [MOD k]} ", "Set.Infinite {p | Nat.Prime p ∧ p ≡ -1 [MOD 6]} ", "∀ {k : ℕ}, k ≠ 0 → Set.Infinite {p | Nat.Prime p ∧ p ≡ -1 [MOD 6]} "]}
{"docString": "Show that the equation $7 x^{3}+2=y^{3}$ has no solution in integers.", "prompts": "[{\"theorem\":\n  \"∀ {d : ℤ} {a : Pell.Solution₁ d}, 1 < Pell.Solution₁.x a → Pell.Solution₁.y a ≠ 0\",\n  \"isProp\": true,\n  \"docString\": \"A solution with `x > 1` must have `y ≠ 0`. \"},\n {\"theorem\":\n  \"∀ {d : ℤ}, 0 ≤ d → ∀ (a : Pell.Solution₁ d), Pell.Solution₁.x a ≠ 0\",\n  \"isProp\": true,\n  \"docString\": \"A solution has `x ≠ 0`. \"},\n {\"theorem\":\n  \"∀ {R : Type u_1} [inst : CommRing R] {a b c : R},\\n  (∀ (s : R), discrim a b c ≠ s ^ 2) → ∀ (x : R), a * x * x + b * x + c ≠ 0\",\n  \"isProp\": true,\n  \"docString\":\n  \"A quadratic has no root if its discriminant has no square root. \"},\n {\"theorem\":\n  \"∀ {p : Polynomial ℤ},\\n  Polynomial.IsUnitTrinomial p →\\n    (∀ (z : ℂ), ¬(↑(Polynomial.aeval z) p = 0 ∧ ↑(Polynomial.aeval z) (Polynomial.mirror p) = 0)) → Irreducible p\",\n  \"isProp\": true,\n  \"docString\":\n  \"A unit trinomial is irreducible if it has no complex roots in common with its mirror \"}]\n", "prompt_cons": "/-- A solution with `x > 1` must have `y ≠ 0`. -/\ntheorem ∀ {d : ℤ} {a : Pell.Solution₁ d}, 1 < Pell.Solution₁.x a → Pell.Solution₁.y a ≠ 0 :=\n\n/-- A solution has `x ≠ 0`. -/\ntheorem ∀ {d : ℤ}, 0 ≤ d → ∀ (a : Pell.Solution₁ d), Pell.Solution₁.x a ≠ 0 :=\n\n/-- A quadratic has no root if its discriminant has no square root. -/\ntheorem ∀ {R : Type u_1} [inst : CommRing R] {a b c : R},\n  (∀ (s : R), discrim a b c ≠ s ^ 2) → ∀ (x : R), a * x * x + b * x + c ≠ 0 :=\n\n/-- A unit trinomial is irreducible if it has no complex roots in common with its mirror -/\ntheorem ∀ {p : Polynomial ℤ},\n  Polynomial.IsUnitTrinomial p →\n    (∀ (z : ℂ), ¬(↑(Polynomial.aeval z) p = 0 ∧ ↑(Polynomial.aeval z) (Polynomial.mirror p) = 0)) → Irreducible p :=\n\n/-- Show that the equation $7 x^{3}+2=y^{3}$ has no solution in integers. -/\ntheorem", "choices": ["no_solution_7x3p2_eq_y3 : ∀ (x y : ℤ), 7 * x ^ 3 + 2 ≠ y ^ 3 ", "no_sol_for_7x3_plus_2_eq_y3 : ∀ {x y : ℤ}, 7 * x^3 + 2 ≠ y^3 ", "∀ (x y : ℤ), 7 * x^3 + 2 ≠ y^3 ", "no_solution : ∀ (x y : ℤ), 7 * x ^ 3 + 2 ≠ y ^ 3 ", "∀ (x y : ℤ), 7 * x^3 + 2 ≠ y^3 ", "no_solution : ∀ (x y : ℤ), 7 * x ^ 3 + 2 ≠ y ^ 3 ", "no_solution_seven_x_cubed_plus_two_eq_y_cubed : ∀ (x y : ℤ), 7 * x^3 + 2 ≠ y^3 ", "no_int_solution : ∀ (x y : ℤ), 7 * x^3 + 2 ≠ y^3 ", "no_sol : ∀ (x y : ℤ), 7 * x^3 + 2 ≠ y^3 ", "no_solution_7x3_plus_2_eq_y3 : ∀ (x y : ℤ), 7 * x^3 + 2 ≠ y^3 "]}
{"docString": "Let $p$ and $q$ be distinct odd primes such that $p-1$ divides $q-1$. If $(n, p q)=1$, show that $n^{q-1} \\equiv 1(p q)$.", "prompts": "[{\"theorem\":\n  \"∀ {p q : ℕ} [inst : Fact (Nat.Prime p)] [inst_1 : Fact (Nat.Prime q)], p % 4 = 1 → q ≠ 2 → (IsSquare ↑q ↔ IsSquare ↑p)\",\n  \"isProp\": true,\n  \"docString\":\n  \"If `p` and `q` are odd primes and `p % 4 = 1`, then `q` is a square mod `p` iff\\n`p` is a square mod `q`. \"},\n {\"theorem\":\n  \"∀ {p q : ℕ} [inst : Fact (Nat.Prime p)] [inst_1 : Fact (Nat.Prime q)],\\n  p ≠ 2 → q ≠ 2 → p ≠ q → legendreSym q ↑p * legendreSym p ↑q = (-1) ^ (p / 2 * (q / 2))\",\n  \"isProp\": true,\n  \"docString\":\n  \"**The Law of Quadratic Reciprocity**: if `p` and `q` are distinct odd primes, then\\n`(q / p) * (p / q) = (-1)^((p-1)(q-1)/4)`. \"},\n {\"theorem\":\n  \"∀ {p q : ℕ} [inst : Fact (Nat.Prime p)] [inst_1 : Fact (Nat.Prime q)],\\n  p % 4 = 1 → q ≠ 2 → legendreSym q ↑p = legendreSym p ↑q\",\n  \"isProp\": true,\n  \"docString\":\n  \"The Law of Quadratic Reciprocity: if `p` and `q` are odd primes and `p % 4 = 1`,\\nthen `(q / p) = (p / q)`. \"},\n {\"theorem\":\n  \"∀ {p q : ℕ} [inst : Fact (Nat.Prime p)] [inst_1 : Fact (Nat.Prime q)],\\n  p ≠ 2 → q ≠ 2 → legendreSym q ↑p = (-1) ^ (p / 2 * (q / 2)) * legendreSym p ↑q\",\n  \"isProp\": true,\n  \"docString\":\n  \"The Law of Quadratic Reciprocity: if `p` and `q` are odd primes, then\\n`(q / p) = (-1)^((p-1)(q-1)/4) * (p / q)`. \"}]\n", "prompt_cons": "/-- If `p` and `q` are odd primes and `p % 4 = 1`, then `q` is a square mod `p` iff\n`p` is a square mod `q`. -/\ntheorem ∀ {p q : ℕ} [inst : Fact (Nat.Prime p)] [inst_1 : Fact (Nat.Prime q)], p % 4 = 1 → q ≠ 2 → (IsSquare ↑q ↔ IsSquare ↑p) :=\n\n/-- **The Law of Quadratic Reciprocity**: if `p` and `q` are distinct odd primes, then\n`(q / p) * (p / q) = (-1)^((p-1)(q-1)/4)`. -/\ntheorem ∀ {p q : ℕ} [inst : Fact (Nat.Prime p)] [inst_1 : Fact (Nat.Prime q)],\n  p ≠ 2 → q ≠ 2 → p ≠ q → legendreSym q ↑p * legendreSym p ↑q = (-1) ^ (p / 2 * (q / 2)) :=\n\n/-- The Law of Quadratic Reciprocity: if `p` and `q` are odd primes and `p % 4 = 1`,\nthen `(q / p) = (p / q)`. -/\ntheorem ∀ {p q : ℕ} [inst : Fact (Nat.Prime p)] [inst_1 : Fact (Nat.Prime q)],\n  p % 4 = 1 → q ≠ 2 → legendreSym q ↑p = legendreSym p ↑q :=\n\n/-- The Law of Quadratic Reciprocity: if `p` and `q` are odd primes, then\n`(q / p) = (-1)^((p-1)(q-1)/4) * (p / q)`. -/\ntheorem ∀ {p q : ℕ} [inst : Fact (Nat.Prime p)] [inst_1 : Fact (Nat.Prime q)],\n  p ≠ 2 → q ≠ 2 → legendreSym q ↑p = (-1) ^ (p / 2 * (q / 2)) * legendreSym p ↑q :=\n\n/-- Let $p$ and $q$ be distinct odd primes such that $p-1$ divides $q-1$. If $(n, p q)=1$, show that $n^{q-1} \\equiv 1(p q)$. -/\ntheorem", "choices": ["∀ {p q n : ℕ} [inst : Fact (Nat.Prime p)] [inst_1 : Fact (Nat.Prime q)],\n  p ≠ 2 → q ≠ 2 → p ≠ q → (p - 1) ∣ (q - 1) → Nat.Coprime n (p * q) → (n ^ (q - 1)) % (p * q) = 1 ", "∀ {p q n : ℕ} [inst : Fact (Nat.Prime p)] [inst_1 : Fact (Nat.Prime q)], p ≠ 2 → q ≠ 2 → p ≠ q → (p - 1) ∣ (q - 1) → Nat.Coprime n (p * q) → (n ^ (q - 1)) ≡ 1 [MOD (p * q)] ", "∀ {p q n : ℕ} [inst : Fact (Nat.Prime p)] [inst_1 : Fact (Nat.Prime q)],\n  p ≠ 2 → q ≠ 2 → p ≠ q → (p - 1) ∣ (q - 1) → Nat.Coprime n (p * q) →\n  (n ^ (q - 1)) % (p * q) = 1 ", "∀ {p q n : ℕ} [inst : Fact (Nat.Prime p)] [inst_1 : Fact (Nat.Prime q)], p ≠ 2 → q ≠ 2 → p ≠ q → (p - 1) ∣ (q - 1) → Nat.Coprime n (p * q) → (n^(q - 1) : ℤ) ≡ 1 [ZMOD (p * q)] ", "∀ {p q n : ℕ} [inst : Fact (Nat.Prime p)] [inst_1 : Fact (Nat.Prime q)],\n  p ≠ 2 → q ≠ 2 → p ≠ q → (p - 1) ∣ (q - 1) → Nat.Coprime n (p * q) → (n ^ (q - 1)) % (p * q) = 1 ", "∀ {p q n : ℕ} [inst : Fact (Nat.Prime p)] [inst_1 : Fact (Nat.Prime q)],\n  p ≠ 2 → q ≠ 2 → p ≠ q → (p - 1) ∣ (q - 1) → Nat.Coprime n (p * q) → (n ^ (q - 1)) % (p * q) = 1 ", "∀ {p q n : ℕ} [inst : Fact (Nat.Prime p)] [inst_1 : Fact (Nat.Prime q)],\n  p ≠ 2 → q ≠ 2 → p ≠ q → (q - 1) % (p - 1) = 0 → Nat.Coprime n (p * q) → (n ^ (q - 1)) % (p * q) = 1 ", "∀ {p q n : ℕ} [inst : Fact (Nat.Prime p)] [inst_1 : Fact (Nat.Prime q)], p ≠ 2 → q ≠ 2 → p ≠ q → (p - 1) ∣ (q - 1) → Nat.Coprime n (p * q) → (n ^ (q - 1)) % (p * q) = 1 ", "∀ {p q n : ℕ} [inst : Fact (Nat.Prime p)] [inst_1 : Fact (Nat.Prime q)],\n  p ≠ 2 → q ≠ 2 → p ≠ q → (p - 1) ∣ (q - 1) → Nat.Coprime n (p * q) → n ^ (q - 1) ≡ 1 [MOD (p * q)] ", "∀ {p q n : ℕ} [inst : Fact (Nat.Prime p)] [inst_1 : Fact (Nat.Prime q)],\n  p ≠ 2 → q ≠ 2 → p ≠ q → (p - 1) ∣ (q - 1) → coprime n (p * q) → n ^ (q - 1) ≡ 1 [MOD p * q] "]}
{"docString": "Consider a prime $p$ of the form $4 t+3$. Show that $a$ is a primitive root modulo $p$ iff $-a$ has order $(p-1) / 2$.", "prompts": "[{\"theorem\":\n  \"∀ {a : ℤ} {p : ℕ} [inst : Fact (Nat.Prime p)], jacobiSym a p = -1 ↔ ¬IsSquare ↑a\",\n  \"isProp\": true,\n  \"docString\":\n  \"If `p` is prime, then `J(a | p)` is `-1` iff `a` is not a square modulo `p`. \"},\n {\"theorem\": \"∀ {p n : ℕ}, Nat.Prime p → p ∣ n → IsSquare (-1) → p % 4 ≠ 3\",\n  \"isProp\": true,\n  \"docString\":\n  \"If a prime `p` divides `n` such that `-1` is a square modulo `n`, then `p % 4 ≠ 3`. \"},\n {\"theorem\":\n  \"∀ (p : ℕ) (a : ZMod p), a ^ (p - 1) = 1 → (∀ (q : ℕ), Nat.Prime q → q ∣ p - 1 → a ^ ((p - 1) / q) ≠ 1) → Nat.Prime p\",\n  \"isProp\": true,\n  \"docString\":\n  \"If `a^(p-1) = 1 mod p`, but `a^((p-1)/q) ≠ 1 mod p` for all prime factors `q` of `p-1`, then `p`\\nis prime. This is true because `a` has order `p-1` in the multiplicative group mod `p`, so this\\ngroup must itself have order `p-1`, which only happens when `p` is prime.\\n\"},\n {\"theorem\":\n  \"∀ {p : ℕ}, Nat.Prime p → ∀ {n : ℤ}, IsCoprime n ↑p → n ^ (p - 1) ≡ 1 [ZMOD ↑p]\",\n  \"isProp\": true,\n  \"docString\":\n  \"**Fermat's Little Theorem**: for all `a : ℤ` coprime to `p`, we have\\n`a ^ (p - 1) ≡ 1 [ZMOD p]`. \"}]\n", "prompt_cons": "/-- If `p` is prime, then `J(a | p)` is `-1` iff `a` is not a square modulo `p`. -/\ntheorem ∀ {a : ℤ} {p : ℕ} [inst : Fact (Nat.Prime p)], jacobiSym a p = -1 ↔ ¬IsSquare ↑a :=\n\n/-- If a prime `p` divides `n` such that `-1` is a square modulo `n`, then `p % 4 ≠ 3`. -/\ntheorem ∀ {p n : ℕ}, Nat.Prime p → p ∣ n → IsSquare (-1) → p % 4 ≠ 3 :=\n\n/-- If `a^(p-1) = 1 mod p`, but `a^((p-1)/q) ≠ 1 mod p` for all prime factors `q` of `p-1`, then `p`\nis prime. This is true because `a` has order `p-1` in the multiplicative group mod `p`, so this\ngroup must itself have order `p-1`, which only happens when `p` is prime. -/\ntheorem ∀ (p : ℕ) (a : ZMod p), a ^ (p - 1) = 1 → (∀ (q : ℕ), Nat.Prime q → q ∣ p - 1 → a ^ ((p - 1) / q) ≠ 1) → Nat.Prime p :=\n\n/-- **Fermat's Little Theorem**: for all `a : ℤ` coprime to `p`, we have\n`a ^ (p - 1) ≡ 1 [ZMOD p]`. -/\ntheorem ∀ {p : ℕ}, Nat.Prime p → ∀ {n : ℤ}, IsCoprime n ↑p → n ^ (p - 1) ≡ 1 [ZMOD ↑p] :=\n\n/-- Consider a prime $p$ of the form $4 t+3$. Show that $a$ is a primitive root modulo $p$ iff $-a$ has order $(p-1) / 2$. -/\ntheorem", "choices": ["∀ {p t a : ℕ}, Nat.Prime p → p = 4 * t + 3 → IsPrimitiveRoot a p ↔ orderOf (-a) = (p - 1) / 2 ", "∀ {a : ℤ} {p : ℕ} [hp : Fact (Nat.Prime p)], (p % 4 = 3) →\n  (is_primitive_root a p ↔ (order_of (-a) = (p - 1) / 2)) ", "∀ {p : ℕ} [fact (Nat.Prime p)] (a : ZMod p), p % 4 = 3 → is_primitive_root a p ↔ a ^ ((p - 1) / 2) = -1 ", "∀ {a : ℤ} {p : ℕ} [inst : Fact (Nat.Prime p)], p % 4 = 3 → (primitiveRoot a p ↔ (p - 1) / 2 = orderOf (-a)) ", "∀ {p : ℕ} {a : ZMod p}, Nat.Prime p → (4 * (p - 3) / 4) → primitiveRoot a p ↔ orderOf (-a) = (p - 1) / 2 ", "∀ {a : ℤ} {p : ℕ} [inst : Fact (Nat.Prime p)], p % 4 = 3 → (primitiveRoot a p ↔ (orderOf (-a)) = (p - 1) / 2) ", "∀ {p : ℕ} [Fact (Nat.Prime p)] [Fact (p % 4 = 3)], ∀ {a : ZMod p}, IsPrimitiveRoot a p ↔ ((-a) ^ ((p - 1) / 2) ≠ 1) ", "∀ {a : ℤ} {p : ℕ} (t : ℕ), Nat.Prime p → p = 4 * t + 3 → (orderOf a = p - 1 ↔ orderOf (-a) = (p - 1) / 2) ", "∀ {p : ℕ} {a : ℤ} (t : ℕ), Nat.Prime p → p = 4 * t + 3 → (primitive_root_mod a ↑p ↔ order_mod (-a) ↑p = (p - 1) / 2) ", "∀ {a : ℤ} {t p : ℕ}, Nat.Prime p → p = 4 * t + 3 → is_primitive_root a p ↔ (-a) ^ ((p - 1) / 2) = -1 "]}
{"docString": "Let $p$ be an odd prime. Show that $a$ is a primitive root modulo $p$ iff $a^{(p-1) / q} \\not \\equiv 1(p)$ for all prime divisors $q$ of $p-1$.", "prompts": "[{\"theorem\":\n  \"∀ (p : ℕ) (a : ZMod p), a ^ (p - 1) = 1 → (∀ (q : ℕ), Nat.Prime q → q ∣ p - 1 → a ^ ((p - 1) / q) ≠ 1) → Nat.Prime p\",\n  \"isProp\": true,\n  \"docString\":\n  \"If `a^(p-1) = 1 mod p`, but `a^((p-1)/q) ≠ 1 mod p` for all prime factors `q` of `p-1`, then `p`\\nis prime. This is true because `a` has order `p-1` in the multiplicative group mod `p`, so this\\ngroup must itself have order `p-1`, which only happens when `p` is prime.\\n\"},\n {\"theorem\":\n  \"∀ {p q : ℕ} [inst : Fact (Nat.Prime p)] [inst_1 : Fact (Nat.Prime q)], p % 4 = 1 → q ≠ 2 → (IsSquare ↑q ↔ IsSquare ↑p)\",\n  \"isProp\": true,\n  \"docString\":\n  \"If `p` and `q` are odd primes and `p % 4 = 1`, then `q` is a square mod `p` iff\\n`p` is a square mod `q`. \"},\n {\"theorem\": \"∀ {p : ℕ} [inst : Fact (Nat.Prime p)], p % 2 = 1 ↔ p ≠ 2\",\n  \"isProp\": true,\n  \"docString\": \"A prime `p` satisfies `p % 2 = 1` if and only if `p ≠ 2`. \"},\n {\"theorem\":\n  \"∀ {p : ℕ}, Nat.Prime p → ∀ {n : ℤ}, IsCoprime n ↑p → n ^ (p - 1) ≡ 1 [ZMOD ↑p]\",\n  \"isProp\": true,\n  \"docString\":\n  \"**Fermat's Little Theorem**: for all `a : ℤ` coprime to `p`, we have\\n`a ^ (p - 1) ≡ 1 [ZMOD p]`. \"}]\n", "prompt_cons": "/-- If `a^(p-1) = 1 mod p`, but `a^((p-1)/q) ≠ 1 mod p` for all prime factors `q` of `p-1`, then `p`\nis prime. This is true because `a` has order `p-1` in the multiplicative group mod `p`, so this\ngroup must itself have order `p-1`, which only happens when `p` is prime. -/\ntheorem ∀ (p : ℕ) (a : ZMod p), a ^ (p - 1) = 1 → (∀ (q : ℕ), Nat.Prime q → q ∣ p - 1 → a ^ ((p - 1) / q) ≠ 1) → Nat.Prime p :=\n\n/-- If `p` and `q` are odd primes and `p % 4 = 1`, then `q` is a square mod `p` iff\n`p` is a square mod `q`. -/\ntheorem ∀ {p q : ℕ} [inst : Fact (Nat.Prime p)] [inst_1 : Fact (Nat.Prime q)], p % 4 = 1 → q ≠ 2 → (IsSquare ↑q ↔ IsSquare ↑p) :=\n\n/-- A prime `p` satisfies `p % 2 = 1` if and only if `p ≠ 2`. -/\ntheorem ∀ {p : ℕ} [inst : Fact (Nat.Prime p)], p % 2 = 1 ↔ p ≠ 2 :=\n\n/-- **Fermat's Little Theorem**: for all `a : ℤ` coprime to `p`, we have\n`a ^ (p - 1) ≡ 1 [ZMOD p]`. -/\ntheorem ∀ {p : ℕ}, Nat.Prime p → ∀ {n : ℤ}, IsCoprime n ↑p → n ^ (p - 1) ≡ 1 [ZMOD ↑p] :=\n\n/-- Let $p$ be an odd prime. Show that $a$ is a primitive root modulo $p$ iff $a^{(p-1) / q} \\not \\equiv 1(p)$ for all prime divisors $q$ of $p-1$. -/\ntheorem", "choices": ["∀ {p a : ℕ}, Nat.Prime p → p % 2 = 1 → (primitive_root a p ↔ (∀ (q : ℕ), Nat.Prime q → q ∣ p - 1 → a ^ ((p - 1) / q) ≠ 1 [ZMOD p])) ", "∀ {p : ℕ} (a : ZMod p) (hp : Fact (Nat.Prime p)), hp.val % 2 = 1 → IsPrimitiveRoot a hp.val ↔ (∀ q, Nat.Prime q → q ∣ (hp.val - 1) → a ^ ((hp.val - 1) / q) ≠ 1) ", "∀ {p : ℕ} [inst : Fact (Nat.Prime p)], p % 2 = 1 → ∀ {a : ZMod p}, (IsPrimitiveRoot a p ↔ (∀ (q : ℕ), Nat.Prime q → q ∣ p - 1 → a ^ ((p - 1) / q) ≠ 1)) ", "∀ {p : ℕ} [inst : Fact (Nat.Prime p)], p ≠ 2 → (∀ (a : ZMod p), IsPrimitiveRoot a p ↔ (∀ (q : ℕ), Nat.Prime q → q ∣ p - 1 → a ^ ((p - 1) / q) ≠ 1)) ", "∀ {p : ℕ} [inst : Fact (Nat.Prime p)], (∀ (q : ℕ), Nat.Prime q → q ∣ p - 1 → ∃ a : ZMod p, a ^ ((p - 1) / q) ≠ 1) ↔ IsPrimitiveRoot a p ", "∀ {p : ℕ} [inst : Fact (Nat.Prime p)] (a : ZMod p), a ^ (p - 1) = 1 → (∀ (q : ℕ), Nat.Prime q → q ∣ p - 1 → a ^ ((p - 1) / q) ≠ 1) → (∀ (m : ℕ), m < p - 1 → ∃ n : ℕ, a ^ n = ↑m) ", "∀ {p : ℕ} [inst : Fact (Nat.Prime p)], p % 2 = 1 → ∀ (a : ZMod p), IsPrimitiveRoot a p ↔ (∀ (q : ℕ), Nat.Prime q → q ∣ p - 1 → a ^ ((p - 1) / q) ≠ 1) ", "∀ {p : ℕ} [inst : Fact (Nat.Prime p)], p % 2 = 1 → ∀ (a : ZMod p), IsPrimitiveRoot a p ↔ (∀ (q : ℕ), Nat.Prime q → q ∣ p - 1 → a ^ ((p - 1) / q) ≠ 1) ", "∀ {p : ℕ} [inst : Fact (Nat.Prime p)], p % 2 = 1 → ∀ (a : ZMod p), a ^ (p - 1) = 1 → (∀ (q : ℕ), Nat.Prime q → q ∣ p - 1 → a ^ ((p - 1) / q) ≠ 1) → IsPrimitiveRoot a p ", "∀ {p : ℕ} [inst : Fact (Nat.Prime p)], p % 2 = 1 → ∀ (a : ZMod p), (∀ (q : ℕ), Nat.Prime q → q ∣ p - 1 → a ^ ((p - 1) / q) ≠ 1) → IsPrimitiveRoot a p "]}
{"docString": "Show that any prime divisor of $x^{4}-x^{2}+1$ is congruent to 1 modulo 12 .", "prompts": "[{\"theorem\":\n  \"∀ {p : ℕ} [inst : Fact (Nat.Prime p)], p ≠ 2 → (IsSquare (-2) ↔ p % 8 = 1 ∨ p % 8 = 3)\",\n  \"isProp\": true,\n  \"docString\":\n  \"`-2` is a square modulo an odd prime `p` iff `p` is congruent to `1` or `3` mod `8`. \"},\n {\"theorem\": \"∀ {p n : ℕ}, Nat.Prime p → p ∣ n → IsSquare (-1) → p % 4 ≠ 3\",\n  \"isProp\": true,\n  \"docString\":\n  \"If a prime `p` divides `n` such that `-1` is a square modulo `n`, then `p % 4 ≠ 3`. \"},\n {\"theorem\": \"∀ (p : ℕ) [inst : Fact (Nat.Prime p)], Prime ↑p ↔ p % 4 = 3\",\n  \"isProp\": true,\n  \"docString\":\n  \"A prime natural number is prime in `ℤ[i]` if and only if it is `3` mod `4` \"},\n {\"theorem\":\n  \"∀ {p : ℕ} [inst : Fact (Nat.Prime p)], p ≠ 2 → (IsSquare 2 ↔ p % 8 = 1 ∨ p % 8 = 7)\",\n  \"isProp\": true,\n  \"docString\":\n  \"`2` is a square modulo an odd prime `p` iff `p` is congruent to `1` or `7` mod `8`. \"}]\n", "prompt_cons": "/-- `-2` is a square modulo an odd prime `p` iff `p` is congruent to `1` or `3` mod `8`. -/\ntheorem ∀ {p : ℕ} [inst : Fact (Nat.Prime p)], p ≠ 2 → (IsSquare (-2) ↔ p % 8 = 1 ∨ p % 8 = 3) :=\n\n/-- If a prime `p` divides `n` such that `-1` is a square modulo `n`, then `p % 4 ≠ 3`. -/\ntheorem ∀ {p n : ℕ}, Nat.Prime p → p ∣ n → IsSquare (-1) → p % 4 ≠ 3 :=\n\n/-- A prime natural number is prime in `ℤ[i]` if and only if it is `3` mod `4` -/\ntheorem ∀ (p : ℕ) [inst : Fact (Nat.Prime p)], Prime ↑p ↔ p % 4 = 3 :=\n\n/-- `2` is a square modulo an odd prime `p` iff `p` is congruent to `1` or `7` mod `8`. -/\ntheorem ∀ {p : ℕ} [inst : Fact (Nat.Prime p)], p ≠ 2 → (IsSquare 2 ↔ p % 8 = 1 ∨ p % 8 = 7) :=\n\n/-- Show that any prime divisor of $x^{4}-x^{2}+1$ is congruent to 1 modulo 12 . -/\ntheorem", "choices": ["∀ {x p : ℕ}, Nat.Prime p → p ∣ x ^ 4 - x ^ 2 + 1 → p % 12 = 1 ", "forall {x p : ℕ}, Nat.Prime p → p ∣ (x^4 - x^2 + 1) → p % 12 = 1 ", "∀ {x p : ℕ}, Nat.Prime p → p ∣ x^4 - x^2 + 1 → p % 12 = 1 ", "∀ {x p : ℕ}, Nat.Prime p → p ∣ (x ^ 4 - x ^ 2 + 1) → p % 12 = 1 ", "∀ {x p : ℕ}, Nat.Prime p → p ∣ x ^ 4 - x ^ 2 + 1 → p % 12 = 1 ", "∀ {x p : ℕ}, Nat.Prime p → p ∣ (x^4 - x^2 + 1) → p % 12 = 1 ", "∀ {x p : ℕ}, Nat.Prime p → p ∣ (x ^ 4 - x ^ 2 + 1) → p % 12 = 1 ", "∀ {x p : ℕ}, Nat.Prime p → p ∣ (x^4 - x^2 + 1) → p % 12 = 1 ", "∀ {x p : ℕ}, Nat.Prime p → p ∣ x^4 - x^2 + 1 → p % 12 = 1 ", "∀ {x p : ℕ}, Nat.Prime p → p ∣ (x^4 - x^2 + 1) → p % 12 = 1 "]}
{"docString": "Show that if $a$ is negative then $p \\equiv q(4 a) together with p\\not | a$ imply $(a / p)=(a / q)$.", "prompts": "[{\"theorem\":\n  \"∀ {p q : ℕ} [inst : Fact (Nat.Prime p)] [inst_1 : Fact (Nat.Prime q)],\\n  p % 4 = 3 → q % 4 = 3 → legendreSym q ↑p = -legendreSym p ↑q\",\n  \"isProp\": true,\n  \"docString\":\n  \"The Law of Quadratic Reciprocity: if `p` and `q` are primes that are both congruent\\nto `3` mod `4`, then `(q / p) = -(p / q)`. \"},\n {\"theorem\":\n  \"∀ {p q : ℕ} [inst : Fact (Nat.Prime p)] [inst_1 : Fact (Nat.Prime q)],\\n  p % 4 = 1 → q ≠ 2 → legendreSym q ↑p = legendreSym p ↑q\",\n  \"isProp\": true,\n  \"docString\":\n  \"The Law of Quadratic Reciprocity: if `p` and `q` are odd primes and `p % 4 = 1`,\\nthen `(q / p) = (p / q)`. \"},\n {\"theorem\":\n  \"∀ {p q : ℕ} [inst : Fact (Nat.Prime p)] [inst_1 : Fact (Nat.Prime q)],\\n  p ≠ 2 → q ≠ 2 → legendreSym q ↑p = (-1) ^ (p / 2 * (q / 2)) * legendreSym p ↑q\",\n  \"isProp\": true,\n  \"docString\":\n  \"The Law of Quadratic Reciprocity: if `p` and `q` are odd primes, then\\n`(q / p) = (-1)^((p-1)(q-1)/4) * (p / q)`. \"},\n {\"theorem\":\n  \"∀ {p q : ℕ} [inst : Fact (Nat.Prime p)] [inst_1 : Fact (Nat.Prime q)],\\n  p ≠ 2 → q ≠ 2 → p ≠ q → legendreSym q ↑p * legendreSym p ↑q = (-1) ^ (p / 2 * (q / 2))\",\n  \"isProp\": true,\n  \"docString\":\n  \"**The Law of Quadratic Reciprocity**: if `p` and `q` are distinct odd primes, then\\n`(q / p) * (p / q) = (-1)^((p-1)(q-1)/4)`. \"}]\n", "prompt_cons": "/-- The Law of Quadratic Reciprocity: if `p` and `q` are primes that are both congruent\nto `3` mod `4`, then `(q / p) = -(p / q)`. -/\ntheorem ∀ {p q : ℕ} [inst : Fact (Nat.Prime p)] [inst_1 : Fact (Nat.Prime q)],\n  p % 4 = 3 → q % 4 = 3 → legendreSym q ↑p = -legendreSym p ↑q :=\n\n/-- The Law of Quadratic Reciprocity: if `p` and `q` are odd primes and `p % 4 = 1`,\nthen `(q / p) = (p / q)`. -/\ntheorem ∀ {p q : ℕ} [inst : Fact (Nat.Prime p)] [inst_1 : Fact (Nat.Prime q)],\n  p % 4 = 1 → q ≠ 2 → legendreSym q ↑p = legendreSym p ↑q :=\n\n/-- The Law of Quadratic Reciprocity: if `p` and `q` are odd primes, then\n`(q / p) = (-1)^((p-1)(q-1)/4) * (p / q)`. -/\ntheorem ∀ {p q : ℕ} [inst : Fact (Nat.Prime p)] [inst_1 : Fact (Nat.Prime q)],\n  p ≠ 2 → q ≠ 2 → legendreSym q ↑p = (-1) ^ (p / 2 * (q / 2)) * legendreSym p ↑q :=\n\n/-- **The Law of Quadratic Reciprocity**: if `p` and `q` are distinct odd primes, then\n`(q / p) * (p / q) = (-1)^((p-1)(q-1)/4)`. -/\ntheorem ∀ {p q : ℕ} [inst : Fact (Nat.Prime p)] [inst_1 : Fact (Nat.Prime q)],\n  p ≠ 2 → q ≠ 2 → p ≠ q → legendreSym q ↑p * legendreSym p ↑q = (-1) ^ (p / 2 * (q / 2)) :=\n\n/-- Show that if $a$ is negative then $p \\equiv q(4 a) together with p\\not | a$ imply $(a / p)=(a / q)$. -/\ntheorem", "choices": ["∀ {a p q : ℤ} [inst : Fact (Nat.Prime (Int.nat_abs p))] [inst_1 : Fact (Nat.Prime (Int.nat_abs q))],\n  a < 0 → p % 4 = q % 4 → ¬ p ∣ a → legendreSym a ↑p = legendreSym a ↑q ", "forall {a p q : ℤ} [inst : Fact (Nat.Prime (Int.nat_abs p))] [inst_1 : Fact (Nat.Prime (Int.nat_abs q))],\n  a < 0 → p % 4 = q % 4 → ¬p ∣ a → legendreSym a ↑p = legendreSym a ↑q ", "∀ {a p q : ℤ} [inst : Fact (Nat.Prime p)] [inst_1 : Fact (Nat.Prime q)],\n  a < 0 → p ≡ q [ZMOD 4 * a] → ¬p ∣ a → legendreSym a ↑p = legendreSym a ↑q ", "∀ {a p q : ℤ} [inst : Fact (Nat.Prime p)] [inst_1 : Fact (Nat.Prime q)],\n  a < 0 → p % 4 = q % 4 → (p ∣ a * a) ∧ (¬p ∣ a) → legendreSym a ↑p = legendreSym a ↑q ", "∀ {a p q : ℤ} [inst : Fact (Nat.Prime p)] [inst_1 : Fact (Nat.Prime q)],\n  a < 0 → p % 4 = q % 4 → p ∣ a → q ∣ a → a ≠ p * q → legendreSym a ↑p = legendreSym a ↑q ", "∀ {a p q : ℤ} [inst : Fact (Nat.Prime p)] [inst_1 : Fact (Nat.Prime q)],\n  a < 0 → p % 4 = q % 4 * a → ¬ (p ∣ a) → legendreSym a ↑p = legendreSym a ↑q ", "∀ {a p q : ℤ} [inst : Fact (Nat.Prime p)] [inst_1 : Fact (Nat.Prime q)],\n  a < 0 → p % 4 = q % 4 → ¬(p ∣ a) → legendreSym a ↑p = legendreSym a ↑q ", "∀ {a p q : ℤ} [inst : Fact (Nat.Prime p)] [inst_1 : Fact (Nat.Prime q)],\n  a < 0 → p % 4 = q % 4 → ¬p ∣ a → ¬q ∣ a → legendreSym a ↑p = legendreSym a ↑q ", "∀ {a p q : ℤ} [inst : Fact (Nat.Prime p)] [inst_1 : Fact (Nat.Prime q)],\n  a < 0 → p ≡ q [ZMOD 4 * a] → ¬(p ∣ a) → legendreSym a ↑p = legendreSym a ↑q ", "forall {a p q : ℤ} [inst : Fact (Nat.Prime p)] [inst_1 : Fact (Nat.Prime q)],\n  a < 0 → p % 4 = q % 4 → ¬ ↑p ∣ a → legendreSym a p = legendreSym a q "]}
{"docString": "Show that 1729 is the smallest positive integer expressible as the sum of two different integral cubes in two ways.", "prompts": "[{\"theorem\":\n  \"∀ {a b x y u v : ℕ}, a = x ^ 2 + y ^ 2 → b = u ^ 2 + v ^ 2 → ∃ r s, a * b = r ^ 2 + s ^ 2\",\n  \"isProp\": true,\n  \"docString\":\n  \"The set of natural numbers that are sums of two squares is closed under multiplication. \"},\n {\"theorem\": \"∀ {b m d : ℕ}, d ∈ Nat.digits (b + 2) m → d < b + 2\",\n  \"isProp\": true,\n  \"docString\":\n  \"The digits in the base b+2 expansion of n are all less than b+2 \"},\n {\"theorem\": \"∀ {m n : ℕ}, (∀ (a : ℕ), m ∣ a ↔ n ∣ a) ↔ m = n\",\n  \"isProp\": true,\n  \"docString\":\n  \"Two natural numbers are equal if and only if they have the same multiples. \"},\n {\"theorem\":\n  \"∀ {a b c : ℤ}, Fermat42 a b c → ∃ a0 b0 c0, Fermat42.Minimal a0 b0 c0\",\n  \"isProp\": true,\n  \"docString\":\n  \"if we have a solution to `a ^ 4 + b ^ 4 = c ^ 2` then there must be a minimal one. \"}]\n", "prompt_cons": "/-- The set of natural numbers that are sums of two squares is closed under multiplication. -/\ntheorem ∀ {a b x y u v : ℕ}, a = x ^ 2 + y ^ 2 → b = u ^ 2 + v ^ 2 → ∃ r s, a * b = r ^ 2 + s ^ 2 :=\n\n/-- The digits in the base b+2 expansion of n are all less than b+2 -/\ntheorem ∀ {b m d : ℕ}, d ∈ Nat.digits (b + 2) m → d < b + 2 :=\n\n/-- Two natural numbers are equal if and only if they have the same multiples. -/\ntheorem ∀ {m n : ℕ}, (∀ (a : ℕ), m ∣ a ↔ n ∣ a) ↔ m = n :=\n\n/-- if we have a solution to `a ^ 4 + b ^ 4 = c ^ 2` then there must be a minimal one. -/\ntheorem ∀ {a b c : ℤ}, Fermat42 a b c → ∃ a0 b0 c0, Fermat42.Minimal a0 b0 c0 :=\n\n/-- Show that 1729 is the smallest positive integer expressible as the sum of two different integral cubes in two ways. -/\ntheorem", "choices": ["smallest_cubes_sum_1729 : ∃ a b c d : ℕ, a ≠ b ∧ c ≠ d ∧ a ^ 3 + b ^ 3 = 1729 ∧ c ^ 3 + d ^ 3 = 1729 ", "smallest_1729 : ∃ a b c d : ℤ, a ≠ b ∧ c ≠ d ∧ a ^ 3 + b ^ 3 = c ^ 3 + d ^ 3 ∧ ∃ k : ℕ, 1729 = k * (a ^ 3 + b ^ 3) ", "∃ a b c d : ℕ, a ≠ b ∧ c ≠ d ∧ 1729 = a ^ 3 + b ^ 3 = c ^ 3 + d ^ 3 ", "smallest_int_expressible_as_sum_of_two_cubes : ∃ a b c d : ℕ, a ≠ c ∧ a ^ 3 + b ^ 3 = c ^ 3 + d ^ 3 ∧ ∀ r s t u : ℕ, r ^ 3 + s ^ 3 = t ^ 3 + u ^ 3 → r ^ 3 + s ^ 3 ≥ a ^ 3 + b ^ 3 ", "smallest_1729 : ∃ a1 b1 a2 b2 : ℤ, a1 ≠ a2 ∧ a1 ^ 3 + b1 ^ 3 = 1729 ∧ a2 ^ 3 + b2 ^ 3 = 1729 ", "smallest_expressible_as_sum_of_two_different_integral_cubes : ∃ (x1 y1 x2 y2 x3 y3 x4 y4 : ℤ),\n  x1 ≠ x2 ∧ y1 ≠ y2 ∧ x3 ≠ x4 ∧ y3 ≠ y4 ∧\n  x1 ^ 3 + y1 ^ 3 = x2 ^ 3 + y2 ^ 3 ∧ x3 ^ 3 + y3 ^ 3 = x4 ^ 3 + y4 ^ 3 ∧\n  x1 ^ 3 + y1 ^ 3 = x3 ^ 3 + y3 ^ 3 ∧ (x1 ^ 3 + y1 ^ 3).nat_abs = 1729 ", "∃ k : ℕ, k = 1729 ∧ ∃ x y z w : ℕ, x ^ 3 + y ^ 3 = k ∧ z ^ 3 + w ^ 3 = k ∧ x ≠ y ∧ z ≠ w ", "∃ x y z w : ℕ, x ≠ y ∧ z ≠ w ∧ x ^ 3 + y ^ 3 = 1729 ∧ z ^ 3 + w ^ 3 = 1729 ", "smallest_positive_integer_expressible_as_sum_of_two_different_integral_cubes_in_two_ways : ∃ a b c d, a ≠ b ∧ c ≠ d ∧ a ^ 3 + b ^ 3 = c ^ 3 + d ^ 3 ∧ a ^ 3 + b ^ 3 = 1729 ", "∃ x y z w : ℤ, x ≠ y ∧ z ≠ w ∧ x ^ 3 + y ^ 3 = z ^ 3 + w ^ 3 ∧ x ^ 3 + y ^ 3 = 1729 "]}
{"docString": "Suppose that $f$ is holomorphic in an open set $\\Omega$. Prove that if $\\text{Re}(f)$ is constant, then $f$ is constant.", "prompts": "[{\"theorem\":\n  \"∀ {E : Type u_2} [inst : NormedAddCommGroup E] [inst_1 : NormedSpace ℂ E] {F : Type u_4} [inst_2 : NormedAddCommGroup F]\\n  [inst_3 : NormedSpace ℂ F] {H : Type u_3} [inst_4 : TopologicalSpace H] {I : ModelWithCorners ℂ E H}\\n  [inst_5 : ModelWithCorners.Boundaryless I] {M : Type u_1} [inst_6 : TopologicalSpace M] [inst_7 : ChartedSpace H M]\\n  [inst_8 : SmoothManifoldWithCorners I M] {f : M → F} {U : Set M} {a b : M},\\n  MDifferentiableOn I (modelWithCornersSelf ℂ F) f U →\\n    IsPreconnected U → IsCompact U → IsOpen U → a ∈ U → b ∈ U → f a = f b\",\n  \"isProp\": true,\n  \"docString\":\n  \"If a function `f : M → F` from a complex manifold to a complex normed space is holomorphic on a\\n(pre)connected compact open set, then it is a constant on this set. \"},\n {\"theorem\":\n  \"∀ {E : Type u_2} [inst : NormedAddCommGroup E] [inst_1 : NormedSpace ℂ E] {F : Type u_4} [inst_2 : NormedAddCommGroup F]\\n  [inst_3 : NormedSpace ℂ F] {H : Type u_3} [inst_4 : TopologicalSpace H] {I : ModelWithCorners ℂ E H}\\n  [inst_5 : ModelWithCorners.Boundaryless I] {M : Type u_1} [inst_6 : TopologicalSpace M] [inst_7 : CompactSpace M]\\n  [inst_8 : ChartedSpace H M] [inst_9 : SmoothManifoldWithCorners I M] [inst_10 : PreconnectedSpace M] {f : M → F},\\n  MDifferentiable I (modelWithCornersSelf ℂ F) f → ∀ (a b : M), f a = f b\",\n  \"isProp\": true,\n  \"docString\":\n  \"A holomorphic function on a compact connected complex manifold is constant. \"},\n {\"theorem\":\n  \"∀ {E : Type u_1} [inst : NormedAddCommGroup E] [inst_1 : NormedSpace ℂ E] {F : Type u_4} [inst_2 : NormedAddCommGroup F]\\n  [inst_3 : NormedSpace ℂ F] {H : Type u_2} [inst_4 : TopologicalSpace H] {I : ModelWithCorners ℂ E H}\\n  [inst_5 : ModelWithCorners.Boundaryless I] {M : Type u_3} [inst_6 : TopologicalSpace M] [inst_7 : CompactSpace M]\\n  [inst_8 : ChartedSpace H M] [inst_9 : SmoothManifoldWithCorners I M] {f : M → F},\\n  MDifferentiable I (modelWithCornersSelf ℂ F) f → IsLocallyConstant f\",\n  \"isProp\": true,\n  \"docString\":\n  \"A holomorphic function on a compact complex manifold is locally constant. \"},\n {\"theorem\":\n  \"∀ {E : Type u_1} [inst : NormedAddCommGroup E] [inst_1 : NormedSpace ℂ E] {U : Set E} {g : E → ℂ},\\n  AnalyticOn ℂ g U →\\n    IsPreconnected U → (∃ w, ∀ (z : E), z ∈ U → g z = w) ∨ ∀ (s : Set E), s ⊆ U → IsOpen s → IsOpen (g '' s)\",\n  \"isProp\": true,\n  \"docString\":\n  \"The *open mapping theorem* for holomorphic functions, global version: if a function `g : E → ℂ`\\nis analytic on a connected set `U`, then either it is constant on `U`, or it is open on `U` (in the\\nsense that it maps any open set contained in `U` to an open set in `ℂ`). \"}]\n", "prompt_cons": "/-- If a function `f : M → F` from a complex manifold to a complex normed space is holomorphic on a\n(pre)connected compact open set, then it is a constant on this set. -/\ntheorem ∀ {E : Type u_2} [inst : NormedAddCommGroup E] [inst_1 : NormedSpace ℂ E] {F : Type u_4} [inst_2 : NormedAddCommGroup F]\n  [inst_3 : NormedSpace ℂ F] {H : Type u_3} [inst_4 : TopologicalSpace H] {I : ModelWithCorners ℂ E H}\n  [inst_5 : ModelWithCorners.Boundaryless I] {M : Type u_1} [inst_6 : TopologicalSpace M] [inst_7 : ChartedSpace H M]\n  [inst_8 : SmoothManifoldWithCorners I M] {f : M → F} {U : Set M} {a b : M},\n  MDifferentiableOn I (modelWithCornersSelf ℂ F) f U →\n    IsPreconnected U → IsCompact U → IsOpen U → a ∈ U → b ∈ U → f a = f b :=\n\n/-- A holomorphic function on a compact connected complex manifold is constant. -/\ntheorem ∀ {E : Type u_2} [inst : NormedAddCommGroup E] [inst_1 : NormedSpace ℂ E] {F : Type u_4} [inst_2 : NormedAddCommGroup F]\n  [inst_3 : NormedSpace ℂ F] {H : Type u_3} [inst_4 : TopologicalSpace H] {I : ModelWithCorners ℂ E H}\n  [inst_5 : ModelWithCorners.Boundaryless I] {M : Type u_1} [inst_6 : TopologicalSpace M] [inst_7 : CompactSpace M]\n  [inst_8 : ChartedSpace H M] [inst_9 : SmoothManifoldWithCorners I M] [inst_10 : PreconnectedSpace M] {f : M → F},\n  MDifferentiable I (modelWithCornersSelf ℂ F) f → ∀ (a b : M), f a = f b :=\n\n/-- A holomorphic function on a compact complex manifold is locally constant. -/\ntheorem ∀ {E : Type u_1} [inst : NormedAddCommGroup E] [inst_1 : NormedSpace ℂ E] {F : Type u_4} [inst_2 : NormedAddCommGroup F]\n  [inst_3 : NormedSpace ℂ F] {H : Type u_2} [inst_4 : TopologicalSpace H] {I : ModelWithCorners ℂ E H}\n  [inst_5 : ModelWithCorners.Boundaryless I] {M : Type u_3} [inst_6 : TopologicalSpace M] [inst_7 : CompactSpace M]\n  [inst_8 : ChartedSpace H M] [inst_9 : SmoothManifoldWithCorners I M] {f : M → F},\n  MDifferentiable I (modelWithCornersSelf ℂ F) f → IsLocallyConstant f :=\n\n/-- The *open mapping theorem* for holomorphic functions, global version: if a function `g : E → ℂ`\nis analytic on a connected set `U`, then either it is constant on `U`, or it is open on `U` (in the\nsense that it maps any open set contained in `U` to an open set in `ℂ`). -/\ntheorem ∀ {E : Type u_1} [inst : NormedAddCommGroup E] [inst_1 : NormedSpace ℂ E] {U : Set E} {g : E → ℂ},\n  AnalyticOn ℂ g U →\n    IsPreconnected U → (∃ w, ∀ (z : E), z ∈ U → g z = w) ∨ ∀ (s : Set E), s ⊆ U → IsOpen s → IsOpen (g '' s) :=\n\n/-- Suppose that $f$ is holomorphic in an open set $\\Omega$. Prove that if $\\text{Re}(f)$ is constant, then $f$ is constant. -/\ntheorem", "choices": ["∀ {E : Type u_1} [inst : NormedAddCommGroup E] [inst_1 : NormedSpace ℂ E] {U : Set E} {f : E → ℂ},\n  AnalyticOn ℂ f U →\n    IsOpen U →\n      (∀ x y ∈ U, (f x).re = (f y).re) →\n        ∀ x y ∈ U, f x = f y ", "∀ {E : Type u_1} [inst : NormedAddCommGroup E] [inst_1 : NormedSpace ℂ E] {F : Type u_4} [inst_2 : NormedAddCommGroup F]\n  [inst_3 : NormedSpace ℂ F] {H : Type u_2} [inst_4 : TopologicalSpace H] {I : ModelWithCorners ℂ E H}\n  [inst_5 : ModelWithCorners.Boundaryless I] {M : Type u_3} [inst_6 : TopologicalSpace M] [inst_7 : ChartedSpace H M]\n  [inst_8 : SmoothManifoldWithCorners I M] {f : M → ℂ} {U : Set M},\n  MDifferentiableOn I (modelWithCornersSelf ℂ ℂ) f U →\n    IsOpen U → (∀ (x : M), x ∈ U → (f x).re = 0) → ∀ (a b : M), a ∈ U → b ∈ U → f a = f b ", "∀ {E : Type u_1} [inst : NormedAddCommGroup E] [inst_1 : NormedSpace ℂ E] {U : Set E} {f : E → ℂ},\n  AnalyticOn ℂ f U →\n    (∀ (x : E), x ∈ U → (f x).re = (f x).im) → ∀ (a b : E), a ∈ U → b ∈ U → f a = f b ", "∀ {E : Type u_1} [inst : NormedAddCommGroup E] [inst_1 : NormedSpace ℂ E] {F : Type u_4} [inst_2 : NormedAddCommGroup F]\n  [inst_3 : NormedSpace ℂ F] {H : Type u_2} [inst_4 : TopologicalSpace H] {I : ModelWithCorners ℂ E H}\n  [inst_5 : ModelWithCorners.Boundaryless I] {M : Type u_3} [inst_6 : TopologicalSpace M] [inst_7 : ChartedSpace H M]\n  [inst_8 : SmoothManifoldWithCorners I M] {f : M → ℂ} {U : Set M},\n  MDifferentiableOn I (modelWithCornersSelf ℂ ℂ) f U →\n    IsOpen U → (∀ (x : M), x ∈ U → (f x).re = (f x).re) → ∀ (a b : M), a ∈ U → b ∈ U → f a = f b ", "∀ {E : Type u_1} [inst : NormedAddCommGroup E] [inst_1 : NormedSpace ℂ E] {U : Set E} {f : E → ℂ},\n  AnalyticOn ℂ f U →\n    (∀ (z : E), z ∈ U → (f z).re = constant) → (∃ w, ∀ (z : E), z ∈ U → f z = w) ", "∀ {E : Type u_1} [inst : NormedAddCommGroup E] [inst_1 : NormedSpace ℂ E] {F : Type u_4} [inst_2 : NormedAddCommGroup F]\n  [inst_3 : NormedSpace ℂ F] {H : Type u_2} [inst_4 : TopologicalSpace H] {I : ModelWithCorners ℂ E H}\n  [inst_5 : ModelWithCorners.Boundaryless I] {M : Type u_3} [inst_6 : TopologicalSpace M] [inst_7 : ChartedSpace H M]\n  [inst_8 : SmoothManifoldWithCorners I M] {f : M → ℂ} {Ω : Set M},\n  MDifferentiableOn I (modelWithCornersSelf ℂ ℂ) f Ω →\n    IsOpen Ω → (∀ (x : M), x ∈ Ω → (f x).re = (f x).re) → ∀ (a b : M), a ∈ Ω → b ∈ Ω → f a = f b ", "∀ {E : Type u_1} [inst : NormedAddCommGroup E] [inst_1 : NormedSpace ℂ E] {Ω : Set E} {f : E → ℂ},\n  AnalyticOn ℂ f Ω →\n    IsOpen Ω → (∃ w, ∀ (z : E), z ∈ Ω → (f z).re = w) → (∃ w, ∀ (z : E), z ∈ Ω → f z = w) ", "∀ {E : Type u_1} [inst : NormedAddCommGroup E] [inst_1 : NormedSpace ℂ E] {U : Set E} {f : E → ℂ},\n  AnalyticOn ℂ f U →\n    IsPreconnected U → (∀ (z : E), z ∈ U → (f z).re = 0) → ∀ (a b : E), a ∈ U → b ∈ U → f a = f b ", "∀ {E : Type u_1} [inst : NormedAddCommGroup E] [inst_1 : NormedSpace ℂ E] {U : Set E} {f : E → ℂ},\n  AnalyticOn ℂ f U →\n  IsPreconnected U →\n  (∀ (z : E), z ∈ U → (f z).re = (f z).re) → (∃ w, ∀ (z : E), z ∈ U → f z = w) ", "∀ {E : Type u_1} [inst : NormedAddCommGroup E] [inst_1 : NormedSpace ℂ E] {Ω : Set E} {f : E → ℂ},\n  AnalyticOn ℂ f Ω →\n    (∀ (z : E), z ∈ Ω → (f z).re = (f ⟨0, 0⟩).re) → ∀ (a b : E), a ∈ Ω → b ∈ Ω → f a = f b "]}
{"docString": "Suppose that $f$ is holomorphic in an open set $\\Omega$. Prove that if $|f|$ is constant, then $f$ is constant.", "prompts": "[{\"theorem\":\n  \"∀ {E : Type u_2} [inst : NormedAddCommGroup E] [inst_1 : NormedSpace ℂ E] {F : Type u_4} [inst_2 : NormedAddCommGroup F]\\n  [inst_3 : NormedSpace ℂ F] {H : Type u_3} [inst_4 : TopologicalSpace H] {I : ModelWithCorners ℂ E H}\\n  [inst_5 : ModelWithCorners.Boundaryless I] {M : Type u_1} [inst_6 : TopologicalSpace M] [inst_7 : ChartedSpace H M]\\n  [inst_8 : SmoothManifoldWithCorners I M] {f : M → F} {U : Set M} {a b : M},\\n  MDifferentiableOn I (modelWithCornersSelf ℂ F) f U →\\n    IsPreconnected U → IsCompact U → IsOpen U → a ∈ U → b ∈ U → f a = f b\",\n  \"isProp\": true,\n  \"docString\":\n  \"If a function `f : M → F` from a complex manifold to a complex normed space is holomorphic on a\\n(pre)connected compact open set, then it is a constant on this set. \"},\n {\"theorem\":\n  \"∀ {E : Type u_2} [inst : NormedAddCommGroup E] [inst_1 : NormedSpace ℂ E] {F : Type u_4} [inst_2 : NormedAddCommGroup F]\\n  [inst_3 : NormedSpace ℂ F] {H : Type u_3} [inst_4 : TopologicalSpace H] {I : ModelWithCorners ℂ E H}\\n  [inst_5 : ModelWithCorners.Boundaryless I] {M : Type u_1} [inst_6 : TopologicalSpace M] [inst_7 : CompactSpace M]\\n  [inst_8 : ChartedSpace H M] [inst_9 : SmoothManifoldWithCorners I M] [inst_10 : PreconnectedSpace M] {f : M → F},\\n  MDifferentiable I (modelWithCornersSelf ℂ F) f → ∀ (a b : M), f a = f b\",\n  \"isProp\": true,\n  \"docString\":\n  \"A holomorphic function on a compact connected complex manifold is constant. \"},\n {\"theorem\":\n  \"∀ {E : Type u_1} [inst : NormedAddCommGroup E] [inst_1 : NormedSpace ℂ E] {F : Type u_4} [inst_2 : NormedAddCommGroup F]\\n  [inst_3 : NormedSpace ℂ F] {H : Type u_2} [inst_4 : TopologicalSpace H] {I : ModelWithCorners ℂ E H}\\n  [inst_5 : ModelWithCorners.Boundaryless I] {M : Type u_3} [inst_6 : TopologicalSpace M] [inst_7 : CompactSpace M]\\n  [inst_8 : ChartedSpace H M] [inst_9 : SmoothManifoldWithCorners I M] {f : M → F},\\n  MDifferentiable I (modelWithCornersSelf ℂ F) f → IsLocallyConstant f\",\n  \"isProp\": true,\n  \"docString\":\n  \"A holomorphic function on a compact complex manifold is locally constant. \"},\n {\"theorem\":\n  \"∀ {α : Type u_2} {β : Type u_1} {ι : Type u_3} {m : MeasurableSpace α} (μ : MeasureTheory.Measure α)\\n  [inst : NormedAddCommGroup β] {p : ENNReal} {g : α → β},\\n  1 ≤ p → p ≠ ⊤ → MeasureTheory.Memℒp g p → MeasureTheory.UnifIntegrable (fun x => g) p μ\",\n  \"isProp\": true,\n  \"docString\": \"A constant function is uniformly integrable. \"}]\n", "prompt_cons": "/-- If a function `f : M → F` from a complex manifold to a complex normed space is holomorphic on a\n(pre)connected compact open set, then it is a constant on this set. -/\ntheorem ∀ {E : Type u_2} [inst : NormedAddCommGroup E] [inst_1 : NormedSpace ℂ E] {F : Type u_4} [inst_2 : NormedAddCommGroup F]\n  [inst_3 : NormedSpace ℂ F] {H : Type u_3} [inst_4 : TopologicalSpace H] {I : ModelWithCorners ℂ E H}\n  [inst_5 : ModelWithCorners.Boundaryless I] {M : Type u_1} [inst_6 : TopologicalSpace M] [inst_7 : ChartedSpace H M]\n  [inst_8 : SmoothManifoldWithCorners I M] {f : M → F} {U : Set M} {a b : M},\n  MDifferentiableOn I (modelWithCornersSelf ℂ F) f U →\n    IsPreconnected U → IsCompact U → IsOpen U → a ∈ U → b ∈ U → f a = f b :=\n\n/-- A holomorphic function on a compact connected complex manifold is constant. -/\ntheorem ∀ {E : Type u_2} [inst : NormedAddCommGroup E] [inst_1 : NormedSpace ℂ E] {F : Type u_4} [inst_2 : NormedAddCommGroup F]\n  [inst_3 : NormedSpace ℂ F] {H : Type u_3} [inst_4 : TopologicalSpace H] {I : ModelWithCorners ℂ E H}\n  [inst_5 : ModelWithCorners.Boundaryless I] {M : Type u_1} [inst_6 : TopologicalSpace M] [inst_7 : CompactSpace M]\n  [inst_8 : ChartedSpace H M] [inst_9 : SmoothManifoldWithCorners I M] [inst_10 : PreconnectedSpace M] {f : M → F},\n  MDifferentiable I (modelWithCornersSelf ℂ F) f → ∀ (a b : M), f a = f b :=\n\n/-- A holomorphic function on a compact complex manifold is locally constant. -/\ntheorem ∀ {E : Type u_1} [inst : NormedAddCommGroup E] [inst_1 : NormedSpace ℂ E] {F : Type u_4} [inst_2 : NormedAddCommGroup F]\n  [inst_3 : NormedSpace ℂ F] {H : Type u_2} [inst_4 : TopologicalSpace H] {I : ModelWithCorners ℂ E H}\n  [inst_5 : ModelWithCorners.Boundaryless I] {M : Type u_3} [inst_6 : TopologicalSpace M] [inst_7 : CompactSpace M]\n  [inst_8 : ChartedSpace H M] [inst_9 : SmoothManifoldWithCorners I M] {f : M → F},\n  MDifferentiable I (modelWithCornersSelf ℂ F) f → IsLocallyConstant f :=\n\n/-- A constant function is uniformly integrable. -/\ntheorem ∀ {α : Type u_2} {β : Type u_1} {ι : Type u_3} {m : MeasurableSpace α} (μ : MeasureTheory.Measure α)\n  [inst : NormedAddCommGroup β] {p : ENNReal} {g : α → β},\n  1 ≤ p → p ≠ ⊤ → MeasureTheory.Memℒp g p → MeasureTheory.UnifIntegrable (fun x => g) p μ :=\n\n/-- Suppose that $f$ is holomorphic in an open set $\\Omega$. Prove that if $|f|$ is constant, then $f$ is constant. -/\ntheorem", "choices": ["forall {E : Type u_2} [inst : NormedAddCommGroup E] [inst_1 : NormedSpace ℂ E] {F : Type u_4} [inst_2 : NormedAddCommGroup F]\n  [inst_3 : NormedSpace ℂ F] {H : Type u_3} [inst_4 : TopologicalSpace H] {I : ModelWithCorners ℂ E H}\n  [inst_5 : ModelWithCorners.Boundaryless I] {M : Type u_1} [inst_6 : TopologicalSpace M] [inst_7 : ChartedSpace H M]\n  [inst_8 : SmoothManifoldWithCorners I M] {f : M → F} {U : Set M},\n  MDifferentiableOn I (modelWithCornersSelf ℂ F) f U → IsOpen U →\n  (∀ x ∈ U, ∥f x∥ = ∥f (classical.arbitrary M)∥) → ∀ x y ∈ U, f x = f y ", "∀ {E : Type u_2} [inst : NormedAddCommGroup E] [inst_1 : NormedSpace ℂ E] {F : Type u_4} [inst_2 : NormedAddCommGroup F]\n  [inst_3 : NormedSpace ℂ F] {H : Type u_3} [inst_4 : TopologicalSpace H] {I : ModelWithCorners ℂ E H}\n  [inst_5 : ModelWithCorners.Boundaryless I] {M : Type u_1} [inst_6 : TopologicalSpace M] [inst_7 : ChartedSpace H M]\n  [inst_8 : SmoothManifoldWithCorners I M] {f : M → F} {U : Set M},\n  MDifferentiableOn I (modelWithCornersSelf ℂ F) f U →\n    IsOpen U → (∀ x ∈ U, ∥f x∥ = ∥f (Classical.arbitrary M)∥) → ∀ a b ∈ U, f a = f b ", "∀ {E : Type u_1} [inst : NormedAddCommGroup E] [inst_1 : NormedSpace ℂ E] {F : Type u_4} [inst_2 : NormedAddCommGroup F]\n  [inst_3 : NormedSpace ℂ F] {H : Type u_2} [inst_4 : TopologicalSpace H] {I : ModelWithCorners ℂ E H}\n  [inst_5 : ModelWithCorners.Boundaryless I] {M : Type u_3} [inst_6 : TopologicalSpace M] [inst_7 : ChartedSpace H M]\n  [inst_8 : SmoothManifoldWithCorners I M] {f : M → F} {U : Set M},\n  MDifferentiableOn I (modelWithCornersSelf ℂ F) f U → IsOpen U →\n  (∀ x ∈ U, Complex.abs (f x) = Complex.abs (f (Classical.arbitrary M))) → ∀ a b ∈ U, f a = f b ", "∀ {E : Type u_2} [inst : NormedAddCommGroup E] [inst_1 : NormedSpace ℂ E] {F : Type u_4} [inst_2 : NormedAddCommGroup F]\n  [inst_3 : NormedSpace ℂ F] {H : Type u_3} [inst_4 : TopologicalSpace H] {I : ModelWithCorners ℂ E H}\n  [inst_5 : ModelWithCorners.Boundaryless I] {M : Type u_1} [inst_6 : TopologicalSpace M] [inst_7 : ChartedSpace H M]\n  [inst_8 : SmoothManifoldWithCorners I M] {f : M → F} {U : Set M},\n  MDifferentiableOn I (modelWithCornersSelf ℂ F) f U →\n    IsOpen U → (∀ x ∈ U, ∥f x∥ = ∥f (classical.arbitrary M)∥) → ∀ a b ∈ U, f a = f b ", "∀ {E : Type u_1} [inst : NormedAddCommGroup E] [inst_1 : NormedSpace ℂ E] {F : Type u_4} [inst_2 : NormedAddCommGroup F]\n  [inst_3 : NormedSpace ℂ F] {H : Type u_2} [inst_4 : TopologicalSpace H] {I : ModelWithCorners ℂ E H}\n  [inst_5 : ModelWithCorners.Boundaryless I] {M : Type u_3} [inst_6 : TopologicalSpace M] [inst_7 : ChartedSpace H M]\n  [inst_8 : SmoothManifoldWithCorners I M] {f : M → F} {U : Set M},\n  MDifferentiableOn I (modelWithCornersSelf ℂ F) f U → IsOpen U →\n  (∀ x ∈ U, ∥f x∥ = const) → ∀ (a b : M), a ∈ U → b ∈ U → f a = f b ", "∀ {E : Type u_2} [inst : NormedAddCommGroup E] [inst_1 : NormedSpace ℂ E] {F : Type u_4} [inst_2 : NormedAddCommGroup F]\n  [inst_3 : NormedSpace ℂ F] {H : Type u_3} [inst_4 : TopologicalSpace H] {I : ModelWithCorners ℂ E H}\n  [inst_5 : ModelWithCorners.Boundaryless I] {M : Type u_1} [inst_6 : TopologicalSpace M] [inst_7 : ChartedSpace H M]\n  [inst_8 : SmoothManifoldWithCorners I M] {f : M → F} {U : Set M},\n  MDifferentiableOn I (modelWithCornersSelf ℂ F) f U → IsOpen U →\n  (∀ x ∈ U, ∥f x∥ = ∥f (Classical.some (_ : Classical.Nonempty M))∥) → ∀ a b ∈ U, f a = f b ", "∀ {E : Type u_1} [inst : NormedAddCommGroup E] [inst_1 : NormedSpace ℂ E] {F : Type u_4} [inst_2 : NormedAddCommGroup F]\n  [inst_3 : NormedSpace ℂ F] {H : Type u_2} [inst_4 : TopologicalSpace H] {I : ModelWithCorners ℂ E H}\n  [inst_5 : ModelWithCorners.Boundaryless I] {M : Type u_3} [inst_6 : TopologicalSpace M] [inst_7 : ChartedSpace H M]\n  [inst_8 : SmoothManifoldWithCorners I M] {f : M → F} {U : Set M},\n  MDifferentiableOn I (modelWithCornersSelf ℂ F) f U → IsOpen U →\n  (∀ x ∈ U, ∥f x∥ = ∥f (classical.arbitrary M)∥) → ∀ a b ∈ U, f a = f b ", "∀ {E : Type u_1} [inst : NormedAddCommGroup E] [inst_1 : NormedSpace ℂ E] {F : Type u_4} [inst_2 : NormedAddCommGroup F]\n  [inst_3 : NormedSpace ℂ F] {H : Type u_2} [inst_4 : TopologicalSpace H] {I : ModelWithCorners ℂ E H}\n  [inst_5 : ModelWithCorners.Boundaryless I] {M : Type u_3} [inst_6 : TopologicalSpace M] [inst_7 : ChartedSpace H M]\n  [inst_8 : SmoothManifoldWithCorners I M] {f : M → F} {Ω : Set M},\n  MDifferentiableOn I (modelWithCornersSelf ℂ F) f Ω → IsOpen Ω →\n  IsLocallyConstant (λ x, ∥f x∥) → ∀ (a b : M), a ∈ Ω → b ∈ Ω → f a = f b ", "∀ {E : Type u_2} [inst : NormedAddCommGroup E] [inst_1 : NormedSpace ℂ E] {F : Type u_4} [inst_2 : NormedAddCommGroup F]\n  [inst_3 : NormedSpace ℂ F] {H : Type u_3} [inst_4 : TopologicalSpace H] {I : ModelWithCorners ℂ E H}\n  [inst_5 : ModelWithCorners.Boundaryless I] {M : Type u_1} [inst_6 : TopologicalSpace M] [inst_7 : ChartedSpace H M]\n  [inst_8 : SmoothManifoldWithCorners I M] {f : M → F} {U : Set M} {a b : M},\n  MDifferentiableOn I (modelWithCornersSelf ℂ F) f U →\n    IsOpen U → a ∈ U → b ∈ U → (forall x ∈ U, ∥f x∥ = ∥f a∥) → f a = f b ", "∀ {E : Type u_2} [inst : NormedAddCommGroup E] [inst_1 : NormedSpace ℂ E] {F : Type u_4} [inst_2 : NormedAddCommGroup F]\n  [inst_3 : NormedSpace ℂ F] {H : Type u_3} [inst_4 : TopologicalSpace H] {I : ModelWithCorners ℂ E H}\n  [inst_5 : ModelWithCorners.Boundaryless I] {M : Type u_1} [inst_6 : TopologicalSpace M] [inst_7 : ChartedSpace H M]\n  [inst_8 : SmoothManifoldWithCorners I M] {f : M → F} {U : Set M},\n  MDifferentiableOn I (modelWithCornersSelf ℂ F) f U →\n    IsOpen U → ∀ (a b : M), a ∈ U → b ∈ U → (∀ x ∈ U, ∥f x∥ = ∥f a∥) → f a = f b "]}
{"docString": "Prove that the power series $\\sum zn/n^2$ converges at every point of the unit circle.", "prompts": "[{\"theorem\":\n  \"∀ {𝕜 : Type u_3} {E : Type u_2} {F : Type u_1} [inst : NontriviallyNormedField 𝕜] [inst_1 : NormedAddCommGroup E]\\n  [inst_2 : NormedSpace 𝕜 E] [inst_3 : NormedAddCommGroup F] [inst_4 : NormedSpace 𝕜 F]\\n  {p : FormalMultilinearSeries 𝕜 E F} [inst_5 : CompleteSpace F],\\n  ContinuousOn (FormalMultilinearSeries.sum p) (EMetric.ball 0 (FormalMultilinearSeries.radius p))\",\n  \"isProp\": true,\n  \"docString\":\n  \"The sum of a converging power series is continuous in its disk of convergence. \"},\n {\"theorem\":\n  \"∀ {α : Type u_2} {G : Type u_3} [inst : NormedAddCommGroup G] [inst_1 : NormedSpace ℝ G] {m : MeasurableSpace α}\\n  {μ : MeasureTheory.Measure α} {ι : Type u_1} [inst_2 : Countable ι] {F : ι → α → G} {f : α → G} (bound : ι → α → ℝ),\\n  (∀ (n : ι), MeasureTheory.AEStronglyMeasurable (F n) μ) →\\n    (∀ (n : ι), ∀ᵐ (a : α) ∂μ, ‖F n a‖ ≤ bound n a) →\\n      (∀ᵐ (a : α) ∂μ, Summable fun n => bound n a) →\\n        (MeasureTheory.Integrable fun a => ∑' (n : ι), bound n a) →\\n          (∀ᵐ (a : α) ∂μ, HasSum (fun n => F n a) (f a)) → HasSum (fun n => ∫ (a : α), F n a ∂μ) (∫ (a : α), f a ∂μ)\",\n  \"isProp\": true,\n  \"docString\": \"Lebesgue dominated convergence theorem for series. \"},\n {\"theorem\":\n  \"∀ {β : Type u_1} {f g : β → ℝ}, (∀ (b : β), 0 ≤ g b) → (∀ (b : β), g b ≤ f b) → Summable f → Summable g\",\n  \"isProp\": true,\n  \"docString\":\n  \"Comparison test of convergence of series of non-negative real numbers. \"},\n {\"theorem\":\n  \"∀ {A : Type u_1} [inst : CommRing A] [inst_1 : Algebra ℚ A] (n : ℕ),\\n  (Finset.sum (Finset.range n) fun k => PowerSeries.exp A ^ k) =\\n    PowerSeries.mk fun p => Finset.sum (Finset.range n) fun k => ↑(k ^ p) * ↑(algebraMap ℚ A) (↑(Nat.factorial p))⁻¹\",\n  \"isProp\": true,\n  \"docString\":\n  \"Shows that\\n$\\\\sum_{k = 0}^{n - 1} (e^{X})^k = \\\\sum_{p = 0}^{\\\\infty} \\\\sum_{k = 0}^{n - 1} \\\\frac{k^p}{p!}X^p$. \"}]\n", "prompt_cons": "/-- The sum of a converging power series is continuous in its disk of convergence. -/\ntheorem ∀ {𝕜 : Type u_3} {E : Type u_2} {F : Type u_1} [inst : NontriviallyNormedField 𝕜] [inst_1 : NormedAddCommGroup E]\n  [inst_2 : NormedSpace 𝕜 E] [inst_3 : NormedAddCommGroup F] [inst_4 : NormedSpace 𝕜 F]\n  {p : FormalMultilinearSeries 𝕜 E F} [inst_5 : CompleteSpace F],\n  ContinuousOn (FormalMultilinearSeries.sum p) (EMetric.ball 0 (FormalMultilinearSeries.radius p)) :=\n\n/-- Lebesgue dominated convergence theorem for series. -/\ntheorem ∀ {α : Type u_2} {G : Type u_3} [inst : NormedAddCommGroup G] [inst_1 : NormedSpace ℝ G] {m : MeasurableSpace α}\n  {μ : MeasureTheory.Measure α} {ι : Type u_1} [inst_2 : Countable ι] {F : ι → α → G} {f : α → G} (bound : ι → α → ℝ),\n  (∀ (n : ι), MeasureTheory.AEStronglyMeasurable (F n) μ) →\n    (∀ (n : ι), ∀ᵐ (a : α) ∂μ, ‖F n a‖ ≤ bound n a) →\n      (∀ᵐ (a : α) ∂μ, Summable fun n => bound n a) →\n        (MeasureTheory.Integrable fun a => ∑' (n : ι), bound n a) →\n          (∀ᵐ (a : α) ∂μ, HasSum (fun n => F n a) (f a)) → HasSum (fun n => ∫ (a : α), F n a ∂μ) (∫ (a : α), f a ∂μ) :=\n\n/-- Comparison test of convergence of series of non-negative real numbers. -/\ntheorem ∀ {β : Type u_1} {f g : β → ℝ}, (∀ (b : β), 0 ≤ g b) → (∀ (b : β), g b ≤ f b) → Summable f → Summable g :=\n\n/-- Shows that\n$\\sum_{k = 0}^{n - 1} (e^{X})^k = \\sum_{p = 0}^{\\infty} \\sum_{k = 0}^{n - 1} \\frac{k^p}{p!}X^p$. -/\ntheorem ∀ {A : Type u_1} [inst : CommRing A] [inst_1 : Algebra ℚ A] (n : ℕ),\n  (Finset.sum (Finset.range n) fun k => PowerSeries.exp A ^ k) =\n    PowerSeries.mk fun p => Finset.sum (Finset.range n) fun k => ↑(k ^ p) * ↑(algebraMap ℚ A) (↑(Nat.factorial p))⁻¹ :=\n\n/-- Prove that the power series $\\sum zn/n^2$ converges at every point of the unit circle. -/\ntheorem", "choices": ["∀ {𝕜 : Type u_1} [inst : NontriviallyNormedField 𝕜] [inst_1 : IsROrC 𝕜], \n  Summable (λ (n : ℕ), (1 / (↑n ^ 2)) * Complex.abs (coe (IsROrC.abs (IsROrC.i * 1)))) ", "∀ {𝕜 : Type u_1} [inst : NontriviallyNormedField 𝕜] [inst_1 : CompleteSpace 𝕜],\n  ∀ (z : 𝕜), ∥z∥ = 1 → HasSum (λ n => z ^ n / (↑n + 1) ^ 2) (PowerSeries.sum (λ n => z ^ n / (↑n + 1) ^ 2)) ", "∀ {𝕜 : Type u_1} [inst : NondiscreteNormedField 𝕜] [inst_1 : CompleteSpace 𝕜]\n  (z : 𝕜), abs z = 1 → HasSum (λ n : ℕ, z ^ n / (n + 1) ^ 2) ", "∀ {𝕜 : Type u_1} [inst : IsROrC 𝕜] (z : 𝕜), IsROrC.abs z = 1 →\n  Summable (λ (n : ℕ), (z ^ n) / ((n + 1) * (n + 1) : 𝕜)) ", "∀ {𝕜 : Type u_1} [inst : NondiscreteNormedField 𝕜] [inst_1 : IsAbsoluteValue (norm : 𝕜 → ℝ)] (z : 𝕜),\n  abs z = 1 → Summable (λ n : ℕ, z ^ n / (n ^ 2 : ℝ)) ", "∀ {𝕜 : Type u_1} [inst : NondiscreteNormedField 𝕜] [inst_1 : CompleteSpace 𝕜]\n  (z : 𝕜), HasSum (λ n, z ^ n / (↑n ^ 2)) (Summable fun n => z ^ n / (↑n ^ 2)) ", "∀ {𝕜 : Type u_1} [inst : NondiscreteNormedField 𝕜] {R : ℝ}, 0 < R →\n  HasSum (λ n => (R * Complex.exp (Complex.I * (↑n * α))) / (↑n ^ 2)) (R * (Complex.of_real π * Complex.I / 2) * (Complex.exp (Complex.I * α) - 1)) ", "forall {𝕜 : Type u_1} [inst : NontriviallyNormedField 𝕜] [inst_1 : CompleteSpace 𝕜] {z : 𝕜},\n  (abs z = 1) → Summable (λ n => z ^ n / (↑n ^ 2)) ", "∀ {𝕜 : Type u_1} [inst : NontriviallyNormedField 𝕜] [inst_1 : CompleteSpace 𝕜] {z : 𝕜},\n  abs z = 1 → HasSum (fun n => z ^ n / n ^ 2) (Summable fun n => z ^ n / n ^ 2) ", "∀ {𝕜 : Type u_1} [inst : NondiscreteNormedField 𝕜] {z : 𝕜}, Complex.abs z = 1 →\n  Summable (λ (n : ℕ), z ^ n / (n + 1) ^ 2) "]}
{"docString": "Suppose $f$ is continuous in a region $\\Omega$. Prove that any two primitives of $f$ (if they exist) differ by a constant.", "prompts": "[{\"theorem\":\n  \"∀ {F : Type u_1} {A : outParam (Type u_2)} {B : outParam (Type u_3)} [inst : Monoid A] [inst_1 : Monoid B]\\n  [inst_2 : TopologicalSpace A] [inst_3 : TopologicalSpace B] [self : ContinuousMonoidHomClass F A B] (f : F),\\n  Continuous ↑f\",\n  \"isProp\": true,\n  \"docString\": \"Proof of the continuity of the map. \"},\n {\"theorem\":\n  \"∀ {α : Type u} {β : Type v} [inst : TopologicalSpace α] [inst_1 : TopologicalSpace β] [inst_2 : T2Space α] {s : Set β},\\n  Dense s → ∀ {f g : β → α}, Continuous f → Continuous g → Set.EqOn f g s → f = g\",\n  \"isProp\": true,\n  \"docString\":\n  \"If two continuous functions are equal on a dense set, then they are equal. \"},\n {\"theorem\":\n  \"∀ {X : Type u_1} {Y : Type u_2} [inst : TopologicalSpace X] {m : MeasurableSpace X} [inst_1 : TopologicalSpace Y]\\n  [inst_2 : T2Space Y] {μ : MeasureTheory.Measure X} [inst_3 : MeasureTheory.Measure.IsOpenPosMeasure μ] {f g : X → Y},\\n  f =ᶠ[MeasureTheory.Measure.ae μ] g → Continuous f → Continuous g → f = g\",\n  \"isProp\": true,\n  \"docString\":\n  \"If two continuous functions are a.e. equal, then they are equal. \"},\n {\"theorem\":\n  \"∀ {X : Type u_1} {E : Type u_2} [inst : MeasurableSpace X] [inst_1 : TopologicalSpace X] [inst_2 : NormedAddCommGroup E]\\n  {f : X → E} {μ : MeasureTheory.Measure X} [inst_3 : OpensMeasurableSpace X]\\n  [inst_4 : MeasureTheory.IsLocallyFiniteMeasure μ] [inst_5 : SecondCountableTopologyEither X E],\\n  Continuous f → MeasureTheory.LocallyIntegrable f\",\n  \"isProp\": true,\n  \"docString\":\n  \"A continuous function `f` is locally integrable with respect to any locally finite measure. \"}]\n", "prompt_cons": "/-- Proof of the continuity of the map. -/\ntheorem ∀ {F : Type u_1} {A : outParam (Type u_2)} {B : outParam (Type u_3)} [inst : Monoid A] [inst_1 : Monoid B]\n  [inst_2 : TopologicalSpace A] [inst_3 : TopologicalSpace B] [self : ContinuousMonoidHomClass F A B] (f : F),\n  Continuous ↑f :=\n\n/-- If two continuous functions are equal on a dense set, then they are equal. -/\ntheorem ∀ {α : Type u} {β : Type v} [inst : TopologicalSpace α] [inst_1 : TopologicalSpace β] [inst_2 : T2Space α] {s : Set β},\n  Dense s → ∀ {f g : β → α}, Continuous f → Continuous g → Set.EqOn f g s → f = g :=\n\n/-- If two continuous functions are a.e. equal, then they are equal. -/\ntheorem ∀ {X : Type u_1} {Y : Type u_2} [inst : TopologicalSpace X] {m : MeasurableSpace X} [inst_1 : TopologicalSpace Y]\n  [inst_2 : T2Space Y] {μ : MeasureTheory.Measure X} [inst_3 : MeasureTheory.Measure.IsOpenPosMeasure μ] {f g : X → Y},\n  f =ᶠ[MeasureTheory.Measure.ae μ] g → Continuous f → Continuous g → f = g :=\n\n/-- A continuous function `f` is locally integrable with respect to any locally finite measure. -/\ntheorem ∀ {X : Type u_1} {E : Type u_2} [inst : MeasurableSpace X] [inst_1 : TopologicalSpace X] [inst_2 : NormedAddCommGroup E]\n  {f : X → E} {μ : MeasureTheory.Measure X} [inst_3 : OpensMeasurableSpace X]\n  [inst_4 : MeasureTheory.IsLocallyFiniteMeasure μ] [inst_5 : SecondCountableTopologyEither X E],\n  Continuous f → MeasureTheory.LocallyIntegrable f :=\n\n/-- Suppose $f$ is continuous in a region $\\Omega$. Prove that any two primitives of $f$ (if they exist) differ by a constant. -/\ntheorem", "choices": ["∀ {α : Type u} {β : Type v} [inst : TopologicalSpace α] [inst_1 : TopologicalSpace β] [inst_2 : T2Space β] {s : Set α}\n  [inst_3 : TopologicalSpace.OpensMeasurableSpace α] {f : α → β} {F G : α → β},\n  (∀x ∈ s, HasDerivativeAt F (f x) x) → (∀x ∈ s, HasDerivativeAt G (f x) x) → ContinuousOn f s →\n  ∃c : β, ∀x ∈ s, F x = G x + c ", "∀ {α : Type u} {E : Type v} [inst : TopologicalSpace α] [inst_1 : TopologicalSpace E] [inst_2 : T2Space α] [inst_3 : NormedAddCommGroup E]\n  {f : α → E} {F G : α → E}, Continuous f → (∀ x, HasDerivativeAt F (f x) x) → (∀ x, HasDerivativeAt G (f x) x) → ∃ C : E, ∀ x, F x = G x + C ", "∀ {α : Type u} {β : Type v} [inst : TopologicalSpace α] [inst_1 : TopologicalSpace β] [inst_2 : T2Space α] [inst_3 : T2Space β]\n  [inst_4 : AddGroup β] {Ω : Set α} {f : α → β}, ContinuousOn f Ω →\n  ∀ {F G : α → β}, HasDerivativeOn F f Ω → HasDerivativeOn G f Ω → Set.EqOn (λ x, F x - G x) (Function.const α 0) Ω ", "∀ {α : Type u} {β : Type v} [inst : TopologicalSpace α] [inst_1 : TopologicalSpace β] [inst_2 : T2Space α] [inst_3 : AddCommGroup β]\n  {Ω : Set α} {f F G : α → β}, ContinuousOn f Ω → (∀ x ∈ Ω, HasDerivWithinAt G (f x) Ω x) → (∀ x ∈ Ω, HasDerivWithinAt F (f x) Ω x)\n  → ∃ C : β, ∀ x ∈ Ω, G x = F x + C ", "∀ {α : Type u} {β : Type v} [inst : TopologicalSpace α] [inst_1 : TopologicalSpace β] [inst_2 : T2Space β] [inst_3 : AddCommGroup β]\n  {Ω : Set α} {f F G : α → β}, ContinuousOn f Ω → (∀ x ∈ Ω, HasDerivAt F (f x) x) → (∀ x ∈ Ω, HasDerivAt G (f x) x) →\n  ∃ C : β, ∀ x ∈ Ω, F x = G x + C ", "∀ {α : Type u_1} {E : Type u_2} [inst : TopologicalSpace α] [inst_1 : MeasureTheory.MeasureSpace α] [inst_2 : TopologicalSpace E]\n  [inst_3 : NormedAddCommGroup E] {f g F G : α → E} {Ω : Set α},\n  Continuous f → Continuous g → (∀ x ∈ Ω, F x = g x - f x) → (∀ x ∈ Ω, G x = g x - f x) →\n  (∃ C : E, ∀ x ∈ Ω, F x = G x + C) ", "∀ {α : Type u} {β : Type v} [inst : TopologicalSpace α] [inst_1 : AddCommGroup β] [inst_2 : TopologicalSpace β]\n  [inst_3 : TopologicalAddGroup β] [inst_4 : T2Space β] {f : α → β} {F₁ F₂ : α → β},\n  Continuous f → (∀ x, F₁ x = F₁ x₀ + ∫ t in x₀..x, f t) → (∀ x, F₂ x = F₂ x₀ + ∫ t in x₀..x, f t) → F₁ = F₂ ", "∀ {α : Type u} {β : Type v} [inst : TopologicalSpace α] [inst_1 : TopologicalSpace β] [inst_2 : T2Space α] [inst_3 : NormedAddCommGroup β] {Ω : Set α}\n  (f : α → β) (F G : α → β), ContinuousOn f Ω → (∀ x ∈ Ω, HasDerivWithinAt F (f x) Ω x) → (∀ x ∈ Ω, HasDerivWithinAt G (f x) Ω x) →\n  ∃ C : β, ∀ x ∈ Ω, F x = G x + C ", "∀ {α : Type u_1} {β : Type u_2} [inst : TopologicalSpace α] [inst_1 : TopologicalSpace β] [inst_2 : T2Space α]\n  [inst_3 : AddGroup β] [inst_4 : TopologicalAddGroup β] {f : α → β} {F₁ F₂ : α → β},\n  Continuous f → (∀ x : α, F₁ x = F₂ x + f x) → (∀ x : α, F₂ x = F₁ x + f x) → F₁ = F₂ ", "∀ {α : Type u} {β : Type v} [inst : TopologicalSpace α] [inst_1 : TopologicalSpace β] [inst_2 : T2Space α] [inst_3 : T2Space β]\n  [inst_4 : AddCommGroup β] [inst_5 : TopologicalAddGroup β] {Ω : Set α} {f : α → β} {F G : α → β},\n  ContinuousOn f Ω → (∀ x ∈ Ω, HasDerivativeAt F (f x) x) → (∀ x ∈ Ω, HasDerivativeAt G (f x) x) → ∃ C : β, ∀ x ∈ Ω, F x = G x + C "]}
{"docString": "Let $\\Omega$ be a bounded open subset of $\\mathbb{C}$, and $\\varphi: \\Omega \\rightarrow \\Omega$ a holomorphic function. Prove that if there exists a point $z_{0} \\in \\Omega$ such that $\\varphi\\left(z_{0}\\right)=z_{0} \\quad \\text { and } \\quad \\varphi^{\\prime}\\left(z_{0}\\right)=1$ then $\\varphi$ is linear.", "prompts": "[{\"theorem\":\n  \"∀ {E : Type u_1} [inst : NormedAddCommGroup E] [inst_1 : NormedSpace ℂ E] {F : Type u_4} [inst_2 : NormedAddCommGroup F]\\n  [inst_3 : NormedSpace ℂ F] {H : Type u_2} [inst_4 : TopologicalSpace H] {I : ModelWithCorners ℂ E H}\\n  [inst_5 : ModelWithCorners.Boundaryless I] {M : Type u_3} [inst_6 : TopologicalSpace M] [inst_7 : CompactSpace M]\\n  [inst_8 : ChartedSpace H M] [inst_9 : SmoothManifoldWithCorners I M] {f : M → F},\\n  MDifferentiable I (modelWithCornersSelf ℂ F) f → IsLocallyConstant f\",\n  \"isProp\": true,\n  \"docString\":\n  \"A holomorphic function on a compact complex manifold is locally constant. \"},\n {\"theorem\":\n  \"∀ {E : Type u_2} [inst : NormedAddCommGroup E] [inst_1 : NormedSpace ℂ E] {F : Type u_4} [inst_2 : NormedAddCommGroup F]\\n  [inst_3 : NormedSpace ℂ F] {H : Type u_3} [inst_4 : TopologicalSpace H] {I : ModelWithCorners ℂ E H}\\n  [inst_5 : ModelWithCorners.Boundaryless I] {M : Type u_1} [inst_6 : TopologicalSpace M] [inst_7 : CompactSpace M]\\n  [inst_8 : ChartedSpace H M] [inst_9 : SmoothManifoldWithCorners I M] [inst_10 : PreconnectedSpace M] {f : M → F},\\n  MDifferentiable I (modelWithCornersSelf ℂ F) f → ∀ (a b : M), f a = f b\",\n  \"isProp\": true,\n  \"docString\":\n  \"A holomorphic function on a compact connected complex manifold is constant. \"},\n {\"theorem\":\n  \"∀ {E : Type u_1} [inst : NormedAddCommGroup E] [inst_1 : NormedSpace ℂ E] {C : ℝ} {f : ℂ → E} {z : ℂ},\\n  DiffContOnCl ℂ f (Set.Ioi 0 ×ℂ Set.Ioi 0) →\\n    (∃ c,\\n        c < 2 ∧\\n          ∃ B,\\n            f =O[Filter.comap (↑Complex.abs) Filter.atTop ⊓ Filter.principal (Set.Ioi 0 ×ℂ Set.Ioi 0)] fun z =>\\n              rexp (B * ↑Complex.abs z ^ c)) →\\n      (∀ (x : ℝ), 0 ≤ x → ‖f ↑x‖ ≤ C) → (∀ (x : ℝ), 0 ≤ x → ‖f (↑x * Complex.I)‖ ≤ C) → 0 ≤ z.re → 0 ≤ z.im → ‖f z‖ ≤ C\",\n  \"isProp\": true,\n  \"docString\":\n  \"**Phragmen-Lindelöf principle** in the first quadrant. Let `f : ℂ → E` be a function such that\\n\\n* `f` is differentiable in the open first quadrant and is continuous on its closure;\\n* `‖f z‖` is bounded from above by `A * exp(B * (abs z) ^ c)` on the open first quadrant\\n  for some `c < 2`;\\n* `‖f z‖` is bounded from above by a constant `C` on the boundary of the first quadrant.\\n\\nThen `‖f z‖` is bounded from above by the same constant on the closed first quadrant. \"},\n {\"theorem\":\n  \"∀ {R : Type u_1} {M : Type u_2} [inst : TopologicalSpace R] [inst_1 : DivisionRing R] [inst_2 : ContinuousSub R]\\n  [inst_3 : AddCommGroup M] [inst_4 : TopologicalSpace M] [inst_5 : ContinuousAdd M] [inst_6 : Module R M]\\n  [inst_7 : ContinuousSMul R M] (f : M →L[R] R), f ≠ 0 → IsOpenMap ↑f\",\n  \"isProp\": true,\n  \"docString\": \"A nonzero continuous linear functional is open. \"}]\n", "prompt_cons": "/-- A holomorphic function on a compact complex manifold is locally constant. -/\ntheorem ∀ {E : Type u_1} [inst : NormedAddCommGroup E] [inst_1 : NormedSpace ℂ E] {F : Type u_4} [inst_2 : NormedAddCommGroup F]\n  [inst_3 : NormedSpace ℂ F] {H : Type u_2} [inst_4 : TopologicalSpace H] {I : ModelWithCorners ℂ E H}\n  [inst_5 : ModelWithCorners.Boundaryless I] {M : Type u_3} [inst_6 : TopologicalSpace M] [inst_7 : CompactSpace M]\n  [inst_8 : ChartedSpace H M] [inst_9 : SmoothManifoldWithCorners I M] {f : M → F},\n  MDifferentiable I (modelWithCornersSelf ℂ F) f → IsLocallyConstant f :=\n\n/-- A holomorphic function on a compact connected complex manifold is constant. -/\ntheorem ∀ {E : Type u_2} [inst : NormedAddCommGroup E] [inst_1 : NormedSpace ℂ E] {F : Type u_4} [inst_2 : NormedAddCommGroup F]\n  [inst_3 : NormedSpace ℂ F] {H : Type u_3} [inst_4 : TopologicalSpace H] {I : ModelWithCorners ℂ E H}\n  [inst_5 : ModelWithCorners.Boundaryless I] {M : Type u_1} [inst_6 : TopologicalSpace M] [inst_7 : CompactSpace M]\n  [inst_8 : ChartedSpace H M] [inst_9 : SmoothManifoldWithCorners I M] [inst_10 : PreconnectedSpace M] {f : M → F},\n  MDifferentiable I (modelWithCornersSelf ℂ F) f → ∀ (a b : M), f a = f b :=\n\n/-- **Phragmen-Lindelöf principle** in the first quadrant. Let `f : ℂ → E` be a function such that\n\n* `f` is differentiable in the open first quadrant and is continuous on its closure;\n* `‖f z‖` is bounded from above by `A * exp(B * (abs z) ^ c)` on the open first quadrant\n  for some `c < 2`;\n* `‖f z‖` is bounded from above by a constant `C` on the boundary of the first quadrant.\n\nThen `‖f z‖` is bounded from above by the same constant on the closed first quadrant. -/\ntheorem ∀ {E : Type u_1} [inst : NormedAddCommGroup E] [inst_1 : NormedSpace ℂ E] {C : ℝ} {f : ℂ → E} {z : ℂ},\n  DiffContOnCl ℂ f (Set.Ioi 0 ×ℂ Set.Ioi 0) →\n    (∃ c,\n        c < 2 ∧\n          ∃ B,\n            f =O[Filter.comap (↑Complex.abs) Filter.atTop ⊓ Filter.principal (Set.Ioi 0 ×ℂ Set.Ioi 0)] fun z =>\n              rexp (B * ↑Complex.abs z ^ c)) →\n      (∀ (x : ℝ), 0 ≤ x → ‖f ↑x‖ ≤ C) → (∀ (x : ℝ), 0 ≤ x → ‖f (↑x * Complex.I)‖ ≤ C) → 0 ≤ z.re → 0 ≤ z.im → ‖f z‖ ≤ C :=\n\n/-- A nonzero continuous linear functional is open. -/\ntheorem ∀ {R : Type u_1} {M : Type u_2} [inst : TopologicalSpace R] [inst_1 : DivisionRing R] [inst_2 : ContinuousSub R]\n  [inst_3 : AddCommGroup M] [inst_4 : TopologicalSpace M] [inst_5 : ContinuousAdd M] [inst_6 : Module R M]\n  [inst_7 : ContinuousSMul R M] (f : M →L[R] R), f ≠ 0 → IsOpenMap ↑f :=\n\n/-- Let $\\Omega$ be a bounded open subset of $\\mathbb{C}$, and $\\varphi: \\Omega \\rightarrow \\Omega$ a holomorphic function. Prove that if there exists a point $z_{0} \\in \\Omega$ such that $\\varphi\\left(z_{0}\\right)=z_{0} \\quad \\text { and } \\quad \\varphi^{\\prime}\\left(z_{0}\\right)=1$ then $\\varphi$ is linear. -/\ntheorem", "choices": ["∀ {E : Type u_1} [inst : NormedAddCommGroup E] [inst_1 : NormedSpace ℂ E] {F : Type u_4} [inst_2 : NormedAddCommGroup F]\n  [inst_3 : NormedSpace ℂ F] {H : Type u_2} [inst_4 : TopologicalSpace H] {I : ModelWithCorners ℂ E H}\n  [inst_5 : ModelWithCorners.Boundaryless I] {M : Type u_3} [inst_6 : TopologicalSpace M] [inst_7 : BoundedSpace M]\n  [inst_8 : ChartedSpace H M] [inst_9 : SmoothManifoldWithCorners I M] {φ : M → M} {z₀ : M},\n  MDifferentiable I (modelWithCornersSelf ℂ M) φ → φ z₀ = z₀ →\n    (mfderiv I (modelWithCornersSelf ℂ M) φ z₀).1 = 1 → ∀ (a b : M), φ a = φ b ", "∀ {E : Type u_1} [inst : NormedAddCommGroup E] [inst_1 : NormedSpace ℂ E] {H : Type u_2} [inst_2 : TopologicalSpace H]\n  {I : ModelWithCorners ℂ E H} [inst_3 : ModelWithCorners.Boundaryless I] {M : Type u_3} [inst_4 : TopologicalSpace M]\n  [inst_5 : ChartedSpace H M] [inst_6 : SmoothManifoldWithCorners I M] {Ω : Set M} [inst_7 : IsOpen Ω]\n  [inst_8 : IsBounded Ω] {f : M → M} [inst_9 : MDifferentiable I I f] {z₀ : M}, f z₀ = z₀ →\n    (df z₀).mdifferentiable I I = 1 → f = linear_map.id ", "∀ {E : Type u_2} [inst : NormedAddCommGroup E] [inst_1 : NormedSpace ℂ E] {F : Type u_4} [inst_2 : NormedAddCommGroup F]\n  [inst_3 : NormedSpace ℂ F] {H : Type u_3} [inst_4 : TopologicalSpace H] {I : ModelWithCorners ℂ E H}\n  [inst_5 : ModelWithCorners.Boundaryless I] {M : Type u_1} [inst_6 : TopologicalSpace M] [inst_7 : BoundedSpace M]\n  [inst_8 : OpenSpace M] [inst_9 : ChartedSpace H M] [inst_10 : SmoothManifoldWithCorners I M] {f : M → F},\n  MDifferentiable I (modelWithCornersSelf ℂ F) f →\n    (∃ z₀ : M, f z₀ = z₀ ∧ fderiv_within_at ℂ f (exterior M) z₀ = 1) →\n      ∀ (a b : M), f (a + b) = f a + f b ", "∀ {E : Type u_1} [inst : NormedAddCommGroup E] [inst_1 : NormedSpace ℂ E] {F : Type u_4} [inst_2 : NormedAddCommGroup F]\n  [inst_3 : NormedSpace ℂ F] {H : Type u_2} [inst_4 : TopologicalSpace H] {I : ModelWithCorners ℂ E H} [inst_5 : ModelWithCorners.Boundaryless I]\n  {M : Type u_3} [inst_6 : TopologicalSpace M] {Ω : Set M} [inst_7 : Bounded Ω] [inst_8 : IsOpen Ω] [inst_9 : ChartedSpace H M]\n  [inst_10 : SmoothManifoldWithCorners I M] {f : M → M} {z₀ : M}, f z₀ = z₀ → DerivativeAt I (modelWithCornersSelf ℂ M) f z₀ = 1 →\n  (∀ z ∈ Ω, f z = z) → MDifferentiable I (modelWithCornersSelf ℂ M) f → IsLinearMap ℂ f ", "∀ {E : Type u_1} [inst : NormedAddCommGroup E] [inst_1 : NormedSpace ℂ E] {F : Type u_4} [inst_2 : NormedAddCommGroup F]\n  [inst_3 : NormedSpace ℂ F] {H : Type u_2} [inst_4 : TopologicalSpace H] {I : ModelWithCorners ℂ E H}\n  [inst_5 : ModelWithCorners.Boundaryless I] {M : Type u_3} [inst_6 : TopologicalSpace M] [inst_7 : CompactSpace M]\n  [inst_8 : ChartedSpace H M] [inst_9 : SmoothManifoldWithCorners I M] {f : M → F},\n  MDifferentiable I (modelWithCornersSelf ℂ F) f →\n    (∃ (z₀ : M), f z₀ = z₀ ∧ HasDerivAt f 1 z₀) → LinearIsometryEquiv ℂ ℂ f ", "∀ {E : Type u_1} [inst : NormedAddCommGroup E] [inst_1 : NormedSpace ℂ E] {H : Type u_2} [inst_2 : TopologicalSpace H]\n  {I : ModelWithCorners ℂ E H} [inst_3 : ModelWithCorners.Boundaryless I] {M : Type u_3} [inst_4 : TopologicalSpace M]\n  [inst_5 : ChartedSpace H M] [inst_6 : SmoothManifoldWithCorners I M] {Ω : Set M} [inst_7 : IsOpen Ω]\n  [inst_8 : Bounded ℝ Ω] {f : M → M} {z₀ : M}, f z₀ = z₀ → IsHolomorphicOn Ω f →\n    (HasDerivAt f 1 z₀ ∧ ContinuousOn f Ω) → (∃ (A : ℂ) (B : ℂ), ∀ (z : M), z ∈ Ω → f z = A * z + B) ", "∀ {E : Type u_1} [inst : NormedAddCommGroup E] [inst_1 : NormedSpace ℂ E] {H : Type u_2} [inst_2 : TopologicalSpace H]\n  {I : ModelWithCorners ℂ E H} [inst_3 : ModelWithCorners.Boundaryless I] {M : Type u_3} [inst_4 : TopologicalSpace M] [inst_5 : CompactSpace M]\n  [inst_6 : ChartedSpace H M] [inst_7 : SmoothManifoldWithCorners I M] {f : M → H},\n  MDifferentiable I (modelWithCornersSelf ℂ H) f →\n  (∃ z₀ : M, f z₀ = z₀ ∧ MFderiv I (modelWithCornersSelf ℂ H) f z₀ = ContinuousLinearMap.id ℂ H) → IsLinearMap ℂ f ", "∀ {E : Type u_1} [inst : NormedAddCommGroup E] [inst_1 : NormedSpace ℂ E] {F : Type u_4} [inst_2 : NormedAddCommGroup F]\n  [inst_3 : NormedSpace ℂ F] {H : Type u_2} [inst_4 : TopologicalSpace H] {I : ModelWithCorners ℂ E H}\n  [inst_5 : ModelWithCorners.Boundaryless I] {M : Type u_3} [inst_6 : TopologicalSpace M] [inst_7 : BoundedOpen M]\n  [inst_8 : ChartedSpace H M] [inst_9 : SmoothManifoldWithCorners I M] {f : M → M} {z₀ : M},\n  MDifferentiable I I f → f z₀ = z₀ → deriv f z₀ = 1 → (∃ c : ℂ, ∀ (z : M), f z = c * z) ", "∀ {E : Type u_1} [inst : NormedAddCommGroup E] [inst_1 : NormedSpace ℂ E] {H : Type u_2} [inst_2 : TopologicalSpace H]\n  {I : ModelWithCorners ℂ E H} [inst_3 : ModelWithCorners.Boundaryless I] {M : Type u_3} [inst_4 : TopologicalSpace M]\n  [inst_5 : ChartedSpace H M] [inst_6 : SmoothManifoldWithCorners I M] {f : M → M},\n  MDifferentiable I (modelWithCornersSelf ℂ M) f →\n  (∃ z0, f z0 = z0 ∧ ⇑(MDeriv I (modelWithCornersSelf ℂ M) f z0) = 1) → ∀ z : M, f z = z + (z - z0) ", "∀ {E : Type u_1} [inst : NormedAddCommGroup E] [inst_1 : NormedSpace ℂ E] {F : Type u_4} [inst_2 : NormedAddCommGroup F]\n  [inst_3 : NormedSpace ℂ F] {H : Type u_2} [inst_4 : TopologicalSpace H] {I : ModelWithCorners ℂ E H}\n  [inst_5 : ModelWithCorners.Boundaryless I] {M : Type u_3} [inst_6 : TopologicalSpace M] [inst_7 : CompactSpace M]\n  [inst_8 : ChartedSpace H M] [inst_9 : SmoothManifoldWithCorners I M] {f : M → F} {z₀ : M},\n  MDifferentiable I (modelWithCornersSelf ℂ F) f → f z₀ = z₀ → mfderiv I (modelWithCornersSelf ℂ F) f z₀ = 1 →\n  ∀ (a : M), f a = a + (a - z₀) "]}
{"docString": "Show that $ \\int_{-\\infty}^{\\infty} \\frac{\\cos x}{x^2 + a^2} dx = \\pi \\frac{e^{-a}}{a}$ for $a > 0$.", "prompts": "[{\"theorem\":\n  \"∀ {A : Type u_1} [inst : CommRing A] [inst_1 : Algebra ℚ A],\\n  PowerSeries.exp A * ↑PowerSeries.evalNegHom (PowerSeries.exp A) = 1\",\n  \"isProp\": true,\n  \"docString\": \"Shows that $e^{x} * e^{-x} = 1$ \"},\n {\"theorem\":\n  \"∀ {a b : ℝ} (n : ℕ), ∫ (x : ℝ) in Ι a b, |x - a| ^ n = |b - a| ^ (n + 1) / (↑n + 1)\",\n  \"isProp\": true,\n  \"docString\":\n  \"Integral of `|x - a| ^ n` over `Ι a b`. This integral appears in the proof of the\\nPicard-Lindelöf/Cauchy-Lipschitz theorem. \"},\n {\"theorem\":\n  \"∀ (a : ℝ) {b : ℝ}, 0 < b → MeasureTheory.IntegrableOn (fun x => rexp (-b * x)) (Set.Ioi a)\",\n  \"isProp\": true,\n  \"docString\": \"`exp (-b * x)` is integrable on `(a, ∞)`. \"},\n {\"theorem\":\n  \"∀ {A : Type u_1} [inst : CommRing A] [inst_1 : Algebra ℚ A] (a b : A),\\n  ↑(PowerSeries.rescale a) (PowerSeries.exp A) * ↑(PowerSeries.rescale b) (PowerSeries.exp A) =\\n    ↑(PowerSeries.rescale (a + b)) (PowerSeries.exp A)\",\n  \"isProp\": true,\n  \"docString\": \"Shows that $e^{aX} * e^{bX} = e^{(a + b)X}$ \"}]\n", "prompt_cons": "/-- Shows that $e^{x} * e^{-x} = 1$ -/\ntheorem ∀ {A : Type u_1} [inst : CommRing A] [inst_1 : Algebra ℚ A],\n  PowerSeries.exp A * ↑PowerSeries.evalNegHom (PowerSeries.exp A) = 1 :=\n\n/-- Integral of `|x - a| ^ n` over `Ι a b`. This integral appears in the proof of the\nPicard-Lindelöf/Cauchy-Lipschitz theorem. -/\ntheorem ∀ {a b : ℝ} (n : ℕ), ∫ (x : ℝ) in Ι a b, |x - a| ^ n = |b - a| ^ (n + 1) / (↑n + 1) :=\n\n/-- `exp (-b * x)` is integrable on `(a, ∞)`. -/\ntheorem ∀ (a : ℝ) {b : ℝ}, 0 < b → MeasureTheory.IntegrableOn (fun x => rexp (-b * x)) (Set.Ioi a) :=\n\n/-- Shows that $e^{aX} * e^{bX} = e^{(a + b)X}$ -/\ntheorem ∀ {A : Type u_1} [inst : CommRing A] [inst_1 : Algebra ℚ A] (a b : A),\n  ↑(PowerSeries.rescale a) (PowerSeries.exp A) * ↑(PowerSeries.rescale b) (PowerSeries.exp A) =\n    ↑(PowerSeries.rescale (a + b)) (PowerSeries.exp A) :=\n\n/-- Show that $ \\int_{-\\infty}^{\\infty} \\frac{\\cos x}{x^2 + a^2} dx = \\pi \\frac{e^{-a}}{a}$ for $a > 0$. -/\ntheorem", "choices": ["∀ {a : ℝ}, 0 < a → ∫ (x : ℝ) in ℝ, Real.cos x / (x^2 + a^2) = π * Real.exp (-a) / a ", "∀ {a : ℝ}, 0 < a → ∫ (x : ℝ) in (-∞, ∞), (cos x) / (x^2 + a^2) = π * (rexp (-a)) / a ", "∀ {a : ℝ}, 0 < a → ∫ (x : ℝ) in -∞..∞, (Real.cos x) / (x^2 + a^2) = π * (Real.exp (-a)) / a ", "∀ {a : ℝ}, 0 < a → ∫ (x : ℝ) in ℝ, (cos x) / (x^2 + a^2) = π * exp (-a) / a ", "∀ (a : ℝ) (h : 0 < a), ∫ (x : ℝ) in Set.IntervalicSpace ℝ, (cos x) / (x^2 + a^2) = π * (exp (-a) / a) ", "∀ {a : ℝ}, 0 < a → ∫ (x : ℝ) in Set.Ioo (-∞) ∞, (Real.cos x) / (x^2 + a^2) = Real.pi * Real.exp (-a) / a ", "∀ {a : ℝ}, 0 < a → (∫ (x : ℝ) in Set.univ, (Real.cos x) / (x^2 + a^2)) = π * (Real.exp (-a)) / a ", "∀ {a : ℝ}, 0 < a → ∫ (x : ℝ) in Set.Iic (-∞) ⊔ Set.Ici (∞), (Real.cos x) / (x^2 + a^2) = π * (Real.exp (-a)) / a ", "forall {a : ℝ}, 0 < a →\n  ∫ (x : ℝ) in ℝ, (cos x) / (x^2 + a^2) = π * (exp (-a) / a) ", "∀ {a : ℝ}, 0 < a → ∫ (x : ℝ) in Set.Iic (-∞) ∪ Set.Ici (∞), (cos x) / (x^2 + a^2) = π * exp (-a) / a "]}
{"docString": "Show that $\\int_0^1 \\log(\\sin \\pi x) dx = - \\log 2$.", "prompts": "[{\"theorem\":\n  \"∀ {A : Type u_1} [inst : CommRing A] [inst_1 : Algebra ℚ A],\\n  PowerSeries.exp A * ↑PowerSeries.evalNegHom (PowerSeries.exp A) = 1\",\n  \"isProp\": true,\n  \"docString\": \"Shows that $e^{x} * e^{-x} = 1$ \"},\n {\"theorem\":\n  \"∀ {x : ℝ}, |x| < 1 → HasSum (fun k => 2 * (1 / (2 * ↑k + 1)) * x ^ (2 * k + 1)) (Real.log (1 + x) - Real.log (1 - x))\",\n  \"isProp\": true,\n  \"docString\":\n  \"Power series expansion of `log(1 + x) - log(1 - x)` for `|x| < 1`. \"},\n {\"theorem\":\n  \"∀ (x : ℝ), Real.cos x ≠ 0 → deriv (fun y => Real.tan y - y) x = ↑1 / Real.cos x ^ 2 - 1\",\n  \"isProp\": true,\n  \"docString\":\n  \"The derivative of `tan x - x` is `1/(cos x)^2 - 1` away from the zeroes of cos. \"},\n {\"theorem\":\n  \"∀ {a b : ℝ} (n : ℕ),\\n  ∫ (x : ℝ) in a..b, Real.sin x ^ (n + 2) =\\n    (Real.sin a ^ (n + 1) * Real.cos a - Real.sin b ^ (n + 1) * Real.cos b) / (↑n + 2) +\\n      (↑n + 1) / (↑n + 2) * ∫ (x : ℝ) in a..b, Real.sin x ^ n\",\n  \"isProp\": true,\n  \"docString\":\n  \"The reduction formula for the integral of `sin x ^ n` for any natural `n ≥ 2`. \"}]\n", "prompt_cons": "/-- Shows that $e^{x} * e^{-x} = 1$ -/\ntheorem ∀ {A : Type u_1} [inst : CommRing A] [inst_1 : Algebra ℚ A],\n  PowerSeries.exp A * ↑PowerSeries.evalNegHom (PowerSeries.exp A) = 1 :=\n\n/-- Power series expansion of `log(1 + x) - log(1 - x)` for `|x| < 1`. -/\ntheorem ∀ {x : ℝ}, |x| < 1 → HasSum (fun k => 2 * (1 / (2 * ↑k + 1)) * x ^ (2 * k + 1)) (Real.log (1 + x) - Real.log (1 - x)) :=\n\n/-- The derivative of `tan x - x` is `1/(cos x)^2 - 1` away from the zeroes of cos. -/\ntheorem ∀ (x : ℝ), Real.cos x ≠ 0 → deriv (fun y => Real.tan y - y) x = ↑1 / Real.cos x ^ 2 - 1 :=\n\n/-- The reduction formula for the integral of `sin x ^ n` for any natural `n ≥ 2`. -/\ntheorem ∀ {a b : ℝ} (n : ℕ),\n  ∫ (x : ℝ) in a..b, Real.sin x ^ (n + 2) =\n    (Real.sin a ^ (n + 1) * Real.cos a - Real.sin b ^ (n + 1) * Real.cos b) / (↑n + 2) +\n      (↑n + 1) / (↑n + 2) * ∫ (x : ℝ) in a..b, Real.sin x ^ n :=\n\n/-- Show that $\\int_0^1 \\log(\\sin \\pi x) dx = - \\log 2$. -/\ntheorem", "choices": ["∀ (a b : ℝ),\n  ∫ (x : ℝ) in 0..1, Real.log (Real.sin (π * x)) =\n    - Real.log 2 ", "∀ {a b : ℝ},\n  ∫ (x : ℝ) in 0..1, Real.log (Real.sin (Real.pi * x)) = -Real.log 2 ", "∀ {A : Type u_1} [inst : CommRing A] [inst_1 : Algebra ℚ A],\n  ∫ (x : A) in 0..1, Real.log (Real.sin (π * x)) = -Real.log 2 ", "∀ {a b : ℝ},\n  ∫ (x : ℝ) in a..b, Real.log (Real.sin (Real.pi * x)) = -Real.log 2 ", "∀ {a b : ℝ},\n  ∫ (x : ℝ) in a..b, Real.log (Real.sin (Real.pi * x)) = -Real.log 2 ", "∫ x in 0..1, Real.log (Real.sin (Real.pi * x)) = - Real.log 2 ", "∫₀¹ (λ x => Real.log (Real.sin (Real.pi * x))) = - Real.log 2 ", "∀ {a b : ℝ}, a = 0 → b = 1 →\n  ∫ (x : ℝ) in a..b, Real.log (Real.sin (Real.pi * x)) = -Real.log 2 ", "∀ (a b : ℝ),\n  (∫ (x : ℝ) in 0..1, Real.log (Real.sin (real.pi * x))) = -Real.log 2 ", "∫ (x : ℝ) in 0..1, Real.log (Real.sin (Real.pi * x)) = -Real.log 2 "]}
{"docString": "Show that there is no holomorphic function $f$ in the unit disc $D$ that extends continuously to $\\partial D$ such that $f(z) = 1/z$ for $z \\in \\partial D$.", "prompts": "[{\"theorem\":\n  \"∀ {E : Type u_2} [inst : NormedAddCommGroup E] [inst_1 : NormedSpace ℂ E] {F : Type u_4} [inst_2 : NormedAddCommGroup F]\\n  [inst_3 : NormedSpace ℂ F] {H : Type u_3} [inst_4 : TopologicalSpace H] {I : ModelWithCorners ℂ E H}\\n  [inst_5 : ModelWithCorners.Boundaryless I] {M : Type u_1} [inst_6 : TopologicalSpace M] [inst_7 : CompactSpace M]\\n  [inst_8 : ChartedSpace H M] [inst_9 : SmoothManifoldWithCorners I M] [inst_10 : PreconnectedSpace M] {f : M → F},\\n  MDifferentiable I (modelWithCornersSelf ℂ F) f → ∀ (a b : M), f a = f b\",\n  \"isProp\": true,\n  \"docString\":\n  \"A holomorphic function on a compact connected complex manifold is constant. \"},\n {\"theorem\":\n  \"∀ {E : Type u_1} [inst : NormedAddCommGroup E] [inst_1 : NormedSpace ℂ E] {F : Type u_4} [inst_2 : NormedAddCommGroup F]\\n  [inst_3 : NormedSpace ℂ F] {H : Type u_2} [inst_4 : TopologicalSpace H] {I : ModelWithCorners ℂ E H}\\n  [inst_5 : ModelWithCorners.Boundaryless I] {M : Type u_3} [inst_6 : TopologicalSpace M] [inst_7 : CompactSpace M]\\n  [inst_8 : ChartedSpace H M] [inst_9 : SmoothManifoldWithCorners I M] {f : M → F},\\n  MDifferentiable I (modelWithCornersSelf ℂ F) f → IsLocallyConstant f\",\n  \"isProp\": true,\n  \"docString\":\n  \"A holomorphic function on a compact complex manifold is locally constant. \"},\n {\"theorem\":\n  \"∀ {E : Type u} [inst : NormedAddCommGroup E] [inst_1 : NormedSpace ℂ E] [inst_2 : CompleteSpace E] {R : ℝ},\\n  0 ≤ R →\\n    ∀ {f : ℂ → E} {c : ℂ} {s : Set ℂ},\\n      Set.Countable s →\\n        ContinuousOn f (Metric.closedBall c R) →\\n          (∀ (z : ℂ), z ∈ Metric.ball c R \\\\ s → DifferentiableAt ℂ f z) → (∮ (z : ℂ) in C(c, R), f z) = 0\",\n  \"isProp\": true,\n  \"docString\":\n  \"**Cauchy-Goursat theorem** for a disk: if `f : ℂ → E` is continuous on a closed disk\\n`{z | ‖z - c‖ ≤ R}` and is complex differentiable at all but countably many points of its interior,\\nthen the integral $\\\\oint_{|z-c|=R}f(z)\\\\,dz$ equals zero. \"},\n {\"theorem\":\n  \"∀ {𝕜 : Type u_1} {E : Type u_2} {F : Type u_3} [inst : NontriviallyNormedField 𝕜] [inst_1 : NormedAddCommGroup E]\\n  [inst_2 : NormedSpace 𝕜 E] [inst_3 : NormedAddCommGroup F] [inst_4 : NormedSpace 𝕜 F] {f : E → F}\\n  {p : FormalMultilinearSeries 𝕜 E F} {x : E} {r : ENNReal},\\n  HasFPowerSeriesOnBall f p x r → ContinuousOn f (EMetric.ball x r)\",\n  \"isProp\": true,\n  \"docString\":\n  \"If a function admits a power series expansion on a disk, then it is continuous there. \"}]\n", "prompt_cons": "/-- A holomorphic function on a compact connected complex manifold is constant. -/\ntheorem ∀ {E : Type u_2} [inst : NormedAddCommGroup E] [inst_1 : NormedSpace ℂ E] {F : Type u_4} [inst_2 : NormedAddCommGroup F]\n  [inst_3 : NormedSpace ℂ F] {H : Type u_3} [inst_4 : TopologicalSpace H] {I : ModelWithCorners ℂ E H}\n  [inst_5 : ModelWithCorners.Boundaryless I] {M : Type u_1} [inst_6 : TopologicalSpace M] [inst_7 : CompactSpace M]\n  [inst_8 : ChartedSpace H M] [inst_9 : SmoothManifoldWithCorners I M] [inst_10 : PreconnectedSpace M] {f : M → F},\n  MDifferentiable I (modelWithCornersSelf ℂ F) f → ∀ (a b : M), f a = f b :=\n\n/-- A holomorphic function on a compact complex manifold is locally constant. -/\ntheorem ∀ {E : Type u_1} [inst : NormedAddCommGroup E] [inst_1 : NormedSpace ℂ E] {F : Type u_4} [inst_2 : NormedAddCommGroup F]\n  [inst_3 : NormedSpace ℂ F] {H : Type u_2} [inst_4 : TopologicalSpace H] {I : ModelWithCorners ℂ E H}\n  [inst_5 : ModelWithCorners.Boundaryless I] {M : Type u_3} [inst_6 : TopologicalSpace M] [inst_7 : CompactSpace M]\n  [inst_8 : ChartedSpace H M] [inst_9 : SmoothManifoldWithCorners I M] {f : M → F},\n  MDifferentiable I (modelWithCornersSelf ℂ F) f → IsLocallyConstant f :=\n\n/-- **Cauchy-Goursat theorem** for a disk: if `f : ℂ → E` is continuous on a closed disk\n`{z | ‖z - c‖ ≤ R}` and is complex differentiable at all but countably many points of its interior,\nthen the integral $\\oint_{|z-c|=R}f(z)\\,dz$ equals zero. -/\ntheorem ∀ {E : Type u} [inst : NormedAddCommGroup E] [inst_1 : NormedSpace ℂ E] [inst_2 : CompleteSpace E] {R : ℝ},\n  0 ≤ R →\n    ∀ {f : ℂ → E} {c : ℂ} {s : Set ℂ},\n      Set.Countable s →\n        ContinuousOn f (Metric.closedBall c R) →\n          (∀ (z : ℂ), z ∈ Metric.ball c R \\ s → DifferentiableAt ℂ f z) → (∮ (z : ℂ) in C(c, R), f z) = 0 :=\n\n/-- If a function admits a power series expansion on a disk, then it is continuous there. -/\ntheorem ∀ {𝕜 : Type u_1} {E : Type u_2} {F : Type u_3} [inst : NontriviallyNormedField 𝕜] [inst_1 : NormedAddCommGroup E]\n  [inst_2 : NormedSpace 𝕜 E] [inst_3 : NormedAddCommGroup F] [inst_4 : NormedSpace 𝕜 F] {f : E → F}\n  {p : FormalMultilinearSeries 𝕜 E F} {x : E} {r : ENNReal},\n  HasFPowerSeriesOnBall f p x r → ContinuousOn f (EMetric.ball x r) :=\n\n/-- Show that there is no holomorphic function $f$ in the unit disc $D$ that extends continuously to $\\partial D$ such that $f(z) = 1/z$ for $z \\in \\partial D$. -/\ntheorem", "choices": ["∀ {E : Type u_1} [inst : NormedAddCommGroup E] [inst_1 : NormedSpace ℂ E], ¬∃ (f : ℂ → E),\n  MDifferentiableWithinAt (modelWithCornersSelf ℂ E) f (Metric.Ball 0 1) ∧\n    ContinuousOn f (Metric.closedBall 0 1) ∧ (∀ (z : ℂ), z ∈ Metric.Sphere 0 1 → f z = 1 / z) ", "∀ {E : Type u_1} [inst : NormedAddCommGroup E] [inst_1 : NormedSpace ℂ E] {F : Type u_4} [inst_2 : NormedAddCommGroup F]\n  [inst_3 : NormedSpace ℂ F] {H : Type u_2} [inst_4 : TopologicalSpace H] {I : ModelWithCorners ℂ E H}\n  [inst_5 : ModelWithCorners.Boundaryless I] {M : Type u_3} [inst_6 : TopologicalSpace M] [inst_7 : ChartedSpace H M]\n  [inst_8 : SmoothManifoldWithCorners I M] {f : M → ℂ},\n  MDifferentiable I (modelWithCornersSelf ℂ ℂ) f →\n    ContinuousOn f (Closure (Metric.Ball 0 1)) →\n      (∀ (z : ℂ), HasMem.Mem z (Metric.Sphere 0 1) → f z = 1 / z) → False ", "∀ {E : Type u_2} [inst : NormedAddCommGroup E] [inst_1 : NormedSpace ℂ E] {F : Type u_4} [inst_2 : NormedAddCommGroup F]\n  [inst_3 : NormedSpace ℂ F] {H : Type u_3} [inst_4 : TopologicalSpace H] {I : ModelWithCorners ℂ E H}\n  [inst_5 : ModelWithCorners.Boundaryless I] {M : Type u_1} [inst_6 : TopologicalSpace M] [inst_7 : CompactSpace M]\n  [inst_8 : ChartedSpace H M] [inst_9 : SmoothManifoldWithCorners I M] {f : M → F},\n  MDifferentiable I (modelWithCornersSelf ℂ F) f →\n    ContinuousOn f (Metric.Sphere (0 : ℂ) 1) → (∀ z ∈ Metric.Sphere (0 : ℂ) 1, f z = 1 / z) → False ", "∀ {E : Type u_1} [inst : NormedAddCommGroup E] [inst_1 : NormedSpace ℂ E] {F : Type u_4} [inst_2 : NormedAddCommGroup F]\n  [inst_3 : NormedSpace ℂ F] {H : Type u_2} [inst_4 : TopologicalSpace H] {I : ModelWithCorners ℂ E H}\n  [inst_5 : ModelWithCorners.Boundaryless I] {M : Type u_3} [inst_6 : TopologicalSpace M] [inst_7 : CompactSpace M]\n  [inst_8 : ChartedSpace H M] [inst_9 : SmoothManifoldWithCorners I M] {f : M → F},\n  MDifferentiable I (modelWithCornersSelf ℂ F) f →\n    ContinuousOn f (Closure (PseudoMetric.ball (0 : ℂ) 1)) →\n      (∀ (z : ℂ), z ∈ PseudoMetric.ball (0 : ℂ) 1 → f z = z⁻¹) → False ", "nonexistent_holomorphic_on_unit_disk_extending_continuous_on_boundary_eq_inv_z :\n  ¬∃ (f : ℂ → ℂ),\n    MDifferentiable I (modelWithCornersSelf ℂ ℂ) f ∧\n      ContinuousOn f (Metric.closedBall 0 1) ∧\n        ∀ (z : ℂ), z ∈ Metric.sphere 0 1 → f z = z⁻¹ ", "∀ {E : Type u_1} [inst : NormedAddCommGroup E] [inst_1 : NormedSpace ℂ E] {F : Type u_2} [inst_2 : NormedAddCommGroup F]\n  [inst_3 : NormedSpace ℂ F] {H : Type u_3} [inst_4 : TopologicalSpace H] {I : ModelWithCorners ℂ E H}\n  [inst_5 : ModelWithCorners.Boundaryless I] {M : Type u_4} [inst_6 : TopologicalSpace M] [inst_7 : ChartedSpace H M]\n  [inst_8 : SmoothManifoldWithCorners I M] {f : M → ℂ},\n  MDifferentiable I I f → ContinuousOn f (Closure (Metric.Ball 0 1)) →\n  (∀ (z : ℂ), ∥z∥ = 1 → f z = z⁻¹) → False ", "∀ {E : Type u_1} [inst : NormedAddCommGroup E] [inst_1 : NormedSpace ℂ E] {H : Type u_2} [inst_2 : TopologicalSpace H]\n  {I : ModelWithCorners ℂ E H} [inst_3 : ModelWithCorners.Boundaryless I] {M : Type u_3} [inst_4 : TopologicalSpace M]\n  [inst_5 : CompactSpace M] [inst_6 : ChartedSpace H M] [inst_7 : SmoothManifoldWithCorners I M] {f : M → ℂ},\n  MDifferentiable I (modelWithCornersSelf ℂ ℂ) f →\n    ContinuousOn f (Frontier (Metric.Ball 0 1 : Set M)) →\n      (∀ z ∈ Frontier (Metric.Ball 0 1 : Set M), f z = Complex.inv z) → False ", "∃ (f : ℂ → ℂ), HolomorphicOn f (Disk 0 1) ∧ ContinuousOn f (Closure (Disk 0 1)) ∧ ∀ (z : ℂ), z ∈ Circle (0, 1) → f z = 1 / z → False ", "∀ {E : Type u} [inst : NormedAddCommGroup E] [inst_1 : NormedSpace ℂ E] [inst_2 : CompleteSpace E],\n  ¬(∃ (f : ℂ → E), ContinuousOn f (Metric.closedBall 0 1) ∧ MDifferentiableAtℂ I (modelWithCornersSelf ℂ E) f (interior (Metric.closedBall 0 1)) ∧ ∀ (z : ℂ), z ∈ Metric.sphere 0 1 → f z = 1 / z) ", "no_continuous_holomorphic_extends_to_boundary_unit_disc :\n  ¬ ∃ (f : ℂ → ℂ) (H : ContinuousOn f (Metric.closedBall 0 1)),\n      MDifferentiable (modelWithCornersSelf ℂ ℂ) (modelWithCornersSelf ℂ ℂ) f ∧\n        ∀ (z : ℂ), z ∈ Frontier (Metric.ball (0 : ℂ) 1) → f z = 1 / z "]}
{"docString": "For $j \\in\\{1,2,3,4\\}$, let $z_{j}$ be a complex number with $\\left|z_{j}\\right|=1$ and $z_{j} \\neq 1$. Prove that $3-z_{1}-z_{2}-z_{3}-z_{4}+z_{1} z_{2} z_{3} z_{4} \\neq 0 .$", "prompts": "[{\"theorem\": \"∀ (z : ℂ), ↑z.re = (z + ↑(starRingEnd ℂ) z) / 2\",\n  \"isProp\": true,\n  \"docString\":\n  \"A complex number `z` plus its conjugate `conj z` is `2` times its real part. \"},\n {\"theorem\": \"∀ (z : ℂ), ↑z.im = (z - ↑(starRingEnd ℂ) z) / (2 * Complex.I)\",\n  \"isProp\": true,\n  \"docString\":\n  \"A complex number `z` minus its conjugate `conj z` is `2i` times its imaginary part. \"},\n {\"theorem\":\n  \"∀ {p : ℕ} [inst : Fact (Nat.Prime p)] {x y : ZMod p}, y ≠ 0 → x ^ 2 = -y ^ 2 → p % 4 ≠ 3\",\n  \"isProp\": true,\n  \"docString\":\n  \"If two nonzero squares are negatives of each other in `ZMod p`, then `p % 4 ≠ 3`. \"},\n {\"theorem\":\n  \"∀ {K : Type u_1} [inst : IsROrC K] (z : K),\\n  List.TFAE [↑(starRingEnd K) z = z, ∃ r, ↑r = z, ↑(↑IsROrC.re z) = z, ↑IsROrC.im z = 0]\",\n  \"isProp\": true,\n  \"docString\":\n  \"There are several equivalent ways to say that a number `z` is in fact a real number. \"}]\n", "prompt_cons": "/-- A complex number `z` plus its conjugate `conj z` is `2` times its real part. -/\ntheorem ∀ (z : ℂ), ↑z.re = (z + ↑(starRingEnd ℂ) z) / 2 :=\n\n/-- A complex number `z` minus its conjugate `conj z` is `2i` times its imaginary part. -/\ntheorem ∀ (z : ℂ), ↑z.im = (z - ↑(starRingEnd ℂ) z) / (2 * Complex.I) :=\n\n/-- If two nonzero squares are negatives of each other in `ZMod p`, then `p % 4 ≠ 3`. -/\ntheorem ∀ {p : ℕ} [inst : Fact (Nat.Prime p)] {x y : ZMod p}, y ≠ 0 → x ^ 2 = -y ^ 2 → p % 4 ≠ 3 :=\n\n/-- There are several equivalent ways to say that a number `z` is in fact a real number. -/\ntheorem ∀ {K : Type u_1} [inst : IsROrC K] (z : K),\n  List.TFAE [↑(starRingEnd K) z = z, ∃ r, ↑r = z, ↑(↑IsROrC.re z) = z, ↑IsROrC.im z = 0] :=\n\n/-- For $j \\in\\{1,2,3,4\\}$, let $z_{j}$ be a complex number with $\\left|z_{j}\\right|=1$ and $z_{j} \\neq 1$. Prove that $3-z_{1}-z_{2}-z_{3}-z_{4}+z_{1} z_{2} z_{3} z_{4} \\neq 0 .$ -/\ntheorem", "choices": ["∀ {z₁ z₂ z₃ z₄ : ℂ}, Complex.abs z₁ = 1 → Complex.abs z₂ = 1 → Complex.abs z₃ = 1 → Complex.abs z₄ = 1 → z₁ ≠ 1 → z₂ ≠ 1 → z₃ ≠ 1 → z₄ ≠ 1 → (3 - z₁ - z₂ - z₃ - z₄ + z₁ * z₂ * z₃ * z₄) ≠ 0 ", "∀ {z1 z2 z3 z4 : ℂ}, abs z1 = 1 → z1 ≠ 1 → abs z2 = 1 → z2 ≠ 1 → abs z3 = 1 → z3 ≠ 1 → abs z4 = 1 → z4 ≠ 1 → 3 - z1 - z2 - z3 - z4 + z1 * z2 * z3 * z4 ≠ 0 ", "∀ {z1 z2 z3 z4 : ℂ}, \n  abs z1 = 1 → z1 ≠ 1 →\n  abs z2 = 1 → z2 ≠ 1 →\n  abs z3 = 1 → z3 ≠ 1 →\n  abs z4 = 1 → z4 ≠ 1 →\n  3 - z1 - z2 - z3 - z4 + z1 * z2 * z3 * z4 ≠ 0 ", "∀ {z₁ z₂ z₃ z₄ : ℂ},\n  List.TFAE [(abs z₁ = 1 ∧ z₁ ≠ 1), (abs z₂ = 1 ∧ z₂ ≠ 1), (abs z₃ = 1 ∧ z₃ ≠ 1), (abs z₄ = 1 ∧ z₄ ≠ 1)] → 3 - z₁ - z₂ - z₃ - z₄ + z₁ * z₂ * z₃ * z₄ ≠ 0 ", "∀ {z1 z2 z3 z4 : ℂ}, \n  (Complex.abs z1 = 1 ∧ z1 ≠ 1) → \n  (Complex.abs z2 = 1 ∧ z2 ≠ 1) → \n  (Complex.abs z3 = 1 ∧ z3 ≠ 1) → \n  (Complex.abs z4 = 1 ∧ z4 ≠ 1) → \n  (3 - z1 - z2 - z3 - z4 + (z1 * z2 * z3 * z4) ≠ 0) ", "∀ (z1 z2 z3 z4 : ℂ), abs z1 = 1 → z1 ≠ 1 → abs z2 = 1 → z2 ≠ 1 → abs z3 = 1 → z3 ≠ 1 → abs z4 = 1 → z4 ≠ 1 → (3 - z1 - z2 - z3 - z4 + z1 * z2 * z3 * z4 ≠ 0) ", "∀ (z1 z2 z3 z4 : ℂ), abs z1 = 1 → z1 ≠ 1 → abs z2 = 1 → z2 ≠ 1 → abs z3 = 1 → z3 ≠ 1 → abs z4 = 1 → z4 ≠ 1 → 3 - z1 - z2 - z3 - z4 + z1 * z2 * z3 * z4 ≠ 0 ", "∀ {j : ℕ} (hj : j ∈ [1, 2, 3, 4]) (z : ℂ), abs z = 1 → z ≠ 1 → 3 - (List.algebra_map ℕ ℂ [z1, z2, z3, z4]).sum ≠ 0 ", "∀ {z1 z2 z3 z4 : ℂ}, abs z1 = 1 → abs z2 = 1 → abs z3 = 1 → abs z4 = 1 → z1 ≠ 1 → z2 ≠ 1 → z3 ≠ 1 → z4 ≠ 1 → (3 - z1 - z2 - z3 - z4 + z1 * z2 * z3 * z4) ≠ 0 ", "∀ (z1 z2 z3 z4 : ℂ), \n  (∀ j : ℕ, j ∈ [1, 2, 3, 4] → Complex.abs (by_cases (j = 1) z1 (by_cases (j = 2) z2 (by_cases (j = 3) z3 z4))) = 1) →\n  (∀ j : ℕ, j ∈ [1, 2, 3, 4] → by_cases (j = 1) z1 (by_cases (j = 2) z2 (by_cases (j = 3) z3 z4)) ≠ 1) →\n  3 - z1 - z2 - z3 - z4 + z1 * z2 * z3 * z4 ≠ 0 "]}
{"docString": "Let $n$ be a positive integer, and let $f_{n}(z)=n+(n-1) z+$ $(n-2) z^{2}+\\cdots+z^{n-1}$. Prove that $f_{n}$ has no roots in the closed unit disk $\\{z \\in \\mathbb{C}:|z| \\leq 1\\}$.", "prompts": "[{\"theorem\":\n  \"∀ {z : UpperHalfPlane}, z ∈ ModularGroup.fdo → ∀ (n : ℤ), 1 < ↑Complex.normSq ↑(ModularGroup.T ^ n • z)\",\n  \"isProp\": true,\n  \"docString\": \"If `z ∈ 𝒟ᵒ`, and `n : ℤ`, then `|z + n| > 1`. \"},\n {\"theorem\":\n  \"∀ {n : ℤ}, n ≠ -1 → ∀ (c w : ℂ) (R : ℝ), (∮ (z : ℂ) in C(c, R), (z - w) ^ n) = 0\",\n  \"isProp\": true,\n  \"docString\":\n  \"If `n ≠ -1` is an integer number, then the integral of `(z - w) ^ n` over the circle equals\\nzero. \"},\n {\"theorem\":\n  \"∀ {f : ℂ → ℂ} {z : ℂ} {R : ℝ},\\n  DifferentiableOn ℂ f (Metric.ball 0 R) →\\n    Set.MapsTo f (Metric.ball 0 R) (Metric.ball 0 R) →\\n      f 0 = 0 → ↑Complex.abs z < R → ↑Complex.abs (f z) ≤ ↑Complex.abs z\",\n  \"isProp\": true,\n  \"docString\":\n  \"The **Schwarz Lemma**: if `f : ℂ → ℂ` sends an open disk with center `0` to itself, the for any\\npoint `z` of this disk we have `abs (f z) ≤ abs z`. \"},\n {\"theorem\":\n  \"∀ {E : Type u} [inst : NormedAddCommGroup E] [inst_1 : NormedSpace ℂ E] [inst_2 : CompleteSpace E] {R : ℝ},\\n  0 ≤ R →\\n    ∀ {f : ℂ → E} {c : ℂ} {s : Set ℂ},\\n      Set.Countable s →\\n        ContinuousOn f (Metric.closedBall c R) →\\n          (∀ (z : ℂ), z ∈ Metric.ball c R \\\\ s → DifferentiableAt ℂ f z) → (∮ (z : ℂ) in C(c, R), f z) = 0\",\n  \"isProp\": true,\n  \"docString\":\n  \"**Cauchy-Goursat theorem** for a disk: if `f : ℂ → E` is continuous on a closed disk\\n`{z | ‖z - c‖ ≤ R}` and is complex differentiable at all but countably many points of its interior,\\nthen the integral $\\\\oint_{|z-c|=R}f(z)\\\\,dz$ equals zero. \"}]\n", "prompt_cons": "/-- If `z ∈ 𝒟ᵒ`, and `n : ℤ`, then `|z + n| > 1`. -/\ntheorem ∀ {z : UpperHalfPlane}, z ∈ ModularGroup.fdo → ∀ (n : ℤ), 1 < ↑Complex.normSq ↑(ModularGroup.T ^ n • z) :=\n\n/-- If `n ≠ -1` is an integer number, then the integral of `(z - w) ^ n` over the circle equals\nzero. -/\ntheorem ∀ {n : ℤ}, n ≠ -1 → ∀ (c w : ℂ) (R : ℝ), (∮ (z : ℂ) in C(c, R), (z - w) ^ n) = 0 :=\n\n/-- The **Schwarz Lemma**: if `f : ℂ → ℂ` sends an open disk with center `0` to itself, the for any\npoint `z` of this disk we have `abs (f z) ≤ abs z`. -/\ntheorem ∀ {f : ℂ → ℂ} {z : ℂ} {R : ℝ},\n  DifferentiableOn ℂ f (Metric.ball 0 R) →\n    Set.MapsTo f (Metric.ball 0 R) (Metric.ball 0 R) →\n      f 0 = 0 → ↑Complex.abs z < R → ↑Complex.abs (f z) ≤ ↑Complex.abs z :=\n\n/-- **Cauchy-Goursat theorem** for a disk: if `f : ℂ → E` is continuous on a closed disk\n`{z | ‖z - c‖ ≤ R}` and is complex differentiable at all but countably many points of its interior,\nthen the integral $\\oint_{|z-c|=R}f(z)\\,dz$ equals zero. -/\ntheorem ∀ {E : Type u} [inst : NormedAddCommGroup E] [inst_1 : NormedSpace ℂ E] [inst_2 : CompleteSpace E] {R : ℝ},\n  0 ≤ R →\n    ∀ {f : ℂ → E} {c : ℂ} {s : Set ℂ},\n      Set.Countable s →\n        ContinuousOn f (Metric.closedBall c R) →\n          (∀ (z : ℂ), z ∈ Metric.ball c R \\ s → DifferentiableAt ℂ f z) → (∮ (z : ℂ) in C(c, R), f z) = 0 :=\n\n/-- Let $n$ be a positive integer, and let $f_{n}(z)=n+(n-1) z+$ $(n-2) z^{2}+\\cdots+z^{n-1}$. Prove that $f_{n}$ has no roots in the closed unit disk $\\{z \\in \\mathbb{C}:|z| \\leq 1\\}$. -/\ntheorem", "choices": ["∀ {n : ℕ}, n > 0 → ∀ (z : ℂ), ↑Complex.abs z ≤ 1 → (Finset.sum (Finset.range n) (pow z)) ≠ 0 ", "forall (n : ℕ), n > 0 → ∀ (z : ℂ), ↑Complex.abs z ≤ 1 → (Finset.sum (Finset.range n) (pow z) * (n - z * Finset.sum (Finset.range n) (pow z))) ≠ 0 ", "∀ {n : ℕ}, n > 0 → ∀ (z : ℂ), ↑Complex.abs z ≤ 1 → ¬(Polynomial.eval z (Polynomial.sumFinRangePoly n) = 0) ", "∀ {n : ℕ}, n > 0 → ∀ (z : ℂ), ↑Complex.abs z ≤ 1 → ¬(Polynomial.sum (Finset.range n) (λ (i : ℕ), Polynomial.C (n - i) * Polynomial.x ^ i)).eval z = 0 ", "∀ {n : ℕ}, n > 0 → ∀ (z : ℂ), ↑Complex.abs z ≤ 1 → ¬(Polynomial.eval z (Polynomial.range n) = 0) ", "∀ {n : ℕ}, n > 0 → ∀ {z : ℂ}, ↑Complex.abs z ≤ 1 → Complex.rootOfUnity n (f_n z) ", "∀ {n : ℕ}, n > 0 → ∀ {z : ℂ}, ↑Complex.abs z ≤ 1 → (Finset.sum (Finset.range n) (λ (i : ℕ), z ^ i * (n - i))) ≠ 0 ", "∀ {n : ℕ}, n > 0 → ∀ (z : ℂ), ↑Complex.abs z ≤ 1 → ¬Complex.rootOfUnity (n, f_n z) ", "∀ {n : ℕ}, n > 0 → ∀ {z : ℂ}, ↑Complex.abs z ≤ 1 → ¬(Polynomial.eval z (Polynomial.bernstein n) = 0) ", "∀ {n : ℕ}, n > 0 → ∀ {z : ℂ}, ↑Complex.abs z ≤ 1 → ¬(Complex.poly_X_sub_C_pow (n - 1) z = 0) "]}
{"docString": "Suppose that $f(x)=\\sum_{i=0}^{\\infty} c_{i} x^{i}$ is a power series for which each coefficient $c_{i}$ is 0 or 1 . Show that if $f(2 / 3)=3 / 2$, then $f(1 / 2)$ must be irrational.", "prompts": "[{\"theorem\":\n  \"∀ {E : Type u_1} [inst : NormedAddCommGroup E] [inst_1 : NormedSpace ℂ E] {f : ℂ → E} {c : ℂ} {R : ℝ} {w : ℂ},\\n  CircleIntegrable f c R →\\n    ↑Complex.abs w < R →\\n      HasSum (fun n => ↑(cauchyPowerSeries f c R n) fun x => w)\\n        ((2 * ↑Real.pi * Complex.I)⁻¹ • ∮ (z : ℂ) in C(c, R), (z - (c + w))⁻¹ • f z)\",\n  \"isProp\": true,\n  \"docString\":\n  \"For any circle integrable function `f`, the power series `cauchyPowerSeries f c R`, `R > 0`,\\nconverges to the Cauchy integral `(2 * π * I : ℂ)⁻¹ • ∮ z in C(c, R), (z - w)⁻¹ • f z` on the open\\ndisc `Metric.ball c R`. \"},\n {\"theorem\":\n  \"∀ {E : Type u_1} [inst : NormedAddCommGroup E] [inst_1 : NormedSpace ℂ E] {f : ℂ → E} {c : ℂ} {R : ℝ} {w : ℂ},\\n  CircleIntegrable f c R →\\n    ↑Complex.abs w < R →\\n      HasSum (fun n => ∮ (z : ℂ) in C(c, R), (w / (z - c)) ^ n • (z - c)⁻¹ • f z)\\n        (∮ (z : ℂ) in C(c, R), (z - (c + w))⁻¹ • f z)\",\n  \"isProp\": true,\n  \"docString\":\n  \"For any circle integrable function `f`, the power series `cauchyPowerSeries f c R` multiplied\\nby `2πI` converges to the integral `∮ z in C(c, R), (z - w)⁻¹ • f z` on the open disc\\n`Metric.ball c R`. \"},\n {\"theorem\":\n  \"∀ {𝕜 : Type u_1} {E : Type u_2} {F : Type u_3} [inst : NontriviallyNormedField 𝕜] [inst_1 : NormedAddCommGroup E]\\n  [inst_2 : NormedSpace 𝕜 E] [inst_3 : NormedAddCommGroup F] [inst_4 : NormedSpace 𝕜 F] {f : E → F}\\n  {p : FormalMultilinearSeries 𝕜 E F} {x : E} {r : ENNReal},\\n  HasFPowerSeriesOnBall f p x r → ∀ (y : E), HasFPowerSeriesOnBall (fun z => f (z - y)) p (x + y) r\",\n  \"isProp\": true,\n  \"docString\":\n  \"If a function `f` has a power series `p` around `x`, then the function `z ↦ f (z - y)` has the\\nsame power series around `x + y`. \"},\n {\"theorem\":\n  \"∀ {R : Type u_1} [inst : Semiring R] (φ : PowerSeries R), IsUnit φ → IsUnit (↑(PowerSeries.constantCoeff R) φ)\",\n  \"isProp\": true,\n  \"docString\":\n  \"If a formal power series is invertible, then so is its constant coefficient.\"}]\n", "prompt_cons": "/-- For any circle integrable function `f`, the power series `cauchyPowerSeries f c R`, `R > 0`,\nconverges to the Cauchy integral `(2 * π * I : ℂ)⁻¹ • ∮ z in C(c, R), (z - w)⁻¹ • f z` on the open\ndisc `Metric.ball c R`. -/\ntheorem ∀ {E : Type u_1} [inst : NormedAddCommGroup E] [inst_1 : NormedSpace ℂ E] {f : ℂ → E} {c : ℂ} {R : ℝ} {w : ℂ},\n  CircleIntegrable f c R →\n    ↑Complex.abs w < R →\n      HasSum (fun n => ↑(cauchyPowerSeries f c R n) fun x => w)\n        ((2 * ↑Real.pi * Complex.I)⁻¹ • ∮ (z : ℂ) in C(c, R), (z - (c + w))⁻¹ • f z) :=\n\n/-- For any circle integrable function `f`, the power series `cauchyPowerSeries f c R` multiplied\nby `2πI` converges to the integral `∮ z in C(c, R), (z - w)⁻¹ • f z` on the open disc\n`Metric.ball c R`. -/\ntheorem ∀ {E : Type u_1} [inst : NormedAddCommGroup E] [inst_1 : NormedSpace ℂ E] {f : ℂ → E} {c : ℂ} {R : ℝ} {w : ℂ},\n  CircleIntegrable f c R →\n    ↑Complex.abs w < R →\n      HasSum (fun n => ∮ (z : ℂ) in C(c, R), (w / (z - c)) ^ n • (z - c)⁻¹ • f z)\n        (∮ (z : ℂ) in C(c, R), (z - (c + w))⁻¹ • f z) :=\n\n/-- If a function `f` has a power series `p` around `x`, then the function `z ↦ f (z - y)` has the\nsame power series around `x + y`. -/\ntheorem ∀ {𝕜 : Type u_1} {E : Type u_2} {F : Type u_3} [inst : NontriviallyNormedField 𝕜] [inst_1 : NormedAddCommGroup E]\n  [inst_2 : NormedSpace 𝕜 E] [inst_3 : NormedAddCommGroup F] [inst_4 : NormedSpace 𝕜 F] {f : E → F}\n  {p : FormalMultilinearSeries 𝕜 E F} {x : E} {r : ENNReal},\n  HasFPowerSeriesOnBall f p x r → ∀ (y : E), HasFPowerSeriesOnBall (fun z => f (z - y)) p (x + y) r :=\n\n/-- If a formal power series is invertible, then so is its constant coefficient. -/\ntheorem ∀ {R : Type u_1} [inst : Semiring R] (φ : PowerSeries R), IsUnit φ → IsUnit (↑(PowerSeries.constantCoeff R) φ) :=\n\n/-- Suppose that $f(x)=\\sum_{i=0}^{\\infty} c_{i} x^{i}$ is a power series for which each coefficient $c_{i}$ is 0 or 1 . Show that if $f(2 / 3)=3 / 2$, then $f(1 / 2)$ must be irrational. -/\ntheorem", "choices": ["Sorry, I cannot prove this theorem as it requires proving results about irrational numbers, which is beyond the scope of Lean Theorem Prover code translation.", "∀ {R : Type u_1} [inst : Semiring R] (f : PowerSeries R),\n  (∀ i, f.coeff i = 0 ∨ f.coeff i = 1) →\n    f.eval (2 / 3) = 3 / 2 →\n      Irrational (f.eval (1 / 2)) ", "Sorry, I cannot provide a direct Lean theorem for this specific problem as it involves proving a property about a specific function and its coefficients rather than a general theorem. However, I can suggest an outline of how you might approach proving this in Lean:\n\n1. Define the power series `f` with coefficients `c_i` as given in the problem statement.\n2. Prove that `f(2/3) = 3/2` using the power series expansion and given condition on the coefficients.\n3. Assume, for contradiction, that `f(1/2)` is rational, and derive a contradiction from this assumption using the properties of the power series and its coefficients.\n4. Conclude that `f(1/2)` must be irrational.\n\nThis outline can help you create a proof in Lean, but you'll need to fill in the details and construct the necessary intermediate theorems and lemmas.", "∀ {R : Type u_1} [inst : Semiring R] (f : PowerSeries R),\n  (∀ n, PowerSeries.coeff R n f = 0 ∨ PowerSeries.coeff R n f = 1) →\n    f (2 / 3) = 3 / 2 →\n      ¬ (∃ q : ℚ, f (1 / 2) = ↑q) ", "I'm sorry, but I cannot prove this theorem as it involves real analysis and number theory, which are not within the scope of Lean Theorem Prover code translation. Please provide another example for me to follow.", "I cannot prove this theorem directly in Lean Theorem Prover, as it requires knowledge of irrational numbers which is not available in the Lean language. However, I can help you translate the statement of the theorem into Lean code:\n\ntheorem irrational_half_power_series :\n  (∀ (f : ℕ → ℚ) (x : ℚ), (∀ (n : ℕ), f n = 0 ∨ f n = 1) →\n    (x = 2 / 3 → (∑ n in Finset.range(ℕ.succ(sorry)), (f n) * (x ^ n)) = 3 / 2) →\n      x = 1 / 2 → ∃ (m : ℕ), (∑ n in Finset.range(ℕ.succ(sorry)), (f n) * (x ^ n)) ≠ (m : ℚ))) ", "/-- If a power series `f(x) = ∑ₙ cₙ xⁿ` has coefficients `cₙ` in `{0, 1}` and `f(2/3) = 3/2`,\nthen `f(1/2)` must be irrational. -/\ntheorem irrational_f_half {f : ℕ → ℚ} :\n  (∀ n, f n = 0 ∨ f n = 1) →\n  ((∑' n, f n * (2/3)^n) = 3/2) →\n  Irrational (ℚ[[X]]).eval (1/2) (PowerSeries.mk f) ", "∀ {R : Type u_1} [inst : Semiring R] (f : PowerSeries R) (hf : ∀ i, (PowerSeries.coeff R i f = 0) ∨ (PowerSeries.coeff R i f = 1)),\n  f (2/3) = 3/2 → Irrational (PowerSeries.eval R f (1/2)) ", "Sorry, I cannot prove this theorem as it is a non-formal mathematical statement and it cannot be directly translated into Lean Theorem Prover code. Please provide a formal mathematical statement that can be translated to Lean code.", "∀ {R : Type u_1} [inst : Semiring R] (f : PowerSeries R),\n  (∀ (i : ℕ), (PowerSeries.coeff R i f = 0) ∨ (PowerSeries.coeff R i f = 1)) →\n    (f (2 / 3) = 3 / 2) →\n      Irrational (f (1 / 2)) "]}
{"docString": "Prove that for each positive integer $n$, the number $10^{10^{10^n}}+10^{10^n}+10^n-1$ is not prime.", "prompts": "[{\"theorem\": \"Set.InjOn Nat.factorization {x | x ≠ 0}\",\n  \"isProp\": true,\n  \"docString\":\n  \"Every nonzero natural number has a unique prime factorization \"},\n {\"theorem\":\n  \"∀ {n : ℕ}, n ≠ 0 → ∀ (p : ℕ), p ≠ 1 → ∃ e n', ¬p ∣ n' ∧ n = p ^ e * n'\",\n  \"isProp\": true,\n  \"docString\":\n  \"If `n` is a nonzero natural number and `p ≠ 1`, then there are natural numbers `e`\\nand `n'` such that `n'` is not divisible by `p` and `n = p^e * n'`. \"},\n {\"theorem\":\n  \"∀ {R : Type u_1} [inst : Zero R] {n : R} [self : NeZero n], n ≠ 0\",\n  \"isProp\": true,\n  \"docString\": \"The proposition that `n` is not zero. \"},\n {\"theorem\": \"∀ (n : ℕ), ∃ p, n ≤ p ∧ Nat.Prime p\",\n  \"isProp\": true,\n  \"docString\":\n  \"Euclid's theorem on the **infinitude of primes**.\\nHere given in the form: for every `n`, there exists a prime number `p ≥ n`. \"}]\n", "prompt_cons": "/-- Every nonzero natural number has a unique prime factorization -/\ntheorem Set.InjOn Nat.factorization {x | x ≠ 0} :=\n\n/-- If `n` is a nonzero natural number and `p ≠ 1`, then there are natural numbers `e`\nand `n'` such that `n'` is not divisible by `p` and `n = p^e * n'`. -/\ntheorem ∀ {n : ℕ}, n ≠ 0 → ∀ (p : ℕ), p ≠ 1 → ∃ e n', ¬p ∣ n' ∧ n = p ^ e * n' :=\n\n/-- The proposition that `n` is not zero. -/\ntheorem ∀ {R : Type u_1} [inst : Zero R] {n : R} [self : NeZero n], n ≠ 0 :=\n\n/-- Euclid's theorem on the **infinitude of primes**.\nHere given in the form: for every `n`, there exists a prime number `p ≥ n`. -/\ntheorem ∀ (n : ℕ), ∃ p, n ≤ p ∧ Nat.Prime p :=\n\n/-- Prove that for each positive integer $n$, the number $10^{10^{10^n}}+10^{10^n}+10^n-1$ is not prime. -/\ntheorem", "choices": ["∀ (n : ℕ), n > 0 → ¬Nat.Prime (10 ^ (10 ^ (10 ^ n)) + 10 ^ (10 ^ n) + 10 ^ n - 1) ", "∀ (n : ℕ), n > 0 → ¬ Nat.Prime (10 ^ (10 ^ (10 ^ n)) + 10 ^ (10 ^ n) + 10 ^ n - 1) ", "∀ (n : ℕ), n > 0 → ¬Nat.Prime (10^(10^(10^n)) + 10^(10^n) + 10^n - 1) ", "∀ (n : ℕ), n > 0 → ¬ Nat.Prime (10 ^ (10 ^ (10 ^ n)) + 10 ^ (10 ^ n) + 10 ^ n - 1) ", "∀ (n : ℕ), n > 0 → ¬Nat.Prime (10^(10^(10^n)) + 10^(10^n) + 10^n - 1) ", "∀ (n : ℕ), n > 0 → ¬ Nat.Prime (10^(10^(10^n)) + 10^(10^n) + 10^n - 1) ", "∀ (n : ℕ), n > 0 → ¬Nat.Prime (10^(10^(10^n)) + 10^(10^n) + 10^n - 1) ", "∀ (n : ℕ), n > 0 → ¬(Nat.Prime (10^(10^(10^n)) + 10^(10^n) + 10^n - 1)) ", "∀ (n : ℕ), n > 0 → ¬Nat.Prime (10 ^ (10 ^ (10 ^ n)) + 10 ^ (10 ^ n) + 10 ^ n - 1) ", "∀ (n : ℕ), n > 0 → ¬ Nat.Prime (10^(10^(10^n)) + 10^(10^n) + 10^n - 1) "]}
{"docString": "Prove that there exist infinitely many integers $n$ such that $n, n+1, n+2$ are each the sum of the squares of two integers.", "prompts": "[{\"theorem\":\n  \"∀ {a b x y u v : ℕ}, a = x ^ 2 + y ^ 2 → b = u ^ 2 + v ^ 2 → ∃ r s, a * b = r ^ 2 + s ^ 2\",\n  \"isProp\": true,\n  \"docString\":\n  \"The set of natural numbers that are sums of two squares is closed under multiplication. \"},\n {\"theorem\": \"∀ {n : ℕ}, IsSquare (-1) → ∃ x y, n = x ^ 2 + y ^ 2\",\n  \"isProp\": true,\n  \"docString\":\n  \"If `-1` is a square modulo the natural number `n`, then `n` is a sum of two squares. \"},\n {\"theorem\":\n  \"∀ {n : ℕ}, (∃ x y, n = x ^ 2 + y ^ 2) ↔ ∃ a b, n = a ^ 2 * b ∧ IsSquare (-1)\",\n  \"isProp\": true,\n  \"docString\":\n  \"A natural number `n` is a sum of two squares if and only if `n = a^2 * b` with natural\\nnumbers `a` and `b` such that `-1` is a square modulo `b`. \"},\n {\"theorem\": \"∀ (n : ℕ), ∃ p, n ≤ p ∧ Nat.Prime p\",\n  \"isProp\": true,\n  \"docString\":\n  \"Euclid's theorem on the **infinitude of primes**.\\nHere given in the form: for every `n`, there exists a prime number `p ≥ n`. \"}]\n", "prompt_cons": "/-- The set of natural numbers that are sums of two squares is closed under multiplication. -/\ntheorem ∀ {a b x y u v : ℕ}, a = x ^ 2 + y ^ 2 → b = u ^ 2 + v ^ 2 → ∃ r s, a * b = r ^ 2 + s ^ 2 :=\n\n/-- If `-1` is a square modulo the natural number `n`, then `n` is a sum of two squares. -/\ntheorem ∀ {n : ℕ}, IsSquare (-1) → ∃ x y, n = x ^ 2 + y ^ 2 :=\n\n/-- A natural number `n` is a sum of two squares if and only if `n = a^2 * b` with natural\nnumbers `a` and `b` such that `-1` is a square modulo `b`. -/\ntheorem ∀ {n : ℕ}, (∃ x y, n = x ^ 2 + y ^ 2) ↔ ∃ a b, n = a ^ 2 * b ∧ IsSquare (-1) :=\n\n/-- Euclid's theorem on the **infinitude of primes**.\nHere given in the form: for every `n`, there exists a prime number `p ≥ n`. -/\ntheorem ∀ (n : ℕ), ∃ p, n ≤ p ∧ Nat.Prime p :=\n\n/-- Prove that there exist infinitely many integers $n$ such that $n, n+1, n+2$ are each the sum of the squares of two integers. -/\ntheorem", "choices": ["∀ (n : ℕ), ∃ k, (∃ x₁ y₁, k = x₁ ^ 2 + y₁ ^ 2) ∧ (∃ x₂ y₂, k + 1 = x₂ ^ 2 + y₂ ^ 2) ∧ (∃ x₃ y₃, k + 2 = x₃ ^ 2 + y₃ ^ 2) ", "∀ (n : ℕ), ∃ m, (∃ x y, m = x ^ 2 + y ^ 2) ∧ (∃ u v, m + 1 = u ^ 2 + v ^ 2) ∧ (∃ r s, m + 2 = r ^ 2 + s ^ 2) ", "∃ f : ℕ → ℕ, ∀ n, (∃ x y, f n = x ^ 2 + y ^ 2) ∧ (∃ u v, f n + 1 = u ^ 2 + v ^ 2) ∧ (∃ r s, f n + 2 = r ^ 2 + s ^ 2) ", "∃ N : ℕ → ℕ, ∀ n, ∃ x y z w t u, n = N n ∧ N n = x ^ 2 + y ^ 2 ∧ N n + 1 = z ^ 2 + w ^ 2 ∧ N n + 2 = t ^ 2 + u ^ 2 ", "∀ (n : ℕ), ∃ m, (∃ x y, m = x ^ 2 + y ^ 2) ∧ (∃ u v, m + 1 = u ^ 2 + v ^ 2) ∧ (∃ r s, m + 2 = r ^ 2 + s ^ 2) ", "∃ f : ℕ → ℕ, ∀ n, (∃ x y, f n = x ^ 2 + y ^ 2) ∧ (∃ u v, f n + 1 = u ^ 2 + v ^ 2) ∧ (∃ r s, f n + 2 = r ^ 2 + s ^ 2) ", "∀ (n : ℕ), ∃ m, (∃ x₁ y₁, m = x₁ ^ 2 + y₁ ^ 2) ∧ (∃ x₂ y₂, m + 1 = x₂ ^ 2 + y₂ ^ 2) ∧ (∃ x₃ y₃, m + 2 = x₃ ^ 2 + y₃ ^ 2) ", "∃ f : ℕ → ℕ, ∀ n, (∃ x y, f n = x ^ 2 + y ^ 2) ∧ (∃ u v, (f n) + 1 = u ^ 2 + v ^ 2) ∧ (∃ r s, (f n) + 2 = r ^ 2 + s ^ 2) ", "∀ (n : ℕ), ∃ m, (∃ x y, m = x ^ 2 + y ^ 2) ∧ (∃ u v, m + 1 = u ^ 2 + v ^ 2) ∧ (∃ r s, m + 2 = r ^ 2 + s ^ 2) ", "∀ (n : ℕ), ∃ a b c d e f g h, n = a ^ 2 + b ^ 2 ∧ n + 1 = c ^ 2 + d ^ 2 ∧ n + 2 = e ^ 2 + f ^ 2 ∧ n + 3 = g ^ 2 + h ^ 2 "]}
{"docString": "Let $f$ be a real function on the real line with continuous third derivative. Prove that there exists a point $a$ such that", "prompts": "[{\"theorem\":\n  \"∀ {E : Type u_1} [inst : NormedAddCommGroup E] [inst_1 : NormedSpace ℂ E] {f : ℂ → E},\\n  DiffContOnCl ℂ f (Set.Iio 0 ×ℂ Set.Iio 0) →\\n    (∃ c,\\n        c < 2 ∧\\n          ∃ B,\\n            f =O[Filter.comap (↑Complex.abs) Filter.atTop ⊓ Filter.principal (Set.Iio 0 ×ℂ Set.Iio 0)] fun z =>\\n              rexp (B * ↑Complex.abs z ^ c)) →\\n      (∀ (x : ℝ), x ≤ 0 → f ↑x = 0) →\\n        (∀ (x : ℝ), x ≤ 0 → f (↑x * Complex.I) = 0) → Set.EqOn f 0 {z | z.re ≤ 0 ∧ z.im ≤ 0}\",\n  \"isProp\": true,\n  \"docString\":\n  \"**Phragmen-Lindelöf principle** in the third quadrant. Let `f : ℂ → E` be a function such that\\n\\n* `f` is differentiable in the open third quadrant and is continuous on its closure;\\n* `‖f z‖` is bounded from above by `A * exp(B * (abs z) ^ c)` on the open third quadrant\\n  for some `A`, `B`, and `c < 2`;\\n* `f` is equal to zero on the boundary of the third quadrant.\\n\\nThen `f` is equal to zero on the closed third quadrant. \"},\n {\"theorem\":\n  \"∀ {E : Type u_1} [inst : NormedAddCommGroup E] [inst_1 : NormedSpace ℝ E] {f g : ℝ → E} {x : ℝ},\\n  (∀ (y : ℝ), y ≠ x → HasDerivAt f (g y) y) → ContinuousAt f x → ContinuousAt g x → HasDerivAt f (g x) x\",\n  \"isProp\": true,\n  \"docString\":\n  \"If a real function `f` has a derivative `g` everywhere but at a point, and `f` and `g` are\\ncontinuous at this point, then `g` is also the derivative of `f` at this point. \"},\n {\"theorem\":\n  \"∀ {E : Type u_1} [inst : NormedAddCommGroup E] [inst_1 : NormedSpace ℝ E] {s : Set ℝ} {e : E} {a : ℝ} {f : ℝ → E},\\n  DifferentiableOn ℝ f s →\\n    ContinuousWithinAt f s a →\\n      s ∈ nhdsWithin a (Set.Ioi a) →\\n        Filter.Tendsto (fun x => deriv f x) (nhdsWithin a (Set.Ioi a)) (nhds e) → HasDerivWithinAt f e (Set.Ici a) a\",\n  \"isProp\": true,\n  \"docString\":\n  \"If a function is differentiable on the right of a point `a : ℝ`, continuous at `a`, and\\nits derivative also converges at `a`, then `f` is differentiable on the right at `a`. \"},\n {\"theorem\":\n  \"∀ {E : Type u_1} [inst : NormedAddCommGroup E] [inst_1 : NormedSpace ℂ E] {C : ℝ} {f : ℂ → E} {z : ℂ},\\n  DiffContOnCl ℂ f (Set.Iio 0 ×ℂ Set.Iio 0) →\\n    (∃ c,\\n        c < 2 ∧\\n          ∃ B,\\n            f =O[Filter.comap (↑Complex.abs) Filter.atTop ⊓ Filter.principal (Set.Iio 0 ×ℂ Set.Iio 0)] fun z =>\\n              rexp (B * ↑Complex.abs z ^ c)) →\\n      (∀ (x : ℝ), x ≤ 0 → ‖f ↑x‖ ≤ C) → (∀ (x : ℝ), x ≤ 0 → ‖f (↑x * Complex.I)‖ ≤ C) → z.re ≤ 0 → z.im ≤ 0 → ‖f z‖ ≤ C\",\n  \"isProp\": true,\n  \"docString\":\n  \"**Phragmen-Lindelöf principle** in the third quadrant. Let `f : ℂ → E` be a function such that\\n\\n* `f` is differentiable in the open third quadrant and is continuous on its closure;\\n* `‖f z‖` is bounded from above by `A * exp (B * (abs z) ^ c)` on the open third quadrant\\n  for some `c < 2`;\\n* `‖f z‖` is bounded from above by a constant `C` on the boundary of the third quadrant.\\n\\nThen `‖f z‖` is bounded from above by the same constant on the closed third quadrant. \"}]\n", "prompt_cons": "/-- **Phragmen-Lindelöf principle** in the third quadrant. Let `f : ℂ → E` be a function such that\n\n* `f` is differentiable in the open third quadrant and is continuous on its closure;\n* `‖f z‖` is bounded from above by `A * exp(B * (abs z) ^ c)` on the open third quadrant\n  for some `A`, `B`, and `c < 2`;\n* `f` is equal to zero on the boundary of the third quadrant.\n\nThen `f` is equal to zero on the closed third quadrant. -/\ntheorem ∀ {E : Type u_1} [inst : NormedAddCommGroup E] [inst_1 : NormedSpace ℂ E] {f : ℂ → E},\n  DiffContOnCl ℂ f (Set.Iio 0 ×ℂ Set.Iio 0) →\n    (∃ c,\n        c < 2 ∧\n          ∃ B,\n            f =O[Filter.comap (↑Complex.abs) Filter.atTop ⊓ Filter.principal (Set.Iio 0 ×ℂ Set.Iio 0)] fun z =>\n              rexp (B * ↑Complex.abs z ^ c)) →\n      (∀ (x : ℝ), x ≤ 0 → f ↑x = 0) →\n        (∀ (x : ℝ), x ≤ 0 → f (↑x * Complex.I) = 0) → Set.EqOn f 0 {z | z.re ≤ 0 ∧ z.im ≤ 0} :=\n\n/-- If a real function `f` has a derivative `g` everywhere but at a point, and `f` and `g` are\ncontinuous at this point, then `g` is also the derivative of `f` at this point. -/\ntheorem ∀ {E : Type u_1} [inst : NormedAddCommGroup E] [inst_1 : NormedSpace ℝ E] {f g : ℝ → E} {x : ℝ},\n  (∀ (y : ℝ), y ≠ x → HasDerivAt f (g y) y) → ContinuousAt f x → ContinuousAt g x → HasDerivAt f (g x) x :=\n\n/-- If a function is differentiable on the right of a point `a : ℝ`, continuous at `a`, and\nits derivative also converges at `a`, then `f` is differentiable on the right at `a`. -/\ntheorem ∀ {E : Type u_1} [inst : NormedAddCommGroup E] [inst_1 : NormedSpace ℝ E] {s : Set ℝ} {e : E} {a : ℝ} {f : ℝ → E},\n  DifferentiableOn ℝ f s →\n    ContinuousWithinAt f s a →\n      s ∈ nhdsWithin a (Set.Ioi a) →\n        Filter.Tendsto (fun x => deriv f x) (nhdsWithin a (Set.Ioi a)) (nhds e) → HasDerivWithinAt f e (Set.Ici a) a :=\n\n/-- **Phragmen-Lindelöf principle** in the third quadrant. Let `f : ℂ → E` be a function such that\n\n* `f` is differentiable in the open third quadrant and is continuous on its closure;\n* `‖f z‖` is bounded from above by `A * exp (B * (abs z) ^ c)` on the open third quadrant\n  for some `c < 2`;\n* `‖f z‖` is bounded from above by a constant `C` on the boundary of the third quadrant.\n\nThen `‖f z‖` is bounded from above by the same constant on the closed third quadrant. -/\ntheorem ∀ {E : Type u_1} [inst : NormedAddCommGroup E] [inst_1 : NormedSpace ℂ E] {C : ℝ} {f : ℂ → E} {z : ℂ},\n  DiffContOnCl ℂ f (Set.Iio 0 ×ℂ Set.Iio 0) →\n    (∃ c,\n        c < 2 ∧\n          ∃ B,\n            f =O[Filter.comap (↑Complex.abs) Filter.atTop ⊓ Filter.principal (Set.Iio 0 ×ℂ Set.Iio 0)] fun z =>\n              rexp (B * ↑Complex.abs z ^ c)) →\n      (∀ (x : ℝ), x ≤ 0 → ‖f ↑x‖ ≤ C) → (∀ (x : ℝ), x ≤ 0 → ‖f (↑x * Complex.I)‖ ≤ C) → z.re ≤ 0 → z.im ≤ 0 → ‖f z‖ ≤ C :=\n\n/-- Let $f$ be a real function on the real line with continuous third derivative. Prove that there exists a point $a$ such that -/\ntheorem", "choices": ["∀ {E : Type u_1} [inst : NormedAddCommGroup E] [inst_1 : NormedSpace ℝ E] {f : ℝ → E},\n  (∀ x, ContinuousAt (deriv (deriv (deriv f))) x) →\n    ∃ a, HasDerivAt f (deriv (deriv (deriv f)) a / 6) a ", "∀ {E : Type u_1} [inst : NormedAddCommGroup E] [inst_1 : NormedSpace ℝ E] {f : ℝ → E},\n  Continuous (deriv (deriv (deriv f))) →\n    ∃ a, deriv (deriv (deriv f)) a = 0 ∧ deriv (deriv f) a = 0 ∧ deriv f a = 0 ", "∀ {E : Type u_1} [inst : NormedAddCommGroup E] [inst_1 : NormedSpace ℝ E] {f : ℝ → E},\n  Continuous (deriv^[3] f) → ∃ a, deriv^[2] f a = 0 ", "∀ {E : Type u_1} [inst : NormedAddCommGroup E] [inst_1 : NormedSpace ℝ E] {f : ℝ → E},\n  (∃ f''', Continuous f''') →\n    (∃ a, HasDerivAt f (deriv (deriv (deriv f))) a) ", "∀ {E : Type u_1} [inst : NormedAddCommGroup E] [inst_1 : NormedSpace ℝ E] {f : ℝ → E},\n  Continuous (deriv^[3] f) → ∃ a, deriv^[3] f a = 0 ", "∀ {E : Type u_1} [inst : NormedAddCommGroup E] [inst_1 : NormedSpace ℝ E] {f : ℝ → E},\n  Continuous (deriv^[3] f) →\n    ∃ a : ℝ, deriv^[2] f a = 0 ∧ deriv f a = 0 ∧ f a = 0 ", "∀ {E : Type u_1} [inst : NormedAddCommGroup E] [inst_1 : NormedSpace ℝ E] {f : ℝ → E} {a : ℝ},\n  ContinuousOn (deriv^[3]) f Set.univ → ∃ a, deriv^[3] f a = 0 ", "∀ {E : Type u_1} [inst : NormedAddCommGroup E] [inst_1 : NormedSpace ℝ E] {f : ℝ → E},\n  Continuous (fun x => deriv^[3] f x) →\n    ∃ a, deriv^[2] f a = 0 ∧\n          (deriv^[2] f a = deriv f a ∧ deriv^[2] f a = f a) ", "∀ {E : Type u_1} [inst : NormedAddCommGroup E] [inst_1 : NormedSpace ℝ E] {f : ℝ → E},\n  Continuous (deriv^[3] f) →\n    ∃ a, HasDerivAt f (deriv f a) a ∧ HasDerivAt (deriv f) (deriv^[2] f a) a ∧ HasDerivAt (deriv^[2] f) (deriv^[3] f a) a ", "∀ {E : Type u_1} [inst : NormedAddCommGroup E] [inst_1 : NormedSpace ℝ E] {f : ℝ → E} {a : ℝ},\n  Continuous (deriv^[3] f) →\n    ∃ a, deriv^[2] f a = 0 "]}
{"docString": "Let $(p_n)$ be a sequence and $f:\\mathbb{N}\\to\\mathbb{N}$. The sequence $(q_k)_{k\\in\\mathbb{N}}$ with $q_k=p_{f(k)}$ is called a rearrangement of $(p_n)$. Show that if $f$ is an injection, the limit of a sequence is unaffected by rearrangement.", "prompts": "[{\"theorem\":\n  \"∀ {f : ℕ → ℕ}, Function.Injective f → Filter.Tendsto f Filter.atTop Filter.atTop\",\n  \"isProp\": true,\n  \"docString\":\n  \"An injective sequence `f : ℕ → ℕ` tends to infinity at infinity. \"},\n {\"theorem\":\n  \"∀ (f : CircleDeg1Lift) (x : ℝ),\\n  Filter.Tendsto (fun n => (↑(f ^ n) x - x) / ↑n) Filter.atTop (nhds (CircleDeg1Lift.translationNumber f))\",\n  \"isProp\": true,\n  \"docString\":\n  \"For any `x : ℝ` the sequence $\\\\frac{f^n(x)-x}{n}$ tends to the translation number of `f`.\\nIn particular, this limit does not depend on `x`. \"},\n {\"theorem\":\n  \"∀ {M : Type u_1} {P : Type u_2} [inst : MulOneClass M] [inst_1 : MulOneClass P] (f : M →* P),\\n  Function.Injective ↑(Con.kerLift f)\",\n  \"isProp\": true,\n  \"docString\":\n  \"A monoid homomorphism `f` induces an injective homomorphism on the quotient by `f`'s kernel. \"},\n {\"theorem\":\n  \"∀ {n : ℕ} {α : Type u_1} [inst : LinearOrder α] {f : Fin n → α}, Tuple.sort f = Equiv.refl (Fin n) ↔ Monotone f\",\n  \"isProp\": true,\n  \"docString\":\n  \"The permutation that sorts `f` is the identity if and only if `f` is monotone. \"}]\n", "prompt_cons": "/-- An injective sequence `f : ℕ → ℕ` tends to infinity at infinity. -/\ntheorem ∀ {f : ℕ → ℕ}, Function.Injective f → Filter.Tendsto f Filter.atTop Filter.atTop :=\n\n/-- For any `x : ℝ` the sequence $\\frac{f^n(x)-x}{n}$ tends to the translation number of `f`.\nIn particular, this limit does not depend on `x`. -/\ntheorem ∀ (f : CircleDeg1Lift) (x : ℝ),\n  Filter.Tendsto (fun n => (↑(f ^ n) x - x) / ↑n) Filter.atTop (nhds (CircleDeg1Lift.translationNumber f)) :=\n\n/-- A monoid homomorphism `f` induces an injective homomorphism on the quotient by `f`'s kernel. -/\ntheorem ∀ {M : Type u_1} {P : Type u_2} [inst : MulOneClass M] [inst_1 : MulOneClass P] (f : M →* P),\n  Function.Injective ↑(Con.kerLift f) :=\n\n/-- The permutation that sorts `f` is the identity if and only if `f` is monotone. -/\ntheorem ∀ {n : ℕ} {α : Type u_1} [inst : LinearOrder α] {f : Fin n → α}, Tuple.sort f = Equiv.refl (Fin n) ↔ Monotone f :=\n\n/-- Let $(p_n)$ be a sequence and $f:\\mathbb{N}\\to\\mathbb{N}$. The sequence $(q_k)_{k\\in\\mathbb{N}}$ with $q_k=p_{f(k)}$ is called a rearrangement of $(p_n)$. Show that if $f$ is an injection, the limit of a sequence is unaffected by rearrangement. -/\ntheorem", "choices": ["forall {α : Type u_1} [inst : TopologicalSpace α] [inst_1 : T1Space α]\n  {f : ℕ → ℕ} (hf : Function.Injective f) {p : ℕ → α} (l : α),\n  Filter.Tendsto p Filter.atTop (nhds l) ↔ Filter.Tendsto (p ∘ f) Filter.atTop (nhds l) ", "∀ {α : Type u_1} [inst : TopologicalSpace α] {p : ℕ → α} {f : ℕ → ℕ} (hf : Function.Injective f),\n  Filter.Tendsto p Filter.atTop (nhds (lim at_top p)) ↔ Filter.Tendsto (p ∘ f) Filter.atTop (nhds (lim at_top p)) ", "∀ {α : Type u_1} [inst : TopologicalSpace α] {p : ℕ → α} {f : ℕ → ℕ},\n  Function.Injective f → Filter.Tendsto p Filter.atTop (nhds L) ↔ Filter.Tendsto (p ∘ f) Filter.atTop (nhds L) ", "∀ {α : Type u_1} [inst : TopologicalSpace α] [inst_1 : T2Space α] {p : ℕ → α} {f : ℕ → ℕ},\n  Function.Injective f → (Filter.Tendsto p Filter.atTop (nhds l) ↔ Filter.Tendsto (p ∘ f) Filter.atTop (nhds l)) ", "∀ {α : Type u_1} [inst : TopologicalSpace α] [inst_1 : T1Space α] {p : ℕ → α} {f : ℕ → ℕ},\n  Function.Injective f → Filter.Tendsto p Filter.atTop (nhds (Limₓ Filter.atTop p)) →\n  Filter.Tendsto (fun k => p (f k)) Filter.atTop (nhds (Limₓ Filter.atTop p)) ", "∀ {α : Type u_1} [inst : TopologicalSpace α] {p : ℕ → α} {f : ℕ → ℕ}, Function.Injective f → Filter.Tendsto p Filter.atTop (nhds a) → Filter.Tendsto (p ∘ f) Filter.atTop (nhds a) ", "∀ {α : Type u_1} [inst : TopologicalSpace α] {p : ℕ → α} {f : ℕ → ℕ}, Function.Injective f →\n  Filter.Tendsto p Filter.atTop Filter.atTop ↔ Filter.Tendsto (p ∘ f) Filter.atTop Filter.atTop ", "∀ {α : Type u_1} [inst : TopologicalSpace α] [inst_1 : T1Space α] {f : ℕ → α} {g : ℕ → ℕ},\n  Function.Injective g → (Filter.Tendsto f Filter.atTop (nhds (x : α)) ↔ Filter.Tendsto (f ∘ g) Filter.atTop (nhds x)) ", "∀ {α : Type u_1} [inst : TopologicalSpace α] {f : ℕ → ℕ} (hf : Function.Injective f) {p : ℕ → α},\n  Filter.Tendsto p Filter.atTop (Filter.atTop) ↔ Filter.Tendsto (p ∘ f) Filter.atTop (Filter.atTop) ", "∀ {α : Type} {p : ℕ → α} {f : ℕ → ℕ} [inst : TopologicalSpace α] [inst_1 : T1Space α]\n  (hf : Function.Injective f) (lim : Filter.Tendsto p Filter.atTop (nhds (l : α))),\n  Filter.Tendsto (fun n => p (f n)) Filter.atTop (nhds l) "]}
{"docString": "Let $\\mathcal{T}$ be the collection of open subsets of a metric space $\\mathrm{M}$, and $\\mathcal{K}$ the collection of closed subsets. Show that there is a bijection from $\\mathcal{T}$ onto $\\mathcal{K}$.", "prompts": "[{\"theorem\":\n  \"∀ {X : Type u_1} [inst : PseudoEMetricSpace X] [inst_1 : MeasurableSpace X] (μ : MeasureTheory.Measure X),\\n  MeasureTheory.Measure.InnerRegular μ IsClosed IsOpen\",\n  \"isProp\": true,\n  \"docString\":\n  \"In a metric space (or even a pseudo emetric space), an open set can be approximated from inside\\nby closed sets. \"},\n {\"theorem\":\n  \"∀ {ι : Type u_2} {X : Type u_1} [inst : MetricSpace X] {K U : ι → Set X},\\n  (∀ (i : ι), IsClosed (K i)) →\\n    (∀ (i : ι), IsOpen (U i)) →\\n      (∀ (i : ι), K i ⊆ U i) →\\n        LocallyFinite K → ∃ δ, (∀ (x : X), 0 < ↑δ x) ∧ ∀ (i : ι) (x : X), x ∈ K i → Metric.closedBall x (↑δ x) ⊆ U i\",\n  \"isProp\": true,\n  \"docString\":\n  \"Let `X` be a metric space. Let `K : ι → Set X` be a locally finite family of closed sets, let\\n`U : ι → Set X` be a family of open sets such that `K i ⊆ U i` for all `i`. Then there exists a\\npositive continuous function `δ : C(X, ℝ)` such that for any `i` and `x ∈ K i`, we have\\n`Metric.closedBall x (δ x) ⊆ U i`. \"},\n {\"theorem\":\n  \"∀ {ι : Type u_2} {X : Type u_1} [inst : MetricSpace X] {K U : ι → Set X},\\n  (∀ (i : ι), IsClosed (K i)) →\\n    (∀ (i : ι), IsOpen (U i)) →\\n      (∀ (i : ι), K i ⊆ U i) →\\n        LocallyFinite K → ∃ δ, (∀ (x : X), 0 < ↑δ x) ∧ ∀ (i : ι) (x : X), x ∈ K i → Metric.closedBall x ↑(↑δ x) ⊆ U i\",\n  \"isProp\": true,\n  \"docString\":\n  \"Let `X` be a metric space. Let `K : ι → Set X` be a locally finite family of closed sets, let\\n`U : ι → Set X` be a family of open sets such that `K i ⊆ U i` for all `i`. Then there exists a\\npositive continuous function `δ : C(X, ℝ≥0)` such that for any `i` and `x ∈ K i`, we have\\n`Metric.closedBall x (δ x) ⊆ U i`. \"},\n {\"theorem\":\n  \"∀ {α : Type u} [inst : TopologicalSpace α] [inst_1 : T2Space α] {s : Set α},\\n  IsCompact s →\\n    ∀ {ι : Type u_1} (t : Finset ι) (U : ι → Set α),\\n      (∀ (i : ι), i ∈ t → IsOpen (U i)) →\\n        s ⊆ ⋃ (i : ι) (_ : i ∈ t), U i →\\n          ∃ K, (∀ (i : ι), IsCompact (K i)) ∧ (∀ (i : ι), K i ⊆ U i) ∧ s = ⋃ (i : ι) (_ : i ∈ t), K i\",\n  \"isProp\": true,\n  \"docString\":\n  \"For every finite open cover `Uᵢ` of a compact set, there exists a compact cover `Kᵢ ⊆ Uᵢ`. \"}]\n", "prompt_cons": "/-- In a metric space (or even a pseudo emetric space), an open set can be approximated from inside\nby closed sets. -/\ntheorem ∀ {X : Type u_1} [inst : PseudoEMetricSpace X] [inst_1 : MeasurableSpace X] (μ : MeasureTheory.Measure X),\n  MeasureTheory.Measure.InnerRegular μ IsClosed IsOpen :=\n\n/-- Let `X` be a metric space. Let `K : ι → Set X` be a locally finite family of closed sets, let\n`U : ι → Set X` be a family of open sets such that `K i ⊆ U i` for all `i`. Then there exists a\npositive continuous function `δ : C(X, ℝ)` such that for any `i` and `x ∈ K i`, we have\n`Metric.closedBall x (δ x) ⊆ U i`. -/\ntheorem ∀ {ι : Type u_2} {X : Type u_1} [inst : MetricSpace X] {K U : ι → Set X},\n  (∀ (i : ι), IsClosed (K i)) →\n    (∀ (i : ι), IsOpen (U i)) →\n      (∀ (i : ι), K i ⊆ U i) →\n        LocallyFinite K → ∃ δ, (∀ (x : X), 0 < ↑δ x) ∧ ∀ (i : ι) (x : X), x ∈ K i → Metric.closedBall x (↑δ x) ⊆ U i :=\n\n/-- Let `X` be a metric space. Let `K : ι → Set X` be a locally finite family of closed sets, let\n`U : ι → Set X` be a family of open sets such that `K i ⊆ U i` for all `i`. Then there exists a\npositive continuous function `δ : C(X, ℝ≥0)` such that for any `i` and `x ∈ K i`, we have\n`Metric.closedBall x (δ x) ⊆ U i`. -/\ntheorem ∀ {ι : Type u_2} {X : Type u_1} [inst : MetricSpace X] {K U : ι → Set X},\n  (∀ (i : ι), IsClosed (K i)) →\n    (∀ (i : ι), IsOpen (U i)) →\n      (∀ (i : ι), K i ⊆ U i) →\n        LocallyFinite K → ∃ δ, (∀ (x : X), 0 < ↑δ x) ∧ ∀ (i : ι) (x : X), x ∈ K i → Metric.closedBall x ↑(↑δ x) ⊆ U i :=\n\n/-- For every finite open cover `Uᵢ` of a compact set, there exists a compact cover `Kᵢ ⊆ Uᵢ`. -/\ntheorem ∀ {α : Type u} [inst : TopologicalSpace α] [inst_1 : T2Space α] {s : Set α},\n  IsCompact s →\n    ∀ {ι : Type u_1} (t : Finset ι) (U : ι → Set α),\n      (∀ (i : ι), i ∈ t → IsOpen (U i)) →\n        s ⊆ ⋃ (i : ι) (_ : i ∈ t), U i →\n          ∃ K, (∀ (i : ι), IsCompact (K i)) ∧ (∀ (i : ι), K i ⊆ U i) ∧ s = ⋃ (i : ι) (_ : i ∈ t), K i :=\n\n/-- Let $\\mathcal{T}$ be the collection of open subsets of a metric space $\\mathrm{M}$, and $\\mathcal{K}$ the collection of closed subsets. Show that there is a bijection from $\\mathcal{T}$ onto $\\mathcal{K}$. -/\ntheorem", "choices": ["∀ {X : Type u_1} [inst : MetricSpace X],\n  ∃ (F : (Set X) → (Set X)), (∀ (U : Set X), IsOpen U → IsClosed (F U)) ∧ (∀ (K : Set X), IsClosed K → IsOpen (F K)) ∧\n    (∀ (U V : Set X), IsOpen U → IsOpen V → F U = F V → U = V) ∧ (∀ (K L : Set X), IsClosed K → IsClosed L → F K = F L → K = L) ", "∀ {X : Type u_1} [inst : MetricSpace X],\n  ∃ (F : (Set X) → (Set X)), (∀ U, IsOpen U → IsClosed (F U)) ∧ (∀ K, IsClosed K → ∃ U, IsOpen U ∧ F U = K) ∧ (∀ U₁ U₂, IsOpen U₁ → IsOpen U₂ → F U₁ = F U₂ → U₁ = U₂) ", "∀ {X : Type u_1} [inst : MetricSpace X],\n  ∃ (f : (Set X → Prop) → (Set X → Prop)),\n    ((∀ (U : Set X), IsOpen U ↔ IsClosed (f U)) ∧ (∀ (K : Set X), IsClosed K ↔ IsOpen (f K))) ∧\n      (∀ (U₁ U₂ : Set X), IsOpen U₁ → IsOpen U₂ → f U₁ = f U₂ → U₁ = U₂) ∧\n        (∀ (K₁ K₂ : Set X), IsClosed K₁ → IsClosed K₂ → f K₁ = f K₂ → K₁ = K₂) ", "∀ {X : Type u_1} [inst : MetricSpace X] [inst_1 : TopologicalSpace X], ∃ (f : Set X → Set X),\n  (∀ (A : Set X), IsOpen A → IsClosed (f A)) ∧\n    (∀ (B : Set X), IsClosed B → IsOpen (f B)) ∧\n      (∀ (A B : Set X), IsOpen A → IsClosed B → f A = B ↔ A = f B) ", "∀ {X : Type u_1} [inst : MetricSpace X],\n  ∃ (f : Set X → Set X), (∀ (U : Set X), IsOpen U → IsClosed (f U)) ∧ (∀ (K : Set X), IsClosed K → IsOpen (f K)) ∧\n  (∀ (U₁ U₂ : Set X), IsOpen U₁ → IsOpen U₂ → (f U₁ = f U₂ ↔ U₁ = U₂)) ∧\n  (∀ (K₁ K₂ : Set X), IsClosed K₁ → IsClosed K₂ → (f K₁ = f K₂ ↔ K₁ = K₂)) ", "∀ {X : Type u_1} [inst : MetricSpace X], ∃ (f : {s : Set X // IsOpen s} ≃ {s : Set X // IsClosed s}),\n  ∀ (s : Set X) (hs : IsOpen s), f ⟨s, hs⟩ = ⟨X \\ s, IsClosed.compl hs⟩ ", "∀ (X : Type u_1) [inst : MetricSpace X],\n  ∃ (f : (Set X → Prop) → (Set X → Prop)),\n    (∀ (U : Set X), IsOpen U → IsClosed (f U)) ∧\n      (∀ (K : Set X), IsClosed K → IsOpen (f K)) ∧\n        (∀ (U : Set X), IsOpen U → f (f U) = U) ∧\n          (∀ (K : Set X), IsClosed K → f (f K) = K) ", "∀ {X : Type u_1} [inst : MetricSpace X],\n  ∃ (φ : (Set X → Set X)), (∀ (U : Set X), IsOpen U ↔ IsClosed (φ U)) ∧ (∀ (K : Set X), IsClosed K ↔ IsOpen (φ K)) ∧\n    (∀ (U : Set X), φ (φ U) = U) ", "∀ {X : Type u_1} [inst : MetricSpace X],\n  ∃ (F : (Set X → Set X)),\n    (∀ (U : Set X), IsOpen U → IsClosed (F U)) ∧\n    (∀ (K : Set X), IsClosed K → IsOpen (F K)) ∧\n    (∀ (U : Set X), IsOpen U → F (F U) = U) ∧\n    (∀ (K : Set X), IsClosed K → F (F K) = K) ", "∀ {X : Type u_1} [inst : MetricSpace X], ∃ (ψ : (Set X → Set X)),\n  (∀ (U : Set X), IsOpen U → IsClosed (ψ U)) ∧\n    (∀ (K : Set X), IsClosed K → IsOpen (ψ K)) ∧\n      (∀ (A B : Set X), ψ A = ψ B → A = B) ∧\n        (∀ (A B : Set X), A = B → ψ A = ψ B) "]}
{"docString": "Let $\\|\\cdot\\|$ be any norm on $\\mathbb{R}^{m}$ and let $B=\\left\\{x \\in \\mathbb{R}^{m}:\\|x\\| \\leq 1\\right\\}$. Prove that $B$ is compact.", "prompts": "[{\"theorem\":\n  \"∀ (K : Type u_1) [inst : Field K] [inst_1 : NumberField K] (A : Type u_2) [inst_2 : NormedField A]\\n  [inst_3 : IsAlgClosed A] [inst_4 : NormedAlgebra ℚ A] (B : ℝ),\\n  Set.Finite {x | IsIntegral ℤ x ∧ ∀ (φ : K →+* A), ‖↑φ x‖ ≤ B}\",\n  \"isProp\": true,\n  \"docString\":\n  \"Let `B` be a real number. The set of algebraic integers in `K` whose conjugates are all\\nsmaller in norm than `B` is finite. \"},\n {\"theorem\":\n  \"∀ {α : Type u_1} [inst : LinearOrder α] [inst_1 : TopologicalSpace α] [inst_2 : OrderClosedTopology α]\\n  [inst_3 : Nonempty α] {s : Set α}, IsCompact s → BddBelow s\",\n  \"isProp\": true,\n  \"docString\": \"A compact set is bounded below \"},\n {\"theorem\":\n  \"∀ {α : Type u} [inst : PseudoMetricSpace α] {s : Set α} [inst_1 : ProperSpace α],\\n  Metric.Bounded s → IsCompact (closure s)\",\n  \"isProp\": true,\n  \"docString\":\n  \"The **Heine–Borel theorem**: In a proper space, the closure of a bounded set is compact. \"},\n {\"theorem\":\n  \"∀ {α : Type u} [inst : PseudoMetricSpace α] {s : Set α}, IsCompact s → Metric.Bounded s\",\n  \"isProp\": true,\n  \"docString\": \"A compact set is bounded \"}]\n", "prompt_cons": "/-- Let `B` be a real number. The set of algebraic integers in `K` whose conjugates are all\nsmaller in norm than `B` is finite. -/\ntheorem ∀ (K : Type u_1) [inst : Field K] [inst_1 : NumberField K] (A : Type u_2) [inst_2 : NormedField A]\n  [inst_3 : IsAlgClosed A] [inst_4 : NormedAlgebra ℚ A] (B : ℝ),\n  Set.Finite {x | IsIntegral ℤ x ∧ ∀ (φ : K →+* A), ‖↑φ x‖ ≤ B} :=\n\n/-- A compact set is bounded below -/\ntheorem ∀ {α : Type u_1} [inst : LinearOrder α] [inst_1 : TopologicalSpace α] [inst_2 : OrderClosedTopology α]\n  [inst_3 : Nonempty α] {s : Set α}, IsCompact s → BddBelow s :=\n\n/-- The **Heine–Borel theorem**: In a proper space, the closure of a bounded set is compact. -/\ntheorem ∀ {α : Type u} [inst : PseudoMetricSpace α] {s : Set α} [inst_1 : ProperSpace α],\n  Metric.Bounded s → IsCompact (closure s) :=\n\n/-- A compact set is bounded -/\ntheorem ∀ {α : Type u} [inst : PseudoMetricSpace α] {s : Set α}, IsCompact s → Metric.Bounded s :=\n\n/-- Let $\\|\\cdot\\|$ be any norm on $\\mathbb{R}^{m}$ and let $B=\\left\\{x \\in \\mathbb{R}^{m}:\\|x\\| \\leq 1\\right\\}$. Prove that $B$ is compact. -/\ntheorem", "choices": ["∀ {m : ℕ} [inst : NormedGroup ℝ[m]] [inst_1 : FiniteDimensional ℝ ℝ[m]],\n  IsCompact {x : ℝ[m] | ∥x∥ ≤ 1} ", "∀ {m : ℕ} [inst : Fintype m] (f : ℝ → ℝ) [inst_1 : NormedGroup ℝ] [inst_2 : NormedSpace ℝ ℝ],\n  IsCompact {x : ℝ^m | ∥x∥ ≤ 1} ", "∀ {m : ℕ}, IsCompact {x : ℝ^m | ∥x∥ ≤ 1} ", "∀ {m : ℕ} [inst : NormedField ℝ] [inst_1 : Fintype (Finₓ m)] [inst_2 : NormedSpace ℝ (Finₓ m → ℝ)],\n  IsCompact {x : Finₓ m → ℝ | ∥x∥ ≤ 1} ", "∀ (m : ℕ) (norm : ℝ → ℝ) (inst : ∀ (x y : ℝ), norm (x + y) ≤ norm x + norm y) (inst_1 : ∀ (x : ℝ), norm x = 0 ↔ x = 0)\n  (inst_2 : ∀ (x : ℝ) (c : ℝ), norm (c * x) = abs c * norm x),\n  IsCompact {x : Finₓ m → ℝ | ∀ (i : Finₓ m), norm (x i) ≤ 1} ", "∀ {m : ℕ} [inst : Fintype m] [inst_1 : PseudoMetricSpace ℝ]\n  (norm : (Π (_x : m), ℝ) → ℝ) [inst_2 : ∀ (x : Π (_x : m), ℝ), Isometry (λ (y : Π (_x : m), ℝ), norm (x - y))],\n  IsCompact {x : Π (_x : m), ℝ | norm x ≤ 1} ", "∀ {m : ℕ} [inst : Fintype (Finₓ m)] [inst_1 : NormedGroup (EuclideanSpace ℝ (Finₓ m))],\n  IsCompact {x : EuclideanSpace ℝ (Finₓ m) | ∥x∥ ≤ 1} ", "forall {m : ℕ} (norm : ℝ^m → ℝ) [inst : NormedGroup.with_norm norm] {B : Set (ℝ^m)},\n  B = {x | norm x ≤ 1} → IsCompact B ", "∀ {m : ℕ} [inst : NormedGroup ℝ m], IsCompact {x : ℝ m | ∥x∥ ≤ 1} ", "∀ {m : ℕ} [inst : NormedGroup (EuclideanSpace ℝ m)], IsCompact {x : EuclideanSpace ℝ m | ∥x∥ ≤ 1} "]}
{"docString": "Show that if $S$ is connected, it is not true in general that its interior is connected.", "prompts": "[{\"theorem\":\n  \"∀ {α : Type u} [inst : TopologicalSpace α] [self : ConnectedSpace α], Nonempty α\",\n  \"isProp\": true,\n  \"docString\": \"A connected space is nonempty. \"},\n {\"theorem\":\n  \"∀ {E : Type u_1} [inst : AddCommGroup E] [inst_1 : Module ℝ E] [inst_2 : TopologicalSpace E]\\n  [inst_3 : TopologicalAddGroup E] [inst_4 : ContinuousSMul ℝ E] {s : Set E},\\n  Convex ℝ s → Set.Nonempty s → IsConnected s\",\n  \"isProp\": true,\n  \"docString\": \"A nonempty convex set is connected. \"},\n {\"theorem\":\n  \"∀ {α : Type u} [inst : TopologicalSpace α] {S : Set (Set α)},\\n  DirectedOn (fun x x_1 => x ⊆ x_1) S → (∀ (s : Set α), s ∈ S → IsPreconnected s) → IsPreconnected (⋃₀ S)\",\n  \"isProp\": true,\n  \"docString\":\n  \"The directed sUnion of a set S of preconnected subsets is preconnected. \"},\n {\"theorem\":\n  \"∀ {X : Type u} [inst : TopologicalSpace X] [inst_1 : TopologicalSpace.SeparableSpace X] {s : Set X},\\n  IsClosed s → ∀ [inst_2 : DiscreteTopology ↑s], Cardinal.continuum ≤ Cardinal.mk ↑s → ¬NormalSpace X\",\n  \"isProp\": true,\n  \"docString\":\n  \"Let `s` be a closed set in a separable space. If the induced topology on `s` is discrete and `s`\\nhas cardinality at least continuum, then the ambient space is not a normal space. \"}]\n", "prompt_cons": "/-- A connected space is nonempty. -/\ntheorem ∀ {α : Type u} [inst : TopologicalSpace α] [self : ConnectedSpace α], Nonempty α :=\n\n/-- A nonempty convex set is connected. -/\ntheorem ∀ {E : Type u_1} [inst : AddCommGroup E] [inst_1 : Module ℝ E] [inst_2 : TopologicalSpace E]\n  [inst_3 : TopologicalAddGroup E] [inst_4 : ContinuousSMul ℝ E] {s : Set E},\n  Convex ℝ s → Set.Nonempty s → IsConnected s :=\n\n/-- The directed sUnion of a set S of preconnected subsets is preconnected. -/\ntheorem ∀ {α : Type u} [inst : TopologicalSpace α] {S : Set (Set α)},\n  DirectedOn (fun x x_1 => x ⊆ x_1) S → (∀ (s : Set α), s ∈ S → IsPreconnected s) → IsPreconnected (⋃₀ S) :=\n\n/-- Let `s` be a closed set in a separable space. If the induced topology on `s` is discrete and `s`\nhas cardinality at least continuum, then the ambient space is not a normal space. -/\ntheorem ∀ {X : Type u} [inst : TopologicalSpace X] [inst_1 : TopologicalSpace.SeparableSpace X] {s : Set X},\n  IsClosed s → ∀ [inst_2 : DiscreteTopology ↑s], Cardinal.continuum ≤ Cardinal.mk ↑s → ¬NormalSpace X :=\n\n/-- Show that if $S$ is connected, it is not true in general that its interior is connected. -/\ntheorem", "choices": ["∀ {α : Type u} [inst : TopologicalSpace α] [self : ConnectedSpace α], ¬IsConnected (Interior α) ", "∀ {α : Type u} [inst : TopologicalSpace α] [self : ConnectedSpace α] {s : Set α},\n  IsConnected s → ¬IsConnected (Interior s) ", "∀ {α : Type u} [inst : TopologicalSpace α] [self : ConnectedSpace α], Not (IsConnected (Interior α)) ", "∀ {α : Type u} [inst : TopologicalSpace α] [self : ConnectedSpace α], ¬(IsConnected (Interior α)) ", "∀ {α : Type u} [inst : TopologicalSpace α] [self : ConnectedSpace α], ¬ConnectedSpace α → ¬IsConnected (Interior α) ", "∀ {α : Type u} [inst : TopologicalSpace α] [self : ConnectedSpace α], ¬IsConnected (Interior α) ", "∀ {α : Type u} [inst : TopologicalSpace α] [self : ConnectedSpace α],\n  ¬(IsConnected (Interior (⋃₀ self.1))) ", "∀ {α : Type u} [inst : TopologicalSpace α] [inst_1 : ConnectedSpace α], ¬ConnectedSpace (Interior α) ", "∀ {α : Type u} [inst : TopologicalSpace α] [self : ConnectedSpace α] (s : Set α),\n  ¬(IsConnected (Interior s) ↔ IsConnected s) ", "∀ {α : Type u} [inst : TopologicalSpace α] [self : ConnectedSpace α] {s : Set α},\n  IsConnected s → ¬IsConnected (Interior s) "]}
{"docString": "Suppose that $E$ is an uncountable subset of $\\mathbb{R}$. Prove that there exists a point $p \\in \\mathbb{R}$ at which $E$ condenses.", "prompts": "[{\"theorem\":\n  \"∀ {𝕜 : Type u_2} {𝕜' : Type u_3} {E : Type u_4} {F : Type u_1} [inst : AddCommGroup E] [inst_1 : UniformSpace E]\\n  [inst_2 : UniformAddGroup E] [inst_3 : AddCommGroup F] [inst_4 : UniformSpace F]\\n  [inst_5 : TopologicalSpace.FirstCountableTopology E] [inst_6 : IsROrC 𝕜] [inst_7 : Module 𝕜 E]\\n  [inst_8 : ContinuousSMul 𝕜 E] [inst_9 : IsROrC 𝕜'] [inst_10 : Module 𝕜' F] [inst_11 : ContinuousSMul 𝕜' F]\\n  {σ : 𝕜 →+* 𝕜'} [inst_12 : UniformAddGroup F] (f : E →ₛₗ[σ] F),\\n  (∀ (s : Set E), Bornology.IsVonNBounded 𝕜 s → Bornology.IsVonNBounded 𝕜' (↑f '' s)) → Continuous ↑f\",\n  \"isProp\": true,\n  \"docString\":\n  \"If `E` is first countable, then every locally bounded linear map `E →ₛₗ[σ] F` is continuous. \"},\n {\"theorem\":\n  \"∀ {α : Type u_1} [inst : TopologicalSpace α] [inst_1 : T1Space α] (x : α) {s : Set α},\\n  s ∈ nhds x → Set.Finite s → IsOpen {x}\",\n  \"isProp\": true,\n  \"docString\": \"A point with a finite neighborhood has to be isolated. \"},\n {\"theorem\":\n  \"∀ (F : Type u_2) [inst : Field F] (E : Type u_1) [inst_1 : Field E] [inst_2 : Algebra F E] [inst_3 : Finite E],\\n  ∃ α, F⟮α⟯ = ⊤\",\n  \"isProp\": true,\n  \"docString\": \"**Primitive element theorem** assuming E is finite. \"},\n {\"theorem\":\n  \"∀ {α : Type u} {β : Type v} {ι : Type x} [inst : UniformSpace β] {F : ι → α → β} {f : α → β} {s : Set α} {p : Filter ι},\\n  TendstoUniformlyOn F f p s → ∀ {x : α}, x ∈ s → Filter.Tendsto (fun n => F n x) p (nhds (f x))\",\n  \"isProp\": true,\n  \"docString\": \"Uniform converence implies pointwise convergence. \"}]\n", "prompt_cons": "/-- If `E` is first countable, then every locally bounded linear map `E →ₛₗ[σ] F` is continuous. -/\ntheorem ∀ {𝕜 : Type u_2} {𝕜' : Type u_3} {E : Type u_4} {F : Type u_1} [inst : AddCommGroup E] [inst_1 : UniformSpace E]\n  [inst_2 : UniformAddGroup E] [inst_3 : AddCommGroup F] [inst_4 : UniformSpace F]\n  [inst_5 : TopologicalSpace.FirstCountableTopology E] [inst_6 : IsROrC 𝕜] [inst_7 : Module 𝕜 E]\n  [inst_8 : ContinuousSMul 𝕜 E] [inst_9 : IsROrC 𝕜'] [inst_10 : Module 𝕜' F] [inst_11 : ContinuousSMul 𝕜' F]\n  {σ : 𝕜 →+* 𝕜'} [inst_12 : UniformAddGroup F] (f : E →ₛₗ[σ] F),\n  (∀ (s : Set E), Bornology.IsVonNBounded 𝕜 s → Bornology.IsVonNBounded 𝕜' (↑f '' s)) → Continuous ↑f :=\n\n/-- A point with a finite neighborhood has to be isolated. -/\ntheorem ∀ {α : Type u_1} [inst : TopologicalSpace α] [inst_1 : T1Space α] (x : α) {s : Set α},\n  s ∈ nhds x → Set.Finite s → IsOpen {x} :=\n\n/-- **Primitive element theorem** assuming E is finite. -/\ntheorem ∀ (F : Type u_2) [inst : Field F] (E : Type u_1) [inst_1 : Field E] [inst_2 : Algebra F E] [inst_3 : Finite E],\n  ∃ α, F⟮α⟯ = ⊤ :=\n\n/-- Uniform converence implies pointwise convergence. -/\ntheorem ∀ {α : Type u} {β : Type v} {ι : Type x} [inst : UniformSpace β] {F : ι → α → β} {f : α → β} {s : Set α} {p : Filter ι},\n  TendstoUniformlyOn F f p s → ∀ {x : α}, x ∈ s → Filter.Tendsto (fun n => F n x) p (nhds (f x)) :=\n\n/-- Suppose that $E$ is an uncountable subset of $\\mathbb{R}$. Prove that there exists a point $p \\in \\mathbb{R}$ at which $E$ condenses. -/\ntheorem", "choices": ["∀ {E : Set ℝ} [inst : TopologicalSpace ℝ] [inst_1 : T1Space ℝ], Set.Countable E → ∃ p : ℝ, Set.Countable (E ∩ Metric.Ball p 1) ", "∀ {E : Set ℝ} [inst : TopologicalSpace ℝ] [inst_1 : T1Space ℝ] [inst_2 : TopologicalSpace.CountableBasis ℝ],\n  Set.Countable E → (∃ p : ℝ, Filter.Tendsto (fun x => x) (Filter.comap coe (nhds p)) (Filter.coclosedCompact E)) ", "∀ {E : Set ℝ} [inst : TopologicalSpace ℝ] [inst_1 : LinearOrder ℝ] [inst_2 : OrderTopology ℝ],\n  Set.Countable E → ∃ p : ℝ, ∃ R : ℕ → ℝ, (∀ n, R n > 0) ∧ Filter.Tendsto R Filter.atTop (nhds 0) ∧ ∀ n, (Set.Ioo (p - R n) (p + R n) ∩ E).Countable ", "∀ {E : Set ℝ} [inst : TopologicalSpace ℝ] [inst_1 : OrderTopology ℝ] [inst_2 : DenseOrder ℝ],\n  Set.Countable E → ∃ p : ℝ, ∀ ε > (0 : ℝ), Set.Nonempty (Set.Ioo (p - ε) (p + ε) ∩ E) ", "∀ {E : Set ℝ} [inst : TopologicalSpace ℝ] [inst_1 : LinearOrder ℝ] [inst_2 : OrderTopology ℝ] [inst_3 : DenselyOrdered ℝ],\n  Set.Countable E → ∃ p, ∀ ε > 0, Set.Countable (E ∩ (Set.Ioo (p - ε) (p + ε))) ", "∀ {E : Set ℝ} [inst : TopologicalSpace ℝ] [inst_1 : LinearOrder ℝ] [inst_2 : OrderTopology ℝ] [inst_3 : DenselyOrdered ℝ],\n  Set.Countable E → ∃ p : ℝ, ∀ s : ℕ, ∃ x ∈ E, p - (1 / (s + 1)) < x ∧ x < p + (1 / (s + 1)) ", "∀ (E : Set ℝ) [inst : TopologicalSpace ℝ] [inst_1 : TopologicalSpace.FirstCountableTopology ℝ] [inst_2 : TopologicalSpace.SecondCountableTopology ℝ],\n  Set.Countable E → ∃ (p : ℝ), ∀ (U : Set ℝ), U ∈ nhds p → Set.Countable (E ∩ U) ", "∀ {E : Set ℝ} [inst : Infinite E] [inst_1 : Nonempty E], ∃ p : ℝ, Set.Countable (E ∩ Metric.Ball p 1) ", "∀ {E : Set ℝ} (hE : Set.Countable Eᶜ), ∃ p : ℝ, IsCondensationPoint E p ", "∀ {E : Set ℝ} [inst : TopologicalSpace ℝ] [inst_1 : T1Space ℝ] [inst_2 : TopologicalSpace.CountableBasis ℝ]\n  [inst_3 : Uncountable E], ∃ p, condensation_point_of E p "]}
{"docString": "Prove that $\\sqrt{n+1}-\\sqrt{n} \\rightarrow 0$ as $n \\rightarrow \\infty$.", "prompts": "[{\"theorem\":\n  \"∀ {J : Type w} {C : Type u} [inst : CategoryTheory.Category C] {B : C}\\n  (F : CategoryTheory.Functor (CategoryTheory.Discrete J) (CategoryTheory.Over B))\\n  [inst_1 :\\n    CategoryTheory.Limits.HasLimit (CategoryTheory.Over.ConstructProducts.widePullbackDiagramOfDiagramOver B F)],\\n  CategoryTheory.Limits.HasLimit F\",\n  \"isProp\": true,\n  \"docString\": \"Use the above equivalence to prove we have a limit. \"},\n {\"theorem\":\n  \"∀ {A : Type u_1} [inst : CommRing A] [inst_1 : Algebra ℚ A] (n : ℕ),\\n  (Finset.sum (Finset.range n) fun k => PowerSeries.exp A ^ k) =\\n    PowerSeries.mk fun p => Finset.sum (Finset.range n) fun k => ↑(k ^ p) * ↑(algebraMap ℚ A) (↑(Nat.factorial p))⁻¹\",\n  \"isProp\": true,\n  \"docString\":\n  \"Shows that\\n$\\\\sum_{k = 0}^{n - 1} (e^{X})^k = \\\\sum_{p = 0}^{\\\\infty} \\\\sum_{k = 0}^{n - 1} \\\\frac{k^p}{p!}X^p$. \"},\n {\"theorem\":\n  \"∀ (n : ℕ), Filter.Tendsto (fun x => x ^ n * rexp (-x)) Filter.atTop (nhds 0)\",\n  \"isProp\": true,\n  \"docString\":\n  \"The function `x^n * exp(-x)` tends to `0` at `+∞`, for any natural number `n`. \"},\n {\"theorem\": \"∀ (n : ℕ), 512 ≤ n → ∃ p, Nat.Prime p ∧ n < p ∧ p ≤ 2 * n\",\n  \"isProp\": true,\n  \"docString\":\n  \"Proves that Bertrand's postulate holds for all sufficiently large `n`.\\n\"}]\n", "prompt_cons": "/-- Use the above equivalence to prove we have a limit. -/\ntheorem ∀ {J : Type w} {C : Type u} [inst : CategoryTheory.Category C] {B : C}\n  (F : CategoryTheory.Functor (CategoryTheory.Discrete J) (CategoryTheory.Over B))\n  [inst_1 :\n    CategoryTheory.Limits.HasLimit (CategoryTheory.Over.ConstructProducts.widePullbackDiagramOfDiagramOver B F)],\n  CategoryTheory.Limits.HasLimit F :=\n\n/-- Shows that\n$\\sum_{k = 0}^{n - 1} (e^{X})^k = \\sum_{p = 0}^{\\infty} \\sum_{k = 0}^{n - 1} \\frac{k^p}{p!}X^p$. -/\ntheorem ∀ {A : Type u_1} [inst : CommRing A] [inst_1 : Algebra ℚ A] (n : ℕ),\n  (Finset.sum (Finset.range n) fun k => PowerSeries.exp A ^ k) =\n    PowerSeries.mk fun p => Finset.sum (Finset.range n) fun k => ↑(k ^ p) * ↑(algebraMap ℚ A) (↑(Nat.factorial p))⁻¹ :=\n\n/-- The function `x^n * exp(-x)` tends to `0` at `+∞`, for any natural number `n`. -/\ntheorem ∀ (n : ℕ), Filter.Tendsto (fun x => x ^ n * rexp (-x)) Filter.atTop (nhds 0) :=\n\n/-- Proves that Bertrand's postulate holds for all sufficiently large `n`. -/\ntheorem ∀ (n : ℕ), 512 ≤ n → ∃ p, Nat.Prime p ∧ n < p ∧ p ≤ 2 * n :=\n\n/-- Prove that $\\sqrt{n+1}-\\sqrt{n} \\rightarrow 0$ as $n \\rightarrow \\infty$. -/\ntheorem", "choices": ["Filter.Tendsto (λ n => Real.sqrt (n + 1) - Real.sqrt n) Filter.atTop (nhds 0) ", "Filter.Tendsto (λ n, Real.sqrt (n + 1) - Real.sqrt n) Filter.atTop (nhds 0) ", "Filter.Tendsto (fun n => Real.sqrt (n + 1) - Real.sqrt n) Filter.atTop (nhds 0) ", "Filter.Tendsto (λ n => Real.sqrt (n + 1) - Real.sqrt n) Filter.atTop (nhds 0) ", "Filter.Tendsto (fun n => Real.sqrt (n + 1) - Real.sqrt n) Filter.atTop (nhds 0) ", "Filter.Tendsto (fun n => Real.sqrt (n + 1) - Real.sqrt n) Filter.atTop (nhds 0) ", "Filter.Tendsto (fun n => Real.sqrt (n + 1) - Real.sqrt n) Filter.atTop (nhds 0) ", "Filter.Tendsto (fun n => Real.sqrt (n + 1) - Real.sqrt n) Filter.atTop (nhds 0) ", "Filter.Tendsto (fun n => Real.sqrt (n + 1) - Real.sqrt n) Filter.atTop (nhds 0) ", "Filter.Tendsto (fun n => Real.sqrt (n + 1) - Real.sqrt n) Filter.atTop (nhds 0) "]}
{"docString": "Prove that $\\sum 1/k(\\log(k))^p$ diverges when $p \\leq 1$.", "prompts": "[{\"theorem\":\n  \"∀ {A : Type u_1} [inst : CommRing A] [inst_1 : Algebra ℚ A] (n : ℕ),\\n  (Finset.sum (Finset.range n) fun k => PowerSeries.exp A ^ k) =\\n    PowerSeries.mk fun p => Finset.sum (Finset.range n) fun k => ↑(k ^ p) * ↑(algebraMap ℚ A) (↑(Nat.factorial p))⁻¹\",\n  \"isProp\": true,\n  \"docString\":\n  \"Shows that\\n$\\\\sum_{k = 0}^{n - 1} (e^{X})^k = \\\\sum_{p = 0}^{\\\\infty} \\\\sum_{k = 0}^{n - 1} \\\\frac{k^p}{p!}X^p$. \"},\n {\"theorem\":\n  \"∀ {R : Type u_1} {k : ℕ} [inst : CommRing R] [inst_1 : IsDomain R] {ζ : R},\\n  IsPrimitiveRoot ζ k → 1 < k → (Finset.sum (Finset.range k) fun i => ζ ^ i) = 0\",\n  \"isProp\": true,\n  \"docString\": \"If `1 < k` then `(∑ i in range k, ζ ^ i) = 0`. \"},\n {\"theorem\": \"∀ {p : ℕ}, (Summable fun n => 1 / ↑n ^ p) ↔ 1 < p\",\n  \"isProp\": true,\n  \"docString\":\n  \"Test for convergence of the `p`-series: the real-valued series `∑' n : ℕ, 1 / n ^ p` converges\\nif and only if `1 < p`. \"},\n {\"theorem\":\n  \"∀ {x : ℝ}, |x| < 1 → HasSum (fun n => x ^ (n + 1) / (↑n + 1)) (-Real.log (1 - x))\",\n  \"isProp\": true,\n  \"docString\": \"Power series expansion of the logarithm around `1`. \"}]\n", "prompt_cons": "/-- Shows that\n$\\sum_{k = 0}^{n - 1} (e^{X})^k = \\sum_{p = 0}^{\\infty} \\sum_{k = 0}^{n - 1} \\frac{k^p}{p!}X^p$. -/\ntheorem ∀ {A : Type u_1} [inst : CommRing A] [inst_1 : Algebra ℚ A] (n : ℕ),\n  (Finset.sum (Finset.range n) fun k => PowerSeries.exp A ^ k) =\n    PowerSeries.mk fun p => Finset.sum (Finset.range n) fun k => ↑(k ^ p) * ↑(algebraMap ℚ A) (↑(Nat.factorial p))⁻¹ :=\n\n/-- If `1 < k` then `(∑ i in range k, ζ ^ i) = 0`. -/\ntheorem ∀ {R : Type u_1} {k : ℕ} [inst : CommRing R] [inst_1 : IsDomain R] {ζ : R},\n  IsPrimitiveRoot ζ k → 1 < k → (Finset.sum (Finset.range k) fun i => ζ ^ i) = 0 :=\n\n/-- Test for convergence of the `p`-series: the real-valued series `∑' n : ℕ, 1 / n ^ p` converges\nif and only if `1 < p`. -/\ntheorem ∀ {p : ℕ}, (Summable fun n => 1 / ↑n ^ p) ↔ 1 < p :=\n\n/-- Power series expansion of the logarithm around `1`. -/\ntheorem ∀ {x : ℝ}, |x| < 1 → HasSum (fun n => x ^ (n + 1) / (↑n + 1)) (-Real.log (1 - x)) :=\n\n/-- Prove that $\\sum 1/k(\\log(k))^p$ diverges when $p \\leq 1$. -/\ntheorem", "choices": ["∀ {p : ℕ}, (p ≤ 1) → ¬Summable (fun k => 1 / ↑k * (Real.log ↑k) ^ p) ", "∀ {p : ℕ}, (p ≤ 1) → ¬Summable fun k => 1 / ↑k * (Real.log ↑k) ^ p ", "∀ {p : ℕ}, (p ≤ 1) → ¬ Summable (fun k => 1 / (↑k * (Real.log ↑k) ^ p)) ", "∀ {p : ℝ}, p ≤ 1 → ¬Summable (λ k => 1 / (↑k * Real.log (↑k) ^ p)) ", "∀ {p : ℝ}, p ≤ 1 → ¬Summable (λ k => 1 / k * (Real.log k) ^ p) ", "∀ {p : ℕ}, (p ≤ 1) → ¬ Summable (fun k => 1 / (↑k * (Real.log ↑k) ^ p)) ", "∀ {p : ℕ}, (p ≤ 1) → ¬ Summable (fun k => 1 / ↑k * (Real.log ↑k) ^ p) ", "∀ {p : ℕ}, (p ≤ 1) → ¬Summable (λ k => 1 / ↑k * (Real.log ↑k) ^ p) ", "∀ {p : ℝ}, p ≤ 1 → ¬ Summable (λ k => 1 / (↑k * (Real.log ↑k) ^ p)) ", "∀ {p : ℕ}, (p ≤ 1) → ¬ Summable (λ k => 1 / ↑k * (Real.log ↑k) ^ p) "]}
{"docString": "Show that a group of order 5 must be abelian.", "prompts": "[{\"theorem\":\n  \"∀ {α : Type u_1} [inst : Fintype α] [inst_1 : DecidableEq α],\\n  5 ≤ Fintype.card α →\\n    ∀ {f : Equiv.Perm α} (hf : Equiv.Perm.IsThreeCycle f),\\n      Subgroup.normalClosure {{ val := f, property := (_ : f ∈ alternatingGroup α) }} = ⊤\",\n  \"isProp\": true,\n  \"docString\":\n  \"A key lemma to prove $A_5$ is simple. Shows that any normal subgroup of an alternating group on\\nat least 5 elements is the entire alternating group if it contains a 3-cycle. \"},\n {\"theorem\": \"∀ {G : Type u_1} [inst : CommGroup G], Group.IsNilpotent G\",\n  \"isProp\": true,\n  \"docString\": \"Abelian groups are nilpotent \"},\n {\"theorem\": \"IsSimpleGroup { x // x ∈ alternatingGroup (Fin 5) }\",\n  \"isProp\": true,\n  \"docString\":\n  \"Shows that $A_5$ is simple by taking an arbitrary non-identity element and showing by casework\\non its cycle type that its normal closure is all of $A_5$. \"},\n {\"theorem\":\n  \"∀ {C : Type u} [inst : CategoryTheory.Category C] [inst_1 : CategoryTheory.Abelian C],\\n  CategoryTheory.Limits.HasFiniteBiproducts C\",\n  \"isProp\": true,\n  \"docString\": \"An abelian category has finite biproducts. \"}]\n", "prompt_cons": "/-- A key lemma to prove $A_5$ is simple. Shows that any normal subgroup of an alternating group on\nat least 5 elements is the entire alternating group if it contains a 3-cycle. -/\ntheorem ∀ {α : Type u_1} [inst : Fintype α] [inst_1 : DecidableEq α],\n  5 ≤ Fintype.card α →\n    ∀ {f : Equiv.Perm α} (hf : Equiv.Perm.IsThreeCycle f),\n      Subgroup.normalClosure {{ val := f, property := (_ : f ∈ alternatingGroup α) }} = ⊤ :=\n\n/-- Abelian groups are nilpotent -/\ntheorem ∀ {G : Type u_1} [inst : CommGroup G], Group.IsNilpotent G :=\n\n/-- Shows that $A_5$ is simple by taking an arbitrary non-identity element and showing by casework\non its cycle type that its normal closure is all of $A_5$. -/\ntheorem IsSimpleGroup { x // x ∈ alternatingGroup (Fin 5) } :=\n\n/-- An abelian category has finite biproducts. -/\ntheorem ∀ {C : Type u} [inst : CategoryTheory.Category C] [inst_1 : CategoryTheory.Abelian C],\n  CategoryTheory.Limits.HasFiniteBiproducts C :=\n\n/-- Show that a group of order 5 must be abelian. -/\ntheorem", "choices": ["∀ {G : Type u_1} [inst : Group G] [inst_1 : Fintype G],\n  Fintype.card G = 5 → IsCommutative G ", "∀ {G : Type u_1} [inst : Group G] [inst_1 : Fintype G], Fintype.card G = 5 → CommGroup G ", "∀ {G : Type u_1} [inst : Group G] [Fintype G],\n  Fintype.card G = 5 →\n    ∀ (x y : G), x * y = y * x ", "∀ {G : Type u_1} [inst : Fintype G] [inst_1 : Group G],\n  Fintype.card G = 5 → Group.IsAbelian G ", "∀ {G : Type u_1} [inst : Group G] [inst_1 : Fintype G], Fintype.card G = 5 → CommGroup G ", "∀ {G : Type u_1} [inst : Group G] (h : Fintype.card G = 5), IsCommutative G ", "∀ {G : Type u_1} [inst : Group G] [inst_1 : Fintype G],\n  Fintype.card G = 5 → ∀ (x y : G), x * y = y * x ", "∀ {G : Type u_1} [inst : Group G] [Fintype G],\n  Fintype.card G = 5 → Group.IsAbelian G ", "∀ {α : Type u_1} [inst : Fintype α] [inst_1 : DecidableEq α],\n  Fintype.card α = 5 →\n    ∀ (G : Type u_1) [inst_2 : Group G], Group.IsAbelian G ", "∀ {G : Type u_1} [inst : Group G] [inst_1 : Fintype G],\n  Fintype.card G = 5 →\n    ∀ (x y : G), x * y = y * x "]}
{"docString": "If $G$ is a finite group, prove that there is an integer $m > 0$ such that $a^m = e$ for all $a \\in G$.", "prompts": "[{\"theorem\": \"∀ {a : ℤ} {m n : ℕ}, Int.gcd a (↑m * ↑n) = 1 → Int.gcd a ↑m = 1\",\n  \"isProp\": true,\n  \"docString\": \"If `gcd a (m * n) = 1`, then `gcd a m = 1`. \"},\n {\"theorem\": \"∀ {a : ℤ} {m n : ℕ}, Int.gcd a (↑m * ↑n) = 1 → Int.gcd a ↑n = 1\",\n  \"isProp\": true,\n  \"docString\": \"If `gcd a (m * n) = 1`, then `gcd a n = 1`. \"},\n {\"theorem\":\n  \"∀ {G : Type u_1} [inst : Group G] [inst_1 : Fintype G] (p : ℕ) [hp : Fact (Nat.Prime p)],\\n  p ∣ Fintype.card G → ∃ x, orderOf x = p\",\n  \"isProp\": true,\n  \"docString\":\n  \"For every prime `p` dividing the order of a finite group `G` there exists an element of order\\n`p` in `G`. This is known as Cauchy's theorem. \"},\n {\"theorem\":\n  \"∀ {α : Type u_1} [self : LinearOrderedCommGroupWithZero α] (a : α), a ≠ 0 → a * a⁻¹ = 1\",\n  \"isProp\": true,\n  \"docString\": \"Every nonzero element of a group with zero is invertible. \"}]\n", "prompt_cons": "/-- If `gcd a (m * n) = 1`, then `gcd a m = 1`. -/\ntheorem ∀ {a : ℤ} {m n : ℕ}, Int.gcd a (↑m * ↑n) = 1 → Int.gcd a ↑m = 1 :=\n\n/-- If `gcd a (m * n) = 1`, then `gcd a n = 1`. -/\ntheorem ∀ {a : ℤ} {m n : ℕ}, Int.gcd a (↑m * ↑n) = 1 → Int.gcd a ↑n = 1 :=\n\n/-- For every prime `p` dividing the order of a finite group `G` there exists an element of order\n`p` in `G`. This is known as Cauchy's theorem. -/\ntheorem ∀ {G : Type u_1} [inst : Group G] [inst_1 : Fintype G] (p : ℕ) [hp : Fact (Nat.Prime p)],\n  p ∣ Fintype.card G → ∃ x, orderOf x = p :=\n\n/-- Every nonzero element of a group with zero is invertible. -/\ntheorem ∀ {α : Type u_1} [self : LinearOrderedCommGroupWithZero α] (a : α), a ≠ 0 → a * a⁻¹ = 1 :=\n\n/-- If $G$ is a finite group, prove that there is an integer $m > 0$ such that $a^m = e$ for all $a \\in G$. -/\ntheorem", "choices": ["∀ {G : Type u_1} [inst : Group G] [inst_1 : Fintype G], ∃ m : ℕ, m > 0 ∧ ∀ a : G, a ^ m = 1 ", "forall {G : Type u_1} [inst : Group G] [inst_1 : Fintype G], ∃ m : ℕ, m > 0 ∧ ∀ a : G, a ^ m = 1 ", "forall {G : Type u_1} [inst : Group G] [inst_1 : Fintype G], ∃ m : ℕ, m > 0 ∧ ∀ a : G, a ^ m = 1 ", "∀ {G : Type u_1} [inst : Group G] [inst_1 : Fintype G], ∃ m : ℕ, m > 0 ∧ ∀ a : G, a ^ m = 1 ", "forall {G : Type u_1} [inst : Group G] [inst_1 : Fintype G], ∃ m : ℕ, m > 0 ∧ ∀ a : G, a ^ m = 1 ", "forall {G : Type u_1} [inst : Group G] [inst_1 : Fintype G], ∃ m : ℕ, m > 0 ∧ ∀ a : G, a ^ m = 1 ", "forall {G : Type u_1} [inst : Group G] [inst_1 : Fintype G], ∃ m : ℕ, m > 0 ∧ ∀ a : G, a ^ m = 1 ", "/-- If `gcd a (m * n) = 1`, then `gcd a m = 1`. -/\ntheorem gcd_mul_right_left {a : ℤ} {m n : ℕ} (H : Int.gcd a (↑m * ↑n) = 1) : Int.gcd a ↑m = 1 ", "/-- If `gcd a (m * n) = 1`, then `gcd a m = 1`. -/\ntheorem gcd_mul_right_left {a : ℤ} {m n : ℕ} :\n  Int.gcd a (↑m * ↑n) = 1 → Int.gcd a ↑m = 1 ", "∀ {G : Type u_1} [inst : Group G] [inst_1 : Fintype G], ∃ m : ℕ, m > 0 ∧ ∀ a : G, a ^ m = 1 "]}
{"docString": "Let $G$ be a group in which $(a b)^{3}=a^{3} b^{3}$ and $(a b)^{5}=a^{5} b^{5}$ for all $a, b \\in G$. Show that $G$ is abelian.", "prompts": "[{\"theorem\":\n  \"∀ {α : Type u_1} [inst : Fintype α] [inst_1 : DecidableEq α],\\n  5 ≤ Fintype.card α →\\n    ∀ {f : Equiv.Perm α} (hf : Equiv.Perm.IsThreeCycle f),\\n      Subgroup.normalClosure {{ val := f, property := (_ : f ∈ alternatingGroup α) }} = ⊤\",\n  \"isProp\": true,\n  \"docString\":\n  \"A key lemma to prove $A_5$ is simple. Shows that any normal subgroup of an alternating group on\\nat least 5 elements is the entire alternating group if it contains a 3-cycle. \"},\n {\"theorem\":\n  \"∀ {S : Type u_1} [inst : Semigroup S] {a b c : S}, Commute a b → Commute a c → Commute a (b * c)\",\n  \"isProp\": true,\n  \"docString\":\n  \"If `a` commutes with both `b` and `c`, then it commutes with their product. \"},\n {\"theorem\":\n  \"∀ {M₀ : Type u_1} [inst : Mul M₀] [inst_1 : Zero M₀] [self : NoZeroDivisors M₀] {a b : M₀}, a * b = 0 → a = 0 ∨ b = 0\",\n  \"isProp\": true,\n  \"docString\":\n  \"For all `a` and `b` of `G₀`, `a * b = 0` implies `a = 0` or `b = 0`. \"},\n {\"theorem\": \"∀ {G : Type u_1} [inst : CommGroup G], Group.IsNilpotent G\",\n  \"isProp\": true,\n  \"docString\": \"Abelian groups are nilpotent \"}]\n", "prompt_cons": "/-- A key lemma to prove $A_5$ is simple. Shows that any normal subgroup of an alternating group on\nat least 5 elements is the entire alternating group if it contains a 3-cycle. -/\ntheorem ∀ {α : Type u_1} [inst : Fintype α] [inst_1 : DecidableEq α],\n  5 ≤ Fintype.card α →\n    ∀ {f : Equiv.Perm α} (hf : Equiv.Perm.IsThreeCycle f),\n      Subgroup.normalClosure {{ val := f, property := (_ : f ∈ alternatingGroup α) }} = ⊤ :=\n\n/-- If `a` commutes with both `b` and `c`, then it commutes with their product. -/\ntheorem ∀ {S : Type u_1} [inst : Semigroup S] {a b c : S}, Commute a b → Commute a c → Commute a (b * c) :=\n\n/-- For all `a` and `b` of `G₀`, `a * b = 0` implies `a = 0` or `b = 0`. -/\ntheorem ∀ {M₀ : Type u_1} [inst : Mul M₀] [inst_1 : Zero M₀] [self : NoZeroDivisors M₀] {a b : M₀}, a * b = 0 → a = 0 ∨ b = 0 :=\n\n/-- Abelian groups are nilpotent -/\ntheorem ∀ {G : Type u_1} [inst : CommGroup G], Group.IsNilpotent G :=\n\n/-- Let $G$ be a group in which $(a b)^{3}=a^{3} b^{3}$ and $(a b)^{5}=a^{5} b^{5}$ for all $a, b \\in G$. Show that $G$ is abelian. -/\ntheorem", "choices": ["∀ {G : Type u_1} [inst : Group G],\n  (∀ a b : G, (a * b) ^ 3 = a ^ 3 * b ^ 3) →\n  (∀ a b : G, (a * b) ^ 5 = a ^ 5 * b ^ 5) →\n  CommGroup G ", "∀ {G : Type u_1} [inst : Group G],\n  (∀ a b : G, (a * b) ^ 3 = a ^ 3 * b ^ 3) →\n  (∀ a b : G, (a * b) ^ 5 = a ^ 5 * b ^ 5) →\n  IsCommutative G ", "∀ {G : Type u_1} [inst : Group G] (h : ∀ a b : G, (a * b) ^ 3 = a ^ 3 * b ^ 3) (h' : ∀ a b : G, (a * b) ^ 5 = a ^ 5 * b ^ 5), IsCommutative G ", "∀ {G : Type u_1} [inst : Group G],\n  (∀ a b : G, (a * b) ^ 3 = a ^ 3 * b ^ 3) →\n  (∀ a b : G, (a * b) ^ 5 = a ^ 5 * b ^ 5) →\n  CommGroup G ", "∀ {G : Type u_1} [inst : Group G] (h : ∀ a b : G, (a * b) ^ 3 = a ^ 3 * b ^ 3) (h_1 : ∀ a b : G, (a * b) ^ 5 = a ^ 5 * b ^ 5), CommGroup G ", "∀ {G : Type u_1} [inst : Group G], (∀ a b : G, (a * b) ^ 3 = a ^ 3 * b ^ 3) → (∀ a b : G, (a * b) ^ 5 = a ^ 5 * b ^ 5) → ∀ a b : G, a * b = b * a ", "∀ {G : Type u_1} [inst : Group G],\n  (∀ a b : G, (a * b) ^ 3 = a ^ 3 * b ^ 3) →\n  (∀ a b : G, (a * b) ^ 5 = a ^ 5 * b ^ 5) →\n  IsCommutative G ", "∀ {G : Type u_1} [inst : Group G],\n  (∀ a b : G, (a * b) ^ 3 = a ^ 3 * b ^ 3) →\n  (∀ a b : G, (a * b) ^ 5 = a ^ 5 * b ^ 5) →\n  Group.IsAbelian G ", "∀ {G : Type u_1} [inst : Group G],\n  (∀ a b : G, (a * b) ^ 3 = a ^ 3 * b ^ 3) →\n  (∀ a b : G, (a * b) ^ 5 = a ^ 5 * b ^ 5) →\n  IsCommutative G ", "∀ {G : Type u_1} [inst : Group G],\n  (∀ a b : G, (a * b) ^ 3 = a ^ 3 * b ^ 3) →\n  (∀ a b : G, (a * b) ^ 5 = a ^ 5 * b ^ 5) →\n  CommGroup G "]}
{"docString": "If $G$ is a group and $a, x \\in G$, prove that $C\\left(x^{-1} a x\\right)=x^{-1} C(a) x$", "prompts": "[{\"theorem\":\n  \"∀ {M : Type u_1} [inst : Monoid M] (u : Mˣ) (x : M), SemiconjBy (↑u) x (↑u * x * ↑u⁻¹)\",\n  \"isProp\": true,\n  \"docString\": \"`a` semiconjugates `x` to `a * x * a⁻¹`. \"},\n {\"theorem\":\n  \"∀ {F : Type u_1} {G : Type u_2} {M : Type u_3} [inst : Group G] [inst_1 : Monoid M] [inst_2 : MonoidHomClass F G M]\\n  (f g : F) {x : G}, ↑f x = ↑g x → ↑f x⁻¹ = ↑g x⁻¹\",\n  \"isProp\": true,\n  \"docString\":\n  \"If two homomorphism from a group to a monoid are equal at `x`, then they are equal at `x⁻¹`. \"},\n {\"theorem\":\n  \"∀ {α : Type u} [self : Rack α] (x : α), Function.LeftInverse (Rack.invAct x) (Shelf.act x)\",\n  \"isProp\": true,\n  \"docString\": \"Proof of left inverse \"},\n {\"theorem\":\n  \"∀ {M : Type u_1} [inst : Monoid M] {a : Mˣ} {x y : M}, SemiconjBy (↑a) x y → SemiconjBy (↑a⁻¹) y x\",\n  \"isProp\": true,\n  \"docString\":\n  \"If a unit `a` semiconjugates `x` to `y`, then `a⁻¹` semiconjugates `y` to `x`. \"}]\n", "prompt_cons": "/-- `a` semiconjugates `x` to `a * x * a⁻¹`. -/\ntheorem ∀ {M : Type u_1} [inst : Monoid M] (u : Mˣ) (x : M), SemiconjBy (↑u) x (↑u * x * ↑u⁻¹) :=\n\n/-- If two homomorphism from a group to a monoid are equal at `x`, then they are equal at `x⁻¹`. -/\ntheorem ∀ {F : Type u_1} {G : Type u_2} {M : Type u_3} [inst : Group G] [inst_1 : Monoid M] [inst_2 : MonoidHomClass F G M]\n  (f g : F) {x : G}, ↑f x = ↑g x → ↑f x⁻¹ = ↑g x⁻¹ :=\n\n/-- Proof of left inverse -/\ntheorem ∀ {α : Type u} [self : Rack α] (x : α), Function.LeftInverse (Rack.invAct x) (Shelf.act x) :=\n\n/-- If a unit `a` semiconjugates `x` to `y`, then `a⁻¹` semiconjugates `y` to `x`. -/\ntheorem ∀ {M : Type u_1} [inst : Monoid M] {a : Mˣ} {x y : M}, SemiconjBy (↑a) x y → SemiconjBy (↑a⁻¹) y x :=\n\n/-- If $G$ is a group and $a, x \\in G$, prove that $C\\left(x^{-1} a x\\right)=x^{-1} C(a) x$ -/\ntheorem", "choices": ["∀ {G : Type u_1} [inst : Group G] (a x : G), (x⁻¹ * a * x)⁻¹ = x⁻¹ * a⁻¹ * x ", "∀ {G : Type u_1} [inst : Group G] (a x : G), Conjugate x⁻¹ (Conjugate x a) = Conjugate (x⁻¹ * a * x) ", "∀ {G : Type u_1} [inst : Group G] (a x : G), Conjugate x⁻¹ (a * x) = (x⁻¹ * Conjugate a * x) ", "∀ {G : Type u_1} [inst : Group G] (a x : G), Conjugate x⁻¹ (Conjugate a x) = Conjugate a (x⁻¹ * x) ", "∀ {G : Type u_1} [inst : Group G] (a x : G), Conjugate (x⁻¹ * a * x) = x⁻¹ * (Conjugate a) * x ", "∀ {G : Type u_1} [inst : Group G] (x a : G), ConjugatesOf x⁻¹ * a * x = x⁻¹ * ConjugatesOf a * x ", "∀ {G : Type u_1} [inst : Group G] (a x : G), ConjugatesOf x⁻¹ * a * x = x⁻¹ * ConjugatesOf a * x ", "∀ {G : Type u_1} [inst : Group G] (a x : G), Conjugate (x⁻¹ * a * x) = x⁻¹ * Conjugate a * x ", "∀ {G : Type u_1} [inst : Group G] (a x : G), Conjugate x⁻¹ (Conjugate a x) = Conjugate a (x⁻¹ * x) ", "∀ {G : Type u_1} [inst : Group G] (x : G) (a : Con G), Quot.lift (λ (a : G), x⁻¹ * a * x) (Con.leftRel x⁻¹ * Con.rightRel x) a = x⁻¹ * a * x "]}
{"docString": "If $a > 1$ is an integer, show that $n \\mid \\varphi(a^n - 1)$, where $\\phi$ is the Euler $\\varphi$-function.", "prompts": "[{\"theorem\":\n  \"∀ {n : ℕ}, n ≠ 0 → Nat.totient n = Finsupp.prod (Nat.factorization n) fun p k => p ^ (k - 1) * (p - 1)\",\n  \"isProp\": true,\n  \"docString\": \"Euler's product formula for the totient function. \"},\n {\"theorem\": \"∀ {a : ℤ} {m n : ℕ}, Int.gcd a (↑m * ↑n) = 1 → Int.gcd a ↑n = 1\",\n  \"isProp\": true,\n  \"docString\": \"If `gcd a (m * n) = 1`, then `gcd a n = 1`. \"},\n {\"theorem\": \"∀ {n : ℕ}, n ≠ 1 → (Nat.Prime n ↔ ↑(Nat.factorial (n - 1)) = -1)\",\n  \"isProp\": true,\n  \"docString\":\n  \"**Wilson's Theorem**: For `n ≠ 1`, `(n-1)!` is congruent to `-1` modulo `n` iff n is prime. \"},\n {\"theorem\":\n  \"∀ {a : ℤ} {n : ℕ}, jacobiSym a n = -1 → ∃ p x, p ∣ n ∧ jacobiSym a p = -1\",\n  \"isProp\": true,\n  \"docString\":\n  \"If `J(a | n) = -1`, then `n` has a prime divisor `p` such that `J(a | p) = -1`. \"}]\n", "prompt_cons": "/-- Euler's product formula for the totient function. -/\ntheorem ∀ {n : ℕ}, n ≠ 0 → Nat.totient n = Finsupp.prod (Nat.factorization n) fun p k => p ^ (k - 1) * (p - 1) :=\n\n/-- If `gcd a (m * n) = 1`, then `gcd a n = 1`. -/\ntheorem ∀ {a : ℤ} {m n : ℕ}, Int.gcd a (↑m * ↑n) = 1 → Int.gcd a ↑n = 1 :=\n\n/-- **Wilson's Theorem**: For `n ≠ 1`, `(n-1)!` is congruent to `-1` modulo `n` iff n is prime. -/\ntheorem ∀ {n : ℕ}, n ≠ 1 → (Nat.Prime n ↔ ↑(Nat.factorial (n - 1)) = -1) :=\n\n/-- If `J(a | n) = -1`, then `n` has a prime divisor `p` such that `J(a | p) = -1`. -/\ntheorem ∀ {a : ℤ} {n : ℕ}, jacobiSym a n = -1 → ∃ p x, p ∣ n ∧ jacobiSym a p = -1 :=\n\n/-- If $a > 1$ is an integer, show that $n \\mid \\varphi(a^n - 1)$, where $\\phi$ is the Euler $\\varphi$-function. -/\ntheorem", "choices": ["∀ {a n : ℕ}, a > 1 → n ∣ Nat.totient (a^n - 1) ", "∀ {a n : ℕ}, a > 1 → Nat.totient (a^n - 1) ∣ n ", "∀ {a n : ℕ}, a > 1 → n ∣ Nat.totient (a ^ n - 1) ", "∀ {a n : ℕ}, a > 1 → n ∣ Nat.totient (a ^ n - 1) ", "∀ {a n : ℕ}, a > 1 → Nat.totient (a ^ n - 1) ∣ n ", "∀ {a n : ℕ}, a > 1 → Nat.totient (a ^ n - 1) ∣ n ", "∀ {a n : ℕ}, a > 1 → Nat.totient (a^n - 1) ∣ n ", "∀ {a : ℕ} {n : ℕ}, a > 1 → ↑(Nat.totient (a ^ n - 1)) ∣ n ", "∀ {a : ℕ} {n : ℕ}, a > 1 → Nat.totient (a ^ n - 1) ∣ n ", "∀ {a n : ℕ}, a > 1 → Nat.totient (a ^ n - 1) ∣ n "]}
{"docString": "Suppose that $|G| = pm$, where $p \\nmid m$ and $p$ is a prime. If $H$ is a normal subgroup of order $p$ in $G$, prove that $H$ is characteristic.", "prompts": "[{\"theorem\":\n  \"∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G] {p n : ℕ} [hp : Fact (Nat.Prime p)] {H : Subgroup G},\\n  Fintype.card { x // x ∈ H } = p ^ n →\\n    Fintype.card { x // x ∈ Subgroup.normalizer H } ≡ Fintype.card G [MOD p ^ (n + 1)]\",\n  \"isProp\": true,\n  \"docString\":\n  \"If `H` is a subgroup of `G` of cardinality `p ^ n`, then the cardinality of the\\nnormalizer of `H` is congruent mod `p ^ (n + 1)` to the cardinality of `G`.  \"},\n {\"theorem\":\n  \"∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G] (p : ℕ) {n m : ℕ} [_hp : Fact (Nat.Prime p)],\\n  p ^ m ∣ Fintype.card G →\\n    ∀ (H : Subgroup G), Fintype.card { x // x ∈ H } = p ^ n → n ≤ m → ∃ K, Fintype.card { x // x ∈ K } = p ^ m ∧ H ≤ K\",\n  \"isProp\": true,\n  \"docString\":\n  \"If `H` is a subgroup of `G` of cardinality `p ^ n`,\\nthen `H` is contained in a subgroup of cardinality `p ^ m`\\nif `n ≤ m` and `p ^ m` divides the cardinality of `G` \"},\n {\"theorem\":\n  \"∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G] {p n : ℕ} [hp : Fact (Nat.Prime p)],\\n  p ^ (n + 1) ∣ Fintype.card G →\\n    ∀ {H : Subgroup G}, Fintype.card { x // x ∈ H } = p ^ n → ∃ K, Fintype.card { x // x ∈ K } = p ^ (n + 1) ∧ H ≤ K\",\n  \"isProp\": true,\n  \"docString\":\n  \"If `H` is a subgroup of `G` of cardinality `p ^ n`,\\nthen `H` is contained in a subgroup of cardinality `p ^ (n + 1)`\\nif `p ^ (n + 1)` divides the cardinality of `G` \"},\n {\"theorem\":\n  \"∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G] {p n : ℕ} [_hp : Fact (Nat.Prime p)],\\n  p ^ (n + 1) ∣ Fintype.card G →\\n    ∀ {H : Subgroup G},\\n      Fintype.card { x // x ∈ H } = p ^ n → p ^ (n + 1) ∣ Fintype.card { x // x ∈ Subgroup.normalizer H }\",\n  \"isProp\": true,\n  \"docString\":\n  \"If `H` is a `p`-subgroup but not a Sylow `p`-subgroup of cardinality `p ^ n`,\\nthen `p ^ (n + 1)` divides the cardinality of the normalizer of `H`. \"}]\n", "prompt_cons": "/-- If `H` is a subgroup of `G` of cardinality `p ^ n`, then the cardinality of the\nnormalizer of `H` is congruent mod `p ^ (n + 1)` to the cardinality of `G`. -/\ntheorem ∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G] {p n : ℕ} [hp : Fact (Nat.Prime p)] {H : Subgroup G},\n  Fintype.card { x // x ∈ H } = p ^ n →\n    Fintype.card { x // x ∈ Subgroup.normalizer H } ≡ Fintype.card G [MOD p ^ (n + 1)] :=\n\n/-- If `H` is a subgroup of `G` of cardinality `p ^ n`,\nthen `H` is contained in a subgroup of cardinality `p ^ m`\nif `n ≤ m` and `p ^ m` divides the cardinality of `G` -/\ntheorem ∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G] (p : ℕ) {n m : ℕ} [_hp : Fact (Nat.Prime p)],\n  p ^ m ∣ Fintype.card G →\n    ∀ (H : Subgroup G), Fintype.card { x // x ∈ H } = p ^ n → n ≤ m → ∃ K, Fintype.card { x // x ∈ K } = p ^ m ∧ H ≤ K :=\n\n/-- If `H` is a subgroup of `G` of cardinality `p ^ n`,\nthen `H` is contained in a subgroup of cardinality `p ^ (n + 1)`\nif `p ^ (n + 1)` divides the cardinality of `G` -/\ntheorem ∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G] {p n : ℕ} [hp : Fact (Nat.Prime p)],\n  p ^ (n + 1) ∣ Fintype.card G →\n    ∀ {H : Subgroup G}, Fintype.card { x // x ∈ H } = p ^ n → ∃ K, Fintype.card { x // x ∈ K } = p ^ (n + 1) ∧ H ≤ K :=\n\n/-- If `H` is a `p`-subgroup but not a Sylow `p`-subgroup of cardinality `p ^ n`,\nthen `p ^ (n + 1)` divides the cardinality of the normalizer of `H`. -/\ntheorem ∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G] {p n : ℕ} [_hp : Fact (Nat.Prime p)],\n  p ^ (n + 1) ∣ Fintype.card G →\n    ∀ {H : Subgroup G},\n      Fintype.card { x // x ∈ H } = p ^ n → p ^ (n + 1) ∣ Fintype.card { x // x ∈ Subgroup.normalizer H } :=\n\n/-- Suppose that $|G| = pm$, where $p \\nmid m$ and $p$ is a prime. If $H$ is a normal subgroup of order $p$ in $G$, prove that $H$ is characteristic. -/\ntheorem", "choices": ["∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G] {p m : ℕ} [_hp : Fact (Nat.Prime p)],\n  Fintype.card G = p * m → ¬ p ∣ m →\n    ∀ {H : Subgroup G}, Fintype.card { x // x ∈ H } = p ∧ Subgroup.normal H → Subgroup.is_characteristic H ", "∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G] {p m : ℕ} [hp : Fact (Nat.Prime p)],\n  Fintype.card G = p * m → Nat.Coprime p m →\n    ∀ {H : Subgroup G}, Fintype.card { x // x ∈ H } = p ∧ Subgroup.normal H → Subgroup.is_complement' ⊥ H ", "∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G] {p m : ℕ} (_hp : Fact (Nat.Prime p)),\n  Fintype.card G = p * m → ¬ p ∣ m →\n    ∀ {H : Subgroup G} [hn : H.normal],\n      Fintype.card { x // x ∈ H } = p → ∀ (g : G), ∀ (h : H), g * h * g⁻¹ ∈ H ", "∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G] {p m : ℕ} [hp : Fact (Nat.Prime p)] (H : Subgroup G)\n  [hH : Fintype.card { x // x ∈ H } = p] [hG : Fintype.card G = p * m] (hp1m : ¬ p ∣ m),\n    Subgroup.characteristic H ", "∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G] {p m : ℕ} [hp : Fact (Nat.Prime p)] {H : Subgroup G} (hG : Fintype.card G = p * m) (hH : Fintype.card { x // x ∈ H } = p),\n  Nat.Coprime p m → Subgroup.IsCharSubgroup H ", "∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G] {p m : ℕ} [hp : Fact (Nat.Prime p)],\n  Fintype.card G = p * m →\n    ∀ {H : Subgroup G}, Fintype.card { x // x ∈ H } = p → Subgroup.normal H → Subgroup.is_char H ", "∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G] {p m : ℕ} [hp : Fact (Nat.Prime p)],\n  Fintype.card G = p * m →\n    Nat.Coprime p m →\n      ∀ (H : Subgroup G), Fintype.card { x // x ∈ H } = p ∧ Subgroup.normal H → Subgroup.is_char H ", "∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G] {p m : ℕ} [hp : Fact (Nat.Prime p)],\n  Fintype.card G = p * m → ¬(p ∣ m) →\n    ∀ {H : Subgroup G}, (H : Set G).Normal → Fintype.card { x // x ∈ H } = p → Subgroup.IsChar H ", "∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G] {p m : ℕ} [hp : Fact (Nat.Prime p)],\n  Fintype.card G = p * m → ¬ (p ∣ m) →\n    ∀ {H : Subgroup G} [_norm : Subgroup.Normal H],\n      Fintype.card { x // x ∈ H } = p → Subgroup.characteristic_subgroup H ", "∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G] {p m : ℕ} [_hp : Fact (Nat.Prime p)],\n  ¬ p ∣ m → Fintype.card G = p * m →\n    ∀ {H : Subgroup G}, Fintype.card { x // x ∈ H } = p ∧ Subgroup.normal H → Subgroup.is_characteristic H "]}
{"docString": "If $G$ is a nonabelian group of order 6, prove that $G \\simeq S_3$.", "prompts": "[{\"theorem\":\n  \"∀ {α : Type u_1} [inst : Fintype α] [inst_1 : DecidableEq α],\\n  5 ≤ Fintype.card α →\\n    ∀ {f : Equiv.Perm α} (hf : Equiv.Perm.IsThreeCycle f),\\n      Subgroup.normalClosure {{ val := f, property := (_ : f ∈ alternatingGroup α) }} = ⊤\",\n  \"isProp\": true,\n  \"docString\":\n  \"A key lemma to prove $A_5$ is simple. Shows that any normal subgroup of an alternating group on\\nat least 5 elements is the entire alternating group if it contains a 3-cycle. \"},\n {\"theorem\":\n  \"∀ {G : Type u_1} [inst : Group G] {H₁ H₂ H₃ : Subgroup G}, ⁅⁅H₂, H₃⁆, H₁⁆ = ⊥ → ⁅⁅H₃, H₁⁆, H₂⁆ = ⊥ → ⁅⁅H₁, H₂⁆, H₃⁆ = ⊥\",\n  \"isProp\": true,\n  \"docString\": \"**The Three Subgroups Lemma** (via the Hall-Witt identity) \"},\n {\"theorem\":\n  \"∀ {α : Type u_1} [inst : Group α] [inst_1 : Fintype α] (s : Subgroup α) [inst_2 : Fintype { x // x ∈ s }],\\n  Fintype.card { x // x ∈ s } ∣ Fintype.card α\",\n  \"isProp\": true,\n  \"docString\":\n  \"**Lagrange's Theorem**: The order of a subgroup divides the order of its ambient group. \"},\n {\"theorem\":\n  \"∀ {g : Equiv.Perm (Fin 5)}, 3 ∈ Equiv.Perm.cycleType g → Equiv.Perm.IsThreeCycle (g * g)\",\n  \"isProp\": true,\n  \"docString\":\n  \"Part of proving $A_5$ is simple. Shows that the square of any element of $A_5$ with a 3-cycle in\\nits cycle decomposition is a 3-cycle, so the normal closure of the original element must be\\n$A_5$. \"}]\n", "prompt_cons": "/-- A key lemma to prove $A_5$ is simple. Shows that any normal subgroup of an alternating group on\nat least 5 elements is the entire alternating group if it contains a 3-cycle. -/\ntheorem ∀ {α : Type u_1} [inst : Fintype α] [inst_1 : DecidableEq α],\n  5 ≤ Fintype.card α →\n    ∀ {f : Equiv.Perm α} (hf : Equiv.Perm.IsThreeCycle f),\n      Subgroup.normalClosure {{ val := f, property := (_ : f ∈ alternatingGroup α) }} = ⊤ :=\n\n/-- **The Three Subgroups Lemma** (via the Hall-Witt identity) -/\ntheorem ∀ {G : Type u_1} [inst : Group G] {H₁ H₂ H₃ : Subgroup G}, ⁅⁅H₂, H₃⁆, H₁⁆ = ⊥ → ⁅⁅H₃, H₁⁆, H₂⁆ = ⊥ → ⁅⁅H₁, H₂⁆, H₃⁆ = ⊥ :=\n\n/-- **Lagrange's Theorem**: The order of a subgroup divides the order of its ambient group. -/\ntheorem ∀ {α : Type u_1} [inst : Group α] [inst_1 : Fintype α] (s : Subgroup α) [inst_2 : Fintype { x // x ∈ s }],\n  Fintype.card { x // x ∈ s } ∣ Fintype.card α :=\n\n/-- Part of proving $A_5$ is simple. Shows that the square of any element of $A_5$ with a 3-cycle in\nits cycle decomposition is a 3-cycle, so the normal closure of the original element must be\n$A_5$. -/\ntheorem ∀ {g : Equiv.Perm (Fin 5)}, 3 ∈ Equiv.Perm.cycleType g → Equiv.Perm.IsThreeCycle (g * g) :=\n\n/-- If $G$ is a nonabelian group of order 6, prove that $G \\simeq S_3$. -/\ntheorem", "choices": ["∀ {G : Type u_1} [inst : Group G] [inst_1 : Fintype G],\n  Fintype.card G = 6 → ¬IsCommutative G → Nonempty (G ≃* SymmetricGroup (Fin 3)) ", "∀ {G : Type u_1} [inst : Group G] [inst_1 : Fintype G],\n  Fintype.card G = 6 → (¬ IsCommutative G) → Nonempty (G ≃* S3) ", "∀ {G : Type u_1} [inst : Group G] [inst_1 : Fintype G],\n  Fintype.card G = 6 → Nonabelian G → G ≃* S₃ ", "∀ {G : Type u_1} [inst : Group G] [inst_1 : Fintype G], \n  Fintype.card G = 6 →\n    ¬ IsLieAbelian G →\n      Nonempty (G ≃* S3) ", "∀ {G : Type u_1} [inst : Group G] [inst_1 : Fintype G],\n  Fintype.card G = 6 → ¬IsAbelian G → Nonempty (G ≃* SymmetricGroup (Fin 3)) ", "∀ {G : Type u_1} [inst : Group G] [inst_1 : Fintype G],\n  (∀ (x y : G), x * y ≠ y * x → True) →\n  Fintype.card G = 6 →\n    Nonempty (G ≃* S₃) ", "∀ {G : Type u_1} [inst : Group G] [inst_1 : Fintype G],\n  Fintype.card G = 6 ∧ ¬IsAbelian G → Nonempty (G ≃* symmetricGroup (Fin 3)) ", "∀ {G : Type u_1} [inst : Group G] [inst_1 : Fintype G], ¬IsAbelian G → Fintype.card G = 6 → Nonempty (G ≃* S_3) ", "∀ {G : Type u_1} [inst : Group G] [inst_1 : Fintype G],\n  (∀ (x y : G), x * y ≠ y * x) → Fintype.card G = 6 → Nonempty (G ≃* S₃) ", "∀ {G : Type u_1} [inst : Group G] [inst_1 : Fintype G],\n  ¬ IsCommutativeGroup G → Fintype.card G = 6 → Nonempty (G ≃* S₃) "]}
{"docString": "Prove that a group of order $p^2$, $p$ a prime, has a normal subgroup of order $p$.", "prompts": "[{\"theorem\":\n  \"∀ {G : Type u_2} [inst : Group G] {G₂ : Type u_1} [inst_1 : Group G₂] (p₁ p₂ : ℕ) [hp₁ : Fact (Nat.Prime p₁)]\\n  [hp₂ : Fact (Nat.Prime p₂)],\\n  p₁ ≠ p₂ →\\n    ∀ (H₁ : Subgroup G) (H₂ : Subgroup G₂) [inst_2 : Fintype { x // x ∈ H₁ }] [inst_3 : Fintype { x // x ∈ H₂ }],\\n      IsPGroup p₁ { x // x ∈ H₁ } →\\n        IsPGroup p₂ { x // x ∈ H₂ } → Nat.coprime (Fintype.card { x // x ∈ H₁ }) (Fintype.card { x // x ∈ H₂ })\",\n  \"isProp\": true,\n  \"docString\": \"finite p-groups with different p have coprime orders \"},\n {\"theorem\":\n  \"∀ {G : Type u_1} [inst : Group G] [inst_1 : Fintype G] (p : ℕ) [hp : Fact (Nat.Prime p)],\\n  p ∣ Fintype.card G → ∃ x, orderOf x = p\",\n  \"isProp\": true,\n  \"docString\":\n  \"For every prime `p` dividing the order of a finite group `G` there exists an element of order\\n`p` in `G`. This is known as Cauchy's theorem. \"},\n {\"theorem\":\n  \"∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G] (p : ℕ) {n : ℕ} [inst_2 : Fact (Nat.Prime p)],\\n  p ^ n ∣ Fintype.card G → ∃ K, Fintype.card { x // x ∈ K } = p ^ n\",\n  \"isProp\": true,\n  \"docString\":\n  \"A generalisation of **Sylow's first theorem**. If `p ^ n` divides\\nthe cardinality of `G`, then there is a subgroup of cardinality `p ^ n` \"},\n {\"theorem\":\n  \"∀ {G : Type u_1} [inst : AddGroup G] [inst_1 : Fintype G] (p : ℕ) [hp : Fact (Nat.Prime p)],\\n  p ∣ Fintype.card G → ∃ x, addOrderOf x = p\",\n  \"isProp\": true,\n  \"docString\":\n  \"For every prime `p` dividing the order of a finite additive group `G` there exists an element of\\norder `p` in `G`. This is the additive version of Cauchy's theorem. \"}]\n", "prompt_cons": "/-- finite p-groups with different p have coprime orders -/\ntheorem ∀ {G : Type u_2} [inst : Group G] {G₂ : Type u_1} [inst_1 : Group G₂] (p₁ p₂ : ℕ) [hp₁ : Fact (Nat.Prime p₁)]\n  [hp₂ : Fact (Nat.Prime p₂)],\n  p₁ ≠ p₂ →\n    ∀ (H₁ : Subgroup G) (H₂ : Subgroup G₂) [inst_2 : Fintype { x // x ∈ H₁ }] [inst_3 : Fintype { x // x ∈ H₂ }],\n      IsPGroup p₁ { x // x ∈ H₁ } →\n        IsPGroup p₂ { x // x ∈ H₂ } → Nat.coprime (Fintype.card { x // x ∈ H₁ }) (Fintype.card { x // x ∈ H₂ }) :=\n\n/-- For every prime `p` dividing the order of a finite group `G` there exists an element of order\n`p` in `G`. This is known as Cauchy's theorem. -/\ntheorem ∀ {G : Type u_1} [inst : Group G] [inst_1 : Fintype G] (p : ℕ) [hp : Fact (Nat.Prime p)],\n  p ∣ Fintype.card G → ∃ x, orderOf x = p :=\n\n/-- A generalisation of **Sylow's first theorem**. If `p ^ n` divides\nthe cardinality of `G`, then there is a subgroup of cardinality `p ^ n` -/\ntheorem ∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G] (p : ℕ) {n : ℕ} [inst_2 : Fact (Nat.Prime p)],\n  p ^ n ∣ Fintype.card G → ∃ K, Fintype.card { x // x ∈ K } = p ^ n :=\n\n/-- For every prime `p` dividing the order of a finite additive group `G` there exists an element of\norder `p` in `G`. This is the additive version of Cauchy's theorem. -/\ntheorem ∀ {G : Type u_1} [inst : AddGroup G] [inst_1 : Fintype G] (p : ℕ) [hp : Fact (Nat.Prime p)],\n  p ∣ Fintype.card G → ∃ x, addOrderOf x = p :=\n\n/-- Prove that a group of order $p^2$, $p$ a prime, has a normal subgroup of order $p$. -/\ntheorem", "choices": ["∀ {G : Type u_1} [inst : Group G] [inst_1 : Fintype G] (p : ℕ) [hp : Fact (Nat.Prime p)],\n  Fintype.card G = p ^ 2 → ∃ K : Subgroup G, Fintype.card { x // x ∈ K } = p ∧ K.normal ", "∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G] (p : ℕ) [inst_2 : Fact (Nat.Prime p)],\n  Fintype.card G = p ^ 2 → ∃ H : Subgroup G, Fintype.card { x // x ∈ H } = p ∧ H.normal ", "∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G] (p : ℕ) [hp : Fact (Nat.Prime p)],\n  Fintype.card G = p ^ 2 → ∃ H : Subgroup G, Subgroup.normal H ∧ Fintype.card { x // x ∈ H } = p ", "∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G] (p : ℕ) [inst_2 : Fact (Nat.Prime p)],\n  Fintype.card G = p ^ 2 → ∃ H : Subgroup G, Fintype.card { x // x ∈ H } = p ∧ Subgroup.normal H ", "∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G] (p : ℕ) [hp : Fact (Nat.Prime p)],\n  Fintype.card G = p ^ 2 → ∃ K : Subgroup G, Fintype.card { x // x ∈ K } = p ∧ K.normal ", "∀ {G : Type u_1} [inst : Group G] [inst_1 : Fintype G] (p : ℕ) [hp : Fact (Nat.Prime p)],\n  Fintype.card G = p ^ 2 → ∃ H : Subgroup G, Fintype.card { x // x ∈ H } = p ∧ H.normal ", "forall {G : Type u} [inst : Group G] [inst_1 : Fintype G] (p : ℕ) [inst_2 : Fact (Nat.Prime p)],\n  Fintype.card G = p ^ 2 → ∃ H : Subgroup G, Fintype.card { x // x ∈ H } = p ∧ H.normal ", "∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G] (p : ℕ) [hp : Fact (Nat.Prime p)],\n  Fintype.card G = p ^ 2 → ∃ H : Subgroup G, Fintype.card { x // x ∈ H } = p ∧ Subgroup.normal H ", "∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G] (p : ℕ) [inst_2 : Fact (Nat.Prime p)],\n  Fintype.card G = p ^ 2 → ∃ K : Subgroup G, Fintype.card { x // x ∈ K } = p ∧ Subgroup.normal K ", "∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G] (p : ℕ) [hp : Fact (Nat.Prime p)],\n  Fintype.card G = p ^ 2 → ∃ K : Subgroup G, Fintype.card { x // x ∈ K } = p ∧ K.normal "]}
{"docString": "If $G$ is an abelian group and if $G$ has an element of order $m$ and one of order $n$, where $m$ and $n$ are relatively prime, prove that $G$ has an element of order $mn$.", "prompts": "[{\"theorem\": \"∀ {a : ℤ} {m n : ℕ}, Int.gcd a (↑m * ↑n) = 1 → Int.gcd a ↑m = 1\",\n  \"isProp\": true,\n  \"docString\": \"If `gcd a (m * n) = 1`, then `gcd a m = 1`. \"},\n {\"theorem\":\n  \"∀ {G : Type u_1} [inst : Monoid G] {x : G} {n : ℕ},\\n  0 < n → x ^ n = 1 → (∀ (p : ℕ), Nat.Prime p → p ∣ n → x ^ (n / p) ≠ 1) → orderOf x = n\",\n  \"isProp\": true,\n  \"docString\":\n  \"If `x^n = 1`, but `x^(n/p) ≠ 1` for all prime factors `p` of `n`,\\nthen `x` has order `n` in `G`. \"},\n {\"theorem\": \"∀ {a : ℤ} {m n : ℕ}, Int.gcd a (↑m * ↑n) = 1 → Int.gcd a ↑n = 1\",\n  \"isProp\": true,\n  \"docString\": \"If `gcd a (m * n) = 1`, then `gcd a n = 1`. \"},\n {\"theorem\":\n  \"∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G] (p : ℕ) {n m : ℕ} [_hp : Fact (Nat.Prime p)],\\n  p ^ m ∣ Fintype.card G →\\n    ∀ (H : Subgroup G), Fintype.card { x // x ∈ H } = p ^ n → n ≤ m → ∃ K, Fintype.card { x // x ∈ K } = p ^ m ∧ H ≤ K\",\n  \"isProp\": true,\n  \"docString\":\n  \"If `H` is a subgroup of `G` of cardinality `p ^ n`,\\nthen `H` is contained in a subgroup of cardinality `p ^ m`\\nif `n ≤ m` and `p ^ m` divides the cardinality of `G` \"}]\n", "prompt_cons": "/-- If `gcd a (m * n) = 1`, then `gcd a m = 1`. -/\ntheorem ∀ {a : ℤ} {m n : ℕ}, Int.gcd a (↑m * ↑n) = 1 → Int.gcd a ↑m = 1 :=\n\n/-- If `x^n = 1`, but `x^(n/p) ≠ 1` for all prime factors `p` of `n`,\nthen `x` has order `n` in `G`. -/\ntheorem ∀ {G : Type u_1} [inst : Monoid G] {x : G} {n : ℕ},\n  0 < n → x ^ n = 1 → (∀ (p : ℕ), Nat.Prime p → p ∣ n → x ^ (n / p) ≠ 1) → orderOf x = n :=\n\n/-- If `gcd a (m * n) = 1`, then `gcd a n = 1`. -/\ntheorem ∀ {a : ℤ} {m n : ℕ}, Int.gcd a (↑m * ↑n) = 1 → Int.gcd a ↑n = 1 :=\n\n/-- If `H` is a subgroup of `G` of cardinality `p ^ n`,\nthen `H` is contained in a subgroup of cardinality `p ^ m`\nif `n ≤ m` and `p ^ m` divides the cardinality of `G` -/\ntheorem ∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G] (p : ℕ) {n m : ℕ} [_hp : Fact (Nat.Prime p)],\n  p ^ m ∣ Fintype.card G →\n    ∀ (H : Subgroup G), Fintype.card { x // x ∈ H } = p ^ n → n ≤ m → ∃ K, Fintype.card { x // x ∈ K } = p ^ m ∧ H ≤ K :=\n\n/-- If $G$ is an abelian group and if $G$ has an element of order $m$ and one of order $n$, where $m$ and $n$ are relatively prime, prove that $G$ has an element of order $mn$. -/\ntheorem", "choices": ["∀ {G : Type u} [inst : AddGroup G] [inst_1 : Fintype G] {m n : ℕ}, \n  Int.gcd m n = 1 → (∃ a : G, orderOf a = m) → (∃ b : G, orderOf b = n) → ∃ c : G, orderOf c = m * n ", "∀ {G : Type u_1} [inst : AddCommGroup G] [inst_1 : Fintype G] {m n : ℕ},\n  Int.gcd m n = 1 → (∃ a : G, addOrderOf a = m) → (∃ b : G, addOrderOf b = n) → ∃ c : G, addOrderOf c = m * n ", "∀ {G : Type u} [inst : AddCommGroup G] [inst_1 : Fintype G] {m n : ℕ},\n  Int.gcd m n = 1 → (∃ x : G, orderOf x = m) → (∃ y : G, orderOf y = n) → ∃ z : G, orderOf z = m * n ", "∀ {G : Type u} [inst : AddCommGroup G] [inst_1 : Fintype G] {m n : ℕ},\n  Int.gcd m n = 1 → (∃ x : G, addOrderOf x = m) → (∃ y : G, addOrderOf y = n) → ∃ z : G, addOrderOf z = m * n ", "forall {G : Type u} [inst : AddCommGroup G] [inst_1 : Fintype G] {m n : ℕ},\n  Int.gcd m n = 1 → (∃ x : G, addOrderOf x = m) → (∃ y : G, addOrderOf y = n) → ∃ z : G, addOrderOf z = m * n ", "∀ {G : Type u} [inst : AddCommGroup G] [inst_1 : Fintype G] {m n : ℕ},\n  Int.gcd m n = 1 → (∃ (x : G), orderOf x = m) → (∃ (y : G), orderOf y = n) → ∃ (z : G), orderOf z = m * n ", " ∀ {G : Type u} [inst : AddCommGroup G] [inst_1 : Fintype G] {m n : ℕ},\n  Int.gcd m n = 1 →\n    (∃ x : G, Additive.orderOf x = m) →\n    (∃ y : G, Additive.orderOf y = n) → ∃ z : G, Additive.orderOf z = m * n ", "∀ {G : Type u_1} [inst : AddCommGroup G] [inst_1 : Fintype G] {m n : ℕ},\n  Int.gcd m n = 1 → (∃ (a : G), addOrderOf a = m) → (∃ (b : G), addOrderOf b = n) → ∃ (c : G), addOrderOf c = m * n ", "∀ {G : Type u} [inst : AddCommGroup G] [inst_1 : Fintype G] {m n : ℕ},\n  Int.gcd m n = 1 → (∃ x : G, orderOf x = m) → (∃ y : G, orderOf y = n) → ∃ z : G, orderOf z = m * n ", "∀ {G : Type u} [inst : AddCommGroup G] [inst_1 : Fintype G] {m n : ℕ},\n  0 < m → 0 < n → Int.gcd m n = 1 → (∃ x : G, Additive.orderOf x = m) → (∃ y : G, Additive.orderOf y = n) → ∃ z : G, Additive.orderOf z = m * n "]}
{"docString": "Prove that any two nonabelian groups of order 21 are isomorphic.", "prompts": "[{\"theorem\":\n  \"∀ {G : Type u_1} [inst : Group G] [inst_1 : TopologicalSpace G] [inst_2 : NonarchimedeanGroup G] {K : Type u_2}\\n  [inst_3 : Group K] [inst_4 : TopologicalSpace K] [inst_5 : NonarchimedeanGroup K], NonarchimedeanGroup (G × K)\",\n  \"isProp\": true,\n  \"docString\":\n  \"The cartesian product of two nonarchimedean groups is nonarchimedean. \"},\n {\"theorem\":\n  \"∀ {G : Type u_1} [inst : AddGroup G] [inst_1 : TopologicalSpace G] [inst_2 : NonarchimedeanAddGroup G] {K : Type u_2}\\n  [inst_3 : AddGroup K] [inst_4 : TopologicalSpace K] [inst_5 : NonarchimedeanAddGroup K],\\n  NonarchimedeanAddGroup (G × K)\",\n  \"isProp\": true,\n  \"docString\":\n  \"The cartesian product of two nonarchimedean groups is nonarchimedean.\"},\n {\"theorem\":\n  \"∀ {α : Type u} {β : Type v} [inst : Group α] [inst_1 : Group β] {f : α → β},\\n  IsGroupHom f → ∀ {γ : Type u_1} [inst_2 : Group γ] {g : β → γ}, IsGroupHom g → IsGroupHom (g ∘ f)\",\n  \"isProp\": true,\n  \"docString\":\n  \"The composition of two group homomorphisms is a group homomorphism. \"},\n {\"theorem\":\n  \"∀ {R : Type u_1} {S : Type u_2} [inst : Ring R] [inst_1 : TopologicalSpace R] [inst_2 : NonarchimedeanRing R]\\n  [inst_3 : Ring S] [inst_4 : TopologicalSpace S] [inst_5 : NonarchimedeanRing S], NonarchimedeanRing (R × S)\",\n  \"isProp\": true,\n  \"docString\":\n  \"The cartesian product of two nonarchimedean rings is nonarchimedean. \"}]\n", "prompt_cons": "/-- The cartesian product of two nonarchimedean groups is nonarchimedean. -/\ntheorem ∀ {G : Type u_1} [inst : Group G] [inst_1 : TopologicalSpace G] [inst_2 : NonarchimedeanGroup G] {K : Type u_2}\n  [inst_3 : Group K] [inst_4 : TopologicalSpace K] [inst_5 : NonarchimedeanGroup K], NonarchimedeanGroup (G × K) :=\n\n/-- The cartesian product of two nonarchimedean groups is nonarchimedean. -/\ntheorem ∀ {G : Type u_1} [inst : AddGroup G] [inst_1 : TopologicalSpace G] [inst_2 : NonarchimedeanAddGroup G] {K : Type u_2}\n  [inst_3 : AddGroup K] [inst_4 : TopologicalSpace K] [inst_5 : NonarchimedeanAddGroup K],\n  NonarchimedeanAddGroup (G × K) :=\n\n/-- The composition of two group homomorphisms is a group homomorphism. -/\ntheorem ∀ {α : Type u} {β : Type v} [inst : Group α] [inst_1 : Group β] {f : α → β},\n  IsGroupHom f → ∀ {γ : Type u_1} [inst_2 : Group γ] {g : β → γ}, IsGroupHom g → IsGroupHom (g ∘ f) :=\n\n/-- The cartesian product of two nonarchimedean rings is nonarchimedean. -/\ntheorem ∀ {R : Type u_1} {S : Type u_2} [inst : Ring R] [inst_1 : TopologicalSpace R] [inst_2 : NonarchimedeanRing R]\n  [inst_3 : Ring S] [inst_4 : TopologicalSpace S] [inst_5 : NonarchimedeanRing S], NonarchimedeanRing (R × S) :=\n\n/-- Prove that any two nonabelian groups of order 21 are isomorphic. -/\ntheorem", "choices": ["forall {G H : Type} [inst : Group G] [inst_1 : Fintype G] [inst_2 : Group H] [inst_3 : Fintype H], \n  Fintype.card G = 21 → Fintype.card H = 21 → Nonabelian G → Nonabelian H → Isomorphic G H ", "forall {G H : Type u_1} [inst : Group G] [inst_1 : MulAction G] [inst_2 : Finite G] [inst_3 : NonAbelian G]\n  [inst_4 : Fintype.card G = 21] [inst_5 : Group H] [inst_6 : MulAction H] [inst_7 : Finite H] [inst_8 : NonAbelian H]\n  [inst_9 : Fintype.card H = 21], Isomorphic G H ", "∀ {G : Type u_1} {H : Type u_2} [inst : Group G] [inst_1 : Group H],\n  Fintype.card G = 21 → Fintype.card H = 21 → Nonabelian G → Nonabelian H → Isomorphic G H ", "∀ {G1 : Type u_1} {G2 : Type u_2} [inst : Group G1] [inst_1 : Group G2],\n  Fintype.card G1 = 21 → Fintype.card G2 = 21 → NonabelianGroup G1 → NonabelianGroup G2 → GroupIsom G1 G2 ", "∀ {G : Type u_1} {H : Type u_2} [inst : Group G] [inst_1 : Fintype G] [inst_2 : Group H] [inst_3 : Fintype H],\n  Group.order G = 21 → Nonabelian G → Group.order H = 21 → Nonabelian H → Isomorphic G H ", "forall {G₁ G₂ : Type u_1} [inst : Group G₁] [inst_1 : Group G₂] [inst_2 : Fintype G₁] [inst_3 : Fintype G₂],\n  @group.card G₁ inst inst_2 = 21 → @group.card G₂ inst_1 inst_3 = 21 → Nonabelian G₁ → Nonabelian G₂ → Isomorphic G₁ G₂ ", "/-- The cartesian product of two nonarchimedean groups is nonarchimedean. -/\ntheorem prod_nonarchimedean_group {G : Type u_1} [inst : Group G] [inst_1 : TopologicalSpace G] [inst_2 : NonarchimedeanGroup G] {K : Type u_2}\n  [inst_3 : Group K] [inst_4 : TopologicalSpace K] [inst_5 : NonarchimedeanGroup K] : NonarchimedeanGroup (G × K) ", "forall {G : Type u_1} [inst : Group G] [Fintype G] (hG : order_of G = 21) (nonabelianG : ¬IsAbelian G)\n  {H : Type u_2} [inst_1 : Group H] [Fintype H] (hH : order_of H = 21) (nonabelianH : ¬IsAbelian H),\n  Group.is_isomorphic G H ", "forall {G H : Type*} [inst : Group G] [inst_1 : Fintype G] [inst_2 : Nonabelian G] [inst_3 : OrderOfGroup G 21]\n  [inst_4 : Group H] [inst_5 : Fintype H] [inst_6 : Nonabelian H] [inst_7 : OrderOfGroup H 21],\n  IsomorphicGroups G H ", "forall {G : Type u_1} [inst : Group G] (hG : Fintype.card G = 21) (hnabG : ¬IsAbelian G)\n  {H : Type u_2} [inst_1 : Group H] (hH : Fintype.card H = 21) (hnabH : ¬IsAbelian H),\n  G ≃ H "]}
{"docString": "If $G_1$ and $G_2$ are cyclic groups of orders $m$ and $n$, respectively, prove that $G_1 \\times G_2$ is cyclic if and only if $m$ and $n$ are relatively prime.", "prompts": "[{\"theorem\":\n  \"∀ {n m : ℕ}, n ≠ m → IsCoprime (Polynomial.cyclotomic n ℚ) (Polynomial.cyclotomic m ℚ)\",\n  \"isProp\": true,\n  \"docString\":\n  \"If `n ≠ m`, then `(cyclotomic n ℚ)` and `(cyclotomic m ℚ)` are coprime. \"},\n {\"theorem\":\n  \"∀ {α : Type u} [inst : Group α] [inst_1 : Fintype α] {p : ℕ} [hp : Fact (Nat.Prime p)], Fintype.card α = p → IsCyclic α\",\n  \"isProp\": true,\n  \"docString\": \"A finite group of prime order is cyclic. \"},\n {\"theorem\":\n  \"∀ {α : Type u} [inst : AddGroup α] [inst_1 : Fintype α] {p : ℕ} [hp : Fact (Nat.Prime p)],\\n  Fintype.card α = p → IsAddCyclic α\",\n  \"isProp\": true,\n  \"docString\": \"A finite group of prime order is cyclic.\"},\n {\"theorem\": \"∀ {a : ℤ} {m n : ℕ}, Int.gcd a (↑m * ↑n) = 1 → Int.gcd a ↑m = 1\",\n  \"isProp\": true,\n  \"docString\": \"If `gcd a (m * n) = 1`, then `gcd a m = 1`. \"}]\n", "prompt_cons": "/-- If `n ≠ m`, then `(cyclotomic n ℚ)` and `(cyclotomic m ℚ)` are coprime. -/\ntheorem ∀ {n m : ℕ}, n ≠ m → IsCoprime (Polynomial.cyclotomic n ℚ) (Polynomial.cyclotomic m ℚ) :=\n\n/-- A finite group of prime order is cyclic. -/\ntheorem ∀ {α : Type u} [inst : Group α] [inst_1 : Fintype α] {p : ℕ} [hp : Fact (Nat.Prime p)], Fintype.card α = p → IsCyclic α :=\n\n/-- A finite group of prime order is cyclic. -/\ntheorem ∀ {α : Type u} [inst : AddGroup α] [inst_1 : Fintype α] {p : ℕ} [hp : Fact (Nat.Prime p)],\n  Fintype.card α = p → IsAddCyclic α :=\n\n/-- If `gcd a (m * n) = 1`, then `gcd a m = 1`. -/\ntheorem ∀ {a : ℤ} {m n : ℕ}, Int.gcd a (↑m * ↑n) = 1 → Int.gcd a ↑m = 1 :=\n\n/-- If $G_1$ and $G_2$ are cyclic groups of orders $m$ and $n$, respectively, prove that $G_1 \\times G_2$ is cyclic if and only if $m$ and $n$ are relatively prime. -/\ntheorem", "choices": ["∀ {α β : Type u} [inst : Group α] [inst_1 : Group β] [inst_2 : IsCyclic α] [inst_3 : IsCyclic β] {m n : ℕ} [hm : Fact (Fintype.card α = m)] [hn : Fact (Fintype.card β = n)], IsCyclic (α × β) ↔ Nat.Coprime m n ", "∀ {α β : Type u} [inst : Group α] [inst_1 : Group β] [inst_2 : IsCyclic α] [inst_3 : IsCyclic β] {m n : ℕ},\n  Fintype.card α = m → Fintype.card β = n → IsCoprime m n ↔ IsCyclic (α × β) ", "∀ {α β : Type u} [inst : Group α] [inst_1 : Group β] [inst_2 : IsCyclic α] [inst_3 : IsCyclic β] {m n : ℕ}, \n  Fintype.card α = m → Fintype.card β = n → IsCyclic (α × β) ↔ Nat.Coprime m n ", "∀ {α β : Type u} [inst_1 : Group α] [inst_2 : Group β] [inst_3 : IsCyclic α] [inst_4 : IsCyclic β] {m n : ℕ},\n  Fintype.card α = m → Fintype.card β = n → IsCoprime m n ↔ IsCyclic (α × β) ", "∀ {α β : Type u} [inst : Mul α] [inst_1 : Fintype α] [inst_2 : IsCyclic α] [inst_3 : Mul β] [inst_4 : Fintype β] [inst_5 : IsCyclic β] {m n : ℕ},\n  Fintype.card α = m → Fintype.card β = n → IsCyclic (α × β) ↔ Nat.Coprime m n ", "∀ {α β : Type u} [inst : Group α] [inst_1 : Group β] [inst_2 : IsCyclic α] [inst_3 : IsCyclic β] {m n : ℕ},\n  Fintype.card α = m → Fintype.card β = n → (IsCyclic (α × β) ↔ Nat.Coprime m n) ", "∀ {α β : Type u} [inst : Group α] [inst_1 : Group β] [inst_2 : Fintype α] [inst_3 : Fintype β] [inst_4 : IsCyclic α] [inst_5 : IsCyclic β] {m n : ℕ}, Fintype.card α = m → Fintype.card β = n → IsCoprime m n ↔ IsCyclic (α × β) ", "∀ {α β : Type u} [inst : Group α] [inst_1 : Group β] [inst_2 : IsCyclic α] [inst_3 : IsCyclic β] {m n : ℕ}, Fintype.card α = m → Fintype.card β = n → IsCoprime m n ↔ IsCyclic (α × β) ", "∀ {α : Type u} {β : Type v} [inst_1 : Group α] [inst_2 : Group β] [inst_3 : Fintype α] [inst_4 : Fintype β] [inst_5 : IsCyclic α] [inst_6 : IsCyclic β] {m n : ℕ},\n  Fintype.card α = m → Fintype.card β = n → IsCoprime m n ↔ IsCyclic (α × β) ", "∀ {α β : Type u} [inst : Group α] [inst_1 : Group β] [inst_2 : IsCyclic α] [inst_3 : IsCyclic β] {m n : ℕ},\n  Fintype.card α = m → Fintype.card β = n → IsCyclic (α × β) ↔ Nat.Coprime m n "]}
{"docString": "If $P$ is a $p$-Sylow subgroup of $G$ and $P \\triangleleft G$, prove that $P$ is the only $p$-Sylow subgroup of $G$.", "prompts": "[{\"theorem\":\n  \"∀ {p : ℕ} {G : Type u_1} [inst : Group G] (H : Subgroup G) [inst_1 : Finite (Sylow p G)],\\n  Finite (Sylow p { x // x ∈ H })\",\n  \"isProp\": true,\n  \"docString\":\n  \"If `H` is a subgroup of `G`, then `Finite (Sylow p G)` implies `Finite (Sylow p H)`. \"},\n {\"theorem\":\n  \"∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G] (p : ℕ) {n : ℕ} [inst_2 : Fact (Nat.Prime p)],\\n  p ^ n ∣ Fintype.card G → ∃ K, Fintype.card { x // x ∈ K } = p ^ n\",\n  \"isProp\": true,\n  \"docString\":\n  \"A generalisation of **Sylow's first theorem**. If `p ^ n` divides\\nthe cardinality of `G`, then there is a subgroup of cardinality `p ^ n` \"},\n {\"theorem\":\n  \"∀ {p : ℕ} {G : Type u_1} [inst : Group G] {P : Subgroup G}, IsPGroup p { x // x ∈ P } → ∃ Q, P ≤ ↑Q\",\n  \"isProp\": true,\n  \"docString\":\n  \"A generalization of **Sylow's first theorem**.\\nEvery `p`-subgroup is contained in a Sylow `p`-subgroup. \"},\n {\"theorem\":\n  \"∀ (p : ℕ) (G : Type u_1) [inst : Group G] [inst_1 : Fact (Nat.Prime p)] [inst_2 : Fintype (Sylow p G)],\\n  Fintype.card (Sylow p G) ≡ 1 [MOD p]\",\n  \"isProp\": true,\n  \"docString\":\n  \"A generalization of **Sylow's third theorem**.\\nIf the number of Sylow `p`-subgroups is finite, then it is congruent to `1` modulo `p`. \"}]\n", "prompt_cons": "/-- If `H` is a subgroup of `G`, then `Finite (Sylow p G)` implies `Finite (Sylow p H)`. -/\ntheorem ∀ {p : ℕ} {G : Type u_1} [inst : Group G] (H : Subgroup G) [inst_1 : Finite (Sylow p G)],\n  Finite (Sylow p { x // x ∈ H }) :=\n\n/-- A generalisation of **Sylow's first theorem**. If `p ^ n` divides\nthe cardinality of `G`, then there is a subgroup of cardinality `p ^ n` -/\ntheorem ∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G] (p : ℕ) {n : ℕ} [inst_2 : Fact (Nat.Prime p)],\n  p ^ n ∣ Fintype.card G → ∃ K, Fintype.card { x // x ∈ K } = p ^ n :=\n\n/-- A generalization of **Sylow's first theorem**.\nEvery `p`-subgroup is contained in a Sylow `p`-subgroup. -/\ntheorem ∀ {p : ℕ} {G : Type u_1} [inst : Group G] {P : Subgroup G}, IsPGroup p { x // x ∈ P } → ∃ Q, P ≤ ↑Q :=\n\n/-- A generalization of **Sylow's third theorem**.\nIf the number of Sylow `p`-subgroups is finite, then it is congruent to `1` modulo `p`. -/\ntheorem ∀ (p : ℕ) (G : Type u_1) [inst : Group G] [inst_1 : Fact (Nat.Prime p)] [inst_2 : Fintype (Sylow p G)],\n  Fintype.card (Sylow p G) ≡ 1 [MOD p] :=\n\n/-- If $P$ is a $p$-Sylow subgroup of $G$ and $P \\triangleleft G$, prove that $P$ is the only $p$-Sylow subgroup of $G$. -/\ntheorem", "choices": ["∀ {p : ℕ} {G : Type u_1} [inst : Group G] (P : Subgroup G) [inst_1 : Fact (Nat.Prime p)],\n  IsPSylow p { x // x ∈ P } → P.normal → ∀ Q, IsPSylow p { x // x ∈ Q } → Q = P ", "∀ {p : ℕ} {G : Type u_1} [inst : Group G] {P : Subgroup G},\n  IsPGroup p { x // x ∈ P } → (∀ Q : Sylow p G, P = ↑Q) ", "∀ {p : ℕ} {G : Type u_1} [inst : Group G] {P : Subgroup G} [inst_1 : Fact (Nat.Prime p)] [inst_2 : Fintype (Sylow p G)],\n  IsPSylow P → P.normal → ∀ Q : Subgroup G, IsPSylow Q → Q = P ", "∀ {p : ℕ} {G : Type u_1} [inst : Group G] {P : Sylow p G}, P.normal → ∀ Q : Sylow p G, Q = P ", "∀ {p : ℕ} {G : Type u_1} [inst : Group G] {P : Subgroup G} [inst_1 : IsPGroup p { x // x ∈ P }]\n  [inst_2 : Subgroup.Normal P], (∀ Q : Subgroup G, IsPGroup p { x // x ∈ Q } → P = Q) ", "∀ {p : ℕ} {G : Type u_1} [inst : Group G] {P : Subgroup G}, IsPGroup p { x // x ∈ P } → P.normal → ∀ Q, IsPGroup p { x // x ∈ Q } → P = Q ", "∀ {p : ℕ} {G : Type u_1} [inst : Group G] {P : Sylow p G}, IsPGroup p { x // x ∈ P } → P.normal → ∀ Q : Sylow p G, P = Q ", "∀ {p : ℕ} {G : Type u_1} [inst : Group G] (P : Subgroup G) [inst_1 : Fact (Nat.Prime p)] [inst_2 : Fintype (Sylow p G)],\n  IsPGroup p { x // x ∈ P } → P ≅ ⋃₀ (Sylow p G) → ∀ Q ∈ Sylow p G, Q = P ", "∀ {p : ℕ} {G : Type u_1} [inst : Group G] {P : Sylow p G}, P.normal → (∀ Q : Sylow p G, Q = P) ", "∀ {p : ℕ} {G : Type u_1} [inst : Group G] {P : Subgroup G}, IsPSylow p { x // x ∈ P } → P.normal → ∀ Q, IsPSylow p { x // x ∈ Q } → Q = P "]}
{"docString": "Show that any subgroup of order $p^{n-1}$ in a group $G$ of order $p^n$ is normal in $G$.", "prompts": "[{\"theorem\":\n  \"∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G] {p n : ℕ} [hp : Fact (Nat.Prime p)] {H : Subgroup G},\\n  Fintype.card { x // x ∈ H } = p ^ n →\\n    Fintype.card { x // x ∈ Subgroup.normalizer H } ≡ Fintype.card G [MOD p ^ (n + 1)]\",\n  \"isProp\": true,\n  \"docString\":\n  \"If `H` is a subgroup of `G` of cardinality `p ^ n`, then the cardinality of the\\nnormalizer of `H` is congruent mod `p ^ (n + 1)` to the cardinality of `G`.  \"},\n {\"theorem\":\n  \"∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G] (p : ℕ) {n : ℕ} [inst_2 : Fact (Nat.Prime p)],\\n  p ^ n ∣ Fintype.card G → ∃ K, Fintype.card { x // x ∈ K } = p ^ n\",\n  \"isProp\": true,\n  \"docString\":\n  \"A generalisation of **Sylow's first theorem**. If `p ^ n` divides\\nthe cardinality of `G`, then there is a subgroup of cardinality `p ^ n` \"},\n {\"theorem\":\n  \"∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G] {p n : ℕ} [hp : Fact (Nat.Prime p)],\\n  p ^ (n + 1) ∣ Fintype.card G →\\n    ∀ {H : Subgroup G}, Fintype.card { x // x ∈ H } = p ^ n → ∃ K, Fintype.card { x // x ∈ K } = p ^ (n + 1) ∧ H ≤ K\",\n  \"isProp\": true,\n  \"docString\":\n  \"If `H` is a subgroup of `G` of cardinality `p ^ n`,\\nthen `H` is contained in a subgroup of cardinality `p ^ (n + 1)`\\nif `p ^ (n + 1)` divides the cardinality of `G` \"},\n {\"theorem\":\n  \"∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G] {p n : ℕ} [_hp : Fact (Nat.Prime p)],\\n  p ^ (n + 1) ∣ Fintype.card G →\\n    ∀ {H : Subgroup G},\\n      Fintype.card { x // x ∈ H } = p ^ n → p ^ (n + 1) ∣ Fintype.card { x // x ∈ Subgroup.normalizer H }\",\n  \"isProp\": true,\n  \"docString\":\n  \"If `H` is a `p`-subgroup but not a Sylow `p`-subgroup of cardinality `p ^ n`,\\nthen `p ^ (n + 1)` divides the cardinality of the normalizer of `H`. \"}]\n", "prompt_cons": "/-- If `H` is a subgroup of `G` of cardinality `p ^ n`, then the cardinality of the\nnormalizer of `H` is congruent mod `p ^ (n + 1)` to the cardinality of `G`. -/\ntheorem ∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G] {p n : ℕ} [hp : Fact (Nat.Prime p)] {H : Subgroup G},\n  Fintype.card { x // x ∈ H } = p ^ n →\n    Fintype.card { x // x ∈ Subgroup.normalizer H } ≡ Fintype.card G [MOD p ^ (n + 1)] :=\n\n/-- A generalisation of **Sylow's first theorem**. If `p ^ n` divides\nthe cardinality of `G`, then there is a subgroup of cardinality `p ^ n` -/\ntheorem ∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G] (p : ℕ) {n : ℕ} [inst_2 : Fact (Nat.Prime p)],\n  p ^ n ∣ Fintype.card G → ∃ K, Fintype.card { x // x ∈ K } = p ^ n :=\n\n/-- If `H` is a subgroup of `G` of cardinality `p ^ n`,\nthen `H` is contained in a subgroup of cardinality `p ^ (n + 1)`\nif `p ^ (n + 1)` divides the cardinality of `G` -/\ntheorem ∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G] {p n : ℕ} [hp : Fact (Nat.Prime p)],\n  p ^ (n + 1) ∣ Fintype.card G →\n    ∀ {H : Subgroup G}, Fintype.card { x // x ∈ H } = p ^ n → ∃ K, Fintype.card { x // x ∈ K } = p ^ (n + 1) ∧ H ≤ K :=\n\n/-- If `H` is a `p`-subgroup but not a Sylow `p`-subgroup of cardinality `p ^ n`,\nthen `p ^ (n + 1)` divides the cardinality of the normalizer of `H`. -/\ntheorem ∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G] {p n : ℕ} [_hp : Fact (Nat.Prime p)],\n  p ^ (n + 1) ∣ Fintype.card G →\n    ∀ {H : Subgroup G},\n      Fintype.card { x // x ∈ H } = p ^ n → p ^ (n + 1) ∣ Fintype.card { x // x ∈ Subgroup.normalizer H } :=\n\n/-- Show that any subgroup of order $p^{n-1}$ in a group $G$ of order $p^n$ is normal in $G$. -/\ntheorem", "choices": ["∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G] {p n : ℕ} [hp : Fact (Nat.Prime p)],\n  Fintype.card G = p ^ n →\n    ∀ {H : Subgroup G}, Fintype.card { x // x ∈ H } = p ^ (n - 1) → H.normal ", "∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G] {p n : ℕ} [hp : Fact (Nat.Prime p)],\n  Fintype.card G = p ^ n →\n    ∀ {H : Subgroup G}, Fintype.card { x // x ∈ H } = p ^ (n - 1) → Subgroup.normal H ", "∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G] {p n : ℕ} [hp : Fact (Nat.Prime p)],\n  Fintype.card G = p ^ n →\n    ∀ {H : Subgroup G}, Fintype.card { x // x ∈ H } = p ^ (n - 1) → H.normal ", "∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G] {p n : ℕ} [hp : Fact (Nat.Prime p)] {H : Subgroup G},\n  Fintype.card { x // x ∈ H } = p ^ (n - 1) →\n  Fintype.card G = p ^ n → Subgroup.normal H ", "∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G] {p n : ℕ} [hp : Fact (Nat.Prime p)],\n  Fintype.card G = p ^ n →\n    ∀ {H : Subgroup G}, Fintype.card { x // x ∈ H } = p ^ (n - 1) → Subgroup.normal H ", "forall {G : Type u} [inst : Group G] [inst_1 : Fintype G] {p n : ℕ} [hp : Fact (Nat.Prime p)],\n  Fintype.card G = p ^ n →\n    ∀ {H : Subgroup G}, Fintype.card { x // x ∈ H } = p ^ (n - 1) → Subgroup.normal H ", "∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G] {p n : ℕ} [hp : Fact (Nat.Prime p)],\n  Fintype.card G = p ^ n →\n    ∀ {H : Subgroup G}, Fintype.card { x // x ∈ H } = p ^ (n - 1) → Subgroup.normal H ", "∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G] {p n : ℕ} [hp : Fact (Nat.Prime p)],\n  Fintype.card G = p ^ n →\n    ∀ {H : Subgroup G}, Fintype.card { x // x ∈ H } = p ^ (n - 1) → H.normal ", "∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G] {p n : ℕ} [hp : Fact (Nat.Prime p)],\n  Fintype.card G = p ^ n →\n    ∀ {H : Subgroup G}, Fintype.card { x // x ∈ H } = p ^ (n - 1) → H.normal ", "∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G] {p n : ℕ} [hp : Fact (Nat.Prime p)],\n  Fintype.card G = p ^ n →\n    ∀ {H : Subgroup G},\n      Fintype.card { x // x ∈ H } = p ^ (n - 1) → Subgroup.normal H "]}
{"docString": "Show that there is an infinite number of solutions to $x^2 = -1$ in the quaternions.", "prompts": "[{\"theorem\":\n  \"∀ (R : Type u_1) [inst : One R] [inst_1 : Neg R], Cardinal.mk ↑Set.univ = Cardinal.mk R ^ 4\",\n  \"isProp\": true,\n  \"docString\": \"The cardinality of the quaternions, as a set. \"},\n {\"theorem\":\n  \"∀ {R : Type u_1} (c₁ c₂ : R), Cardinal.mk ↑Set.univ = Cardinal.mk R ^ 4\",\n  \"isProp\": true,\n  \"docString\": \"The cardinality of a quaternion algebra, as a set. \"},\n {\"theorem\":\n  \"∀ (R : Type u_1) [inst : One R] [inst_1 : Neg R], Cardinal.mk (Quaternion R) = Cardinal.mk R ^ 4\",\n  \"isProp\": true,\n  \"docString\": \"The cardinality of the quaternions, as a type. \"},\n {\"theorem\":\n  \"∀ (q : Quaternion ℝ), q.re = 0 → exp ℝ q = ↑(Real.cos ‖q‖) + (Real.sin ‖q‖ / ‖q‖) • q\",\n  \"isProp\": true,\n  \"docString\":\n  \"The closed form for the quaternion exponential on imaginary quaternions. \"}]\n", "prompt_cons": "/-- The cardinality of the quaternions, as a set. -/\ntheorem ∀ (R : Type u_1) [inst : One R] [inst_1 : Neg R], Cardinal.mk ↑Set.univ = Cardinal.mk R ^ 4 :=\n\n/-- The cardinality of a quaternion algebra, as a set. -/\ntheorem ∀ {R : Type u_1} (c₁ c₂ : R), Cardinal.mk ↑Set.univ = Cardinal.mk R ^ 4 :=\n\n/-- The cardinality of the quaternions, as a type. -/\ntheorem ∀ (R : Type u_1) [inst : One R] [inst_1 : Neg R], Cardinal.mk (Quaternion R) = Cardinal.mk R ^ 4 :=\n\n/-- The closed form for the quaternion exponential on imaginary quaternions. -/\ntheorem ∀ (q : Quaternion ℝ), q.re = 0 → exp ℝ q = ↑(Real.cos ‖q‖) + (Real.sin ‖q‖ / ‖q‖) • q :=\n\n/-- Show that there is an infinite number of solutions to $x^2 = -1$ in the quaternions. -/\ntheorem", "choices": ["∀ (R : Type u_1) [inst : One R] [inst_1 : Neg R] [inst_2 : HasScalar R (Quaternion R)], ∃ (x : Quaternion R), x^2 = -1 ", "∀ (R : Type u_1) [inst : One R] [inst_1 : Neg R], ∃ (x : Quaternion R), x * x = -1 ", "∀ (R : Type u_1) [inst : One R] [inst_1 : Neg R], ∃ (x : Quaternion R), x * x = -1 ", "∀ (R : Type u_1) [inst : One R] [inst_1 : Neg R] [inst_2 : Add R] [inst_3 : Mul R] [inst_4 : Sub R] [inst_5 : HasScalar R (Quaternion R)], ∃ x : Quaternion R, x ≠ 0 ∧ x^2 = -1 ", "∀ (R : Type u_1) [inst : One R] [inst_1 : Neg R], ∃ (z : Quaternion R), z ^ 2 = -1 ", "∃ (f : ℕ → Quaternion ℝ), (∀ n : ℕ, f n * f n = -1) ∧ Function.injective f ", "∀ (R : Type u_1) [inst : One R] [inst_1 : Neg R], Cardinal.mk (Quaternion R) = Cardinal.mk R ^ 4 → Cardinal.mk {x : Quaternion R // x^2 = -1} = Cardinal.mk R ", "∀ (R : Type u_1) [inst : One R] [inst_1 : Neg R], Nonempty (Quaternion R) → ∃ x : Quaternion R, x ^ 2 = -1 ", "∀ (R : Type u_1) [inst : One R] [inst_1 : Neg R], Cardinal.mk {q : Quaternion R | q ^ 2 = -1} = Cardinal.mk R ^ 2 ", "∀ (R : Type u_1) [inst : One R] [inst_1 : Neg R], ∃ x : Quaternion R, x ≠ (0 : Quaternion R) ∧ x^2 = -(1 : Quaternion R) "]}
{"docString": "Let $R$ be a ring in which $x^3 = x$ for every $x \\in R$. Prove that $R$ is commutative.", "prompts": "[{\"theorem\":\n  \"∀ {R : Type u_1} [inst : Finite R] [inst : CommRing R] [inst_1 : IsReduced R] [inst_2 : CharP R 2] (a : R), IsSquare a\",\n  \"isProp\": true,\n  \"docString\":\n  \"If `ringChar R = 2`, where `R` is a finite reduced commutative ring,\\nthen every `a : R` is a square. \"},\n {\"theorem\":\n  \"∀ {R : Type u} [inst : Semiring R] {p : Polynomial R}, Polynomial.X * p = p * Polynomial.X\",\n  \"isProp\": true,\n  \"docString\":\n  \"`X` commutes with everything, even when the coefficients are noncommutative. \"},\n {\"theorem\":\n  \"∀ {R : Type u_1} [inst : CommSemiring R] (I : Ideal R) [hp : Ideal.IsPrime I],\\n  LocalRing (Localization (Ideal.primeCompl I))\",\n  \"isProp\": true,\n  \"docString\":\n  \"The localization of `R` at the complement of a prime ideal is a local ring. \"},\n {\"theorem\":\n  \"∀ {R : Type u} [inst : CommRing R] (P : Ideal R), Ideal.IsPrime (Ideal.map Polynomial.C P) ↔ Ideal.IsPrime P\",\n  \"isProp\": true,\n  \"docString\":\n  \"If `P` is a prime ideal of `R`, then `P.R[x]` is a prime ideal of `R[x]`. \"}]\n", "prompt_cons": "/-- If `ringChar R = 2`, where `R` is a finite reduced commutative ring,\nthen every `a : R` is a square. -/\ntheorem ∀ {R : Type u_1} [inst : Finite R] [inst : CommRing R] [inst_1 : IsReduced R] [inst_2 : CharP R 2] (a : R), IsSquare a :=\n\n/-- `X` commutes with everything, even when the coefficients are noncommutative. -/\ntheorem ∀ {R : Type u} [inst : Semiring R] {p : Polynomial R}, Polynomial.X * p = p * Polynomial.X :=\n\n/-- The localization of `R` at the complement of a prime ideal is a local ring. -/\ntheorem ∀ {R : Type u_1} [inst : CommSemiring R] (I : Ideal R) [hp : Ideal.IsPrime I],\n  LocalRing (Localization (Ideal.primeCompl I)) :=\n\n/-- If `P` is a prime ideal of `R`, then `P.R[x]` is a prime ideal of `R[x]`. -/\ntheorem ∀ {R : Type u} [inst : CommRing R] (P : Ideal R), Ideal.IsPrime (Ideal.map Polynomial.C P) ↔ Ideal.IsPrime P :=\n\n/-- Let $R$ be a ring in which $x^3 = x$ for every $x \\in R$. Prove that $R$ is commutative. -/\ntheorem", "choices": ["∀ {R : Type u_1} [inst : Ring R] (h : ∀ (x : R), x ^ 3 = x), IsCommutative R (*) ", "∀ {R : Type u_1} [inst : Ring R] (h : ∀ x : R, x^3 = x), IsCommutative R (*) ", "∀ {R : Type u_1} [inst : Ring R] (h : ∀ x : R, x^3 = x), CommRing R ", "∀ {R : Type u_1} [inst : Ring R] (h : ∀ x : R, x^3 = x), IsCommutative R ", "∀ {R : Type u_1} [inst : Ring R] (h : ∀ x : R, x^3 = x), IsCommutative R mul ", "∀ {R : Type u} [inst : Ring R] (h : ∀ x : R, x ^ 3 = x), IsCommutative R (*) ", "∀ {R : Type u} [inst : Ring R] (h : ∀ x : R, x ^ 3 = x), IsCommutative R ", "∀ {R : Type u} [inst : Ring R] (hx : ∀ x : R, x^3 = x), IsCommutative R ", "∀ {R : Type u} [inst : Ring R] (h : ∀ x : R, x^3 = x), IsCommutative R ", "∀ {R : Type u} [inst : Ring R] (h : ∀ x : R, x^3 = x), CommRing R "]}
{"docString": "Let $p$ be an odd prime and let $1 + \\frac{1}{2} + ... + \\frac{1}{p - 1} = \\frac{a}{b}$, where $a, b$ are integers. Show that $p \\mid a$.", "prompts": "[{\"theorem\":\n  \"∀ {p : ℕ}, Nat.Prime p → ∀ {n : ℤ}, IsCoprime n ↑p → n ^ (p - 1) ≡ 1 [ZMOD ↑p]\",\n  \"isProp\": true,\n  \"docString\":\n  \"**Fermat's Little Theorem**: for all `a : ℤ` coprime to `p`, we have\\n`a ^ (p - 1) ≡ 1 [ZMOD p]`. \"},\n {\"theorem\":\n  \"∀ {p a b : ℕ}, p ∈ Nat.factors b → a ≠ 0 → p ∈ Nat.factors (a * b)\",\n  \"isProp\": true,\n  \"docString\":\n  \"If `p` is a prime factor of `b` then `p` is also a prime factor of `a * b` for any `a > 0` \"},\n {\"theorem\":\n  \"∀ {p a b : ℕ}, p ∈ Nat.factors a → b ≠ 0 → p ∈ Nat.factors (a * b)\",\n  \"isProp\": true,\n  \"docString\":\n  \"If `p` is a prime factor of `a` then `p` is also a prime factor of `a * b` for any `b > 0` \"},\n {\"theorem\": \"∀ {p : ℕ} [inst : Fact (Nat.Prime p)], p % 2 = 1 ↔ p ≠ 2\",\n  \"isProp\": true,\n  \"docString\": \"A prime `p` satisfies `p % 2 = 1` if and only if `p ≠ 2`. \"}]\n", "prompt_cons": "/-- **Fermat's Little Theorem**: for all `a : ℤ` coprime to `p`, we have\n`a ^ (p - 1) ≡ 1 [ZMOD p]`. -/\ntheorem ∀ {p : ℕ}, Nat.Prime p → ∀ {n : ℤ}, IsCoprime n ↑p → n ^ (p - 1) ≡ 1 [ZMOD ↑p] :=\n\n/-- If `p` is a prime factor of `b` then `p` is also a prime factor of `a * b` for any `a > 0` -/\ntheorem ∀ {p a b : ℕ}, p ∈ Nat.factors b → a ≠ 0 → p ∈ Nat.factors (a * b) :=\n\n/-- If `p` is a prime factor of `a` then `p` is also a prime factor of `a * b` for any `b > 0` -/\ntheorem ∀ {p a b : ℕ}, p ∈ Nat.factors a → b ≠ 0 → p ∈ Nat.factors (a * b) :=\n\n/-- A prime `p` satisfies `p % 2 = 1` if and only if `p ≠ 2`. -/\ntheorem ∀ {p : ℕ} [inst : Fact (Nat.Prime p)], p % 2 = 1 ↔ p ≠ 2 :=\n\n/-- Let $p$ be an odd prime and let $1 + \\frac{1}{2} + ... + \\frac{1}{p - 1} = \\frac{a}{b}$, where $a, b$ are integers. Show that $p \\mid a$. -/\ntheorem", "choices": ["∀ {p a b : ℕ}, Nat.Prime p → Fact (p % 2 = 1) → a * b = (1 + 2 + ... + (p - 1)) → p ∣ a ", "forall {p : ℕ} [inst : Fact (Nat.Prime p)], p % 2 = 1 →\n  ∃ (a b : ℕ), (∀ i ∈ Finset.range (p - 1), b * (i + 1) ≡ 1 [ZMOD p]) ∧ a ≠ 0 ∧ b ≠ 0 ∧ p ∣ a ", "∀ {p : ℕ} [inst : Fact (Nat.Prime p)], p % 2 = 1 → ∃ (a b : ℤ), a ≠ 0 ∧ b ≠ 0 ∧ 1 + ∑ k in Finset.range (p - 1), 1 / ↑(k + 1) = a / b ∧ ↑p ∣ a ", "/-- **Fermat's Little Theorem**: for all `a : ℤ` coprime to `p`, we have\n`a ^ (p - 1) ≡ 1 [ZMOD p]`. -/\ntheorem fermat_little_theorem {p : ℕ} (hp : Nat.Prime p) {n : ℤ} (hn : IsCoprime n ↑p) : n ^ (p - 1) ≡ 1 [ZMOD ↑p] ", "∀ {p : ℕ} [inst : Fact (Nat.Prime p)], p % 2 = 1 → ∀ {a b : ℕ}, a ≠ 0 → b ≠ 0 → a * b = (p - 1)! + (p - 2)! + ... + 1! → p ∈ Nat.factors a ", "∀ {p : ℕ} [inst : Fact (Nat.Prime p)], (p % 2 = 1) → (∀ {a b : ℤ}, (∑ i in Finset.range (p - 1), (1 / (↑i + 1))) = a / b) → (↑p ∣ a) ", "∀ {p : ℕ} [inst : Fact (Nat.Prime p)], p % 2 = 1 → ∃ (a b : ℤ), a ≠ 0 ∧ b ≠ 0 ∧ (1 / 2 + 1 / 3 + ... + 1 / (p - 1)) = a / b ∧ (p ∣ a) ", "forall {p : ℕ} [Fact (Nat.Prime p)], p % 2 = 1 → ∃ (a b : ℕ), (∑ i in Finset.range (p - 1), 1 / (i + 1)) = a / b ∧ p ∣ a ", "∀ {p : ℕ} [inst : Fact (Nat.Prime p)], p % 2 = 1 → ∃ a b : ℕ, a ≠ 0 ∧ b ≠ 0 ∧ (1 + ∑ k in Finset.range (p - 1), 1 / (↑k + 1)) = (↑a / ↑b) ∧ p ∣ a ", "forall {p : ℕ} [Fact (Nat.Prime p)], p % 2 = 1 →\n  (∃ a b : ℤ, a ≠ 0 ∧ b ≠ 0 ∧ ↑p ∣ a ∧ (1 + ∑ k in Finset.range (p - 1), 1 / ↑k) = a / b) "]}
{"docString": "Let $R$ be the ring of $2 \\times 2$ matrices over the real numbers; suppose that $I$ is an ideal of $R$. Show that $I = (0)$ or $I = R$.", "prompts": "[{\"theorem\":\n  \"∀ {R : Type u} [inst : CommRing R] {I : Ideal R}, Ideal.jacobson I = I ↔ Ideal.jacobson ⊥ = ⊥\",\n  \"isProp\": true,\n  \"docString\":\n  \"An ideal `I` of `R` is equal to its Jacobson radical if and only if\\nthe Jacobson radical of the quotient ring `R/I` is the zero ideal \"},\n {\"theorem\":\n  \"∀ {R : Type u_1} [inst : CommRing R] (I : Ideal (Polynomial R))\\n  (x : { x // x ∈ RingHom.range (RingHom.comp (Ideal.Quotient.mk I) Polynomial.C) }),\\n  ↑Polynomial.C x ∈\\n      Ideal.map (Polynomial.mapRingHom (RingHom.rangeRestrict (RingHom.comp (Ideal.Quotient.mk I) Polynomial.C))) I →\\n    x = 0\",\n  \"isProp\": true,\n  \"docString\":\n  \"Given any ring `R` and an ideal `I` of `R[X]`, we get a map `R → R[x] → R[x]/I`.\\nIf we let `R` be the image of `R` in `R[x]/I` then we also have a map `R[x] → R'[x]`.\\nIn particular we can map `I` across this map, to get `I'` and a new map `R' → R'[x] → R'[x]/I`.\\nThis theorem shows `I'` will not contain any non-zero constant polynomials. \"},\n {\"theorem\":\n  \"∀ {R : Type u_2} {S : Type u_1} [inst : NonUnitalNonAssocSemiring R] [inst_1 : NonUnitalNonAssocSemiring S]\\n  (f : R ≃+* S), ↑f 0 = 0\",\n  \"isProp\": true,\n  \"docString\": \"A ring isomorphism sends zero to zero. \"},\n {\"theorem\":\n  \"∀ (R : Type u_1) [inst : CommRing R], Nonempty (Algebra ℚ R) ↔ ∀ (I : Ideal R), I ≠ ⊤ → CharZero (R ⧸ I)\",\n  \"isProp\": true,\n  \"docString\":\n  \"A ring is a `ℚ`-algebra iff it has equal characteristic zero. \"}]\n", "prompt_cons": "/-- An ideal `I` of `R` is equal to its Jacobson radical if and only if\nthe Jacobson radical of the quotient ring `R/I` is the zero ideal -/\ntheorem ∀ {R : Type u} [inst : CommRing R] {I : Ideal R}, Ideal.jacobson I = I ↔ Ideal.jacobson ⊥ = ⊥ :=\n\n/-- Given any ring `R` and an ideal `I` of `R[X]`, we get a map `R → R[x] → R[x]/I`.\nIf we let `R` be the image of `R` in `R[x]/I` then we also have a map `R[x] → R'[x]`.\nIn particular we can map `I` across this map, to get `I'` and a new map `R' → R'[x] → R'[x]/I`.\nThis theorem shows `I'` will not contain any non-zero constant polynomials. -/\ntheorem ∀ {R : Type u_1} [inst : CommRing R] (I : Ideal (Polynomial R))\n  (x : { x // x ∈ RingHom.range (RingHom.comp (Ideal.Quotient.mk I) Polynomial.C) }),\n  ↑Polynomial.C x ∈\n      Ideal.map (Polynomial.mapRingHom (RingHom.rangeRestrict (RingHom.comp (Ideal.Quotient.mk I) Polynomial.C))) I →\n    x = 0 :=\n\n/-- A ring isomorphism sends zero to zero. -/\ntheorem ∀ {R : Type u_2} {S : Type u_1} [inst : NonUnitalNonAssocSemiring R] [inst_1 : NonUnitalNonAssocSemiring S]\n  (f : R ≃+* S), ↑f 0 = 0 :=\n\n/-- A ring is a `ℚ`-algebra iff it has equal characteristic zero. -/\ntheorem ∀ (R : Type u_1) [inst : CommRing R], Nonempty (Algebra ℚ R) ↔ ∀ (I : Ideal R), I ≠ ⊤ → CharZero (R ⧸ I) :=\n\n/-- Let $R$ be the ring of $2 \\times 2$ matrices over the real numbers; suppose that $I$ is an ideal of $R$. Show that $I = (0)$ or $I = R$. -/\ntheorem", "choices": ["∀ {R : Type u_1} [inst : CommRing R] [IsMatrixRing R] [Nontrivial R], ∀ (I : Ideal R), I = ⊥ ∨ I = ⊤ ", "∀ {R : Type u_1} [inst : CommRing R]\n  (h : forall (a b c d : R) (x y z w : R), Ideal.quotient.mk (Ideal.span (matrix.vec_cons (matrix.vec_cons a (matrix.vec_cons b matrix.vec_empty)) (matrix.vec_cons (matrix.vec_cons c (matrix.vec_cons d matrix.vec_empty)) matrix.vec_empty))) (matrix.vec_cons (matrix.vec_cons x (matrix.vec_cons y matrix.vec_empty)) (matrix.vec_cons (matrix.vec_cons z (matrix.vec_cons w matrix.vec_empty)) matrix.vec_empty)) = 0 → a = 0 ∧ b = 0 ∧ c = 0 ∧ d = 0),\n  ∀ (I : Ideal (Matrix (Finₓ 2) (Finₓ 2) R)), I = ⊥ ∨ I = ⊤ ", "∀ {R : Type u} [inst : CommRing R] {I : Ideal (Matrix (Finₓ 2) (Finₓ 2) R)},\n  I = ⊥ ∨ I = ⊤ ", "∀ {R : Type u_1} [inst : CommRing R] (M : Matrix (Fin 2) (Fin 2) R),\n  Ideal M = ⊥ ∨ Ideal M = ⊤ →\n  (∀ (I : Ideal R), Ideal (Matrix.map M (λ x, ↑(Ideal.Quotient.mk I x))) = ⊥) ∨ Ideal (Matrix.map M (λ x, ↑(Ideal.Quotient.mk I x))) = ⊤ ", "∀ {R : Type u} [h₁ : CommRing R] [h₂ : IsDomain R] [h₃ : Matrix.Invertible (Matrix.diagonalₓ ((0 : R), 1))],\n  (I : Ideal (Matrix (Finₓ 2) (Finₓ 2) R)) → I = ⊥ ∨ I = ⊤ ", "∀ {R : Type u_1} [inst : CommRing R] {I : Ideal (Matrix (Finₓ 2) (Finₓ 2) R)}, I = ⊥ ∨ I = ⊤ ", "∀ {R : Type u} [inst : CommRing R] [inst_2 : NonUnitalNonAssocSemiring R] {I : Ideal (Matrix (Finₓ 2) (Finₓ 2) R)}, I = ⊥ ∨ I = ⊤ ", "forall {R : Type u_1} [inst : CommRing R] [inst_1 : RingEmbedding (RingHom.id R)] [inst_2 : CharZero R],\n  ∀ (I : Ideal (Matrix (Finₓ 2) (Finₓ 2) R)),\n  I = ⊥ ∨ I = ⊤ ", "∀ {R : Type u_1} [inst : CommRing R] [inst2 : Algebra ℝ R] (I : Ideal R),\n(I = ⊥ ∨ I = ⊤) ↔ ∀ (M : Matrix (Finₓ 2) (Finₓ 2) R), M ∈ I → M = 0 ∨ (∀ (c : R), c • 1 = c) ", "∀ {R : Type u} [inst : CommRing R] (I : Ideal (Matrix (Fin 2) (Fin 2) R)),\nI = ⊥ ∨ I = ⊤ "]}
{"docString": "Let $F = \\mathbb{Z}_p$ be the field of integers $\\mod p$, where $p$ is a prime, and let $q(x) \\in F[x]$ be irreducible of degree $n$. Show that $F[x]/(q(x))$ is a field having at exactly $p^n$ elements.", "prompts": "[{\"theorem\":\n  \"∀ {α : Type u_1} [inst : Monoid α] {p q : α}, Irreducible p → Irreducible q → p ∣ q → q ∣ p\",\n  \"isProp\": true,\n  \"docString\":\n  \"If `p` and `q` are irreducible, then `p ∣ q` implies `q ∣ p`. \"},\n {\"theorem\":\n  \"∀ {α : Type u_1} [inst : Fintype α] [inst_1 : Field α], IsPrimePow (Fintype.card α)\",\n  \"isProp\": true,\n  \"docString\": \"A finite field has prime power cardinality. \"},\n {\"theorem\":\n  \"∀ {p q : ℕ} [p_prime : Fact (Nat.Prime p)] [q_prime : Fact (Nat.Prime q)], p ≠ q → padicNorm p ↑q = 1\",\n  \"isProp\": true,\n  \"docString\":\n  \"The `p`-adic norm of `q` is `1` if `q` is prime and not equal to `p`. \"},\n {\"theorem\":\n  \"∀ {G : Type u_1} [inst : Group G] [inst_1 : Fintype G] (p : ℕ) [hp : Fact (Nat.Prime p)],\\n  p ∣ Fintype.card G → ∃ x, orderOf x = p\",\n  \"isProp\": true,\n  \"docString\":\n  \"For every prime `p` dividing the order of a finite group `G` there exists an element of order\\n`p` in `G`. This is known as Cauchy's theorem. \"}]\n", "prompt_cons": "/-- If `p` and `q` are irreducible, then `p ∣ q` implies `q ∣ p`. -/\ntheorem ∀ {α : Type u_1} [inst : Monoid α] {p q : α}, Irreducible p → Irreducible q → p ∣ q → q ∣ p :=\n\n/-- A finite field has prime power cardinality. -/\ntheorem ∀ {α : Type u_1} [inst : Fintype α] [inst_1 : Field α], IsPrimePow (Fintype.card α) :=\n\n/-- The `p`-adic norm of `q` is `1` if `q` is prime and not equal to `p`. -/\ntheorem ∀ {p q : ℕ} [p_prime : Fact (Nat.Prime p)] [q_prime : Fact (Nat.Prime q)], p ≠ q → padicNorm p ↑q = 1 :=\n\n/-- For every prime `p` dividing the order of a finite group `G` there exists an element of order\n`p` in `G`. This is known as Cauchy's theorem. -/\ntheorem ∀ {G : Type u_1} [inst : Group G] [inst_1 : Fintype G] (p : ℕ) [hp : Fact (Nat.Prime p)],\n  p ∣ Fintype.card G → ∃ x, orderOf x = p :=\n\n/-- Let $F = \\mathbb{Z}_p$ be the field of integers $\\mod p$, where $p$ is a prime, and let $q(x) \\in F[x]$ be irreducible of degree $n$. Show that $F[x]/(q(x))$ is a field having at exactly $p^n$ elements. -/\ntheorem", "choices": ["∀ {F : Type u_1} [inst : Field F] [inst_1 : Fintype F] (p n : ℕ) [hp : Fact (Nat.Prime p)],\n  ∀ {q : Polynomial F}, Polynomial.degree q = n → Polynomial.Irreducible q →\n  Fintype.card (QuotientRing (Polynomial.degree q)) = p ^ n ", "∀ {α : Type u_1} [inst : Field α] [inst_1 : Fintype α] [inst_2 : DecidableEq α] {p : ℕ} [hp : Fact (Nat.Prime p)] {n : ℕ} (q : polynomial α),\n  Irreducible q → polynomial.degree q = n → Fintype.card (quotient (polynomial.maximal_ideal q)) = p ^ n ", "∀ {F : Type u_1} [inst : Field F] {p n : ℕ} [p_prime : Fact (Nat.Prime p)] [char_p : CharP F p] {q : F[X]}, \n  Polynomial.degree q = n → Polynomial.irreducible q → Fintype.card (Field.adjoinRoot q) = p ^ n ", "∀ {F : Type u_1} [inst : Field F] [inst_1 : Fintype F] {p n : ℕ} [hp : Fact (Nat.Prime p)], \n  ∀ {q : Polynomial F}, Irreducible q → Polynomial.degree q = n → Fintype.card (Polynomial.QuotientRing F q) = p ^ n ", "∀ {α : Type u_1} [inst : Field α] {p : ℕ} [p_prime : Fact (Nat.Prime p)] {q : Polynomial α} [q_irred : Irreducible q] (n : ℕ),\n  Polynomial.degree q = n → Fintype.card (QuotientRing.quotient (Polynomial.toIdeal q)) = p^n ", "∀ {F : Type u_1} [inst : Field F] [inst_1 : Fintype F] {p n : ℕ} [hp : Fact (Nat.Prime p)] {q : Polynomial F},\n  Irreducible q → Polynomial.degree q = n → (Fintype.card (QuotientRing.quotient (Ideal.span (singleton q))) = p ^ n) ", "∀ {F : Type u_1} [inst : Field F] {p n : ℕ} [inst_1 : Fact (Nat.Prime p)] {q : F[X]}, \n  Polynomial.degree q = n → Polynomial.irreducible q → Fintype.card (QuotientRing.quotient (Polynomial.span_singleton q)) = p ^ n ", "∀ {α : Type u_1} [inst : CommRing α] [inst_1 : IsDomain α] [inst_2 : Fintype α] (p n : ℕ) (q : Polynomial α),\n  Fact (Nat.Prime p) → Polynomial.degree q = n → Polynomial.Irreducible q → Fintype.card (QuotientRing.quotient (Polynomial.span_singleton q)) = p^n ", "∀ {F : Type u_1} [inst : Field F] [inst_1 : Fintype F] (p n : ℕ) (q : Polynomial F),\n  Fact (Nat.Prime p) → Fintype.card F = p → Irreducible q → Polynomial.degree q = n →\n  Fintype.card (QuotientRing.quotient (Polynomial.mkIdeal q)) = p^n ", "∀ {F : Type u_1} [inst : Field F] {p : ℕ} [inst_1 : Fact (Nat.Prime p)] {n : ℕ} (q : polynomial F),\n  Irreducible q → polynomial.degree q = n → IsField (F[x]/(q)) ∧ Fintype.card (F[x]/(q)) = p^n "]}
{"docString": "If $p$ is a prime, show that $q(x) = 1 + x + x^2 + \\cdots x^{p - 1}$ is irreducible in $Q[x]$.", "prompts": "[{\"theorem\":\n  \"∀ {α : Type u_1} [inst : Monoid α] {p q : α}, Irreducible p → Irreducible q → p ∣ q → q ∣ p\",\n  \"isProp\": true,\n  \"docString\":\n  \"If `p` and `q` are irreducible, then `p ∣ q` implies `q ∣ p`. \"},\n {\"theorem\":\n  \"∀ {p q : ℕ} [p_prime : Fact (Nat.Prime p)] [q_prime : Fact (Nat.Prime q)], p ≠ q → padicNorm p ↑q = 1\",\n  \"isProp\": true,\n  \"docString\":\n  \"The `p`-adic norm of `q` is `1` if `q` is prime and not equal to `p`. \"},\n {\"theorem\": \"∀ {p : ℕ}, Nat.Prime p → ↑(Nat.factorization p) p = 1\",\n  \"isProp\": true,\n  \"docString\": \"The multiplicity of prime `p` in `p` is `1` \"},\n {\"theorem\":\n  \"∀ (R : Type u_1) [inst : Ring R] (p : ℕ) [hp : Fact (Nat.Prime p)],\\n  Polynomial.cyclotomic p R = Finset.sum (Finset.range p) fun i => Polynomial.X ^ i\",\n  \"isProp\": true,\n  \"docString\":\n  \"If `p` is prime, then `cyclotomic p R = ∑ i in range p, X ^ i`. \"}]\n", "prompt_cons": "/-- If `p` and `q` are irreducible, then `p ∣ q` implies `q ∣ p`. -/\ntheorem ∀ {α : Type u_1} [inst : Monoid α] {p q : α}, Irreducible p → Irreducible q → p ∣ q → q ∣ p :=\n\n/-- The `p`-adic norm of `q` is `1` if `q` is prime and not equal to `p`. -/\ntheorem ∀ {p q : ℕ} [p_prime : Fact (Nat.Prime p)] [q_prime : Fact (Nat.Prime q)], p ≠ q → padicNorm p ↑q = 1 :=\n\n/-- The multiplicity of prime `p` in `p` is `1` -/\ntheorem ∀ {p : ℕ}, Nat.Prime p → ↑(Nat.factorization p) p = 1 :=\n\n/-- If `p` is prime, then `cyclotomic p R = ∑ i in range p, X ^ i`. -/\ntheorem ∀ (R : Type u_1) [inst : Ring R] (p : ℕ) [hp : Fact (Nat.Prime p)],\n  Polynomial.cyclotomic p R = Finset.sum (Finset.range p) fun i => Polynomial.X ^ i :=\n\n/-- If $p$ is a prime, show that $q(x) = 1 + x + x^2 + \\cdots x^{p - 1}$ is irreducible in $Q[x]$. -/\ntheorem", "choices": ["∀ {p : ℕ} [p_prime : Fact (Nat.Prime p)], Polynomial.Irreducible (Finset.sum (Finset.range p) fun i => Polynomial.X ^ i) ", "forall {p : ℕ} [hp_prime : Fact (Nat.Prime p)],\n  Polynomial.IsIrreducible (Finset.sum (Finset.range p) fun i => Polynomial.C (1 : ℚ) * Polynomial.X ^ i) ", "∀ {p : ℕ} [p_prime : Fact (Nat.Prime p)], Irreducible (Finset.sum (Finset.range p) fun i => Polynomial.C (polynomial.X ^ i : ℚ)) ", "forall {p : ℕ} [hp : Fact (Nat.Prime p)], Polynomial.irreducible (Finset.sum (Finset.range p) fun i => Polynomial.X ^ i) ", "∀ (p : ℕ) [hp : Fact (Nat.Prime p)], Irreducible (Finset.sum (Finset.range p) fun i => Polynomial.X ^ i) ", "∀ {p : ℕ} [p_prime : Fact (Nat.Prime p)], Irreducible (Finset.sum (Finset.range p) fun i => Polynomial.X ^ i : Polynomial ℚ) ", "∀ {p : ℕ} [p_prime : Fact (Nat.Prime p)], Irreducible (Finset.sum (Finset.range p) fun i => Polynomial.X ^ i : Polynomial ℚ) ", "forall {p : ℕ} [p_prime : Fact (Nat.Prime p)], Irreducible (Finset.sum (Finset.range p) fun i => Polynomial.X ^ i) ", "∀ {p : ℕ} [hp : Fact (Nat.Prime p)], Polynomial.IsIrreducible (Finset.sum (Finset.range p) fun i => Polynomial.X ^ i) ", "∀ {p : ℕ} [p_prime : Fact (Nat.Prime p)], Irreducible (Finset.sum (Finset.range p) fun i => (Polynomial.X ^ i : Polynomial ℚ)) "]}
{"docString": "Show that there is an infinite number of integers a such that $f(x) = x^7 + 15x^2 - 30x + a$ is irreducible in $Q[x]$.", "prompts": "[{\"theorem\":\n  \"∀ {A : Type u_1} {B : Type u_2} [inst : CommRing A] [inst_1 : Ring B] [inst_2 : Algebra A B] {x : B}\\n  [inst_3 : IsDomain A] [inst_4 : IsDomain B], IsIntegral A x → Irreducible (minpoly A x)\",\n  \"isProp\": true,\n  \"docString\": \"A minimal polynomial is irreducible. \"},\n {\"theorem\": \"∀ {n : ℕ}, 0 < n → Irreducible (Polynomial.cyclotomic n ℤ)\",\n  \"isProp\": true,\n  \"docString\": \"`cyclotomic n ℤ` is irreducible. \"},\n {\"theorem\":\n  \"∀ {p : Polynomial ℤ}, Polynomial.IsPrimitive p → (Irreducible p ↔ Irreducible (Polynomial.map (Int.castRingHom ℚ) p))\",\n  \"isProp\": true,\n  \"docString\":\n  \"**Gauss's Lemma** for `ℤ` states that a primitive integer polynomial is irreducible iff it is\\nirreducible over `ℚ`. \"},\n {\"theorem\": \"∀ {n : ℕ}, 0 < n → Irreducible (Polynomial.cyclotomic n ℚ)\",\n  \"isProp\": true,\n  \"docString\": \"`cyclotomic n ℚ` is irreducible. \"}]\n", "prompt_cons": "/-- A minimal polynomial is irreducible. -/\ntheorem ∀ {A : Type u_1} {B : Type u_2} [inst : CommRing A] [inst_1 : Ring B] [inst_2 : Algebra A B] {x : B}\n  [inst_3 : IsDomain A] [inst_4 : IsDomain B], IsIntegral A x → Irreducible (minpoly A x) :=\n\n/-- `cyclotomic n ℤ` is irreducible. -/\ntheorem ∀ {n : ℕ}, 0 < n → Irreducible (Polynomial.cyclotomic n ℤ) :=\n\n/-- **Gauss's Lemma** for `ℤ` states that a primitive integer polynomial is irreducible iff it is\nirreducible over `ℚ`. -/\ntheorem ∀ {p : Polynomial ℤ}, Polynomial.IsPrimitive p → (Irreducible p ↔ Irreducible (Polynomial.map (Int.castRingHom ℚ) p)) :=\n\n/-- `cyclotomic n ℚ` is irreducible. -/\ntheorem ∀ {n : ℕ}, 0 < n → Irreducible (Polynomial.cyclotomic n ℚ) :=\n\n/-- Show that there is an infinite number of integers a such that $f(x) = x^7 + 15x^2 - 30x + a$ is irreducible in $Q[x]$. -/\ntheorem", "choices": ["∀ {A : Type u_1} {B : Type u_2} [inst : CommRing A] [inst_1 : Ring B] [inst_2 : Algebra A B] {x : B}\n  [inst_3 : IsDomain A] [inst_4 : IsDomain B], IsIntegral A x → Irreducible (minpoly A x) ", "∀ {A : Type u_1} {B : Type u_2} [inst : CommRing A] [inst_1 : Ring B] [inst_2 : Algebra A B] {x : B}\n  [inst_3 : IsDomain A] [inst_4 : IsDomain B], IsIntegral A x → Irreducible (minpoly A x) ", "∃ (s : ℕ → ℤ), Function.Injective s ∧ ∀ (n : ℕ), Irreducible (Polynomial.x ^ 7 + 15 * Polynomial.x ^ 2 - 30 * Polynomial.x + coe (s n)) ", "∀ {f : Polynomial ℤ} (a : ℕ), f = (C ↑a + (X^7 + 15 * X^2 - 30 * X)) → Irreducible (Polynomial.map (Int.castRingHom ℚ) f) ", "∀ {A : Type u_1} {B : Type u_2} [inst : CommRing A] [inst_1 : Ring B] [inst_2 : Algebra A B] {x : B}\n  [inst_3 : IsDomain A] [inst_4 : IsDomain B], IsIntegral A x → Irreducible (minpoly A x) ", "∀ {A : Type u_1} {B : Type u_2} [inst : CommRing A] [inst_1 : Ring B] [inst_2 : Algebra A B] {x : B}\n  [inst_3 : IsDomain A] [inst_4 : IsDomain B], IsIntegral A x → Irreducible (minpoly A x) ", "∀ {A : Type u_1} {B : Type u_2} [inst : CommRing A] [inst_1 : Ring B] [inst_2 : Algebra A B] {x : B}\n  [inst_3 : IsDomain A] [inst_4 : IsDomain B], IsIntegral A x → Irreducible (minpoly A x) ", "∀ {A : Type u_1} {B : Type u_2} [inst : CommRing A] [inst_1 : Ring B] [inst_2 : Algebra A B] {x : B}\n  [inst_3 : IsDomain A] [inst_4 : IsDomain B], IsIntegral A x → Irreducible (minpoly A x) ", "∀ {f : ℕ → Polynomial ℚ}, f = (λ n, Polynomial.x ^ 7 + 15 * Polynomial.x ^ 2 - 30 * Polynomial.x + n) → ∃ a : ℕ, ∀ b : ℕ, b ≥ a → Irreducible (f b) ", "∀ {A : Type u_1} {B : Type u_2} [inst : CommRing A] [inst_1 : Ring B] [inst_2 : Algebra A B] {x : B}\n  [inst_3 : IsDomain A] [inst_4 : IsDomain B], IsIntegral A x → Irreducible (minpoly A x) "]}
{"docString": "Let $V$ be a vector space over an infinite field $F$. Show that $V$ cannot be the set-theoretic union of a finite number of proper subspaces of $V$.", "prompts": "[{\"theorem\":\n  \"∀ {𝕜 : Type u} [inst : NontriviallyNormedField 𝕜] {E : Type v} [inst_1 : NormedAddCommGroup E]\\n  [inst_2 : NormedSpace 𝕜 E] [inst_3 : CompleteSpace 𝕜] (s : Submodule 𝕜 E)\\n  [inst_4 : FiniteDimensional 𝕜 { x // x ∈ s }], IsClosed ↑s\",\n  \"isProp\": true,\n  \"docString\": \"A finite-dimensional subspace is closed. \"},\n {\"theorem\":\n  \"∀ {J : Type} [inst : CategoryTheory.SmallCategory J] [inst_1 : CategoryTheory.FinCategory J] {k : Type v}\\n  [inst_2 : Field k] (F : CategoryTheory.Functor J (FGModuleCat k)),\\n  FiniteDimensional k\\n    ↑(CategoryTheory.Limits.limit\\n        (CategoryTheory.Functor.comp F (CategoryTheory.forget₂ (FGModuleCat k) (ModuleCat k))))\",\n  \"isProp\": true,\n  \"docString\":\n  \"Finite limits of finite dimensional vectors spaces are finite dimensional,\\nbecause we can realise them as subobjects of a finite product. \"},\n {\"theorem\":\n  \"∀ {R : Type u} [inst : CommRing R] {S : Type v} [inst_1 : CommRing S] [inst_2 : Algebra R S] (K : Type u_5)\\n  [inst_3 : Field K] [inst_4 : Algebra R K] [hRK : IsFractionRing R K] {V : Type u_2} {V' : Type u_3} {V'' : Type u_1}\\n  [inst_5 : AddCommGroup V] [inst_6 : Module R V] [inst_7 : Module K V] [inst_8 : IsScalarTower R K V]\\n  [inst_9 : AddCommGroup V'] [inst_10 : Module R V'] [inst_11 : Module S V'] [inst_12 : IsScalarTower R S V']\\n  [inst_13 : AddCommGroup V''] [inst_14 : Module R V''] [inst_15 : IsDomain R] [inst_16 : IsDedekindDomain R],\\n  RingHom.ker (algebraMap R S) ≠ ⊤ →\\n    ∀ (f : V'' →ₗ[R] V),\\n      Function.Injective ↑f →\\n        ∀ (f' : V'' →ₗ[R] V') {ι : Type u_4} {b : ι → V''}, LinearIndependent S (↑f' ∘ b) → LinearIndependent K (↑f ∘ b)\",\n  \"isProp\": true,\n  \"docString\":\n  \"Let `V` be a vector space over `K = Frac(R)`, `S / R` a ring extension\\nand `V'` a module over `S`. If `b`, in the intersection `V''` of `V` and `V'`,\\nis linear independent over `S` in `V'`, then it is linear independent over `R` in `V`.\\n\\nThe statement we prove is actually slightly more general:\\n * it suffices that the inclusion `algebraMap R S : R → S` is nontrivial\\n * the function `f' : V'' → V'` doesn't need to be injective\\n\"},\n {\"theorem\":\n  \"∀ (𝕜 : Type u) [inst : NontriviallyNormedField 𝕜] (E : Type v) [inst_1 : NormedAddCommGroup E]\\n  [inst_2 : NormedSpace 𝕜 E] [inst_3 : ProperSpace 𝕜] [inst : FiniteDimensional 𝕜 E], ProperSpace E\",\n  \"isProp\": true,\n  \"docString\":\n  \"Any finite-dimensional vector space over a proper field is proper.\\nWe do not register this as an instance to avoid an instance loop when trying to prove the\\nproperness of `𝕜`, and the search for `𝕜` as an unknown metavariable. Declare the instance\\nexplicitly when needed. \"}]\n", "prompt_cons": "/-- A finite-dimensional subspace is closed. -/\ntheorem ∀ {𝕜 : Type u} [inst : NontriviallyNormedField 𝕜] {E : Type v} [inst_1 : NormedAddCommGroup E]\n  [inst_2 : NormedSpace 𝕜 E] [inst_3 : CompleteSpace 𝕜] (s : Submodule 𝕜 E)\n  [inst_4 : FiniteDimensional 𝕜 { x // x ∈ s }], IsClosed ↑s :=\n\n/-- Finite limits of finite dimensional vectors spaces are finite dimensional,\nbecause we can realise them as subobjects of a finite product. -/\ntheorem ∀ {J : Type} [inst : CategoryTheory.SmallCategory J] [inst_1 : CategoryTheory.FinCategory J] {k : Type v}\n  [inst_2 : Field k] (F : CategoryTheory.Functor J (FGModuleCat k)),\n  FiniteDimensional k\n    ↑(CategoryTheory.Limits.limit\n        (CategoryTheory.Functor.comp F (CategoryTheory.forget₂ (FGModuleCat k) (ModuleCat k)))) :=\n\n/-- Let `V` be a vector space over `K = Frac(R)`, `S / R` a ring extension\nand `V'` a module over `S`. If `b`, in the intersection `V''` of `V` and `V'`,\nis linear independent over `S` in `V'`, then it is linear independent over `R` in `V`.\n\nThe statement we prove is actually slightly more general:\n * it suffices that the inclusion `algebraMap R S : R → S` is nontrivial\n * the function `f' : V'' → V'` doesn't need to be injective -/\ntheorem ∀ {R : Type u} [inst : CommRing R] {S : Type v} [inst_1 : CommRing S] [inst_2 : Algebra R S] (K : Type u_5)\n  [inst_3 : Field K] [inst_4 : Algebra R K] [hRK : IsFractionRing R K] {V : Type u_2} {V' : Type u_3} {V'' : Type u_1}\n  [inst_5 : AddCommGroup V] [inst_6 : Module R V] [inst_7 : Module K V] [inst_8 : IsScalarTower R K V]\n  [inst_9 : AddCommGroup V'] [inst_10 : Module R V'] [inst_11 : Module S V'] [inst_12 : IsScalarTower R S V']\n  [inst_13 : AddCommGroup V''] [inst_14 : Module R V''] [inst_15 : IsDomain R] [inst_16 : IsDedekindDomain R],\n  RingHom.ker (algebraMap R S) ≠ ⊤ →\n    ∀ (f : V'' →ₗ[R] V),\n      Function.Injective ↑f →\n        ∀ (f' : V'' →ₗ[R] V') {ι : Type u_4} {b : ι → V''}, LinearIndependent S (↑f' ∘ b) → LinearIndependent K (↑f ∘ b) :=\n\n/-- Any finite-dimensional vector space over a proper field is proper.\nWe do not register this as an instance to avoid an instance loop when trying to prove the\nproperness of `𝕜`, and the search for `𝕜` as an unknown metavariable. Declare the instance\nexplicitly when needed. -/\ntheorem ∀ (𝕜 : Type u) [inst : NontriviallyNormedField 𝕜] (E : Type v) [inst_1 : NormedAddCommGroup E]\n  [inst_2 : NormedSpace 𝕜 E] [inst_3 : ProperSpace 𝕜] [inst : FiniteDimensional 𝕜 E], ProperSpace E :=\n\n/-- Let $V$ be a vector space over an infinite field $F$. Show that $V$ cannot be the set-theoretic union of a finite number of proper subspaces of $V$. -/\ntheorem", "choices": ["∀ (F : Type u) [inst : Field F] [inst_1 : Infinite F] (V : Type v) [inst_2 : AddCommGroup V] [inst_3 : Module F V],\n  ¬∃ (I : Type) [inst_4 : Fintype I] (S : I → Submodule F V), V = ⋃ (i : I), ↑(S i) ", "∀ {F : Type u} [inst : Infinite F] {E : Type v} [inst_1 : AddCommGroup E] [inst_2 : Module F E],\n  ∀ (s : ι → Submodule F E) [inst : ∀ (i : ι), s i < ⊤] (hs : ↑(Set.range s) < ⊤), Set.Unbounded (≤) (Set.Range s) ", "∀ (F : Type u) [inst : Field F] [inst_1 : Infinite F] (V : Type v) [inst_2 : AddCommGroup V] [inst_3 : Module F V],\n  ¬∃ (n : ℕ) (s : Finₓ n → Submodule F V), (∀ (i : Finₓ n), s i < ⊤) ∧ (⋃ (i : Finₓ n), ↑(s i)) = Set.Univ ", "∀ {F : Type u} [inst : Field F] [inst_1 : Infinite F] {V : Type v} [inst_2 : AddCommGroup V] [inst_3 : Module F V]\n  (t : Finset (Submodule F V)), (∀ (x : Submodule F V), x ∈ t → x < ⊤) → ⊤ ∉ t.image coe ", "∀ {F : Type u} [inst : Field F] {V : Type v} [inst_1 : AddCommGroup V] [inst_2 : Module F V],\n  Infinite F → ∀ {ι : Type u_1} [inst_3 : Fintype ι] (S : ι → Submodule F V),\n    (∀ (i : ι), (S i : Set V) ⊂ Set.Univ) → Set.Univ ⊂ ⋃ (i : ι), (S i : Set V) ", "∀ {𝕜 : Type u} [inst : Field 𝕜] {E : Type v} [inst_1 : AddCommGroup E] [inst_2 : Module 𝕜 E]\n  [inst_3 : Infinite 𝕜] {ι : Type w} {s : ι → Submodule 𝕜 E} (hs : Set.Finite (Set.Range s)),\n  ¬(Submodule.span 𝕜 (Set.Unionₓ (Set.Range (λ i : ι, (s i).Carrier))) = ⊤) ", "∀ {F : Type u} [inst : Field F] {V : Type v} [inst_1 : AddCommGroup V] [inst_2 : Module F V]\n  (hF : Infinite F) {n : ℕ} {v : V}, ¬∃ (S : Finₓ (Nat.succ n) → Submodule F V),\n  Set.PairwiseDisjoint (Set.Range S) ∧ V = Set.Unionₓ (Set.Range (λ (i : Finₓ (Nat.succ n)), ↑(S i))) ", "∀ {F : Type u} [inst : Field F] [inst_1 : Infinite F] {E : Type v} [inst_2 : AddCommGroup E] [inst_3 : Module F E]\n  {ι : Type} [Nonempty ι] [inst_4 : Fintype ι] {f : ι → Submodule F E}, (∀ i, (f i) < ⊤) → ⊤ ≠ ⊥ → ⨆ i, f i ≠ ⊤ ", "∀ {F : Type u} [inst : Field F] [inst_1 : Infinite F] {V : Type v} [inst_2 : AddCommGroup V] [inst_3 : Module F V],\n  ∀ (t : Finset (Submodule F V)), ¬(∀ (x : Submodule F V), x ∈ t → x < ⊤) → ↑(Finset.sup t id) = ⊤ ", "∀ {F : Type u} [inst : Field F] [inst_1 : Infinite F] {V : Type v} [inst_2 : AddCommGroup V] [inst_3 : Module F V]\n  (b : F → V), LinearIndependent F b →\n    ∀ {ι : Type u_1} [_inst_5 : Fintype ι] (v : ι → V), (∀ (i : ι), v i ∈ Submodule.span F (Set.Range b)) →\n      ∃ (i₀ : ι), b = v i₀ "]}
{"docString": "Prove that $\\cos 1^{\\circ}$  is algebraic over $\\mathbb{Q}$.", "prompts": "[{\"theorem\":\n  \"∀ (A : Matrix.SpecialLinearGroup (Fin 2) ℤ), SlashAction.map ℂ 0 A 1 = 1\",\n  \"isProp\": true,\n  \"docString\":\n  \"The constant function 1 is invariant under any element of `SL(2, ℤ)`. \"},\n {\"theorem\":\n  \"∀ {C : Type u} [inst : CategoryTheory.Category C] (X : CategoryTheory.CosimplicialObject C) {n : ℕ} {i : Fin (n + 2)},\\n  CategoryTheory.CategoryStruct.comp (CategoryTheory.CosimplicialObject.δ X i)\\n      (CategoryTheory.CosimplicialObject.δ X (Fin.castSucc i)) =\\n    CategoryTheory.CategoryStruct.comp (CategoryTheory.CosimplicialObject.δ X i)\\n      (CategoryTheory.CosimplicialObject.δ X (Fin.succ i))\",\n  \"isProp\": true,\n  \"docString\": \"The special case of the first cosimplicial identity \"},\n {\"theorem\":\n  \"∀ {F : Type u_1} [inst : Field F] [inst_1 : Fintype F] [inst_2 : DecidableEq F] {a : F},\\n  a ≠ 0 → ↑(quadraticChar F) a ^ 2 = 1\",\n  \"isProp\": true,\n  \"docString\":\n  \"The square of the quadratic character on nonzero arguments is `1`. \"},\n {\"theorem\":\n  \"∀ {R : Type u_1} (c₁ c₂ : R), Cardinal.mk ↑Set.univ = Cardinal.mk R ^ 4\",\n  \"isProp\": true,\n  \"docString\": \"The cardinality of a quaternion algebra, as a set. \"}]\n", "prompt_cons": "/-- The constant function 1 is invariant under any element of `SL(2, ℤ)`. -/\ntheorem ∀ (A : Matrix.SpecialLinearGroup (Fin 2) ℤ), SlashAction.map ℂ 0 A 1 = 1 :=\n\n/-- The special case of the first cosimplicial identity -/\ntheorem ∀ {C : Type u} [inst : CategoryTheory.Category C] (X : CategoryTheory.CosimplicialObject C) {n : ℕ} {i : Fin (n + 2)},\n  CategoryTheory.CategoryStruct.comp (CategoryTheory.CosimplicialObject.δ X i)\n      (CategoryTheory.CosimplicialObject.δ X (Fin.castSucc i)) =\n    CategoryTheory.CategoryStruct.comp (CategoryTheory.CosimplicialObject.δ X i)\n      (CategoryTheory.CosimplicialObject.δ X (Fin.succ i)) :=\n\n/-- The square of the quadratic character on nonzero arguments is `1`. -/\ntheorem ∀ {F : Type u_1} [inst : Field F] [inst_1 : Fintype F] [inst_2 : DecidableEq F] {a : F},\n  a ≠ 0 → ↑(quadraticChar F) a ^ 2 = 1 :=\n\n/-- The cardinality of a quaternion algebra, as a set. -/\ntheorem ∀ {R : Type u_1} (c₁ c₂ : R), Cardinal.mk ↑Set.univ = Cardinal.mk R ^ 4 :=\n\n/-- Prove that $\\cos 1^{\\circ}$  is algebraic over $\\mathbb{Q}$. -/\ntheorem", "choices": ["cos_degree_one_is_algebraic : IsAlgebraic ℚ (Real.cos (Real.pi / 180)) ", "cos_one_degree_is_algebraic : Algebraic ℝ (Real.cos (Real.pi / 180)) ", "is_algebraic_cos_one_degree : IsAlgebraic ℚ (Real.cos (Real.pi / 180)) ", "cos_one_degree_is_algebraic : IsAlgebraic ℚ (Real.cos (Real.pi / 180)) ", "cos_one_degree_is_algebraic_over_Q : IsAlgebraic ℚ (Complex.cos (Complex.of_real (Real.cos 1))) ", "cos_degree_one_is_algebraic : NumberField.Algebraic ℚ (Real.cos (Real.pi / 180)) ", "cos_one_degree_is_algebraic : IsAlgebraic ℚ (Real.cos (Real.deg 1)) ", "cos_one_degree_is_algebraic : IsAlgebraic ℚ (Real.cos (1 * π / 180)) ", "ℂ.cos ((1 : ℝ) * Real.pi / 180) ∈ ℚ ", "isAlgebraic ℚ (Real.cos (Real.pi / 180)) "]}
{"docString": "Prove that $x^3 - 3x - 1$ is irreducible over $\\mathbb{Q}$.", "prompts": "[{\"theorem\":\n  \"∀ {A : Type u_1} {B : Type u_2} [inst : CommRing A] [inst_1 : Ring B] [inst_2 : Algebra A B] {x : B}\\n  [inst_3 : IsDomain A] [inst_4 : IsDomain B], IsIntegral A x → Irreducible (minpoly A x)\",\n  \"isProp\": true,\n  \"docString\": \"A minimal polynomial is irreducible. \"},\n {\"theorem\":\n  \"∀ {p : Polynomial ℤ},\\n  Polynomial.IsUnitTrinomial p →\\n    (∀ (z : ℂ), ¬(↑(Polynomial.aeval z) p = 0 ∧ ↑(Polynomial.aeval z) (Polynomial.mirror p) = 0)) → Irreducible p\",\n  \"isProp\": true,\n  \"docString\":\n  \"A unit trinomial is irreducible if it has no complex roots in common with its mirror \"},\n {\"theorem\": \"∀ {n : ℕ}, 0 < n → Irreducible (Polynomial.cyclotomic n ℤ)\",\n  \"isProp\": true,\n  \"docString\": \"`cyclotomic n ℤ` is irreducible. \"},\n {\"theorem\": \"∀ {n : ℕ}, 0 < n → Irreducible (Polynomial.cyclotomic n ℚ)\",\n  \"isProp\": true,\n  \"docString\": \"`cyclotomic n ℚ` is irreducible. \"}]\n", "prompt_cons": "/-- A minimal polynomial is irreducible. -/\ntheorem ∀ {A : Type u_1} {B : Type u_2} [inst : CommRing A] [inst_1 : Ring B] [inst_2 : Algebra A B] {x : B}\n  [inst_3 : IsDomain A] [inst_4 : IsDomain B], IsIntegral A x → Irreducible (minpoly A x) :=\n\n/-- A unit trinomial is irreducible if it has no complex roots in common with its mirror -/\ntheorem ∀ {p : Polynomial ℤ},\n  Polynomial.IsUnitTrinomial p →\n    (∀ (z : ℂ), ¬(↑(Polynomial.aeval z) p = 0 ∧ ↑(Polynomial.aeval z) (Polynomial.mirror p) = 0)) → Irreducible p :=\n\n/-- `cyclotomic n ℤ` is irreducible. -/\ntheorem ∀ {n : ℕ}, 0 < n → Irreducible (Polynomial.cyclotomic n ℤ) :=\n\n/-- `cyclotomic n ℚ` is irreducible. -/\ntheorem ∀ {n : ℕ}, 0 < n → Irreducible (Polynomial.cyclotomic n ℚ) :=\n\n/-- Prove that $x^3 - 3x - 1$ is irreducible over $\\mathbb{Q}$. -/\ntheorem", "choices": ["irreducible_x_pow_3_minus_3x_minus_1 : Irreducible (Polynomial.x ^ 3 - 3 * Polynomial.x - 1 : Polynomial ℚ) ", "x_pow_3_minus_3x_minus_1_irreducible : Irreducible (Polynomial.x ^ 3 - 3 * Polynomial.x - 1 : Polynomial ℚ) ", "x_cubed_minus_3x_minus_1_irreducible : Irreducible (Polynomial.x ^ 3 - 3 * Polynomial.x - 1 : Polynomial ℚ) ", "x_pow_3_minus_3x_minus_1_irreducible : Irreducible (Polynomial.x^3 - 3*Polynomial.x - 1 : Polynomial ℚ) ", "x_pow_3_minus_3x_minus_1_irreducible : Irreducible (Polynomial.map ℚ (Polynomial.x ^ 3 - 3 * Polynomial.x - 1)) ", "x_pow_3_minus_3x_minus_1_irreducible : Irreducible (Polynomial.map (AlgebraMap ℤ ℚ) (Polynomial.x ^ 3 - 3 * Polynomial.x - 1)) ", "x_pow_3_minus_3x_minus_1_irreducible : Irreducible (Polynomial.x ^ 3 - 3 * Polynomial.x - 1 : Polynomial ℚ) ", "x_cubed_minus_3x_minus_1_irreducible : Irreducible (Polynomial.x ^ 3 - 3 * Polynomial.x - 1 : Polynomial ℚ) ", "x_pow_3_minus_3x_minus_1_irreducible : Irreducible (Polynomial.x ^ 3 - 3 * Polynomial.x - 1 : Polynomial ℚ) ", "x_pow_3_minus_3x_minus_1_irreducible : Irreducible (Polynomial.map (algebraMap ℤ ℚ) (Polynomial.x ^ 3 - 3 * Polynomial.x - 1)) "]}
{"docString": "Let $H$ be the subgroup generated by two elements $a, b$ of a group $G$. Prove that if $a b=b a$, then $H$ is an abelian group.", "prompts": "[{\"theorem\":\n  \"∀ {G : Type u_1} [inst : Group G] {H : Subgroup G}, Subgroup.index H = 2 ↔ ∃ a, ∀ (b : G), Xor' (b * a ∈ H) (b ∈ H)\",\n  \"isProp\": true,\n  \"docString\":\n  \"A subgroup has index two if and only if there exists `a` such that for all `b`, exactly one\\nof `b * a` and `b` belong to `H`. \"},\n {\"theorem\":\n  \"∀ {G : Type u_1} [inst : LinearOrderedAddCommGroup G] [inst_1 : Archimedean G] {H : AddSubgroup G} {a : G},\\n  IsLeast {g | g ∈ H ∧ 0 < g} a → H = AddSubgroup.closure {a}\",\n  \"isProp\": true,\n  \"docString\":\n  \"Given a subgroup `H` of a decidable linearly ordered archimedean abelian group `G`, if there\\nexists a minimal element `a` of `H ∩ G_{>0}` then `H` is generated by `a`. \"},\n {\"theorem\":\n  \"∀ {G : Type u_1} [inst : AddGroup G] {H : AddSubgroup G},\\n  AddSubgroup.index H = 2 ↔ ∃ a, ∀ (b : G), Xor' (b + a ∈ H) (b ∈ H)\",\n  \"isProp\": true,\n  \"docString\":\n  \"An additive subgroup has index two if and only if there exists `a` such that\\nfor all `b`, exactly one of `b + a` and `b` belong to `H`.\"},\n {\"theorem\":\n  \"∀ {p : ℕ} {G : Type u_1} [inst : Group G] (H : Subgroup G) [inst_1 : Finite (Sylow p G)],\\n  Finite (Sylow p { x // x ∈ H })\",\n  \"isProp\": true,\n  \"docString\":\n  \"If `H` is a subgroup of `G`, then `Finite (Sylow p G)` implies `Finite (Sylow p H)`. \"}]\n", "prompt_cons": "/-- A subgroup has index two if and only if there exists `a` such that for all `b`, exactly one\nof `b * a` and `b` belong to `H`. -/\ntheorem ∀ {G : Type u_1} [inst : Group G] {H : Subgroup G}, Subgroup.index H = 2 ↔ ∃ a, ∀ (b : G), Xor' (b * a ∈ H) (b ∈ H) :=\n\n/-- Given a subgroup `H` of a decidable linearly ordered archimedean abelian group `G`, if there\nexists a minimal element `a` of `H ∩ G_{>0}` then `H` is generated by `a`. -/\ntheorem ∀ {G : Type u_1} [inst : LinearOrderedAddCommGroup G] [inst_1 : Archimedean G] {H : AddSubgroup G} {a : G},\n  IsLeast {g | g ∈ H ∧ 0 < g} a → H = AddSubgroup.closure {a} :=\n\n/-- An additive subgroup has index two if and only if there exists `a` such that\nfor all `b`, exactly one of `b + a` and `b` belong to `H`. -/\ntheorem ∀ {G : Type u_1} [inst : AddGroup G] {H : AddSubgroup G},\n  AddSubgroup.index H = 2 ↔ ∃ a, ∀ (b : G), Xor' (b + a ∈ H) (b ∈ H) :=\n\n/-- If `H` is a subgroup of `G`, then `Finite (Sylow p G)` implies `Finite (Sylow p H)`. -/\ntheorem ∀ {p : ℕ} {G : Type u_1} [inst : Group G] (H : Subgroup G) [inst_1 : Finite (Sylow p G)],\n  Finite (Sylow p { x // x ∈ H }) :=\n\n/-- Let $H$ be the subgroup generated by two elements $a, b$ of a group $G$. Prove that if $a b=b a$, then $H$ is an abelian group. -/\ntheorem", "choices": ["∀ {G : Type u_1} [inst : Group G] {a b : G} {H : Subgroup G}, H = Subgroup.closure {a, b} → a * b = b * a → ∀ x y ∈ H, x * y = y * x ", "/-- A subgroup has index two if and only if there exists `a` such that for all `b`, exactly one\nof `b * a` and `b` belong to `H`. -/\ntheorem index_two_iff_exists_eq_mul_or (G : Type u_1) [inst : Group G] {H : Subgroup G} : Subgroup.index H = 2 ↔ ∃ a, ∀ (b : G), Xor' (b * a ∈ H) (b ∈ H) ", "∀ {G : Type u_1} [inst : Group G] {a b : G}, a * b = b * a → IsAddGroupHom (λ x : G, x * a * x⁻¹ * b) ", "∀ {G : Type u_1} [inst : Group G] {a b : G} {H : Subgroup G},\n  H = Subgroup.closure {a, b} → a * b = b * a → ∀ (x y ∈ H), x * y = y * x ", "∀ {G : Type u_1} [inst : Group G] {a b : G}, a * b = b * a → IsAddCommGroup (Additive ↥(Subgroup.closure {a, b})) ", "∀ {G : Type u_1} [inst : Group G] {a b : G}, a * b = b * a → IsAddGroupHom (λ (x : G), x ∈ Subgroup.closure {a, b}) ", "∀ {G : Type u_1} [inst : Group G] {a b : G} {H : Subgroup G}, H = Subgroup.closure {a, b} → a * b = b * a → ∀ (x y : G), x ∈ H → y ∈ H → x * y = y * x ", "∀ {G : Type u_1} [inst : Group G] {a b : G}, a * b = b * a → ∀ (x y : {x : G | x ∈ Subgroup.closure {a, b}}), x * y = y * x ", "∀ {G : Type u_1} [inst : Group G] {a b : G}, a * b = b * a → IsAdditiveAbelian (Subgroup.closure ({a, b} : Set G)) ", "∀ {G : Type u_1} [inst : Group G] {a b : G}, a * b = b * a → IsAddGroupHom (λ (g : G), ⟦g⟧ ∈ AddSubgroup.closure ({a, b})) "]}
{"docString": "Prove that if a group contains exactly one element of order 2 , then that element is in the center of the group.", "prompts": "[{\"theorem\":\n  \"∀ {G : Type u_1} [inst : Group G], SMulCommClass G { x // x ∈ Subgroup.center G } G\",\n  \"isProp\": true,\n  \"docString\": \"The center of a group acts commutatively on that group. \"},\n {\"theorem\":\n  \"∀ {M : Type u_1} [inst : GroupWithZero M], Set.center Mˣ = Units.val ⁻¹' Set.center M\",\n  \"isProp\": true,\n  \"docString\":\n  \"In a group with zero, the center of the units is the preimage of the center. \"},\n {\"theorem\":\n  \"∀ {p : ℕ} {G : Type u_1} [inst : Group G] [inst_1 : Fintype G] [inst_2 : Fact (Nat.Prime p)],\\n  Fintype.card G = p ^ 2 → IsCyclic (G ⧸ Subgroup.center G)\",\n  \"isProp\": true,\n  \"docString\":\n  \"The quotient by the center of a group of cardinality `p ^ 2` is cyclic. \"},\n {\"theorem\":\n  \"∀ {α : Type u} [inst : Group α] [inst_1 : Fintype α] {p : ℕ} [hp : Fact (Nat.Prime p)], Fintype.card α = p → IsCyclic α\",\n  \"isProp\": true,\n  \"docString\": \"A finite group of prime order is cyclic. \"}]\n", "prompt_cons": "/-- The center of a group acts commutatively on that group. -/\ntheorem ∀ {G : Type u_1} [inst : Group G], SMulCommClass G { x // x ∈ Subgroup.center G } G :=\n\n/-- In a group with zero, the center of the units is the preimage of the center. -/\ntheorem ∀ {M : Type u_1} [inst : GroupWithZero M], Set.center Mˣ = Units.val ⁻¹' Set.center M :=\n\n/-- The quotient by the center of a group of cardinality `p ^ 2` is cyclic. -/\ntheorem ∀ {p : ℕ} {G : Type u_1} [inst : Group G] [inst_1 : Fintype G] [inst_2 : Fact (Nat.Prime p)],\n  Fintype.card G = p ^ 2 → IsCyclic (G ⧸ Subgroup.center G) :=\n\n/-- A finite group of prime order is cyclic. -/\ntheorem ∀ {α : Type u} [inst : Group α] [inst_1 : Fintype α] {p : ℕ} [hp : Fact (Nat.Prime p)], Fintype.card α = p → IsCyclic α :=\n\n/-- Prove that if a group contains exactly one element of order 2 , then that element is in the center of the group. -/\ntheorem", "choices": ["∀ {G : Type u_1} [inst : Group G] [inst_1 : Fintype G], (∃! x : G, orderOf x = 2) → ∀ x : G, orderOf x = 2 → x ∈ Subgroup.center G ", "∀ {G : Type u_1} [inst : Group G] [inst_1 : Fintype G], (∃! x : G, x ^ 2 = 1) → ∀ y : G, y ^ 2 = 1 → y ∈ Subgroup.center G ", "∀ {G : Type u_1} [inst : Group G] [inst_1 : Fintype G],\n  (∃! (x : G), orderOf x = 2) → ∀ (x : G), orderOf x = 2 → x ∈ Subgroup.center G ", "∀ {G : Type u_1} [inst : Group G] [inst_1 : Fintype G], (∃! a : G, order_of a = 2) → (∀ a : G, order_of a = 2 → a ∈ Subgroup.center G) ", "∀ {G : Type u_1} [inst : Group G] [inst_1 : Fintype G], (∃! x : G, order_of x = 2) → ∀ x : G, order_of x = 2 → x ∈ Subgroup.center G ", "∀ {G : Type u_1} [inst : Group G] [inst_1 : Fintype G], (∃! x : G, orderOf x = 2) → ∀ x : G, x ^ 2 = 1 → x ∈ Subgroup.center G ", "∀ {G : Type u_1} [inst : Group G] [inst_1 : Fintype G], (∃! x : G, orderOf x = 2) → ∀ x : G, orderOf x = 2 → x ∈ Subgroup.center G ", "∀ {G : Type u_1} [inst : Group G] [inst_1 : Fintype G], (∃! a : G, orderOf a = 2) → ∀ x : G, orderOf x = 2 → x ∈ Subgroup.center G ", "∀ {G : Type u_1} [inst : Group G] [inst_1 : Fintype G], (∃!x, x ∈ Subgroup.orderOf 2) → (∀x, x ∈ Subgroup.orderOf 2 → x ∈ Subgroup.center G) ", "∀ {G : Type u_1} [inst : Group G] [inst_1 : Fintype G], (∃! x : G, orderOf x = 2) → ∀ y : G, y^2 = 1 → y ∈ Subgroup.center G "]}
{"docString": "Prove that a group of even order contains an element of order $2 .$", "prompts": "[{\"theorem\":\n  \"∀ {F : Type u_1} [inst : Field F] [inst_1 : Fintype F], ringChar F = 2 ↔ Fintype.card F % 2 = 0\",\n  \"isProp\": true,\n  \"docString\":\n  \"The finite field `F` has even cardinality iff it has characteristic `2`. \"},\n {\"theorem\":\n  \"∀ {F : Type u_1} [inst : Field F] [inst_1 : Finite F], ringChar F = 2 → ∀ (a : F), IsSquare a\",\n  \"isProp\": true,\n  \"docString\":\n  \"In a finite field of characteristic `2`, all elements are squares. \"},\n {\"theorem\":\n  \"∀ (p' : ℕ), lucasLehmerResidue (p' + 2) = 0 → orderOf (LucasLehmer.ωUnit (p' + 2)) = 2 ^ (p' + 2)\",\n  \"isProp\": true,\n  \"docString\": \"The order of `ω` in the unit group is exactly `2^p`. \"},\n {\"theorem\":\n  \"∀ {𝕜 : Type u𝕜} {G : Type uG} {E : Type uE} {E' : Type uE'} {F : Type uF} [inst : NormedAddCommGroup E]\\n  [inst_1 : NormedAddCommGroup E'] [inst_2 : NormedAddCommGroup F] {f : G → E} {g : G → E'} {x : G}\\n  [inst_3 : NontriviallyNormedField 𝕜] [inst_4 : NormedSpace 𝕜 E] [inst_5 : NormedSpace 𝕜 E'] [inst_6 : NormedSpace 𝕜 F]\\n  (L : E →L[𝕜] E' →L[𝕜] F) [inst_7 : MeasurableSpace G] {μ : MeasureTheory.Measure G} [inst_8 : NormedSpace ℝ F]\\n  [inst_9 : AddCommGroup G] [inst_10 : MeasureTheory.Measure.IsAddLeftInvariant μ]\\n  [inst_11 : MeasureTheory.Measure.IsNegInvariant μ] [inst_12 : MeasurableNeg G] [inst_13 : MeasurableAdd G],\\n  (∀ᵐ (x : G) ∂μ, f (-x) = f x) → (∀ᵐ (x : G) ∂μ, g (-x) = g x) → convolution f g L (-x) = convolution f g L x\",\n  \"isProp\": true,\n  \"docString\": \"The convolution of two even functions is also even. \"}]\n", "prompt_cons": "/-- The finite field `F` has even cardinality iff it has characteristic `2`. -/\ntheorem ∀ {F : Type u_1} [inst : Field F] [inst_1 : Fintype F], ringChar F = 2 ↔ Fintype.card F % 2 = 0 :=\n\n/-- In a finite field of characteristic `2`, all elements are squares. -/\ntheorem ∀ {F : Type u_1} [inst : Field F] [inst_1 : Finite F], ringChar F = 2 → ∀ (a : F), IsSquare a :=\n\n/-- The order of `ω` in the unit group is exactly `2^p`. -/\ntheorem ∀ (p' : ℕ), lucasLehmerResidue (p' + 2) = 0 → orderOf (LucasLehmer.ωUnit (p' + 2)) = 2 ^ (p' + 2) :=\n\n/-- The convolution of two even functions is also even. -/\ntheorem ∀ {𝕜 : Type u𝕜} {G : Type uG} {E : Type uE} {E' : Type uE'} {F : Type uF} [inst : NormedAddCommGroup E]\n  [inst_1 : NormedAddCommGroup E'] [inst_2 : NormedAddCommGroup F] {f : G → E} {g : G → E'} {x : G}\n  [inst_3 : NontriviallyNormedField 𝕜] [inst_4 : NormedSpace 𝕜 E] [inst_5 : NormedSpace 𝕜 E'] [inst_6 : NormedSpace 𝕜 F]\n  (L : E →L[𝕜] E' →L[𝕜] F) [inst_7 : MeasurableSpace G] {μ : MeasureTheory.Measure G} [inst_8 : NormedSpace ℝ F]\n  [inst_9 : AddCommGroup G] [inst_10 : MeasureTheory.Measure.IsAddLeftInvariant μ]\n  [inst_11 : MeasureTheory.Measure.IsNegInvariant μ] [inst_12 : MeasurableNeg G] [inst_13 : MeasurableAdd G],\n  (∀ᵐ (x : G) ∂μ, f (-x) = f x) → (∀ᵐ (x : G) ∂μ, g (-x) = g x) → convolution f g L (-x) = convolution f g L x :=\n\n/-- Prove that a group of even order contains an element of order $2 .$ -/\ntheorem", "choices": ["∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G], Fintype.card G % 2 = 0 → ∃ (x : G), orderOf x = 2 ", "∀ {G : Type uG} [inst : Group G] [inst_1 : Fintype G], Fintype.card G % 2 = 0 → ∃ (x : G), orderOf x = 2 ", "∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G], Fintype.card G % 2 = 0 → ∃ (x : G), orderOf x = 2 ", "∀ {G : Type u_1} [inst : Group G] [inst_1 : Fintype G], Fintype.card G % 2 = 0 → ∃ (g : G), orderOf g = 2 ", "∀ {G : Type uG} [inst : Group G] [inst_1 : Fintype G], Fintype.card G % 2 = 0 → ∃ (a : G), orderOf a = 2 ", "∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G], Fintype.card G % 2 = 0 → ∃ (x : G), orderOf x = 2 ", "∀ {G : Type u} [_inst_1 : Group G] [_inst_2 : Fintype G], Fintype.card G % 2 = 0 → ∃ (x : G), orderOf x = 2 ", "∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G], Fintype.card G % 2 = 0 → ∃ (a : G), orderOf a = 2 ", "∀ {G : Type u_1} [inst : Group G] [inst_1 : Fintype G], Fintype.card G % 2 = 0 → ∃ (g : G), orderOf g = 2 ", "∀ {G : Type u_1} [inst : Group G] [inst_1 : Fintype G], Fintype.card G % 2 = 0 → ∃ (a : G), orderOf a = 2 "]}
{"docString": "Let $V$ be a vector space which is spanned by a countably infinite set. Prove that every linearly independent subset of $V$ is finite or countably infinite.", "prompts": "[{\"theorem\":\n  \"∀ {K : Type u} {V : Type v} [inst : DivisionRing K] [inst_1 : AddCommGroup V] [inst_2 : Module K V] {ι : Type u_1}\\n  [inst_3 : Fintype ι] {b : ι → V}, LinearIndependent K b ↔ Fintype.card ι = Set.finrank K (Set.range b)\",\n  \"isProp\": true,\n  \"docString\":\n  \"A finite family of vectors is linearly independent if and only if\\nits cardinality equals the dimension of its span. \"},\n {\"theorem\":\n  \"∀ {R : Type u_2} {M : Type u_1} [inst : Semiring R] [inst_1 : AddCommMonoid M] [inst_2 : Module R M] (s : Set M),\\n  LinearIndependent R Subtype.val → ∀ (t : Finset ↑s), LinearIndependent R Subtype.val\",\n  \"isProp\": true,\n  \"docString\":\n  \"Every finite subset of a linearly independent set is linearly independent. \"},\n {\"theorem\":\n  \"∀ {K : Type u} {V : Type v} [inst : DivisionRing K] [inst_1 : AddCommGroup V] [inst_2 : Module K V] {ι : Type w}\\n  [inst_3 : Finite ι], Basis ι K V → FiniteDimensional K V\",\n  \"isProp\": true,\n  \"docString\":\n  \"If a vector space has a finite basis, then it is finite-dimensional. \"},\n {\"theorem\":\n  \"∀ (k : Type u_2) {V : Type u_3} {P : Type u_1} [inst : DivisionRing k] [inst_1 : AddCommGroup V] [inst_2 : Module k V]\\n  [inst_3 : AddTorsor V P] {s : Set P}, Set.Finite s → FiniteDimensional k { x // x ∈ vectorSpan k s }\",\n  \"isProp\": true,\n  \"docString\": \"The `vectorSpan` of a finite set is finite-dimensional. \"}]\n", "prompt_cons": "/-- A finite family of vectors is linearly independent if and only if\nits cardinality equals the dimension of its span. -/\ntheorem ∀ {K : Type u} {V : Type v} [inst : DivisionRing K] [inst_1 : AddCommGroup V] [inst_2 : Module K V] {ι : Type u_1}\n  [inst_3 : Fintype ι] {b : ι → V}, LinearIndependent K b ↔ Fintype.card ι = Set.finrank K (Set.range b) :=\n\n/-- Every finite subset of a linearly independent set is linearly independent. -/\ntheorem ∀ {R : Type u_2} {M : Type u_1} [inst : Semiring R] [inst_1 : AddCommMonoid M] [inst_2 : Module R M] (s : Set M),\n  LinearIndependent R Subtype.val → ∀ (t : Finset ↑s), LinearIndependent R Subtype.val :=\n\n/-- If a vector space has a finite basis, then it is finite-dimensional. -/\ntheorem ∀ {K : Type u} {V : Type v} [inst : DivisionRing K] [inst_1 : AddCommGroup V] [inst_2 : Module K V] {ι : Type w}\n  [inst_3 : Finite ι], Basis ι K V → FiniteDimensional K V :=\n\n/-- The `vectorSpan` of a finite set is finite-dimensional. -/\ntheorem ∀ (k : Type u_2) {V : Type u_3} {P : Type u_1} [inst : DivisionRing k] [inst_1 : AddCommGroup V] [inst_2 : Module k V]\n  [inst_3 : AddTorsor V P] {s : Set P}, Set.Finite s → FiniteDimensional k { x // x ∈ vectorSpan k s } :=\n\n/-- Let $V$ be a vector space which is spanned by a countably infinite set. Prove that every linearly independent subset of $V$ is finite or countably infinite. -/\ntheorem", "choices": ["∀ {K : Type u} {V : Type v} [inst : DivisionRing K] [inst_1 : AddCommGroup V] [inst_2 : Module K V] {ι : Type u_1}\n  [inst_3 : Fintype ι] {b : ι → V}, LinearIndependent K b → ∀ (s : Set V), LinearIndependent K Subtype.val → Set.Countable s ", "∀ {K : Type u} {V : Type v} [inst : DivisionRing K] [inst_1 : AddCommGroup V] [inst_2 : Module K V] {ι : Type u_1}\n  [inst_3 : Fintype ι] {b : ι → V}, LinearIndependent K b → (Exists (w : ℕ), Fintype.card ι = w) ∨ Set.Countable (Set.range b) ", "∀ {K : Type u} {V : Type v} [inst : DivisionRing K] [inst_1 : AddCommGroup V] [inst_2 : Module K V] {ι : Type u_1}\n  [inst_3 : countable ι] {b : ι → V}, Submodule.span K (Set.range b) = ⊤ → ∀ (s : Set V), LinearIndependent K Subtype.val →\n  Set.Finite s ∨ countable (↥s) ", "∀ {K : Type u} {V : Type v} [inst : DivisionRing K] [inst_1 : AddCommGroup V] [inst_2 : Module K V] {ι : Type u_1}\n  [inst_3 : Infinite ι] {b : ι → V}, Submodule.span K (Set.range b) = ⊤ →\n  ∀ {s : Set V}, LinearIndependent K Subtype.val → Infinite (↥s) → Infinite ι ", "∀ {R : Type u_2} {M : Type u_1} [inst : DivisionRing R] [inst_1 : AddCommGroup M] [inst_2 : Module R M] {ι : Type u_3}\n  (s : ι → M), Set.Countable (Set.range s) → Submodule.span R (Set.range s) = ⊤ → ∀ t : Set M,\n  LinearIndependent R Subtype.val → Set.Countable t ∨ Set.Finite t ", "∀ {K : Type u} {V : Type v} [inst : DivisionRing K] [inst_1 : AddCommGroup V] [inst_2 : Module K V]\n  {s t : Set V}, Set.Countable s → Submodule.span K s = ⊤ → LinearIndependent K Subtype.val →\n  Set.Countable (t : Set V) ", "∀ {K : Type u} {V : Type v} [inst : DivisionRing K] [inst_1 : AddCommGroup V] [inst_2 : Module K V] {s : Set V},\n  Set.Countable s → Submodule.span K s = ⊤ → ∀ (t : Set V), LinearIndependent K Subtype.val → Set.Countable t ", "∀ {R : Type u_2} {M : Type u_1} [inst : DivisionRing R] [inst_1 : AddCommGroup M] [inst_2 : Module R M] {ι : Type u_3}\n  [inst_3 : Infinite ι], (∃ l : ι → M, Submodule.span R (Set.range l) = ⊤) →\n  ∀ (s : Set M), LinearIndependent R Subtype.val → Set.Finite s ∨ Set.Countable s ", "∀ {K : Type u} {V : Type v} [inst : DivisionRing K] [inst_1 : AddCommGroup V] [inst_2 : Module K V] {ι : Type u_1}\n  [inst_3 : Countable ι] {b : ι → V} (hs : Set.span K (Set.range b) = ⊤),\n  ∀ (s : Set V), LinearIndependent K Subtype.val → Set.Finite s ∨ Set.Countable s ", "∀ {K : Type u} {V : Type v} [inst : DivisionRing K] [inst_1 : AddCommGroup V] [inst_2 : Module K V] {ι : Type u_1}\n  [inst_3 : Infinite ι] {b : ι → V}, LinearIndependent K b → ∀ (s : Set V), Set.Countable s → Set.Countable (Set.filter (λ x, x ∈ s) (Set.range b)) "]}
{"docString": "Let $Z$ be the center of a group $G$. Prove that if $G / Z$ is a cyclic group, then $G$ is abelian and hence $G=Z$.", "prompts": "[{\"theorem\":\n  \"∀ {G : Type u_1} [inst : Group G], SMulCommClass G { x // x ∈ Subgroup.center G } G\",\n  \"isProp\": true,\n  \"docString\": \"The center of a group acts commutatively on that group. \"},\n {\"theorem\":\n  \"∀ {p : ℕ} {G : Type u_1} [inst : Group G] [inst_1 : Fintype G] [inst_2 : Fact (Nat.Prime p)],\\n  Fintype.card G = p ^ 2 → IsCyclic (G ⧸ Subgroup.center G)\",\n  \"isProp\": true,\n  \"docString\":\n  \"The quotient by the center of a group of cardinality `p ^ 2` is cyclic. \"},\n {\"theorem\":\n  \"∀ {G : Type u_1} [inst : Group G], Group.IsNilpotent (G ⧸ Subgroup.center G) → Group.IsNilpotent G\",\n  \"isProp\": true,\n  \"docString\": \"If the quotient by `center G` is nilpotent, then so is G. \"},\n {\"theorem\": \"∀ (H : AddSubgroup ℤ), ∃ a, H = AddSubgroup.closure {a}\",\n  \"isProp\": true,\n  \"docString\": \"Every subgroup of `ℤ` is cyclic. \"}]\n", "prompt_cons": "/-- The center of a group acts commutatively on that group. -/\ntheorem ∀ {G : Type u_1} [inst : Group G], SMulCommClass G { x // x ∈ Subgroup.center G } G :=\n\n/-- The quotient by the center of a group of cardinality `p ^ 2` is cyclic. -/\ntheorem ∀ {p : ℕ} {G : Type u_1} [inst : Group G] [inst_1 : Fintype G] [inst_2 : Fact (Nat.Prime p)],\n  Fintype.card G = p ^ 2 → IsCyclic (G ⧸ Subgroup.center G) :=\n\n/-- If the quotient by `center G` is nilpotent, then so is G. -/\ntheorem ∀ {G : Type u_1} [inst : Group G], Group.IsNilpotent (G ⧸ Subgroup.center G) → Group.IsNilpotent G :=\n\n/-- Every subgroup of `ℤ` is cyclic. -/\ntheorem ∀ (H : AddSubgroup ℤ), ∃ a, H = AddSubgroup.closure {a} :=\n\n/-- Let $Z$ be the center of a group $G$. Prove that if $G / Z$ is a cyclic group, then $G$ is abelian and hence $G=Z$. -/\ntheorem", "choices": ["∀ {G : Type u_1} [inst : Group G] [inst_1 : Fintype G],\n  IsCyclic (G ⧸ Subgroup.center G) → G ≅ Subgroup.center G ", "∀ {G : Type u_1} [inst : Group G], IsCyclic (G ⧸ Subgroup.center G) → IsCommutative G ", "∀ {G : Type u_1} [inst : Group G] [inst_1 : Fintype G],\n  IsCyclic (G ⧸ Subgroup.center G) → IsAddAbelian G ∧ G = Subgroup.center G ", "∀ {G : Type u_1} [inst : Group G] [inst_1 : Fintype G],\n  IsCyclic (G ⧸ Subgroup.center G) → ∀ x y : G, x * y = y * x ", "∀ {G : Type u_1} [inst : Group G] [inst_1 : Fintype G], IsCyclic (G ⧸ Subgroup.center G) → IsAbelian G ", "∀ {G : Type u_1} [inst : Group G] [inst_1 : Fintype G],\n  IsCyclic (G ⧸ Subgroup.center G) → G ≅ Subgroup.center G ", "∀ {G : Type u_1} [inst : Group G] [inst_1 : Fintype G],\n  IsCyclic (G ⧸ Subgroup.center G) → G ≅ Subgroup.center G ", "∀ {G : Type u_1} [inst : Group G] [inst_1 : Fintype G],\n  IsCyclic (G ⧸ Subgroup.center G) → G ≃+ Subgroup.center G ", "∀ {G : Type u_1} [inst : Group G] [inst_1 : Fintype G],\n  IsCyclic (G ⧸ Subgroup.center G) → G ≃+ Subgroup.center G ", "∀ {G : Type u_1} [inst : Group G], IsCyclic (G ⧸ Subgroup.center G) → IsAbelian G "]}
{"docString": "Prove that no group of order $p^2 q$, where $p$ and $q$ are prime, is simple.", "prompts": "[{\"theorem\":\n  \"∀ {G : Type u_2} [inst : Group G] {G₂ : Type u_1} [inst_1 : Group G₂] (p₁ p₂ : ℕ) [hp₁ : Fact (Nat.Prime p₁)]\\n  [hp₂ : Fact (Nat.Prime p₂)],\\n  p₁ ≠ p₂ →\\n    ∀ (H₁ : Subgroup G) (H₂ : Subgroup G₂) [inst_2 : Fintype { x // x ∈ H₁ }] [inst_3 : Fintype { x // x ∈ H₂ }],\\n      IsPGroup p₁ { x // x ∈ H₁ } →\\n        IsPGroup p₂ { x // x ∈ H₂ } → Nat.coprime (Fintype.card { x // x ∈ H₁ }) (Fintype.card { x // x ∈ H₂ })\",\n  \"isProp\": true,\n  \"docString\": \"finite p-groups with different p have coprime orders \"},\n {\"theorem\":\n  \"∀ {α : Type u} [inst : Group α] [inst_1 : Fintype α] {p : ℕ} [hp : Fact (Nat.Prime p)],\\n  Fintype.card α = p → IsSimpleGroup α\",\n  \"isProp\": true,\n  \"docString\": \"A finite group of prime order is simple. \"},\n {\"theorem\":\n  \"∀ {α : Type u} [inst : AddGroup α] [inst_1 : Fintype α] {p : ℕ} [hp : Fact (Nat.Prime p)],\\n  Fintype.card α = p → IsSimpleAddGroup α\",\n  \"isProp\": true,\n  \"docString\": \"A finite group of prime order is simple.\"},\n {\"theorem\":\n  \"∀ {G : Type u_1} [inst : Group G] [inst_1 : Fintype G] (p : ℕ) [hp : Fact (Nat.Prime p)],\\n  p ∣ Fintype.card G → ∃ x, orderOf x = p\",\n  \"isProp\": true,\n  \"docString\":\n  \"For every prime `p` dividing the order of a finite group `G` there exists an element of order\\n`p` in `G`. This is known as Cauchy's theorem. \"}]\n", "prompt_cons": "/-- finite p-groups with different p have coprime orders -/\ntheorem ∀ {G : Type u_2} [inst : Group G] {G₂ : Type u_1} [inst_1 : Group G₂] (p₁ p₂ : ℕ) [hp₁ : Fact (Nat.Prime p₁)]\n  [hp₂ : Fact (Nat.Prime p₂)],\n  p₁ ≠ p₂ →\n    ∀ (H₁ : Subgroup G) (H₂ : Subgroup G₂) [inst_2 : Fintype { x // x ∈ H₁ }] [inst_3 : Fintype { x // x ∈ H₂ }],\n      IsPGroup p₁ { x // x ∈ H₁ } →\n        IsPGroup p₂ { x // x ∈ H₂ } → Nat.coprime (Fintype.card { x // x ∈ H₁ }) (Fintype.card { x // x ∈ H₂ }) :=\n\n/-- A finite group of prime order is simple. -/\ntheorem ∀ {α : Type u} [inst : Group α] [inst_1 : Fintype α] {p : ℕ} [hp : Fact (Nat.Prime p)],\n  Fintype.card α = p → IsSimpleGroup α :=\n\n/-- A finite group of prime order is simple. -/\ntheorem ∀ {α : Type u} [inst : AddGroup α] [inst_1 : Fintype α] {p : ℕ} [hp : Fact (Nat.Prime p)],\n  Fintype.card α = p → IsSimpleAddGroup α :=\n\n/-- For every prime `p` dividing the order of a finite group `G` there exists an element of order\n`p` in `G`. This is known as Cauchy's theorem. -/\ntheorem ∀ {G : Type u_1} [inst : Group G] [inst_1 : Fintype G] (p : ℕ) [hp : Fact (Nat.Prime p)],\n  p ∣ Fintype.card G → ∃ x, orderOf x = p :=\n\n/-- Prove that no group of order $p^2 q$, where $p$ and $q$ are prime, is simple. -/\ntheorem", "choices": ["∀ {G : Type u_1} [inst : Group G] [inst_1 : Fintype G] {p q : ℕ} [hp : Fact (Nat.Prime p)] [hq : Fact (Nat.Prime q)],\n  Fintype.card G = p^2 * q → ¬ IsSimpleGroup G ", "∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G] {p q : ℕ} [hp : Fact (Nat.Prime p)] [hq : Fact (Nat.Prime q)],\n  Fintype.card G = p^2 * q → ¬ IsSimpleGroup G ", "∀ {G : Type u_1} [inst : Group G] [inst_1 : Fintype G] (p q : ℕ) [hp : Fact (Nat.Prime p)] [hq : Fact (Nat.Prime q)],\n  Fintype.card G = p^2 * q → ¬IsSimpleGroup G ", "∀ {G : Type u_1} [inst : Group G] [inst_1 : Fintype G] (p q : ℕ) [hp : Fact (Nat.Prime p)] [hq : Fact (Nat.Prime q)],\n  Fintype.card G = p^2 * q → ¬ IsSimpleGroup G ", "∀ {G : Type u_1} [inst : Group G] [inst_1 : Fintype G] (p q : ℕ) [hp : Fact (Nat.Prime p)] [hq : Fact (Nat.Prime q)],\n  Fintype.card G = p^2 * q → ¬ IsSimpleGroup G ", "forall {G : Type u} [inst : Group G] [inst_1 : Fintype G] {p q : ℕ} [hp : Fact (Nat.Prime p)] [hq : Fact (Nat.Prime q)],\n  Fintype.card G = p^2 * q → ¬ IsSimpleGroup G ", "∀ {G : Type u_2} [inst : Group G] [inst_1 : Fintype G] (p q : ℕ) [hp : Fact (Nat.Prime p)] [hq : Fact (Nat.Prime q)],\n  Fintype.card G = p^2 * q → ¬ IsSimpleGroup G ", "∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G] {p q : ℕ} [hp : Fact (Nat.Prime p)] [hq : Fact (Nat.Prime q)],\n  Fintype.card G = p^2 * q → ¬ IsSimpleGroup G ", "∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G] {p q : ℕ} [hp : Fact (Nat.Prime p)] [hq : Fact (Nat.Prime q)],\n  Fintype.card G = p^2 * q → ¬IsSimpleGroup G ", "∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G] (p q : ℕ) [hp : Fact (Nat.Prime p)] [hq : Fact (Nat.Prime q)],\n  Fintype.card G = p ^ 2 * q → ¬ IsSimpleGroup G "]}
{"docString": "Prove that two elements $a, b$ of a group generate the same subgroup as $b a b^2, b a b^3$.", "prompts": "[{\"theorem\":\n  \"∀ {G : Type u_1} [inst : Group G] (K : Subgroup G) {l : List G}, (∀ (x : G), x ∈ l → x ∈ K) → List.prod l ∈ K\",\n  \"isProp\": true,\n  \"docString\":\n  \"Product of a list of elements in a subgroup is in the subgroup. \"},\n {\"theorem\":\n  \"∀ {G : Type u_1} [inst : Group G] (H₁ H₂ : Subgroup G),\\n  Subgroup.Normal H₁ → Subgroup.Normal H₂ → Disjoint H₁ H₂ → ∀ (x y : G), x ∈ H₁ → y ∈ H₂ → Commute x y\",\n  \"isProp\": true,\n  \"docString\": \"Elements of disjoint, normal subgroups commute. \"},\n {\"theorem\":\n  \"∀ {α : Type u_1} {r : α → α → Prop} [self : IsDirected α r] (a b : α), ∃ c, r a c ∧ r b c\",\n  \"isProp\": true,\n  \"docString\":\n  \"For every pair of elements `a` and `b` there is a `c` such that `r a c` and `r b c` \"},\n {\"theorem\":\n  \"∀ {K : Type u_1} {g : GeneralizedContinuedFraction K} {n : ℕ} [inst : DivisionRing K]\\n  {gp : GeneralizedContinuedFraction.Pair K} {ppredB predB : K},\\n  Stream'.Seq.get? g.s (n + 1) = some gp →\\n    GeneralizedContinuedFraction.denominators g n = ppredB →\\n      GeneralizedContinuedFraction.denominators g (n + 1) = predB →\\n        GeneralizedContinuedFraction.denominators g (n + 2) = gp.b * predB + gp.a * ppredB\",\n  \"isProp\": true,\n  \"docString\": \"Shows that `Bₙ = bₙ * Bₙ₋₁ + aₙ * Bₙ₋₂`. \"}]\n", "prompt_cons": "/-- Product of a list of elements in a subgroup is in the subgroup. -/\ntheorem ∀ {G : Type u_1} [inst : Group G] (K : Subgroup G) {l : List G}, (∀ (x : G), x ∈ l → x ∈ K) → List.prod l ∈ K :=\n\n/-- Elements of disjoint, normal subgroups commute. -/\ntheorem ∀ {G : Type u_1} [inst : Group G] (H₁ H₂ : Subgroup G),\n  Subgroup.Normal H₁ → Subgroup.Normal H₂ → Disjoint H₁ H₂ → ∀ (x y : G), x ∈ H₁ → y ∈ H₂ → Commute x y :=\n\n/-- For every pair of elements `a` and `b` there is a `c` such that `r a c` and `r b c` -/\ntheorem ∀ {α : Type u_1} {r : α → α → Prop} [self : IsDirected α r] (a b : α), ∃ c, r a c ∧ r b c :=\n\n/-- Shows that `Bₙ = bₙ * Bₙ₋₁ + aₙ * Bₙ₋₂`. -/\ntheorem ∀ {K : Type u_1} {g : GeneralizedContinuedFraction K} {n : ℕ} [inst : DivisionRing K]\n  {gp : GeneralizedContinuedFraction.Pair K} {ppredB predB : K},\n  Stream'.Seq.get? g.s (n + 1) = some gp →\n    GeneralizedContinuedFraction.denominators g n = ppredB →\n      GeneralizedContinuedFraction.denominators g (n + 1) = predB →\n        GeneralizedContinuedFraction.denominators g (n + 2) = gp.b * predB + gp.a * ppredB :=\n\n/-- Prove that two elements $a, b$ of a group generate the same subgroup as $b a b^2, b a b^3$. -/\ntheorem", "choices": ["∀ {G : Type u_1} [inst : Group G] (a b : G), Subgroup.mk (SetOf (λ x, ∃ n m, a ^ n * b ^ m * a ^ (-n) * b ^ (-m) = x))\n  = Subgroup.mk (SetOf (λ x, ∃ p q r, b * a * b ^ 2 * p * (b * a * b ^ 3) ^ q * r = x)) ", "∀ {G : Type u_1} [inst : Group G] (a b : G), Subgroup.closure ({a, b}) = Subgroup.closure ({b * a * b^2, b * a * b^3}) ", "∀ {G : Type u_1} [inst : Group G] (a b : G),\n  Subgroup.closure ({a, b} : Set G) = Subgroup.closure ({b * a * (b^2), b * a * (b^3)} : Set G) ", "forall {G : Type u_1} [inst : Group G] (a b : G),\n  Subgroup.closure ({a, b} : Set G) = Subgroup.closure ({(b * a * b^2), (b * a * b^3)} : Set G) ", "∀ {G : Type u_1} [inst : Group G] (a b : G),\n  Subgroup.closure {a, b} = Subgroup.closure {b * a * (b ^ 2), b * a * (b ^ 3)} ", "forall {G : Type u_1} [inst : Group G] (a b : G), Subgroup.closure ({a, b}) = Subgroup.closure ({b * a * (b ^ 2), b * a * (b ^ 3)}) ", "∀ {G : Type u_1} [inst : Group G] (a b : G), Subgroup.closure ({a, b} : Set G) = Subgroup.closure ({b * a * b^2, b * a * b^3} : Set G) ", "∀ {G : Type u_1} [inst : Group G] (a b : G), Subgroup.closure {a, b} = Subgroup.closure {b * a * b^2, b * a * b^3} ", "∀ {G : Type u_1} [inst : Group G] (a b : G), Subgroup.closure ({a, b} : Set G) = Subgroup.closure ({b * a * (b ^ 2), b * a * (b ^ 3)} : Set G) ", "∀ {G : Type u_1} [inst : Group G] (a b : G),\n  Subgroup.closure {a, b} = Subgroup.closure {b * a * (b ^ 2), b * a * (b ^ 3)} "]}
{"docString": "Prove that in the ring $\\mathbb{Z}[x],(2) \\cap(x)=(2 x)$.", "prompts": "[{\"theorem\":\n  \"∀ {R : Type u_1} [inst : NonAssocSemiring R] [inst_1 : Nontrivial R], ringChar R ≠ 2 → 2 ≠ 0\",\n  \"isProp\": true,\n  \"docString\":\n  \"We have `2 ≠ 0` in a nontrivial ring whose characteristic is not `2`. \"},\n {\"theorem\":\n  \"∀ {A : Type u_1} (B : Type u_2) [inst : Ring A] [inst_1 : Ring B] [inst_2 : NoZeroDivisors B],\\n  A ≃+* B → NoZeroDivisors A\",\n  \"isProp\": true,\n  \"docString\":\n  \"If two rings are isomorphic, and the second doesn't have zero divisors,\\nthen so does the first. \"},\n {\"theorem\":\n  \"∀ {α : Type u} {β : Type v} [inst : Ring α] [inst_1 : Ring β] {f : α → β},\\n  IsRingHom f → ∀ {γ : Type u_1} [inst_2 : Ring γ] {g : β → γ}, IsRingHom g → IsRingHom (g ∘ f)\",\n  \"isProp\": true,\n  \"docString\":\n  \"The composition of two ring homomorphisms is a ring homomorphism. \"},\n {\"theorem\":\n  \"∀ {K : Type u} {L : Type v} [inst : Field K] [inst_1 : Field L] {f g : K →+* L} {s : Set K},\\n  Set.EqOn (↑f) (↑g) s → Set.EqOn ↑f ↑g ↑(Subfield.closure s)\",\n  \"isProp\": true,\n  \"docString\":\n  \"If two ring homomorphisms are equal on a set, then they are equal on its subfield closure. \"}]\n", "prompt_cons": "/-- We have `2 ≠ 0` in a nontrivial ring whose characteristic is not `2`. -/\ntheorem ∀ {R : Type u_1} [inst : NonAssocSemiring R] [inst_1 : Nontrivial R], ringChar R ≠ 2 → 2 ≠ 0 :=\n\n/-- If two rings are isomorphic, and the second doesn't have zero divisors,\nthen so does the first. -/\ntheorem ∀ {A : Type u_1} (B : Type u_2) [inst : Ring A] [inst_1 : Ring B] [inst_2 : NoZeroDivisors B],\n  A ≃+* B → NoZeroDivisors A :=\n\n/-- The composition of two ring homomorphisms is a ring homomorphism. -/\ntheorem ∀ {α : Type u} {β : Type v} [inst : Ring α] [inst_1 : Ring β] {f : α → β},\n  IsRingHom f → ∀ {γ : Type u_1} [inst_2 : Ring γ] {g : β → γ}, IsRingHom g → IsRingHom (g ∘ f) :=\n\n/-- If two ring homomorphisms are equal on a set, then they are equal on its subfield closure. -/\ntheorem ∀ {K : Type u} {L : Type v} [inst : Field K] [inst_1 : Field L] {f g : K →+* L} {s : Set K},\n  Set.EqOn (↑f) (↑g) s → Set.EqOn ↑f ↑g ↑(Subfield.closure s) :=\n\n/-- Prove that in the ring $\\mathbb{Z}[x],(2) \\cap(x)=(2 x)$. -/\ntheorem", "choices": ["∀ {R : Type u_1} [inst : CommRing R] [inst_1 : Nontrivial R], ringChar R ≠ 2 → 2 ≠ (0:R) ", "∀ {R : Type u_1} [inst : NonAssocSemiring R] [inst_1 : Nontrivial R], ringChar R ≠ 2 → 2 ≠ 0 ", "∀ {R₁ : Type u_1} [inst : CommRing R₁] (R₂ : Type u_2) [inst_1 : CommRing R₂] [inst_2 : Ideal.IsPrime (R₂ : Ideal R₂)] [inst_3 : Submodule.IsPrincipal (R₂ : Ideal R₂)],\n  R₁[x] ≃+* R₂ → Ideal.span {(2 : R₁[x])} ⊓ Ideal.span {(x : R₁[x])} = Ideal.span {(2 * x : R₁[x])} ", "∀ {α : Type u} [inst : CommRing α] {x : α}, Ideal.span ({2} : Set α) ∩ Ideal.span ({x} : Set α) =\n  Ideal.span ({2 * x} : Set α) ", "∀ {R : Type u_1} [inst : CommRing R], Ideal.span ({2} : Set R) ⊓ Ideal.span ({Polynomial.x} : Set (Polynomial R)) = Ideal.span ({2 * Polynomial.x} : Set (Polynomial R)) ", "∀ {R : Type u_1} [inst : CommRing R], Ideal.span ({2} : Set (R[X])) ⊓ Ideal.span ({X} : Set (R[X])) =\n  Ideal.span ({2 * X} : Set (R[X])) ", "forall {R : Type u_1} [inst : CommRing R] [inst_1 : Nontrivial R], \n  (Ideal.span ({2} : Set R) ⊓ Ideal.span ({Polynomial.x} : Set (Polynomial R))) = Ideal.span ({2 * Polynomial.x} : Set (Polynomial R)) ", "∀ (R : Type u_1) [inst : CommRing R], PrimeIdeal.span (singleton (2 : R)) ⊓ PrimeIdeal.span (singleton (C R X)) = PrimeIdeal.span (singleton (2 * C R X)) ", "∀ {R : Type u_1} [inst : NonAssocSemiring R] [inst_1 : Nontrivial R], ringChar R ≠ 2 → 2 ≠ (0 : R) ", "forall {R : Type u_1} [inst : CommRing R] [inst_1 : Nontrivial R], (ideal.span {2} ⊓ ideal.span {polynomial.X} = ideal.span {2 * polynomial.X}) "]}
{"docString": "Let $I, J$ be ideals in a ring $R$. Prove that the residue of any element of $I \\cap J$ in $R / I J$ is nilpotent.", "prompts": "[{\"theorem\":\n  \"∀ {R : Type u_2} {S : Type u_1} [inst : CommSemiring R] [inst_1 : CommRing S] [inst : Algebra R S] (I : Ideal S),\\n  IsNilpotent I →\\n    ∀ {P : ⦃S : Type u_1⦄ → [inst : CommRing S] → Ideal S → Prop},\\n      (∀ ⦃S : Type u_1⦄ [inst : CommRing S] (I : Ideal S), I ^ 2 = ⊥ → P I) →\\n        (∀ ⦃S : Type u_1⦄ [inst : CommRing S] (I J : Ideal S),\\n            I ≤ J → P I → P (Ideal.map (Ideal.Quotient.mk I) J) → P J) →\\n          P I\",\n  \"isProp\": true,\n  \"docString\":\n  \"Let `P` be a property on ideals. If `P` holds for square-zero ideals, and if\\n`P I → P (J ⧸ I) → P J`, then `P` holds for all nilpotent ideals. \"},\n {\"theorem\":\n  \"∀ {R : Type u} [inst : CommRing R] {I : Ideal R}, Ideal.jacobson I = I ↔ Ideal.jacobson ⊥ = ⊥\",\n  \"isProp\": true,\n  \"docString\":\n  \"An ideal `I` of `R` is equal to its Jacobson radical if and only if\\nthe Jacobson radical of the quotient ring `R/I` is the zero ideal \"},\n {\"theorem\":\n  \"∀ {R : Type u} [inst : CommRing R] {I J : Ideal R},\\n  (∀ (P : Ideal R) (x : Ideal.IsMaximal P),\\n      Ideal.map (algebraMap R (Localization.AtPrime P)) I = Ideal.map (algebraMap R (Localization.AtPrime P)) J) →\\n    I = J\",\n  \"isProp\": true,\n  \"docString\":\n  \"Let `I J : Ideal R`. If the localization of `I` at each maximal ideal `P` is equal to\\nthe localization of `J` at `P`, then `I = J`. \"},\n {\"theorem\":\n  \"∀ {R : Type u_1} [inst : CommRing R] (I : Ideal (Polynomial R))\\n  (x : { x // x ∈ RingHom.range (RingHom.comp (Ideal.Quotient.mk I) Polynomial.C) }),\\n  ↑Polynomial.C x ∈\\n      Ideal.map (Polynomial.mapRingHom (RingHom.rangeRestrict (RingHom.comp (Ideal.Quotient.mk I) Polynomial.C))) I →\\n    x = 0\",\n  \"isProp\": true,\n  \"docString\":\n  \"Given any ring `R` and an ideal `I` of `R[X]`, we get a map `R → R[x] → R[x]/I`.\\nIf we let `R` be the image of `R` in `R[x]/I` then we also have a map `R[x] → R'[x]`.\\nIn particular we can map `I` across this map, to get `I'` and a new map `R' → R'[x] → R'[x]/I`.\\nThis theorem shows `I'` will not contain any non-zero constant polynomials. \"}]\n", "prompt_cons": "/-- Let `P` be a property on ideals. If `P` holds for square-zero ideals, and if\n`P I → P (J ⧸ I) → P J`, then `P` holds for all nilpotent ideals. -/\ntheorem ∀ {R : Type u_2} {S : Type u_1} [inst : CommSemiring R] [inst_1 : CommRing S] [inst : Algebra R S] (I : Ideal S),\n  IsNilpotent I →\n    ∀ {P : ⦃S : Type u_1⦄ → [inst : CommRing S] → Ideal S → Prop},\n      (∀ ⦃S : Type u_1⦄ [inst : CommRing S] (I : Ideal S), I ^ 2 = ⊥ → P I) →\n        (∀ ⦃S : Type u_1⦄ [inst : CommRing S] (I J : Ideal S),\n            I ≤ J → P I → P (Ideal.map (Ideal.Quotient.mk I) J) → P J) →\n          P I :=\n\n/-- An ideal `I` of `R` is equal to its Jacobson radical if and only if\nthe Jacobson radical of the quotient ring `R/I` is the zero ideal -/\ntheorem ∀ {R : Type u} [inst : CommRing R] {I : Ideal R}, Ideal.jacobson I = I ↔ Ideal.jacobson ⊥ = ⊥ :=\n\n/-- Let `I J : Ideal R`. If the localization of `I` at each maximal ideal `P` is equal to\nthe localization of `J` at `P`, then `I = J`. -/\ntheorem ∀ {R : Type u} [inst : CommRing R] {I J : Ideal R},\n  (∀ (P : Ideal R) (x : Ideal.IsMaximal P),\n      Ideal.map (algebraMap R (Localization.AtPrime P)) I = Ideal.map (algebraMap R (Localization.AtPrime P)) J) →\n    I = J :=\n\n/-- Given any ring `R` and an ideal `I` of `R[X]`, we get a map `R → R[x] → R[x]/I`.\nIf we let `R` be the image of `R` in `R[x]/I` then we also have a map `R[x] → R'[x]`.\nIn particular we can map `I` across this map, to get `I'` and a new map `R' → R'[x] → R'[x]/I`.\nThis theorem shows `I'` will not contain any non-zero constant polynomials. -/\ntheorem ∀ {R : Type u_1} [inst : CommRing R] (I : Ideal (Polynomial R))\n  (x : { x // x ∈ RingHom.range (RingHom.comp (Ideal.Quotient.mk I) Polynomial.C) }),\n  ↑Polynomial.C x ∈\n      Ideal.map (Polynomial.mapRingHom (RingHom.rangeRestrict (RingHom.comp (Ideal.Quotient.mk I) Polynomial.C))) I →\n    x = 0 :=\n\n/-- Let $I, J$ be ideals in a ring $R$. Prove that the residue of any element of $I \\cap J$ in $R / I J$ is nilpotent. -/\ntheorem", "choices": ["∀ {R : Type u} [inst : CommRing R] {I J : Ideal R} (x : R),\n  x ∈ I ∩ J →\n    let y : R ⧸ I * J ", "∀ {R : Type u} [inst : CommRing R] {I J : Ideal R} (x : R),\n  x ∈ I ∩ J →\n    ∀ (n : ℕ), ∃ (m : ℕ), (Ideal.Quotient.mk (I * J) ((I * J) ^ m)) (x ^ n) = 0 ", "∀ {R : Type u} [inst : CommRing R] {I J : Ideal R} (x : R) (hx : x ∈ I ⊓ J),\n  ∃ n : ℕ, (coe (x, hx) ^ n : R ⧸ I * J) = 0 ", "∀ {R : Type u} [inst : CommRing R] {I J : Ideal R} (x : R),\n  x ∈ I ∩ J →\n    ∃ (n : ℕ), coeFn (Ideal.Quotient.mk (I * J)) x ^ n = 0 ", "∀ {R : Type u} [inst : CommRing R] {I J : Ideal R} (x : R),\n  x ∈ I ∩ J →\n    (∃ (n : ℕ), (Ideal.Quotient.mk (I * J)) x ^ n = 0) ", "∀ {R : Type u} [inst : CommRing R] {I J : Ideal R} (x : R) (hx : x ∈ I ∩ J),\n  IsNilpotent (Ideal.Quotient.mk (I * J) x) ", "∀ {R : Type u} [inst : CommRing R] {I J : Ideal R} (x : R),\n  x ∈ I ∩ J →\n    ∃ (n : ℕ), (coeFn (Ideal.Quotient.mk (I * J)) x) ^ n = 0 ", "∀ {R : Type u} [inst : CommRing R] {I J : Ideal R} (x : R),\n  x ∈ I ∩ J →\n    IsNilpotent (coeFn (Ideal.Quotient.mk (I * J)) x) ", "forall {R : Type u} [inst : CommRing R] {I J : Ideal R} (x : R),\n  x ∈ I ∩ J → is_nilpotent (Ideal.Quotient.mk (I * J) x) ", "∀ {R : Type u} [inst : CommRing R] {I J : Ideal R} {x : R},\n  x ∈ I ∩ J → IsNilpotent (Ideal.Quotient.mk (I * J) x) "]}
{"docString": "Let $R$ be a ring, with $M$ an ideal of $R$. Suppose that every element of $R$ which is not in $M$ is a unit of $R$. Prove that $M$ is a maximal ideal and that moreover it is the only maximal ideal of $R$.", "prompts": "[{\"theorem\":\n  \"∀ (α : Type u) [inst : Semiring α] [inst_1 : Nontrivial α], ∃ M, Ideal.IsMaximal M\",\n  \"isProp\": true,\n  \"docString\": \"Krull's theorem: a nontrivial ring has a maximal ideal. \"},\n {\"theorem\":\n  \"∀ {R : Type u} [inst : CommRing R] (I : Ideal R), Ideal.IsMaximal I ↔ IsField (R ⧸ I)\",\n  \"isProp\": true,\n  \"docString\":\n  \"The quotient of a ring by an ideal is a field iff the ideal is maximal. \"},\n {\"theorem\":\n  \"∀ {R : Type u_1} [inst : CommRing R] [inst_1 : IsDomain R] [inst_2 : IsDedekindDomain R] {I : Ideal R},\\n  I ≠ 0 → Set.Finite {v | v.asIdeal ∣ I}\",\n  \"isProp\": true,\n  \"docString\":\n  \"Only finitely many maximal ideals of `R` divide a given nonzero ideal. \"},\n {\"theorem\":\n  \"∀ {R : Type u_1} [inst : CommRing R],\\n  Ideal.IsJacobson R ↔\\n    ∀ {I : Ideal R}, Ideal.IsPrime I → ∃ M, (∀ (J : Ideal R), J ∈ M → Ideal.IsMaximal J ∨ J = ⊤) ∧ I = sInf M\",\n  \"isProp\": true,\n  \"docString\":\n  \"A ring `R` is Jacobson if and only if for every prime ideal `I`,\\n`I` can be written as the infimum of some collection of maximal ideals.\\nAllowing ⊤ in the set `M` of maximal ideals is equivalent, but makes some proofs cleaner. \"}]\n", "prompt_cons": "/-- Krull's theorem: a nontrivial ring has a maximal ideal. -/\ntheorem ∀ (α : Type u) [inst : Semiring α] [inst_1 : Nontrivial α], ∃ M, Ideal.IsMaximal M :=\n\n/-- The quotient of a ring by an ideal is a field iff the ideal is maximal. -/\ntheorem ∀ {R : Type u} [inst : CommRing R] (I : Ideal R), Ideal.IsMaximal I ↔ IsField (R ⧸ I) :=\n\n/-- Only finitely many maximal ideals of `R` divide a given nonzero ideal. -/\ntheorem ∀ {R : Type u_1} [inst : CommRing R] [inst_1 : IsDomain R] [inst_2 : IsDedekindDomain R] {I : Ideal R},\n  I ≠ 0 → Set.Finite {v | v.asIdeal ∣ I} :=\n\n/-- A ring `R` is Jacobson if and only if for every prime ideal `I`,\n`I` can be written as the infimum of some collection of maximal ideals.\nAllowing ⊤ in the set `M` of maximal ideals is equivalent, but makes some proofs cleaner. -/\ntheorem ∀ {R : Type u_1} [inst : CommRing R],\n  Ideal.IsJacobson R ↔\n    ∀ {I : Ideal R}, Ideal.IsPrime I → ∃ M, (∀ (J : Ideal R), J ∈ M → Ideal.IsMaximal J ∨ J = ⊤) ∧ I = sInf M :=\n\n/-- Let $R$ be a ring, with $M$ an ideal of $R$. Suppose that every element of $R$ which is not in $M$ is a unit of $R$. Prove that $M$ is a maximal ideal and that moreover it is the only maximal ideal of $R$. -/\ntheorem", "choices": ["∀ (R : Type u) [inst : Ring R] (M : Ideal R),\n  (∀ r, r ∉ M → IsUnit r) → (∀ I, Ideal.IsMaximal I → I = M) ∧ Ideal.IsMaximal M ", "∀ {R : Type u} [inst : CommRing R] (M : Ideal R),\n  (∀ (x : R), x ∉ M → IsUnit x) → (∀ J : Ideal R, J ≠ M → J = ⊤) ∧ Ideal.IsMaximal M ", "∀ {R : Type u} [inst : CommRing R] (M : Ideal R),\n  (∀ x ∈ R, x ∉ M → IsUnit x) → (∀ I : Ideal R, I ≠ ⊤ → I ≤ M) ∧ Ideal.IsMaximal M ", "forall {R : Type u} [inst : CommRing R] (M : Ideal R),\n  (∀ (x : R), x ∉ M → IsUnit x) → Ideal.IsMaximal M ∧ ∀ (N : Ideal R), Ideal.IsMaximal N → N = M ", "∀ (R : Type u) [inst : CommRing R] (M : Ideal R),\n  (∀ (x : R), x ∉ M → IsUnit x) → (∀ J : Ideal R, J ∈ {M, ⊤}) ∧ Ideal.IsMaximal M ", "∀ {R : Type u} [inst : CommRing R] (M : Ideal R),\n  (∀ (x : R), x ∉ M → IsUnit x) → (∀ (N : Ideal R), Ideal.IsMaximal N ↔ N = M) ", "forall {R : Type u} [inst : CommRing R] (M : Ideal R),\n  (∀ (x : R), x ∉ M → IsUnit x) → Ideal.IsMaximal M ∧ ∀ (N : Ideal R), Ideal.IsMaximal N → N = M ", "∀ {R : Type u} [inst : CommRing R] (M : Ideal R),\n  (∀ (x : R), x ∉ M → IsUnit x) → Ideal.IsMaximal M ∧ ∀ (N : Ideal R), Ideal.IsMaximal N → N = M ", "∀ {R : Type u} [inst : CommRing R] (M : Ideal R),\n  (∀ x, x ∉ M → IsUnit x) → (∀ I : Ideal R, I ≠ ⊤ → I ≤ M) ∧ Ideal.IsMaximal M ", "∀ {R : Type u} [inst : CommRing R] (M : Ideal R),\n  (∀ x : R, x ∉ M → IsUnit x) → (∀ (I : Ideal R), Ideal.IsMaximal I ↔ I = M) "]}
{"docString": "Prove that $x^3 + 6x + 12$ is irreducible in $\\mathbb{Q}$.", "prompts": "[{\"theorem\":\n  \"∀ {A : Type u_1} {B : Type u_2} [inst : CommRing A] [inst_1 : Ring B] [inst_2 : Algebra A B] {x : B}\\n  [inst_3 : IsDomain A] [inst_4 : IsDomain B], IsIntegral A x → Irreducible (minpoly A x)\",\n  \"isProp\": true,\n  \"docString\": \"A minimal polynomial is irreducible. \"},\n {\"theorem\": \"∀ {n : ℕ}, 0 < n → Irreducible (Polynomial.cyclotomic n ℚ)\",\n  \"isProp\": true,\n  \"docString\": \"`cyclotomic n ℚ` is irreducible. \"},\n {\"theorem\": \"∀ {n : ℕ}, 0 < n → Irreducible (Polynomial.cyclotomic n ℤ)\",\n  \"isProp\": true,\n  \"docString\": \"`cyclotomic n ℤ` is irreducible. \"},\n {\"theorem\":\n  \"∀ {p : Polynomial ℤ},\\n  Polynomial.IsUnitTrinomial p →\\n    (∀ (z : ℂ), ¬(↑(Polynomial.aeval z) p = 0 ∧ ↑(Polynomial.aeval z) (Polynomial.mirror p) = 0)) → Irreducible p\",\n  \"isProp\": true,\n  \"docString\":\n  \"A unit trinomial is irreducible if it has no complex roots in common with its mirror \"}]\n", "prompt_cons": "/-- A minimal polynomial is irreducible. -/\ntheorem ∀ {A : Type u_1} {B : Type u_2} [inst : CommRing A] [inst_1 : Ring B] [inst_2 : Algebra A B] {x : B}\n  [inst_3 : IsDomain A] [inst_4 : IsDomain B], IsIntegral A x → Irreducible (minpoly A x) :=\n\n/-- `cyclotomic n ℚ` is irreducible. -/\ntheorem ∀ {n : ℕ}, 0 < n → Irreducible (Polynomial.cyclotomic n ℚ) :=\n\n/-- `cyclotomic n ℤ` is irreducible. -/\ntheorem ∀ {n : ℕ}, 0 < n → Irreducible (Polynomial.cyclotomic n ℤ) :=\n\n/-- A unit trinomial is irreducible if it has no complex roots in common with its mirror -/\ntheorem ∀ {p : Polynomial ℤ},\n  Polynomial.IsUnitTrinomial p →\n    (∀ (z : ℂ), ¬(↑(Polynomial.aeval z) p = 0 ∧ ↑(Polynomial.aeval z) (Polynomial.mirror p) = 0)) → Irreducible p :=\n\n/-- Prove that $x^3 + 6x + 12$ is irreducible in $\\mathbb{Q}$. -/\ntheorem", "choices": ["x_pow_3_plus_6x_plus_12_irreducible : Irreducible (Polynomial.x ^ 3 + 6 * Polynomial.x + 12 : Polynomial ℚ) ", "irreducible_x_pow_3_plus_6x_plus_12 : Irreducible (x^3 + 6 * x + 12 : Polynomial ℚ) ", "irreducible_x_pow_3_plus_6x_plus_12 : Irreducible (Polynomial.x ^ 3 + 6 * Polynomial.x + 12 : Polynomial ℚ) ", "irreducible_x_pow_3_plus_6x_plus_12 : Irreducible (Polynomial.x ^ 3 + 6 * Polynomial.x + 12 : Polynomial ℚ) ", "irreducible_x_pow_3_plus_6x_plus_12 : Irreducible (Polynomial.x ^ 3 + 6 * Polynomial.x + 12 : Polynomial ℚ) ", "x_cubed_plus_6x_plus_12_irreducible : Irreducible (Polynomial.map (algebraMap ℤ ℚ) (Polynomial.x ^ 3 + 6 * Polynomial.x + 12)) ", "x_pow_3_plus_6x_plus_12_irreducible : Irreducible (Polynomial.x ^ 3 + 6 * Polynomial.x + 12 : Polynomial ℚ) ", "irreducible_x_pow_3_plus_6x_plus_12 : Irreducible (Polynomial.map (algebraMap ℤ ℚ) (Polynomial.x ^ 3 + 6 * Polynomial.x + 12)) ", "irreducible_x_pow_3_plus_6x_plus_12 : Irreducible (Polynomial.x ^ 3 + 6 * Polynomial.x + 12 : Polynomial ℚ) ", "x_pow_3_plus_6x_plus_12_irreducible : Irreducible (Polynomial.x ^ 3 + 6 * Polynomial.x + 12 : Polynomial ℚ) "]}
{"docString": "Prove that $x^2+1$ is irreducible in $\\mathbb{F}_7$", "prompts": "[{\"theorem\":\n  \"∀ {A : Type u_1} {B : Type u_2} [inst : CommRing A] [inst_1 : Ring B] [inst_2 : Algebra A B] {x : B}\\n  [inst_3 : IsDomain A] [inst_4 : IsDomain B], IsIntegral A x → Irreducible (minpoly A x)\",\n  \"isProp\": true,\n  \"docString\": \"A minimal polynomial is irreducible. \"},\n {\"theorem\":\n  \"∀ {p : Polynomial ℤ}, Polynomial.IsUnitTrinomial p → IsCoprime p (Polynomial.mirror p) → Irreducible p\",\n  \"isProp\": true,\n  \"docString\":\n  \"A unit trinomial is irreducible if it is coprime with its mirror \"},\n {\"theorem\": \"∀ {n : ℕ}, 0 < n → Irreducible (Polynomial.cyclotomic n ℤ)\",\n  \"isProp\": true,\n  \"docString\": \"`cyclotomic n ℤ` is irreducible. \"},\n {\"theorem\":\n  \"∀ {p : Polynomial ℤ},\\n  Polynomial.IsUnitTrinomial p →\\n    (∀ (z : ℂ), ¬(↑(Polynomial.aeval z) p = 0 ∧ ↑(Polynomial.aeval z) (Polynomial.mirror p) = 0)) → Irreducible p\",\n  \"isProp\": true,\n  \"docString\":\n  \"A unit trinomial is irreducible if it has no complex roots in common with its mirror \"}]\n", "prompt_cons": "/-- A minimal polynomial is irreducible. -/\ntheorem ∀ {A : Type u_1} {B : Type u_2} [inst : CommRing A] [inst_1 : Ring B] [inst_2 : Algebra A B] {x : B}\n  [inst_3 : IsDomain A] [inst_4 : IsDomain B], IsIntegral A x → Irreducible (minpoly A x) :=\n\n/-- A unit trinomial is irreducible if it is coprime with its mirror -/\ntheorem ∀ {p : Polynomial ℤ}, Polynomial.IsUnitTrinomial p → IsCoprime p (Polynomial.mirror p) → Irreducible p :=\n\n/-- `cyclotomic n ℤ` is irreducible. -/\ntheorem ∀ {n : ℕ}, 0 < n → Irreducible (Polynomial.cyclotomic n ℤ) :=\n\n/-- A unit trinomial is irreducible if it has no complex roots in common with its mirror -/\ntheorem ∀ {p : Polynomial ℤ},\n  Polynomial.IsUnitTrinomial p →\n    (∀ (z : ℂ), ¬(↑(Polynomial.aeval z) p = 0 ∧ ↑(Polynomial.aeval z) (Polynomial.mirror p) = 0)) → Irreducible p :=\n\n/-- Prove that $x^2+1$ is irreducible in $\\mathbb{F}_7$ -/\ntheorem", "choices": ["x_squared_plus_one_irreducible : Irreducible (Polynomial.x ^ 2 + 1 : Polynomial (Zmod 7)) ", "Irreducible_x_pow2_plus_1_in_F7 : Irreducible (Polynomial.x ^ 2 + 1 : Polynomial (Zmod 7)) ", "x_sq_add_one_irreducible_F7 : Irreducible (Polynomial.x ^ 2 + 1 : Polynomial (Zmod 7)) ", "x_squared_plus_one_irreducible : Irreducible (Polynomial.x ^ 2 + 1 : Polynomial (Zmod 7)) ", "x2_plus_1_irreducible_in_F7 : Irreducible (Polynomial.x ^ 2 + 1 : Polynomial (Zmod 7)) ", "irreducible_x_pow_plus_one_in_F7 : Irreducible (Polynomial.x ^ 2 + 1 : Polynomial (Zmod 7)) ", "x2_plus_1_irreducible_F7 : Irreducible (Polynomial.x ^ 2 + 1 : Polynomial (Zmod 7)) ", "irreducible_x_sq_plus_one : Irreducible (Polynomial.x^2 + 1 : Polynomial (Zmod 7)) ", "x_square_plus_one_irreducible : Irreducible (Polynomial.x ^ 2 + 1 : Polynomial (Zmod 7)) ", "x_squared_plus_one_irreducible_F7 :\n  Irreducible (Polynomial.x ^ 2 + 1 : Polynomial (Zmod 7)) "]}
{"docString": "Let $p$ be a prime integer. Prove that the polynomial $x^n-p$ is irreducible in $\\mathbb{Q}[x]$.", "prompts": "[{\"theorem\":\n  \"∀ {p : ℕ},\\n  Nat.Prime p →\\n    ∀ {R : Type u_1} [inst : CommRing R] [inst_1 : IsDomain R] {n m : ℕ},\\n      m ≤ n → Irreducible (Polynomial.cyclotomic (p ^ n) R) → Irreducible (Polynomial.cyclotomic (p ^ m) R)\",\n  \"isProp\": true,\n  \"docString\":\n  \"If the `p ^ n`th cyclotomic polynomial is irreducible, so is the `p ^ m`th, for `m ≤ n`. \"},\n {\"theorem\":\n  \"∀ {A : Type u_1} {B : Type u_2} [inst : CommRing A] [inst_1 : Ring B] [inst_2 : Algebra A B] {x : B}\\n  [inst_3 : IsDomain A] [inst_4 : IsDomain B], IsIntegral A x → Irreducible (minpoly A x)\",\n  \"isProp\": true,\n  \"docString\": \"A minimal polynomial is irreducible. \"},\n {\"theorem\":\n  \"∀ {p : ℕ}, Nat.Prime p → ∀ (n : ℕ), Nat.totient (p ^ (n + 1)) = p ^ n * (p - 1)\",\n  \"isProp\": true,\n  \"docString\":\n  \"When `p` is prime, then the totient of `p ^ (n + 1)` is `p ^ n * (p - 1)` \"},\n {\"theorem\":\n  \"∀ {p : ℕ}, Nat.Prime p → ∀ {n : ℕ}, 0 < n → Nat.totient (p ^ n) = p ^ (n - 1) * (p - 1)\",\n  \"isProp\": true,\n  \"docString\":\n  \"When `p` is prime, then the totient of `p ^ n` is `p ^ (n - 1) * (p - 1)` \"}]\n", "prompt_cons": "/-- If the `p ^ n`th cyclotomic polynomial is irreducible, so is the `p ^ m`th, for `m ≤ n`. -/\ntheorem ∀ {p : ℕ},\n  Nat.Prime p →\n    ∀ {R : Type u_1} [inst : CommRing R] [inst_1 : IsDomain R] {n m : ℕ},\n      m ≤ n → Irreducible (Polynomial.cyclotomic (p ^ n) R) → Irreducible (Polynomial.cyclotomic (p ^ m) R) :=\n\n/-- A minimal polynomial is irreducible. -/\ntheorem ∀ {A : Type u_1} {B : Type u_2} [inst : CommRing A] [inst_1 : Ring B] [inst_2 : Algebra A B] {x : B}\n  [inst_3 : IsDomain A] [inst_4 : IsDomain B], IsIntegral A x → Irreducible (minpoly A x) :=\n\n/-- When `p` is prime, then the totient of `p ^ (n + 1)` is `p ^ n * (p - 1)` -/\ntheorem ∀ {p : ℕ}, Nat.Prime p → ∀ (n : ℕ), Nat.totient (p ^ (n + 1)) = p ^ n * (p - 1) :=\n\n/-- When `p` is prime, then the totient of `p ^ n` is `p ^ (n - 1) * (p - 1)` -/\ntheorem ∀ {p : ℕ}, Nat.Prime p → ∀ {n : ℕ}, 0 < n → Nat.totient (p ^ n) = p ^ (n - 1) * (p - 1) :=\n\n/-- Let $p$ be a prime integer. Prove that the polynomial $x^n-p$ is irreducible in $\\mathbb{Q}[x]$. -/\ntheorem", "choices": ["∀ {p : ℕ},\n  Nat.Prime p →\n    ∀ {R : Type u_1} [inst : CommRing R] [inst_1 : IsDomain R] {n : ℕ},\n      Irreducible (Polynomial.x ^ n - Polynomial.C (Rational.of_int p)) ", "∀ {p : ℕ},\n  Nat.Prime p →\n    ∀ {R : Type u_1} [inst : CommRing R] [inst_1 : IsDomain R] {n : ℕ},\n      Irreducible (Polynomial.x ^ n - Polynomial.C (coe p)) ", "∀ {p : ℕ} (hp : Nat.Prime p) {n : ℕ} (hn : 0 < n),\n  Irreducible (Polynomial.x ^ n - Polynomial.C (coe p) : Polynomial ℚ) ", "∀ {p : ℕ},\n  Nat.Prime p →\n    ∀ {R : Type u_1} [inst : CommRing R] [inst_1 : IsDomain R] {n : ℕ},\n      Irreducible (Polynomial.x ^ n - Polynomial.C (Rat.of_nat p)) ", "∀ {p : ℕ},\n  Nat.Prime p →\n    ∀ {R : Type u_1} [inst : CommRing R] [inst_1 : IsDomain R] {n : ℕ},\n      Irreducible (Polynomial.x ^ n - Polynomial.C (algebra_map ℕ R p)) ", "∀ {p : ℕ} {R : Type u_1} [inst : CommRing R] [inst_1 : IsDomain R] [inst_2 : CharZero R],\n  Nat.Prime p → Irreducible (Polynomial.x ^ p - Polynomial.C (coe p)) ", "∀ {p : ℕ},\n  Nat.Prime p →\n    ∀ {R : Type u_1} [inst : CommRing R] [inst_1 : IsDomain R] {n : ℕ},\n      Irreducible (Polynomial.x ^ n - Polynomial.C (coe p)) ", "∀ {p : ℕ},\n  Nat.Prime p →\n    ∀ {R : Type u_1} [inst : CommRing R] [inst_1 : FractionRing R] {n : ℕ},\n      Irreducible (Polynomial.x ^ n - coeFn Polynomial.C (coe p)) ", "∀ {p : ℕ} (hp : Nat.Prime p) {n : ℕ} (hn : 0 < n),\n  Irreducible (Polynomial.x ^ n - Polynomial.C (coe p) : Polynomial ℚ) ", "∀ {p : ℕ},\n  Nat.Prime p →\n    ∀ {R : Type u_1} [inst : CommRing R] [inst_1 : IsDomain R] {n : ℕ},\n      Irreducible (Polynomial.x ^ n - Polynomial.C (coe p)) "]}
{"docString": "Prove that if a prime integer $p$ has the form $2^r+1$, then it actually has the form $2^{2^k}+1$.", "prompts": "[{\"theorem\":\n  \"∀ {p k : ℕ}, Nat.Prime p → Nat.factorization (p ^ k) = Finsupp.single p k\",\n  \"isProp\": true,\n  \"docString\":\n  \"For prime `p` the only prime factor of `p^k` is `p` with multiplicity `k` \"},\n {\"theorem\":\n  \"∀ {p k : ℕ}, k ≠ 0 → Nat.Prime p → List.toFinset (Nat.factors (p ^ k)) = {p}\",\n  \"isProp\": true,\n  \"docString\":\n  \"The only prime divisor of positive prime power `p^k` is `p` itself \"},\n {\"theorem\": \"∀ {p : ℕ} [inst : Fact (Nat.Prime p)], p % 2 = 1 ↔ p ≠ 2\",\n  \"isProp\": true,\n  \"docString\": \"A prime `p` satisfies `p % 2 = 1` if and only if `p ≠ 2`. \"},\n {\"theorem\":\n  \"∀ {x y : ℤ} {n : ℕ},\\n  2 ∣ x - y →\\n    ¬2 ∣ x →\\n      Even n → multiplicity 2 (x ^ n - y ^ n) + 1 = multiplicity 2 (x + y) + multiplicity 2 (x - y) + multiplicity 2 ↑n\",\n  \"isProp\": true,\n  \"docString\": \"**Lifting the exponent lemma** for `p = 2` \"}]\n", "prompt_cons": "/-- For prime `p` the only prime factor of `p^k` is `p` with multiplicity `k` -/\ntheorem ∀ {p k : ℕ}, Nat.Prime p → Nat.factorization (p ^ k) = Finsupp.single p k :=\n\n/-- The only prime divisor of positive prime power `p^k` is `p` itself -/\ntheorem ∀ {p k : ℕ}, k ≠ 0 → Nat.Prime p → List.toFinset (Nat.factors (p ^ k)) = {p} :=\n\n/-- A prime `p` satisfies `p % 2 = 1` if and only if `p ≠ 2`. -/\ntheorem ∀ {p : ℕ} [inst : Fact (Nat.Prime p)], p % 2 = 1 ↔ p ≠ 2 :=\n\n/-- **Lifting the exponent lemma** for `p = 2` -/\ntheorem ∀ {x y : ℤ} {n : ℕ},\n  2 ∣ x - y →\n    ¬2 ∣ x →\n      Even n → multiplicity 2 (x ^ n - y ^ n) + 1 = multiplicity 2 (x + y) + multiplicity 2 (x - y) + multiplicity 2 ↑n :=\n\n/-- Prove that if a prime integer $p$ has the form $2^r+1$, then it actually has the form $2^{2^k}+1$. -/\ntheorem", "choices": ["∀ {p r k : ℕ}, Nat.Prime p → p = 2^r + 1 → (∃ k, p = 2^(2^k) + 1) ", "∀ {p r k : ℕ}, Nat.Prime p → p = 2^r + 1 → (∃ k, r = 2^k) ", "∀ {p r k : ℕ} [inst : Fact (Nat.Prime p)], \n  p = 2^r + 1 → (∃ k, p = 2^(2^k) + 1) ", "∀ {p r k : ℕ}, Nat.Prime p → p = 2 ^ r + 1 → (∃ k, p = 2 ^ (2 ^ k) + 1) ", "∀ {p : ℕ} [inst : Fact (Nat.Prime p)], p = 2 ^ (2 ^ k) + 1 ↔ p = 2 ^ r + 1 ∧ ∃ k : ℕ, r = 2 ^ k ", "∀ {p r k : ℕ}, Nat.Prime p → p = 2^r + 1 → (∃ k, p = 2^(2^k) + 1) ", "∀ {p r k : ℕ}, Nat.Prime p → p = 2 ^ r + 1 → (∃ k, r = 2 ^ k) ", "∀ {p k : ℕ}, Nat.Prime p → p = 2 ^ (2 ^ k) + 1 → ∃ r : ℕ, p = 2 ^ r + 1 ", "∀ {p k : ℕ}, Nat.Prime p → p = 2^(2^k) + 1 → ∃ r : ℕ, p = 2^r + 1 ", "∀ {p k r : ℕ} [inst : Fact (Nat.Prime p)], p = 2^r + 1 → ∃ k, p = 2^(2^k) + 1 "]}
{"docString": "Prove that the addition of residue classes $\\mathbb{Z}/n\\mathbb{Z}$ is associative.", "prompts": "[{\"theorem\":\n  \"∀ {M : Type u_1} [inst : Add M] (c : AddCon M) {w x y z : M}, ↑c w x → ↑c y z → ↑c (w + y) (x + z)\",\n  \"isProp\": true,\n  \"docString\": \"Additive congruence relations preserve addition.\"},\n {\"theorem\":\n  \"∀ {M : Type u_2} {N : Type u_3} {P : Type u_4} {Q : Type u_1} [inst : Zero M] [inst_1 : Zero N] [inst_2 : Zero P]\\n  [inst_3 : Zero Q] (f : ZeroHom M N) (g : ZeroHom N P) (h : ZeroHom P Q),\\n  ZeroHom.comp (ZeroHom.comp h g) f = ZeroHom.comp h (ZeroHom.comp g f)\",\n  \"isProp\": true,\n  \"docString\": \"Composition of additive monoid homomorphisms is associative.\"},\n {\"theorem\":\n  \"∀ {M : Type u_1} [inst : Add M] {c : AddCon M} (x y : M), ↑(x + y) = ↑x + ↑y\",\n  \"isProp\": true,\n  \"docString\":\n  \"The coercion to the quotient of an additive congruence relation\\ncommutes with addition (by definition).\"},\n {\"theorem\":\n  \"∀ {α : Type u_1} {β : Type u_2} {x : NonAssocSemiring α} {x_1 : NonAssocSemiring β} (f : α →+* β) (a b : α),\\n  ↑f (a + b) = ↑f a + ↑f b\",\n  \"isProp\": true,\n  \"docString\": \"Ring homomorphisms preserve addition. \"}]\n", "prompt_cons": "/-- Additive congruence relations preserve addition. -/\ntheorem ∀ {M : Type u_1} [inst : Add M] (c : AddCon M) {w x y z : M}, ↑c w x → ↑c y z → ↑c (w + y) (x + z) :=\n\n/-- Composition of additive monoid homomorphisms is associative. -/\ntheorem ∀ {M : Type u_2} {N : Type u_3} {P : Type u_4} {Q : Type u_1} [inst : Zero M] [inst_1 : Zero N] [inst_2 : Zero P]\n  [inst_3 : Zero Q] (f : ZeroHom M N) (g : ZeroHom N P) (h : ZeroHom P Q),\n  ZeroHom.comp (ZeroHom.comp h g) f = ZeroHom.comp h (ZeroHom.comp g f) :=\n\n/-- The coercion to the quotient of an additive congruence relation\ncommutes with addition (by definition). -/\ntheorem ∀ {M : Type u_1} [inst : Add M] {c : AddCon M} (x y : M), ↑(x + y) = ↑x + ↑y :=\n\n/-- Ring homomorphisms preserve addition. -/\ntheorem ∀ {α : Type u_1} {β : Type u_2} {x : NonAssocSemiring α} {x_1 : NonAssocSemiring β} (f : α →+* β) (a b : α),\n  ↑f (a + b) = ↑f a + ↑f b :=\n\n/-- Prove that the addition of residue classes $\\mathbb{Z}/n\\mathbb{Z}$ is associative. -/\ntheorem", "choices": ["∀ {n : ℕ} (a b c : Zmod n), (a + b) + c = a + (b + c) ", "∀ {n : ℕ} (a b c : Zmod n), (a + b) + c = a + (b + c) ", "forall {n : ℕ} (a b c : Zmod n), (a + b) + c = a + (b + c) ", "forall {n : ℕ} (a b c : Zmod n), a + b + c = a + (b + c) ", "∀ {n : ℕ} (a b c : Zmod n), (a + b) + c = a + (b + c) ", "∀ {n : ℕ} (a b c : Zmod n), (a + b) + c = a + (b + c) ", "∀ {n : ℕ} (a b c : Zmod n), (a + b) + c = a + (b + c) ", "∀ {n : ℕ} (a b c : Zmod n), (a + b) + c = a + (b + c) ", "∀ {n : ℕ} (a b c : Zmod n), (a + b) + c = a + (b + c) ", "∀ {n : ℕ} (a b c : Zmod n), (a + b) + c = a + (b + c) "]}
{"docString": "Prove that for all $n>1$ that $\\mathbb{Z}/n\\mathbb{Z}$ is not a group under multiplication of residue classes.", "prompts": "[{\"theorem\":\n  \"∀ {R : Type u_1} [inst : NonAssocSemiring R] [inst_1 : Nontrivial R], ringChar R ≠ 2 → 2 ≠ 0\",\n  \"isProp\": true,\n  \"docString\":\n  \"We have `2 ≠ 0` in a nontrivial ring whose characteristic is not `2`. \"},\n {\"theorem\":\n  \"∀ {a : ℤ} {m n : ℕ}, Int.gcd a (↑m * ↑n) ≠ 1 ↔ Int.gcd a ↑m ≠ 1 ∨ Int.gcd a ↑n ≠ 1\",\n  \"isProp\": true,\n  \"docString\": \"If `gcd a (m * n) ≠ 1`, then `gcd a m ≠ 1` or `gcd a n ≠ 1`. \"},\n {\"theorem\":\n  \"∀ {n : ℕ}, n ≠ 0 → ∀ (p : ℕ), p ≠ 1 → ∃ e n', ¬p ∣ n' ∧ n = p ^ e * n'\",\n  \"isProp\": true,\n  \"docString\":\n  \"If `n` is a nonzero natural number and `p ≠ 1`, then there are natural numbers `e`\\nand `n'` such that `n'` is not divisible by `p` and `n = p^e * n'`. \"},\n {\"theorem\":\n  \"∀ {n : ℕ} {K : Type u_1} [inst : Field K] {μ : K},\\n  IsPrimitiveRoot μ n → 0 < n → ∀ [inst_1 : CharZero K], minpoly ℤ μ ∣ Polynomial.cyclotomic n ℤ\",\n  \"isProp\": true,\n  \"docString\":\n  \"The minimal polynomial of a primitive `n`-th root of unity `μ` divides `cyclotomic n ℤ`. \"}]\n", "prompt_cons": "/-- We have `2 ≠ 0` in a nontrivial ring whose characteristic is not `2`. -/\ntheorem ∀ {R : Type u_1} [inst : NonAssocSemiring R] [inst_1 : Nontrivial R], ringChar R ≠ 2 → 2 ≠ 0 :=\n\n/-- If `gcd a (m * n) ≠ 1`, then `gcd a m ≠ 1` or `gcd a n ≠ 1`. -/\ntheorem ∀ {a : ℤ} {m n : ℕ}, Int.gcd a (↑m * ↑n) ≠ 1 ↔ Int.gcd a ↑m ≠ 1 ∨ Int.gcd a ↑n ≠ 1 :=\n\n/-- If `n` is a nonzero natural number and `p ≠ 1`, then there are natural numbers `e`\nand `n'` such that `n'` is not divisible by `p` and `n = p^e * n'`. -/\ntheorem ∀ {n : ℕ}, n ≠ 0 → ∀ (p : ℕ), p ≠ 1 → ∃ e n', ¬p ∣ n' ∧ n = p ^ e * n' :=\n\n/-- The minimal polynomial of a primitive `n`-th root of unity `μ` divides `cyclotomic n ℤ`. -/\ntheorem ∀ {n : ℕ} {K : Type u_1} [inst : Field K] {μ : K},\n  IsPrimitiveRoot μ n → 0 < n → ∀ [inst_1 : CharZero K], minpoly ℤ μ ∣ Polynomial.cyclotomic n ℤ :=\n\n/-- Prove that for all $n>1$ that $\\mathbb{Z}/n\\mathbb{Z}$ is not a group under multiplication of residue classes. -/\ntheorem", "choices": ["∀ {n : ℕ}, n > 1 → ¬(IsGroup (Zmod n) (Function.mul (a b : Zmod n))) ", "∀ {n : ℕ}, n > 1 → ∃ a b : Zmod n, a * b ≠ 1 ", "∀ {n : ℕ}, n > 1 → ¬MulGroup (Zmod n) ", "∀ {n : ℕ}, 1 < n → ¬IsGroup (Zmod n) ", "∀ {n : ℕ}, 1 < n → ¬IsGroup (Zmod n) ", "∀ {n : ℕ}, n > 1 → ¬(IsGroup (Zmod n) (Function.mul : Zmod n → Zmod n → Zmod n)) ", "∀ {n : ℕ}, n > 1 → ¬(Group (Zmod n) [inst : Mul (Zmod n)] _) ", "∀ {n : ℕ}, n > 1 → ¬(IsGroup (Zmod n) (λ a b : Zmod n, a * b)) ", "∀ {n : ℕ}, n > 1 → ¬(is_group (Zmod n) (has_mul.mul : Zmod n → Zmod n → Zmod n)) ", "∀ {n : ℕ}, n > 1 → ¬(∀ a b : Zmod n, ∃ c : Zmod n, a * b = c) "]}
{"docString": "Let $x$ be an element of $G$. Prove that $x^2=1$ if and only if $|x|$ is either $1$ or $2$.", "prompts": "[{\"theorem\":\n  \"∀ {G : Type u_1} [inst : Monoid G] {x : G} {n : ℕ},\\n  0 < n → x ^ n = 1 → (∀ (p : ℕ), Nat.Prime p → p ∣ n → x ^ (n / p) ≠ 1) → orderOf x = n\",\n  \"isProp\": true,\n  \"docString\":\n  \"If `x^n = 1`, but `x^(n/p) ≠ 1` for all prime factors `p` of `n`,\\nthen `x` has order `n` in `G`. \"},\n {\"theorem\":\n  \"∀ (p : ℕ) [inst : Fact (Nat.Prime p)] (x : (ZMod p)ˣ), (∃ y, y ^ 2 = x) ↔ x ^ (p / 2) = 1\",\n  \"isProp\": true,\n  \"docString\":\n  \"Euler's Criterion: A unit `x` of `ZMod p` is a square if and only if `x ^ (p / 2) = 1`. \"},\n {\"theorem\":\n  \"∀ {F : Type u_1} [inst : Field F] [inst_1 : Finite F], ringChar F = 2 → ∀ (a : F), IsSquare a\",\n  \"isProp\": true,\n  \"docString\":\n  \"In a finite field of characteristic `2`, all elements are squares. \"},\n {\"theorem\":\n  \"∀ {α : Type u} [inst : LinearOrderedRing α] {x y : α}, x * x + y * y = 0 ↔ x = 0 ∧ y = 0\",\n  \"isProp\": true,\n  \"docString\": \"The sum of two squares is zero iff both elements are zero. \"}]\n", "prompt_cons": "/-- If `x^n = 1`, but `x^(n/p) ≠ 1` for all prime factors `p` of `n`,\nthen `x` has order `n` in `G`. -/\ntheorem ∀ {G : Type u_1} [inst : Monoid G] {x : G} {n : ℕ},\n  0 < n → x ^ n = 1 → (∀ (p : ℕ), Nat.Prime p → p ∣ n → x ^ (n / p) ≠ 1) → orderOf x = n :=\n\n/-- Euler's Criterion: A unit `x` of `ZMod p` is a square if and only if `x ^ (p / 2) = 1`. -/\ntheorem ∀ (p : ℕ) [inst : Fact (Nat.Prime p)] (x : (ZMod p)ˣ), (∃ y, y ^ 2 = x) ↔ x ^ (p / 2) = 1 :=\n\n/-- In a finite field of characteristic `2`, all elements are squares. -/\ntheorem ∀ {F : Type u_1} [inst : Field F] [inst_1 : Finite F], ringChar F = 2 → ∀ (a : F), IsSquare a :=\n\n/-- The sum of two squares is zero iff both elements are zero. -/\ntheorem ∀ {α : Type u} [inst : LinearOrderedRing α] {x y : α}, x * x + y * y = 0 ↔ x = 0 ∧ y = 0 :=\n\n/-- Let $x$ be an element of $G$. Prove that $x^2=1$ if and only if $|x|$ is either $1$ or $2$. -/\ntheorem", "choices": ["∀ {G : Type u_1} [inst : Monoid G] {x : G}, x ^ 2 = 1 ↔ orderOf x = 1 ∨ orderOf x = 2 ", "∀ {G : Type u_1} [inst : Monoid G] {x : G}, x ^ 2 = 1 ↔ orderOf x = 1 ∨ orderOf x = 2 ", "∀ {G : Type u_1} [inst : Monoid G] {x : G}, x ^ 2 = 1 ↔ orderOf x = 1 ∨ orderOf x = 2 ", "∀ {G : Type u_1} [inst : Monoid G] {x : G}, x ^ 2 = 1 ↔ orderOf x = 1 ∨ orderOf x = 2 ", "∀ {G : Type u_1} [inst : Monoid G] {x : G}, x ^ 2 = 1 ↔ (orderOf x = 1 ∨ orderOf x = 2) ", "forall {G : Type u_1} [inst : Monoid G] {x : G}, x ^ 2 = 1 ↔ orderOf x = 1 ∨ orderOf x = 2 ", "∀ {G : Type u_1} [inst : Monoid G] {x : G}, x ^ 2 = 1 ↔ orderOf x = 1 ∨ orderOf x = 2 ", "∀ {G : Type u_1} [inst : Monoid G] {x : G}, x ^ 2 = 1 ↔ (orderOf x = 1 ∨ orderOf x = 2) ", "∀ {G : Type u_1} [inst : Monoid G] {x : G}, x ^ 2 = 1 ↔ orderOf x = 1 ∨ orderOf x = 2 ", "∀ {G : Type u_1} [inst : Monoid G] {x : G}, x ^ 2 = 1 ↔ orderOf x = 1 ∨ orderOf x = 2 "]}
{"docString": "Let $x$ and $y$ be elements of $G$. Prove that $xy=yx$ if and only if $y^{-1}xy=x$ if and only if $x^{-1}y^{-1}xy=1$.", "prompts": "[{\"theorem\":\n  \"∀ {α : Type u} {L₁ L₂ : List (α × Bool)} {x1 : α} {b1 : Bool} {x2 : α} {b2 : Bool},\\n  (x1, b1) ≠ (x2, b2) → FreeGroup.Red ((x1, b1) :: L₁) ((x2, b2) :: L₂) → FreeGroup.Red L₁ ((x1, !b1) :: (x2, b2) :: L₂)\",\n  \"isProp\": true,\n  \"docString\":\n  \"If `x` and `y` are distinct letters and `w₁ w₂` are words such that `xw₁` reduces to `yw₂`, then\\n`w₁` reduces to `x⁻¹yw₂`. \"},\n {\"theorem\":\n  \"∀ {F : Type u_1} {G : Type u_2} {M : Type u_3} [inst : Group G] [inst_1 : Monoid M] [inst_2 : MonoidHomClass F G M]\\n  (f g : F) {x : G}, ↑f x = ↑g x → ↑f x⁻¹ = ↑g x⁻¹\",\n  \"isProp\": true,\n  \"docString\":\n  \"If two homomorphism from a group to a monoid are equal at `x`, then they are equal at `x⁻¹`. \"},\n {\"theorem\":\n  \"∀ {M : Type u_1} [inst : Monoid M] {a : Mˣ} {x y : M}, SemiconjBy (↑a) x y → SemiconjBy (↑a⁻¹) y x\",\n  \"isProp\": true,\n  \"docString\":\n  \"If a unit `a` semiconjugates `x` to `y`, then `a⁻¹` semiconjugates `y` to `x`. \"},\n {\"theorem\":\n  \"∀ {M : Type u_1} {α : Type u_2} [inst : SMul M α] [self : MulAction.IsPretransitive M α] (x y : α), ∃ g, g • x = y\",\n  \"isProp\": true,\n  \"docString\": \"There is `g` such that `g • x = y`. \"}]\n", "prompt_cons": "/-- If `x` and `y` are distinct letters and `w₁ w₂` are words such that `xw₁` reduces to `yw₂`, then\n`w₁` reduces to `x⁻¹yw₂`. -/\ntheorem ∀ {α : Type u} {L₁ L₂ : List (α × Bool)} {x1 : α} {b1 : Bool} {x2 : α} {b2 : Bool},\n  (x1, b1) ≠ (x2, b2) → FreeGroup.Red ((x1, b1) :: L₁) ((x2, b2) :: L₂) → FreeGroup.Red L₁ ((x1, !b1) :: (x2, b2) :: L₂) :=\n\n/-- If two homomorphism from a group to a monoid are equal at `x`, then they are equal at `x⁻¹`. -/\ntheorem ∀ {F : Type u_1} {G : Type u_2} {M : Type u_3} [inst : Group G] [inst_1 : Monoid M] [inst_2 : MonoidHomClass F G M]\n  (f g : F) {x : G}, ↑f x = ↑g x → ↑f x⁻¹ = ↑g x⁻¹ :=\n\n/-- If a unit `a` semiconjugates `x` to `y`, then `a⁻¹` semiconjugates `y` to `x`. -/\ntheorem ∀ {M : Type u_1} [inst : Monoid M] {a : Mˣ} {x y : M}, SemiconjBy (↑a) x y → SemiconjBy (↑a⁻¹) y x :=\n\n/-- There is `g` such that `g • x = y`. -/\ntheorem ∀ {M : Type u_1} {α : Type u_2} [inst : SMul M α] [self : MulAction.IsPretransitive M α] (x y : α), ∃ g, g • x = y :=\n\n/-- Let $x$ and $y$ be elements of $G$. Prove that $xy=yx$ if and only if $y^{-1}xy=x$ if and only if $x^{-1}y^{-1}xy=1$. -/\ntheorem", "choices": ["∀ {G : Type u_1} [inst : Group G] (x y : G), x * y = y * x ↔ y⁻¹ * x * y = x ∧ x⁻¹ * y⁻¹ * x * y = 1 ", "∀ {G : Type u} [inst : Group G] {x y : G}, x * y = y * x ↔ y⁻¹ * x * y = x ↔ x⁻¹ * y⁻¹ * x * y = 1 ", "∀ {G : Type u} [inst : Group G] (x y : G), x * y = y * x ↔ y⁻¹ * x * y = x ↔ x⁻¹ * y⁻¹ * x * y = 1 ", "∀ {G : Type u} [inst : Group G] {x y : G}, x * y = y * x ↔ y⁻¹ * x * y = x ↔ x⁻¹ * y⁻¹ * x * y = 1 ", "∀ {G : Type u} [inst : Group G] (x y : G), x * y = y * x ↔ y⁻¹ * x * y = x ↔ x⁻¹ * y⁻¹ * x * y = 1 ", "∀ {G : Type u} [inst : Group G] (x y : G), x * y = y * x ↔ y⁻¹ * x * y = x ∧ x⁻¹ * y⁻¹ * x * y = 1 ", "∀ {G : Type u} [inst : Group G] {x y : G}, x * y = y * x ↔ y⁻¹ * x * y = x ↔ x⁻¹ * y⁻¹ * x * y = 1 ", "∀ {G : Type u} [inst : Group G] (x y : G), x * y = y * x ↔ y⁻¹ * x * y = x ↔ x⁻¹ * y⁻¹ * x * y = 1 ", "∀ {G : Type u} [inst : Group G] {x y : G}, x * y = y * x ↔ y⁻¹ * x * y = x ↔ x⁻¹ * y⁻¹ * x * y = 1 ", "∀ {G : Type u} [inst : Group G] {x y : G}, x * y = y * x ↔ y⁻¹ * x * y = x ↔ x⁻¹ * y⁻¹ * x * y = 1 "]}
{"docString": "If $x$ and $g$ are elements of the group $G$, prove that $|x|=\\left|g^{-1} x g\\right|$.", "prompts": "[{\"theorem\":\n  \"∀ {G : Type w} [inst : Group G] {g : G} {P : G → Prop},\\n  P 1 → (∀ (a : G), P a → P (g * a)) → (∀ (a : G), P a → P (g⁻¹ * a)) → ∀ (n : ℤ), P (g ^ n)\",\n  \"isProp\": true,\n  \"docString\":\n  \"To show a property of all powers of `g` it suffices to show it is closed under multiplication\\nby `g` and `g⁻¹` on the left. For subgroups generated by more than one element, see\\n`Subgroup.closure_induction_left`. \"},\n {\"theorem\":\n  \"∀ {G : Type w} [inst : Group G] {g : G} {P : G → Prop},\\n  P 1 → (∀ (a : G), P a → P (a * g)) → (∀ (a : G), P a → P (a * g⁻¹)) → ∀ (n : ℤ), P (g ^ n)\",\n  \"isProp\": true,\n  \"docString\":\n  \"To show a property of all powers of `g` it suffices to show it is closed under multiplication\\nby `g` and `g⁻¹` on the right. For subgroups generated by more than one element, see\\n`Subgroup.closure_induction_right`. \"},\n {\"theorem\":\n  \"∀ {F : Type u_1} {G : Type u_2} {M : Type u_3} [inst : Group G] [inst_1 : Monoid M] [inst_2 : MonoidHomClass F G M]\\n  (f g : F) {x : G}, ↑f x = ↑g x → ↑f x⁻¹ = ↑g x⁻¹\",\n  \"isProp\": true,\n  \"docString\":\n  \"If two homomorphism from a group to a monoid are equal at `x`, then they are equal at `x⁻¹`. \"},\n {\"theorem\":\n  \"∀ {α : Type u} {f g : α → α} {x : α}, Function.IsFixedPt f x → Function.LeftInverse g f → Function.IsFixedPt g x\",\n  \"isProp\": true,\n  \"docString\":\n  \"If `x` is a fixed point of `f` and `g` is a left inverse of `f`, then `x` is a fixed\\npoint of `g`. \"}]\n", "prompt_cons": "/-- To show a property of all powers of `g` it suffices to show it is closed under multiplication\nby `g` and `g⁻¹` on the left. For subgroups generated by more than one element, see\n`Subgroup.closure_induction_left`. -/\ntheorem ∀ {G : Type w} [inst : Group G] {g : G} {P : G → Prop},\n  P 1 → (∀ (a : G), P a → P (g * a)) → (∀ (a : G), P a → P (g⁻¹ * a)) → ∀ (n : ℤ), P (g ^ n) :=\n\n/-- To show a property of all powers of `g` it suffices to show it is closed under multiplication\nby `g` and `g⁻¹` on the right. For subgroups generated by more than one element, see\n`Subgroup.closure_induction_right`. -/\ntheorem ∀ {G : Type w} [inst : Group G] {g : G} {P : G → Prop},\n  P 1 → (∀ (a : G), P a → P (a * g)) → (∀ (a : G), P a → P (a * g⁻¹)) → ∀ (n : ℤ), P (g ^ n) :=\n\n/-- If two homomorphism from a group to a monoid are equal at `x`, then they are equal at `x⁻¹`. -/\ntheorem ∀ {F : Type u_1} {G : Type u_2} {M : Type u_3} [inst : Group G] [inst_1 : Monoid M] [inst_2 : MonoidHomClass F G M]\n  (f g : F) {x : G}, ↑f x = ↑g x → ↑f x⁻¹ = ↑g x⁻¹ :=\n\n/-- If `x` is a fixed point of `f` and `g` is a left inverse of `f`, then `x` is a fixed\npoint of `g`. -/\ntheorem ∀ {α : Type u} {f g : α → α} {x : α}, Function.IsFixedPt f x → Function.LeftInverse g f → Function.IsFixedPt g x :=\n\n/-- If $x$ and $g$ are elements of the group $G$, prove that $|x|=\\left|g^{-1} x g\\right|$. -/\ntheorem", "choices": ["∀ {G : Type w} [inst : Group G] {x g : G}, order_of x = order_of (g⁻¹ * x * g) ", "∀ {G : Type w} [inst : Group G] {x g : G}, order_of x = order_of (g⁻¹ * x * g) ", "∀ {G : Type w} [inst : Group G] {x g : G}, order_of x = order_of (g⁻¹ * x * g) ", "∀ {G : Type w} [inst : Group G] {x g : G}, order_of x = order_of (g⁻¹ * x * g) ", "∀ {G : Type w} [inst : Group G] {x g : G}, order_of x = order_of (g⁻¹ * x * g) ", "∀ {G : Type w} [inst : Group G] (x g : G), order_of x = order_of (g⁻¹ * x * g) ", "∀ {G : Type w} [inst : Group G] {x g : G}, order_of x = order_of (g⁻¹ * x * g) ", "∀ {G : Type w} [inst : Group G] {x g : G}, order_of x = order_of (g⁻¹ * x * g) ", "∀ {G : Type w} [inst : Group G] (g x : G), add_order_of x = add_order_of (g⁻¹ * x * g) ", "∀ {G : Type w} [inst : Group G] (x g : G), order_of x = order_of (g⁻¹ * x * g) "]}
{"docString": "Prove that if $x^{2}=1$ for all $x \\in G$ then $G$ is abelian.", "prompts": "[{\"theorem\":\n  \"∀ {G : Type u_1} [inst : Monoid G] {x : G} {n : ℕ},\\n  0 < n → x ^ n = 1 → (∀ (p : ℕ), Nat.Prime p → p ∣ n → x ^ (n / p) ≠ 1) → orderOf x = n\",\n  \"isProp\": true,\n  \"docString\":\n  \"If `x^n = 1`, but `x^(n/p) ≠ 1` for all prime factors `p` of `n`,\\nthen `x` has order `n` in `G`. \"},\n {\"theorem\":\n  \"∀ {d : ℤ} (a : Pell.Solution₁ d), Pell.Solution₁.x a ^ 2 - d * Pell.Solution₁.y a ^ 2 = 1\",\n  \"isProp\": true,\n  \"docString\":\n  \"The proof that `a` is a solution to the Pell equation `x^2 - d*y^2 = 1` \"},\n {\"theorem\":\n  \"∀ {G : Type u_1} [inst : CommGroup G], Group.nilpotencyClass G ≤ 1\",\n  \"isProp\": true,\n  \"docString\": \"Abelian groups have nilpotency class at most one \"},\n {\"theorem\": \"∀ {G : Type u_1} [inst : CommGroup G], Group.IsNilpotent G\",\n  \"isProp\": true,\n  \"docString\": \"Abelian groups are nilpotent \"}]\n", "prompt_cons": "/-- If `x^n = 1`, but `x^(n/p) ≠ 1` for all prime factors `p` of `n`,\nthen `x` has order `n` in `G`. -/\ntheorem ∀ {G : Type u_1} [inst : Monoid G] {x : G} {n : ℕ},\n  0 < n → x ^ n = 1 → (∀ (p : ℕ), Nat.Prime p → p ∣ n → x ^ (n / p) ≠ 1) → orderOf x = n :=\n\n/-- The proof that `a` is a solution to the Pell equation `x^2 - d*y^2 = 1` -/\ntheorem ∀ {d : ℤ} (a : Pell.Solution₁ d), Pell.Solution₁.x a ^ 2 - d * Pell.Solution₁.y a ^ 2 = 1 :=\n\n/-- Abelian groups have nilpotency class at most one -/\ntheorem ∀ {G : Type u_1} [inst : CommGroup G], Group.nilpotencyClass G ≤ 1 :=\n\n/-- Abelian groups are nilpotent -/\ntheorem ∀ {G : Type u_1} [inst : CommGroup G], Group.IsNilpotent G :=\n\n/-- Prove that if $x^{2}=1$ for all $x \\in G$ then $G$ is abelian. -/\ntheorem", "choices": ["∀ {G : Type u_1} [inst : Group G], (∀ x : G, x ^ 2 = 1) → IsCommGroup G ", "∀ {G : Type u_1} [inst : Group G], (∀ (x : G), x ^ 2 = 1) → IsCommutative G ", "∀ {G : Type u_1} [inst : Group G], (∀ x : G, x ^ 2 = 1) → IsCommGroup G ", "∀ {G : Type u_1} [inst : Group G], (∀ (x : G), x ^ 2 = 1) → IsCommutative G ", "∀ {G : Type u_1} [inst : Group G], (∀ (x : G), x ^ 2 = 1) → IsCommutative G ", "∀ {G : Type u_1} [inst : Group G], (∀ x : G, x ^ 2 = 1) → IsCommutative G ", "∀ {G : Type u_1} [inst : Group G], (∀ (x : G), x ^ 2 = 1) → IsCommutative G ", "∀ {G : Type u_1} [inst : Group G], (∀ x : G, x ^ 2 = 1) → IsCommGroup G ", "∀ {G : Type u_1} [inst : Group G], (∀ (x : G), x ^ 2 = 1) → IsCommutative G ", "∀ {G : Type u_1} [inst : Group G], (∀ (x : G), x ^ 2 = 1) → ∀ (x y : G), x * y = y * x "]}
{"docString": "If $x$ is an element of infinite order in $G$, prove that the elements $x^{n}, n \\in \\mathbb{Z}$ are all distinct.", "prompts": "[{\"theorem\":\n  \"∀ {G : Type u_1} [inst : Monoid G] {x : G} {n : ℕ},\\n  0 < n → x ^ n = 1 → (∀ (p : ℕ), Nat.Prime p → p ∣ n → x ^ (n / p) ≠ 1) → orderOf x = n\",\n  \"isProp\": true,\n  \"docString\":\n  \"If `x^n = 1`, but `x^(n/p) ≠ 1` for all prime factors `p` of `n`,\\nthen `x` has order `n` in `G`. \"},\n {\"theorem\":\n  \"∀ {G : Type u_1} [inst : AddMonoid G] {x : G} {n : ℕ},\\n  0 < n → n • x = 0 → (∀ (p : ℕ), Nat.Prime p → p ∣ n → (n / p) • x ≠ 0) → addOrderOf x = n\",\n  \"isProp\": true,\n  \"docString\":\n  \"If `n * x = 0`, but `n/p * x ≠ 0` for\\nall prime factors `p` of `n`, then `x` has order `n` in `G`.\"},\n {\"theorem\":\n  \"∀ {G : Type u_1} [inst : Group G] {x : G}, IsOfFinOrder x⁻¹ ↔ IsOfFinOrder x\",\n  \"isProp\": true,\n  \"docString\": \"Inverses of elements of finite order have finite order. \"},\n {\"theorem\":\n  \"∀ {G : Type u_1} [inst : Group G] [inst_1 : Fintype G] (p : ℕ) [hp : Fact (Nat.Prime p)],\\n  p ∣ Fintype.card G → ∃ x, orderOf x = p\",\n  \"isProp\": true,\n  \"docString\":\n  \"For every prime `p` dividing the order of a finite group `G` there exists an element of order\\n`p` in `G`. This is known as Cauchy's theorem. \"}]\n", "prompt_cons": "/-- If `x^n = 1`, but `x^(n/p) ≠ 1` for all prime factors `p` of `n`,\nthen `x` has order `n` in `G`. -/\ntheorem ∀ {G : Type u_1} [inst : Monoid G] {x : G} {n : ℕ},\n  0 < n → x ^ n = 1 → (∀ (p : ℕ), Nat.Prime p → p ∣ n → x ^ (n / p) ≠ 1) → orderOf x = n :=\n\n/-- If `n * x = 0`, but `n/p * x ≠ 0` for\nall prime factors `p` of `n`, then `x` has order `n` in `G`. -/\ntheorem ∀ {G : Type u_1} [inst : AddMonoid G] {x : G} {n : ℕ},\n  0 < n → n • x = 0 → (∀ (p : ℕ), Nat.Prime p → p ∣ n → (n / p) • x ≠ 0) → addOrderOf x = n :=\n\n/-- Inverses of elements of finite order have finite order. -/\ntheorem ∀ {G : Type u_1} [inst : Group G] {x : G}, IsOfFinOrder x⁻¹ ↔ IsOfFinOrder x :=\n\n/-- For every prime `p` dividing the order of a finite group `G` there exists an element of order\n`p` in `G`. This is known as Cauchy's theorem. -/\ntheorem ∀ {G : Type u_1} [inst : Group G] [inst_1 : Fintype G] (p : ℕ) [hp : Fact (Nat.Prime p)],\n  p ∣ Fintype.card G → ∃ x, orderOf x = p :=\n\n/-- If $x$ is an element of infinite order in $G$, prove that the elements $x^{n}, n \\in \\mathbb{Z}$ are all distinct. -/\ntheorem", "choices": ["∀ {G : Type u_1} [inst : Group G] {x : G}, ¬IsOfFinOrder x → ∀ (m n : ℤ), x ^ m = x ^ n ↔ m = n ", "∀ {G : Type u_1} [inst : Group G] {x : G}, IsOfInfOrder x → ∀ m n : ℤ, m ≠ n → x ^ m ≠ x ^ n ", "∀ {G : Type u_1} [inst : Group G] {x : G},\n  orderOf x = 0 → ∀ (m n : ℤ), m ≠ n → x ^ m ≠ x ^ n ", "∀ {G : Type u_1} [inst : Group G] (x : G), ¬IsOfFinOrder x → ∀ n m : ℤ, x ^ n = x ^ m → n = m ", "∀ {G : Type u_1} [inst : Group G] {x : G}, IsOfInfOrder x → ∀ m n : ℤ, m ≠ n → x ^ m ≠ x ^ n ", "∀ {G : Type u_1} [inst : Group G] {x : G}, IsOfInfOrder x → ∀ (m n : ℤ), x ^ m = x ^ n → m = n ", "∀ {G : Type u_1} [inst : Group G] {x : G}, ¬ IsOfFinOrder x → ∀ (m n : ℤ), m ≠ n → x ^ m ≠ x ^ n ", "∀ {G : Type u_1} [inst : Group G] {x : G}, ¬IsOfFinOrder x → ∀ (m n : ℤ), m ≠ n → x ^ m ≠ x ^ n ", "∀ {G : Type u_1} [inst : Group G] {x : G}, IsOfInfOrder x → ∀ (m n : ℤ), m ≠ n → x ^ m ≠ x ^ n ", "∀ {G : Type u_1} [inst : Group G] {x : G},\n  ¬IsOfFinOrder x → ∀ (n m : ℤ), n ≠ m → x ^ n ≠ x ^ m "]}
{"docString": "Prove that the multiplicative groups $\\mathbb{R}-\\{0\\}$ and $\\mathbb{C}-\\{0\\}$ are not isomorphic.", "prompts": "[{\"theorem\":\n  \"∀ (n : ℕ) (R : Type u_1) [inst : Ring R] [inst_1 : Nontrivial R], Polynomial.cyclotomic n R ≠ 0\",\n  \"isProp\": true,\n  \"docString\": \"`cyclotomic n R` is different from `0`. \"},\n {\"theorem\":\n  \"∀ (n : ℕ) (R : Type u_1) [inst : CommRing R] [inst_1 : IsDomain R], Polynomial.cyclotomic' n R ≠ 0\",\n  \"isProp\": true,\n  \"docString\": \"`cyclotomic' n R` is different from `0`. \"},\n {\"theorem\":\n  \"∀ {G : Type u_1} [inst : Group G] [inst_1 : TopologicalSpace G] [inst_2 : NonarchimedeanGroup G] {K : Type u_2}\\n  [inst_3 : Group K] [inst_4 : TopologicalSpace K] [inst_5 : NonarchimedeanGroup K], NonarchimedeanGroup (G × K)\",\n  \"isProp\": true,\n  \"docString\":\n  \"The cartesian product of two nonarchimedean groups is nonarchimedean. \"},\n {\"theorem\":\n  \"∀ {R : Type u_1} [inst : NonAssocSemiring R] [inst_1 : Nontrivial R], ringChar R ≠ 2 → 2 ≠ 0\",\n  \"isProp\": true,\n  \"docString\":\n  \"We have `2 ≠ 0` in a nontrivial ring whose characteristic is not `2`. \"}]\n", "prompt_cons": "/-- `cyclotomic n R` is different from `0`. -/\ntheorem ∀ (n : ℕ) (R : Type u_1) [inst : Ring R] [inst_1 : Nontrivial R], Polynomial.cyclotomic n R ≠ 0 :=\n\n/-- `cyclotomic' n R` is different from `0`. -/\ntheorem ∀ (n : ℕ) (R : Type u_1) [inst : CommRing R] [inst_1 : IsDomain R], Polynomial.cyclotomic' n R ≠ 0 :=\n\n/-- The cartesian product of two nonarchimedean groups is nonarchimedean. -/\ntheorem ∀ {G : Type u_1} [inst : Group G] [inst_1 : TopologicalSpace G] [inst_2 : NonarchimedeanGroup G] {K : Type u_2}\n  [inst_3 : Group K] [inst_4 : TopologicalSpace K] [inst_5 : NonarchimedeanGroup K], NonarchimedeanGroup (G × K) :=\n\n/-- We have `2 ≠ 0` in a nontrivial ring whose characteristic is not `2`. -/\ntheorem ∀ {R : Type u_1} [inst : NonAssocSemiring R] [inst_1 : Nontrivial R], ringChar R ≠ 2 → 2 ≠ 0 :=\n\n/-- Prove that the multiplicative groups $\\mathbb{R}-\\{0\\}$ and $\\mathbb{C}-\\{0\\}$ are not isomorphic. -/\ntheorem", "choices": ["∀ {G : Type u_1} [inst : DivisionRing G] [inst_1 : TopologicalSpace G] [inst_2 : TopologicalGroup G] {K : Type u_2}\n  [inst_3 : DivisionRing K] [inst_4 : TopologicalSpace K] [inst_5 : TopologicalGroup K], G ≠ K → Nonempty (G ≃* K) → False ", "¬ ∃ (f : ℝ₀ →*₀ ℂ₀), Function.Bijective (⇑f) ", "not_isomorphic_real_complex_units : ¬(Units ℝ ≃* Units ℂ) ", "∀ {R : Type u_1} [inst : CommRing R] [inst_1 : IsDomain R], nonIsomorphic (R - 0) (Complex - 0) ", "not_real_complex_mul_group_iso : ¬(GroupEquiv ℝ₀ ℂ₀) ", "¬∃ (φ : Units ℝ →* Units ℂ), Function.bijective φ ", "¬ ∃ (ϕ : MulEquiv (ℝ₀) (ℂ₀)), True ", "not_isomorphic_Real_complex_multiplicative_groups : ¬GroupIsom (units ℝ) (units ℂ) ", "not_isomorphic_real_complex_units : ¬MulEquiv (units ℝ) (units ℂ) ", "∀ {G : Type u_1} [inst : Group G] [inst_1 : TopologicalSpace G] [inst_2 : NonarchimedeanGroup G] {H : Type u_2} [inst_3 : Group H] [inst_4 : TopologicalSpace H] [inst_5 : NonarchimedeanGroup H], ¬IsGroupHom (ℝ →*₀ ℂ) "]}
{"docString": "Let $G$ be any group. Prove that the map from $G$ to itself defined by $g \\mapsto g^{-1}$ is a homomorphism if and only if $G$ is abelian.", "prompts": "[{\"theorem\":\n  \"∀ {α : Type u_1} {β : Type u_2} [inst : Group α] [inst_1 : CommGroup β] {f g : α → β},\\n  IsGroupHom f → IsGroupHom g → IsGroupHom fun a => f a * g a\",\n  \"isProp\": true,\n  \"docString\":\n  \"The product of group homomorphisms is a group homomorphism if the target is commutative. \"},\n {\"theorem\":\n  \"∀ {α : Type u_1} {β : Type u_2} [inst : Group α] [inst_1 : CommGroup β] {f : α → β},\\n  IsGroupHom f → IsGroupHom fun a => (f a)⁻¹\",\n  \"isProp\": true,\n  \"docString\":\n  \"The inverse of a group homomorphism is a group homomorphism if the target is commutative. \"},\n {\"theorem\":\n  \"∀ {α : Type u} {β : Type v} [inst : Group α] [inst_1 : Group β] {f : α → β}, IsGroupHom f → IsMonoidHom f\",\n  \"isProp\": true,\n  \"docString\": \"A group homomorphism is a monoid homomorphism. \"},\n {\"theorem\":\n  \"∀ {α : Type u} {β : Type v} [inst : Group α] [inst_1 : Group β] {f : α → β},\\n  IsGroupHom f → (Function.Injective f ↔ ∀ (a : α), f a = 1 → a = 1)\",\n  \"isProp\": true,\n  \"docString\": \"A group homomorphism is injective iff its kernel is trivial. \"}]\n", "prompt_cons": "/-- The product of group homomorphisms is a group homomorphism if the target is commutative. -/\ntheorem ∀ {α : Type u_1} {β : Type u_2} [inst : Group α] [inst_1 : CommGroup β] {f g : α → β},\n  IsGroupHom f → IsGroupHom g → IsGroupHom fun a => f a * g a :=\n\n/-- The inverse of a group homomorphism is a group homomorphism if the target is commutative. -/\ntheorem ∀ {α : Type u_1} {β : Type u_2} [inst : Group α] [inst_1 : CommGroup β] {f : α → β},\n  IsGroupHom f → IsGroupHom fun a => (f a)⁻¹ :=\n\n/-- A group homomorphism is a monoid homomorphism. -/\ntheorem ∀ {α : Type u} {β : Type v} [inst : Group α] [inst_1 : Group β] {f : α → β}, IsGroupHom f → IsMonoidHom f :=\n\n/-- A group homomorphism is injective iff its kernel is trivial. -/\ntheorem ∀ {α : Type u} {β : Type v} [inst : Group α] [inst_1 : Group β] {f : α → β},\n  IsGroupHom f → (Function.Injective f ↔ ∀ (a : α), f a = 1 → a = 1) :=\n\n/-- Let $G$ be any group. Prove that the map from $G$ to itself defined by $g \\mapsto g^{-1}$ is a homomorphism if and only if $G$ is abelian. -/\ntheorem", "choices": ["∀ {α : Type u} [inst : Group α], IsGroupHom (λ a : α, a⁻¹) ↔ ∀ (a b : α), a * b = b * a ", "∀ {α : Type u} [inst : Group α], IsGroupHom (fun a => a⁻¹) ↔ IsCommGroup α ", "∀ {α : Type u} [inst : Group α],\n  IsGroupHom (λ (a : α), a⁻¹) ↔ ∀ (a b : α), a * b = b * a ", "∀ {α : Type u} [inst : Group α],\n  IsGroupHom (λ a : α, a⁻¹) ↔ ∀ (a b : α), a * b = b * a ", "∀ {α : Type u} [inst : Group α], IsGroupHom (fun a : α => a⁻¹) ↔ IsCommutativeGroup α ", "∀ {α : Type u} [inst : Group α], IsGroupHom (fun a : α => a⁻¹) ↔ ∀ (a b : α), a * b = b * a ", "∀ {α : Type u} [inst : Group α], IsGroupHom (fun a : α => a⁻¹) ↔ ∀ (a b : α), a * b = b * a ", "∀ {α : Type u} [inst : Group α], IsGroupHom (λ a : α, a⁻¹) ↔ ∀ (a b : α), a * b = b * a ", "∀ {α : Type u} [inst : Group α], IsGroupHom (λ a : α, a⁻¹) ↔ IsCommGroup α ", "∀ {α : Type u} [inst : Group α], IsGroupHom (fun a : α => a⁻¹) ↔ ∀ (a b : α), a * b = b * a "]}
{"docString": "Prove that $G$ cannot have a subgroup $H$ with $|H|=n-1$, where $n=|G|>2$.", "prompts": "[{\"theorem\":\n  \"∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G] {p n : ℕ} [hp : Fact (Nat.Prime p)],\\n  p ^ (n + 1) ∣ Fintype.card G →\\n    ∀ {H : Subgroup G}, Fintype.card { x // x ∈ H } = p ^ n → ∃ K, Fintype.card { x // x ∈ K } = p ^ (n + 1) ∧ H ≤ K\",\n  \"isProp\": true,\n  \"docString\":\n  \"If `H` is a subgroup of `G` of cardinality `p ^ n`,\\nthen `H` is contained in a subgroup of cardinality `p ^ (n + 1)`\\nif `p ^ (n + 1)` divides the cardinality of `G` \"},\n {\"theorem\":\n  \"∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G] (p : ℕ) {n m : ℕ} [_hp : Fact (Nat.Prime p)],\\n  p ^ m ∣ Fintype.card G →\\n    ∀ (H : Subgroup G), Fintype.card { x // x ∈ H } = p ^ n → n ≤ m → ∃ K, Fintype.card { x // x ∈ K } = p ^ m ∧ H ≤ K\",\n  \"isProp\": true,\n  \"docString\":\n  \"If `H` is a subgroup of `G` of cardinality `p ^ n`,\\nthen `H` is contained in a subgroup of cardinality `p ^ m`\\nif `n ≤ m` and `p ^ m` divides the cardinality of `G` \"},\n {\"theorem\":\n  \"∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G] (p : ℕ) {n : ℕ} [inst_2 : Fact (Nat.Prime p)],\\n  p ^ n ∣ Fintype.card G → ∃ K, Fintype.card { x // x ∈ K } = p ^ n\",\n  \"isProp\": true,\n  \"docString\":\n  \"A generalisation of **Sylow's first theorem**. If `p ^ n` divides\\nthe cardinality of `G`, then there is a subgroup of cardinality `p ^ n` \"},\n {\"theorem\":\n  \"∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G] {p n : ℕ} [hp : Fact (Nat.Prime p)] {H : Subgroup G},\\n  Fintype.card { x // x ∈ H } = p ^ n →\\n    Fintype.card { x // x ∈ Subgroup.normalizer H } ≡ Fintype.card G [MOD p ^ (n + 1)]\",\n  \"isProp\": true,\n  \"docString\":\n  \"If `H` is a subgroup of `G` of cardinality `p ^ n`, then the cardinality of the\\nnormalizer of `H` is congruent mod `p ^ (n + 1)` to the cardinality of `G`.  \"}]\n", "prompt_cons": "/-- If `H` is a subgroup of `G` of cardinality `p ^ n`,\nthen `H` is contained in a subgroup of cardinality `p ^ (n + 1)`\nif `p ^ (n + 1)` divides the cardinality of `G` -/\ntheorem ∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G] {p n : ℕ} [hp : Fact (Nat.Prime p)],\n  p ^ (n + 1) ∣ Fintype.card G →\n    ∀ {H : Subgroup G}, Fintype.card { x // x ∈ H } = p ^ n → ∃ K, Fintype.card { x // x ∈ K } = p ^ (n + 1) ∧ H ≤ K :=\n\n/-- If `H` is a subgroup of `G` of cardinality `p ^ n`,\nthen `H` is contained in a subgroup of cardinality `p ^ m`\nif `n ≤ m` and `p ^ m` divides the cardinality of `G` -/\ntheorem ∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G] (p : ℕ) {n m : ℕ} [_hp : Fact (Nat.Prime p)],\n  p ^ m ∣ Fintype.card G →\n    ∀ (H : Subgroup G), Fintype.card { x // x ∈ H } = p ^ n → n ≤ m → ∃ K, Fintype.card { x // x ∈ K } = p ^ m ∧ H ≤ K :=\n\n/-- A generalisation of **Sylow's first theorem**. If `p ^ n` divides\nthe cardinality of `G`, then there is a subgroup of cardinality `p ^ n` -/\ntheorem ∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G] (p : ℕ) {n : ℕ} [inst_2 : Fact (Nat.Prime p)],\n  p ^ n ∣ Fintype.card G → ∃ K, Fintype.card { x // x ∈ K } = p ^ n :=\n\n/-- If `H` is a subgroup of `G` of cardinality `p ^ n`, then the cardinality of the\nnormalizer of `H` is congruent mod `p ^ (n + 1)` to the cardinality of `G`. -/\ntheorem ∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G] {p n : ℕ} [hp : Fact (Nat.Prime p)] {H : Subgroup G},\n  Fintype.card { x // x ∈ H } = p ^ n →\n    Fintype.card { x // x ∈ Subgroup.normalizer H } ≡ Fintype.card G [MOD p ^ (n + 1)] :=\n\n/-- Prove that $G$ cannot have a subgroup $H$ with $|H|=n-1$, where $n=|G|>2$. -/\ntheorem", "choices": ["∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G] {n : ℕ},\n  Fintype.card G = n →\n    n > 2 →\n      ¬ ∃ H : Subgroup G, Fintype.card { x // x ∈ H } = n - 1 ", "∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G],\n  2 < Fintype.card G → ¬ ∃ H : Subgroup G, Fintype.card { x // x ∈ H } = Fintype.card G - 1 ", "∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G] {n : ℕ},\n  Fintype.card G = n → n > 2 → (∀ H : Subgroup G, Fintype.card { x // x ∈ H } ≠ (n - 1)) ", "∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G] {n : ℕ},\n  Fintype.card G = n → n > 2 → ¬ ∃ H : Subgroup G, Fintype.card { x // x ∈ H } = n - 1 ", "∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G] {n : ℕ},\n  Fintype.card G = n → n > 2 → ∀ H : Subgroup G, Fintype.card { x // x ∈ H } ≠ n - 1 ", "∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G] {n : ℕ},\n  2 < n → Fintype.card G = n → ¬∃ (H : Subgroup G), Fintype.card { x // x ∈ H } = n - 1 ", "∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G] (n : ℕ),\n  n = Fintype.card G → n > 2 → ∀ H : Subgroup G, Fintype.card { x // x ∈ H } ≠ n - 1 ", "forall {G : Type u} [inst : Group G] [inst_1 : Fintype G] {n : ℕ},\n  Fintype.card G = n → n > 2 →\n  ¬ (∃ H : Subgroup G, Fintype.card { x // x ∈ H } = n - 1) ", "∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G],\n  2 < Fintype.card G →\n    ∀ (H : Subgroup G), Fintype.card { x // x ∈ H } ≠ Fintype.card G - 1 ", "∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G] {n : ℕ},\n  Fintype.card G = n → n > 2 →\n    ¬∃ H : Subgroup G, Fintype.card { x // x ∈ H } = n - 1 "]}
{"docString": "Prove that if $H$ is a subgroup of $G$ then $H$ is generated by the set $H-\\{1\\}$.", "prompts": "[{\"theorem\":\n  \"∀ {G : Type u_1} [inst : LinearOrderedAddCommGroup G] [inst_1 : Archimedean G] {H : AddSubgroup G} {a : G},\\n  IsLeast {g | g ∈ H ∧ 0 < g} a → H = AddSubgroup.closure {a}\",\n  \"isProp\": true,\n  \"docString\":\n  \"Given a subgroup `H` of a decidable linearly ordered archimedean abelian group `G`, if there\\nexists a minimal element `a` of `H ∩ G_{>0}` then `H` is generated by `a`. \"},\n {\"theorem\":\n  \"∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G] {p n : ℕ} [hp : Fact (Nat.Prime p)],\\n  p ^ (n + 1) ∣ Fintype.card G →\\n    ∀ {H : Subgroup G}, Fintype.card { x // x ∈ H } = p ^ n → ∃ K, Fintype.card { x // x ∈ K } = p ^ (n + 1) ∧ H ≤ K\",\n  \"isProp\": true,\n  \"docString\":\n  \"If `H` is a subgroup of `G` of cardinality `p ^ n`,\\nthen `H` is contained in a subgroup of cardinality `p ^ (n + 1)`\\nif `p ^ (n + 1)` divides the cardinality of `G` \"},\n {\"theorem\":\n  \"∀ {p : ℕ} {G : Type u_1} [inst : Group G] (H : Subgroup G) [inst_1 : Finite (Sylow p G)],\\n  Finite (Sylow p { x // x ∈ H })\",\n  \"isProp\": true,\n  \"docString\":\n  \"If `H` is a subgroup of `G`, then `Finite (Sylow p G)` implies `Finite (Sylow p H)`. \"},\n {\"theorem\":\n  \"∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G] (p : ℕ) {n m : ℕ} [_hp : Fact (Nat.Prime p)],\\n  p ^ m ∣ Fintype.card G →\\n    ∀ (H : Subgroup G), Fintype.card { x // x ∈ H } = p ^ n → n ≤ m → ∃ K, Fintype.card { x // x ∈ K } = p ^ m ∧ H ≤ K\",\n  \"isProp\": true,\n  \"docString\":\n  \"If `H` is a subgroup of `G` of cardinality `p ^ n`,\\nthen `H` is contained in a subgroup of cardinality `p ^ m`\\nif `n ≤ m` and `p ^ m` divides the cardinality of `G` \"}]\n", "prompt_cons": "/-- Given a subgroup `H` of a decidable linearly ordered archimedean abelian group `G`, if there\nexists a minimal element `a` of `H ∩ G_{>0}` then `H` is generated by `a`. -/\ntheorem ∀ {G : Type u_1} [inst : LinearOrderedAddCommGroup G] [inst_1 : Archimedean G] {H : AddSubgroup G} {a : G},\n  IsLeast {g | g ∈ H ∧ 0 < g} a → H = AddSubgroup.closure {a} :=\n\n/-- If `H` is a subgroup of `G` of cardinality `p ^ n`,\nthen `H` is contained in a subgroup of cardinality `p ^ (n + 1)`\nif `p ^ (n + 1)` divides the cardinality of `G` -/\ntheorem ∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G] {p n : ℕ} [hp : Fact (Nat.Prime p)],\n  p ^ (n + 1) ∣ Fintype.card G →\n    ∀ {H : Subgroup G}, Fintype.card { x // x ∈ H } = p ^ n → ∃ K, Fintype.card { x // x ∈ K } = p ^ (n + 1) ∧ H ≤ K :=\n\n/-- If `H` is a subgroup of `G`, then `Finite (Sylow p G)` implies `Finite (Sylow p H)`. -/\ntheorem ∀ {p : ℕ} {G : Type u_1} [inst : Group G] (H : Subgroup G) [inst_1 : Finite (Sylow p G)],\n  Finite (Sylow p { x // x ∈ H }) :=\n\n/-- If `H` is a subgroup of `G` of cardinality `p ^ n`,\nthen `H` is contained in a subgroup of cardinality `p ^ m`\nif `n ≤ m` and `p ^ m` divides the cardinality of `G` -/\ntheorem ∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G] (p : ℕ) {n m : ℕ} [_hp : Fact (Nat.Prime p)],\n  p ^ m ∣ Fintype.card G →\n    ∀ (H : Subgroup G), Fintype.card { x // x ∈ H } = p ^ n → n ≤ m → ∃ K, Fintype.card { x // x ∈ K } = p ^ m ∧ H ≤ K :=\n\n/-- Prove that if $H$ is a subgroup of $G$ then $H$ is generated by the set $H-\\{1\\}$. -/\ntheorem", "choices": ["∀ {G : Type u} [inst : Group G] (H : Subgroup G), H = Subgroup.closure (coe H - singleton 1) ", "∀ {G : Type u} [inst : Group G] (H : Subgroup G),\n  H = Subgroup.closure (H - {1}) ", "∀ {G : Type u_1} [inst : Group G] {H : Subgroup G}, H = Subgroup.closure (H - {1}) ", "∀ {G : Type u} [inst : Group G] (H : Subgroup G),\n  H = Subgroup.closure (coe H - {1}) ", "∀ {G : Type u} [inst : Group G] (H : Subgroup G),\n  H = Subgroup.closure (H \\ {1}) ", "forall {G : Type u} [inst : Group G] (H : Subgroup G),\n  H = Subgroup.closure (SetOf (λ g, g ≠ (1 : G)) ∩ H) ", "forall {G : Type u_1} [inst : Group G] (H : Subgroup G),\n  H = Subgroup.closure (H - {1}) ", "∀ {G : Type u} [inst : Group G] (H : Subgroup G),\n  H = Subgroup.closure (SetOf fun g => g ∈ H ∧ g ≠ 1) ", "∀ {G : Type u_1} [inst : Group G] (H : Subgroup G),\n  H = Subgroup.closure (H - {1}) ", "∀ {G : Type u} [inst : Group G] (H : Subgroup G), H = Subgroup.closure (coe H \\ {1}) "]}
{"docString": "Show that the subgroup of all rotations in a dihedral group is a maximal subgroup.", "prompts": "[{\"theorem\":\n  \"∀ {G : Type u_1} [inst : Group G] (H : Subgroup G), NormalizerCondition G → IsCoatom H → Subgroup.Normal H\",\n  \"isProp\": true,\n  \"docString\":\n  \"In a group that satisfies the normalizer condition, every maximal subgroup is normal \"},\n {\"theorem\":\n  \"∀ {G : Type u_1} [inst : Group G], Monoid.IsTorsion G → ∀ (H : Subgroup G), Monoid.IsTorsion { x // x ∈ H }\",\n  \"isProp\": true,\n  \"docString\": \"Subgroups of torsion groups are torsion groups. \"},\n {\"theorem\":\n  \"∀ {G : Type u_1} [inst : Group G], Monoid.IsTorsionFree G → ∀ (H : Subgroup G), Monoid.IsTorsionFree { x // x ∈ H }\",\n  \"isProp\": true,\n  \"docString\": \"Subgroups of torsion-free groups are torsion-free. \"},\n {\"theorem\":\n  \"∀ (G : Type u_1) [inst : CommGroup G], Monoid.IsTorsionFree (G ⧸ CommGroup.torsion G)\",\n  \"isProp\": true,\n  \"docString\":\n  \"Quotienting a group by its torsion subgroup yields a torsion free group. \"}]\n", "prompt_cons": "/-- In a group that satisfies the normalizer condition, every maximal subgroup is normal -/\ntheorem ∀ {G : Type u_1} [inst : Group G] (H : Subgroup G), NormalizerCondition G → IsCoatom H → Subgroup.Normal H :=\n\n/-- Subgroups of torsion groups are torsion groups. -/\ntheorem ∀ {G : Type u_1} [inst : Group G], Monoid.IsTorsion G → ∀ (H : Subgroup G), Monoid.IsTorsion { x // x ∈ H } :=\n\n/-- Subgroups of torsion-free groups are torsion-free. -/\ntheorem ∀ {G : Type u_1} [inst : Group G], Monoid.IsTorsionFree G → ∀ (H : Subgroup G), Monoid.IsTorsionFree { x // x ∈ H } :=\n\n/-- Quotienting a group by its torsion subgroup yields a torsion free group. -/\ntheorem ∀ (G : Type u_1) [inst : CommGroup G], Monoid.IsTorsionFree (G ⧸ CommGroup.torsion G) :=\n\n/-- Show that the subgroup of all rotations in a dihedral group is a maximal subgroup. -/\ntheorem", "choices": ["theorem ∀ {G : Type u_1} [inst : Group G], DihedralGroup G → ∀ (H : Subgroup G), IsRotationSubgroup H → IsCoatom H ", "∀ {G : Type u_1} [inst : Group G] (H : Subgroup G), IsDihedral G → IsRotationSubgroup H → IsMaximal H ", "forall {n : ℕ} {G : Type u_1} [inst : Fintype G] [inst2 : Group G] (H : Subgroup G), IsDihedral G n → IsRotationSubgroup H → IsCoatom H ", "∀ {n : ℕ} {G : Type u_1} [inst : Group G] [DihedralGroup n G], IsCoatom (DihedralGroup.all_rotations n G) ", "∀ {n : ℕ} {D : Type u_1} [inst : Group D] (R : Subgroup D), DihedralGroup n R → IsMaximalSubgroup R ", "forall {n : ℕ} (hn : 0 < n), IsCoatom (DihedralGroup.rSubgroup n hn) ", "∀ {n : ℕ} (hn : n > 0), IsCoatom (Dihedral.ρ n hn) ", "∀ {n : ℕ} {R : Type u_1} [inst : Group R] (D : DihedralGroup n R), IsCoatom (DihedralGroup.rotSubgroup D) ", "∀ {G : Type u_1} [inst : Group G] (n : ℕ) (H : Subgroup G), IsDihedralGroup G n → IsCyclic H → IsCoatom H → Subgroup.Normal H ", "∀ {G : Type u_1} [inst : Group G], DihedralGroup G → ∀ (H : Subgroup G), IsCyclic H → IsCoatom H → Subgroup.Normal H "]}
{"docString": "Let $A$ be an abelian group and let $B$ be a subgroup of $A$. Prove that $A / B$ is abelian.", "prompts": "[{\"theorem\":\n  \"∀ {M : Type u_1} {S : Type u_2} [inst : DivInvMonoid M] [inst_1 : SetLike S M] [hSM : SubgroupClass S M] {H : S}\\n  {x y : M}, x ∈ H → y ∈ H → x / y ∈ H\",\n  \"isProp\": true,\n  \"docString\": \"A subgroup is closed under division. \"},\n {\"theorem\":\n  \"∀ {G : Type u_1} {H : Type u_2} {F : Type u_3} [inst : Group G] [inst_1 : DivisionMonoid H]\\n  [inst_2 : MonoidHomClass F G H] (f : F) (a b : G), ↑f (a / b) = ↑f a / ↑f b\",\n  \"isProp\": true,\n  \"docString\": \"Group homomorphisms preserve division. \"},\n {\"theorem\":\n  \"∀ {G : Type u_1} [inst : Group G] (H : Subgroup G) {x y : G}, x ∈ H → y ∈ H → x * y ∈ H\",\n  \"isProp\": true,\n  \"docString\": \"A subgroup is closed under multiplication. \"},\n {\"theorem\":\n  \"∀ (G : Type u_1) [inst : CommGroup G], CommMonoid.torsion G = (CommGroup.torsion G).toSubmonoid\",\n  \"isProp\": true,\n  \"docString\":\n  \"The torsion submonoid of an abelian group equals the torsion subgroup as a submonoid. \"}]\n", "prompt_cons": "/-- A subgroup is closed under division. -/\ntheorem ∀ {M : Type u_1} {S : Type u_2} [inst : DivInvMonoid M] [inst_1 : SetLike S M] [hSM : SubgroupClass S M] {H : S}\n  {x y : M}, x ∈ H → y ∈ H → x / y ∈ H :=\n\n/-- Group homomorphisms preserve division. -/\ntheorem ∀ {G : Type u_1} {H : Type u_2} {F : Type u_3} [inst : Group G] [inst_1 : DivisionMonoid H]\n  [inst_2 : MonoidHomClass F G H] (f : F) (a b : G), ↑f (a / b) = ↑f a / ↑f b :=\n\n/-- A subgroup is closed under multiplication. -/\ntheorem ∀ {G : Type u_1} [inst : Group G] (H : Subgroup G) {x y : G}, x ∈ H → y ∈ H → x * y ∈ H :=\n\n/-- The torsion submonoid of an abelian group equals the torsion subgroup as a submonoid. -/\ntheorem ∀ (G : Type u_1) [inst : CommGroup G], CommMonoid.torsion G = (CommGroup.torsion G).toSubmonoid :=\n\n/-- Let $A$ be an abelian group and let $B$ be a subgroup of $A$. Prove that $A / B$ is abelian. -/\ntheorem", "choices": [" ∀ {A : Type u_1} [inst : CommGroup A] (B : Subgroup A), IsComm (A ⧸ B) ", "forall {A : Type u_1} [inst : CommGroup A] (B : Subgroup A),\n  CommGroup (QuotientGroup.Quotient B) ", "∀ {A : Type u_1} [inst : CommGroup A] (B : Subgroup A), IsCommGroup (A / B) ", "∀ {A : Type u_1} [inst : CommGroup A] {B : Subgroup A}, IsCommutative (A ⧸ B) (@Mul.mul (A ⧸ B) _) ", "∀ {A : Type u_1} [inst : CommGroup A] (B : Subgroup A), IsCommGroup (A ⧸ B) ", "∀ {A : Type u_1} {B : Type u_2} [inst : CommGroup A] [inst_1 : SetLike B A] [hAB : SubgroupClass B A] (H : B)\n  (x y : QuotientGroup.Quotient H), x * y = y * x ", "∀ {A : Type u_1} {B : Type u_2} [inst : CommGroup A] [inst_1 : Group B] [hAB : SubgroupClass B A],\n  CommGroup (A / B) ", "∀ {A : Type u_1} [inst : CommGroup A] (B : Subgroup A), IsCommutative (A / B) ", "forall {A : Type u_1} [inst : CommGroup A] (B : Subgroup A), is_commutative (A ⧸ B) ", "∀ {A : Type u_1} [inst : CommGroup A] (B : Subgroup A), IsCommutative (A ⧸ B) (@HMul.hMul (A ⧸ B) _) "]}
{"docString": "Prove that the intersection of an arbitrary nonempty collection of normal subgroups of a group is a normal subgroup (do not assume the collection is countable).", "prompts": "[{\"theorem\":\n  \"∀ {G : Type u_1} [inst : Group G] (H₁ H₂ : Subgroup G),\\n  Subgroup.Normal H₁ → Subgroup.Normal H₂ → Disjoint H₁ H₂ → ∀ (x y : G), x ∈ H₁ → y ∈ H₂ → Commute x y\",\n  \"isProp\": true,\n  \"docString\": \"Elements of disjoint, normal subgroups commute. \"},\n {\"theorem\":\n  \"∀ {G : Type u_1} [inst : AddGroup G] (H₁ H₂ : AddSubgroup G),\\n  AddSubgroup.Normal H₁ → AddSubgroup.Normal H₂ → Disjoint H₁ H₂ → ∀ (x y : G), x ∈ H₁ → y ∈ H₂ → AddCommute x y\",\n  \"isProp\": true,\n  \"docString\": \"Elements of disjoint, normal subgroups commute.\"},\n {\"theorem\":\n  \"∀ {G : Type u_1} [inst : TopologicalSpace G] [inst_1 : Group G] [inst_2 : TopologicalGroup G] (N : Subgroup G)\\n  [inst_3 : Subgroup.Normal N], Subgroup.Normal (Subgroup.topologicalClosure N)\",\n  \"isProp\": true,\n  \"docString\": \"The topological closure of a normal subgroup is normal.\"},\n {\"theorem\":\n  \"∀ {G : Type u_1} [inst : Group G] (H : Subgroup G), NormalizerCondition G → IsCoatom H → Subgroup.Normal H\",\n  \"isProp\": true,\n  \"docString\":\n  \"In a group that satisfies the normalizer condition, every maximal subgroup is normal \"}]\n", "prompt_cons": "/-- Elements of disjoint, normal subgroups commute. -/\ntheorem ∀ {G : Type u_1} [inst : Group G] (H₁ H₂ : Subgroup G),\n  Subgroup.Normal H₁ → Subgroup.Normal H₂ → Disjoint H₁ H₂ → ∀ (x y : G), x ∈ H₁ → y ∈ H₂ → Commute x y :=\n\n/-- Elements of disjoint, normal subgroups commute. -/\ntheorem ∀ {G : Type u_1} [inst : AddGroup G] (H₁ H₂ : AddSubgroup G),\n  AddSubgroup.Normal H₁ → AddSubgroup.Normal H₂ → Disjoint H₁ H₂ → ∀ (x y : G), x ∈ H₁ → y ∈ H₂ → AddCommute x y :=\n\n/-- The topological closure of a normal subgroup is normal. -/\ntheorem ∀ {G : Type u_1} [inst : TopologicalSpace G] [inst_1 : Group G] [inst_2 : TopologicalGroup G] (N : Subgroup G)\n  [inst_3 : Subgroup.Normal N], Subgroup.Normal (Subgroup.topologicalClosure N) :=\n\n/-- In a group that satisfies the normalizer condition, every maximal subgroup is normal -/\ntheorem ∀ {G : Type u_1} [inst : Group G] (H : Subgroup G), NormalizerCondition G → IsCoatom H → Subgroup.Normal H :=\n\n/-- Prove that the intersection of an arbitrary nonempty collection of normal subgroups of a group is a normal subgroup (do not assume the collection is countable). -/\ntheorem", "choices": ["∀ {G : Type u_1} [inst : Group G] {S : Set (Subgroup G)}, (∀ H ∈ S, Subgroup.Normal H) → Set.Nonempty S → Subgroup.Normal (Inf S) ", "∀ {G : Type u_1} [inst : Group G] (S : Set (Subgroup G)), (∀ (H : Subgroup G), H ∈ S → Subgroup.Normal H) → ∃ (H : Subgroup G), Subgroup.Normal H ∧ ∀ (K : Subgroup G), K ∈ S → H ≤ K ", "∀ {G : Type u_1} [inst : Group G] {S : Set (Subgroup G)}, (∀ N ∈ S, Subgroup.Normal N) → Set.Nonempty S → Subgroup.Normal (Subgroup.Inter S) ", "∀ {G : Type u_1} [inst : Group G] (S : Set (Subgroup G)), (∀ H ∈ S, Subgroup.Normal H) → S ≠ ∅ → Subgroup.Normal (Subgroup.Inter S) ", "∀ {G : Type u_1} [inst : Group G] {S : Set (Subgroup G)}, (∀ (H : Subgroup G), H ∈ S → Subgroup.Normal H) → Set.Nonempty S → Subgroup.Normal (Subgroup.Inter S) ", "∀ {G : Type u_1} [inst : Group G] (S : Set (Subgroup G)), (∀ (H : Subgroup G), H ∈ S → Subgroup.Normal H) → Set.Nonempty S → Subgroup.Normal (⨅ H ∈ S, H) ", "∀ {G : Type u_1} [inst : Group G] (S : Set (Subgroup G)), \n  (∀ (N : Subgroup G), N ∈ S → Subgroup.Normal N) → (∃ (N₀ : Subgroup G), N₀ ∈ S) → Subgroup.Normal (⋂₀ S) ", "∀ {G : Type u_1} [inst : Group G] (S : Set (Subgroup G)), (∀ (H : Subgroup G), H ∈ S → Subgroup.Normal H) → (S ≠ ∅) → Subgroup.Normal (Subgroup.Inter S) ", "∀ {G : Type u_1} [inst : Group G] {S : Set (Subgroup G)}, (∀ N ∈ S, Subgroup.Normal N) → Set.Nonempty S → Subgroup.Normal (Subgroup.Inter S) ", "∀ {G : Type u_1} [inst : Group G] {S : Set (Subgroup G)}, (∀ (H : Subgroup G), H ∈ S → Subgroup.Normal H) → Set.Nonempty S → Subgroup.Normal (Subgroup.Inter S) "]}
{"docString": "Let $H \\leq K \\leq G$. Prove that $|G: H|=|G: K| \\cdot|K: H|$ (do not assume $G$ is finite).", "prompts": "[{\"theorem\":\n  \"∀ {p : ℕ} {G : Type u_1} [inst : Group G] (H : Subgroup G) [inst_1 : Finite (Sylow p G)],\\n  Finite (Sylow p { x // x ∈ H })\",\n  \"isProp\": true,\n  \"docString\":\n  \"If `H` is a subgroup of `G`, then `Finite (Sylow p G)` implies `Finite (Sylow p H)`. \"},\n {\"theorem\":\n  \"∀ {G : Type u_1} [inst : Group G] {N : Type u_2} [inst_1 : Group N] (f : G →* N) {H K : Subgroup G},\\n  MonoidHom.ker f ≤ H → MonoidHom.ker f ≤ K → Subgroup.map f H = Subgroup.map f K → H = K\",\n  \"isProp\": true,\n  \"docString\":\n  \"Given `f(A) = f(B)`, `ker f ≤ A`, and `ker f ≤ B`, deduce that `A = B`. \"},\n {\"theorem\":\n  \"∀ {G : Type u_1} [inst : AddGroup G] {N : Type u_2} [inst_1 : AddGroup N] (f : G →+ N) {H K : AddSubgroup G},\\n  AddMonoidHom.ker f ≤ H → AddMonoidHom.ker f ≤ K → AddSubgroup.map f H = AddSubgroup.map f K → H = K\",\n  \"isProp\": true,\n  \"docString\":\n  \"Given `f(A) = f(B)`, `ker f ≤ A`, and `ker f ≤ B`, deduce that `A = B`.\"},\n {\"theorem\":\n  \"∀ {V : Type u} {W : Type v} {G : SimpleGraph V} {F : SimpleGraph W} [inst : Finite W],\\n  ((G' : SimpleGraph.Subgraph G) → Set.Finite G'.verts → SimpleGraph.Subgraph.coe G' →g F) → Nonempty (G →g F)\",\n  \"isProp\": true,\n  \"docString\":\n  \"If every finite subgraph of a graph `G` has a homomorphism to a finite graph `F`, then there is\\na homomorphism from the whole of `G` to `F`. \"}]\n", "prompt_cons": "/-- If `H` is a subgroup of `G`, then `Finite (Sylow p G)` implies `Finite (Sylow p H)`. -/\ntheorem ∀ {p : ℕ} {G : Type u_1} [inst : Group G] (H : Subgroup G) [inst_1 : Finite (Sylow p G)],\n  Finite (Sylow p { x // x ∈ H }) :=\n\n/-- Given `f(A) = f(B)`, `ker f ≤ A`, and `ker f ≤ B`, deduce that `A = B`. -/\ntheorem ∀ {G : Type u_1} [inst : Group G] {N : Type u_2} [inst_1 : Group N] (f : G →* N) {H K : Subgroup G},\n  MonoidHom.ker f ≤ H → MonoidHom.ker f ≤ K → Subgroup.map f H = Subgroup.map f K → H = K :=\n\n/-- Given `f(A) = f(B)`, `ker f ≤ A`, and `ker f ≤ B`, deduce that `A = B`. -/\ntheorem ∀ {G : Type u_1} [inst : AddGroup G] {N : Type u_2} [inst_1 : AddGroup N] (f : G →+ N) {H K : AddSubgroup G},\n  AddMonoidHom.ker f ≤ H → AddMonoidHom.ker f ≤ K → AddSubgroup.map f H = AddSubgroup.map f K → H = K :=\n\n/-- If every finite subgraph of a graph `G` has a homomorphism to a finite graph `F`, then there is\na homomorphism from the whole of `G` to `F`. -/\ntheorem ∀ {V : Type u} {W : Type v} {G : SimpleGraph V} {F : SimpleGraph W} [inst : Finite W],\n  ((G' : SimpleGraph.Subgraph G) → Set.Finite G'.verts → SimpleGraph.Subgraph.coe G' →g F) → Nonempty (G →g F) :=\n\n/-- Let $H \\leq K \\leq G$. Prove that $|G: H|=|G: K| \\cdot|K: H|$ (do not assume $G$ is finite). -/\ntheorem", "choices": ["∀ {G : Type u_1} [inst : Group G] {H K : Subgroup G}, H ≤ K → K ≤ G →\n  Cardinal.mk (G ⧸ H) = Cardinal.mk (G ⧸ K) * Cardinal.mk (K ⧸ H) ", "∀ {G : Type u_1} [inst : Group G] {H K : Subgroup G},\n  Exists (λ (d : ℕ), Subgroup.index H = d * Subgroup.index K * Subgroup.index (Subgroup.comap (Subgroup.subtype K) H)) ", "forall {G : Type u_1} [inst : Group G] {H K : Subgroup G},\n  H ≤ K → K ≤ G →\n  card (G ⧸ H) = card (G ⧸ K) * card (K ⧸ H) ", "∀ {G : Type u_1} [inst : Group G] (H K : Subgroup G),\n  Cardinal.mk (G ⧸ H) = Cardinal.mk (G ⧸ K) * Cardinal.mk (K ⧸ H) ", "∀ {G : Type u_1} [inst : Group G] {H K : Subgroup G}, H ≤ K → K ≤ G →\n  Cardinal.mk (G ⧸ H) = Cardinal.mk (G ⧸ K) * Cardinal.mk (K ⧸ H) ", "∀ {G : Type u_1} [inst : Group G] (H K : Subgroup G),\n  Nonempty (quotient_group.quotient K) → cardinal.mk (quotient_group.quotient H) = cardinal.mk (quotient_group.quotient K) * cardinal.mk (quotient_group.quotient (Subgroup.comap (Subgroup.subtype K) H)) ", "forall {G : Type u_1} [inst : Group G] {H K : Subgroup G},\n  H ≤ K → K ≤ ⊤ → (Subgroup.index H) = (Subgroup.index K) * (Subgroup.index (Subgroup.comap K H)) ", "forall {G : Type u_1} [inst : Group G] {H K : Subgroup G} (hH : H ≤ K) (hK : K ≤ ⊤),\n  Cardinal.mk (quotient_group.quotient K) * Cardinal.mk (quotient_group.quotient H) = Cardinal.mk (quotient_group.quotient (⊤ : Subgroup G)) ", "∀ {G : Type u_1} [inst : Group G] {H K : Subgroup G},\n  Nonempty (QuotientGroup.quotient H ≃ QuotientGroup.quotient K × (K // H)) ", "∀ {G : Type u_1} [inst : Group G] {H K : Subgroup G},\n  G ⧸ K ≃ H ⧸ (K ⊓ H) → (G ⧸ H ≃ G ⧸ K × H ⧸ (K ⊓ H)) "]}
{"docString": "Prove that $\\mathbb{Q}$ has no proper subgroups of finite index.", "prompts": "[{\"theorem\":\n  \"∀ {G : Type u_1} [inst : Group G] {H : Subgroup G} [self : Subgroup.FiniteIndex H], Subgroup.index H ≠ 0\",\n  \"isProp\": true,\n  \"docString\": \"The subgroup has finite index \"},\n {\"theorem\":\n  \"∀ {R : Type u_1} [inst : Ring R] [inst_1 : NoZeroDivisors R] (s : Subring R), NoZeroDivisors { x // x ∈ s }\",\n  \"isProp\": true,\n  \"docString\":\n  \"A subring of a ring with no zero divisors has no zero divisors. \"},\n {\"theorem\":\n  \"∀ (G : Type u_1) [inst : Group G] [inst_1 : Finite ↑(commutatorSet G)], Finite { x // x ∈ commutator G }\",\n  \"isProp\": true,\n  \"docString\":\n  \"A theorem of Schur: A group with finitely many commutators has finite commutator subgroup. \"},\n {\"theorem\":\n  \"∀ {G : Type u_1} [inst : Group G] (H : Subgroup G) [hG : Group.FG G] [inst_1 : Subgroup.FiniteIndex H],\\n  Group.FG { x // x ∈ H }\",\n  \"isProp\": true,\n  \"docString\":\n  \"**Schreier's Lemma**: A finite index subgroup of a finitely generated\\ngroup is finitely generated. \"}]\n", "prompt_cons": "/-- The subgroup has finite index -/\ntheorem ∀ {G : Type u_1} [inst : Group G] {H : Subgroup G} [self : Subgroup.FiniteIndex H], Subgroup.index H ≠ 0 :=\n\n/-- A subring of a ring with no zero divisors has no zero divisors. -/\ntheorem ∀ {R : Type u_1} [inst : Ring R] [inst_1 : NoZeroDivisors R] (s : Subring R), NoZeroDivisors { x // x ∈ s } :=\n\n/-- A theorem of Schur: A group with finitely many commutators has finite commutator subgroup. -/\ntheorem ∀ (G : Type u_1) [inst : Group G] [inst_1 : Finite ↑(commutatorSet G)], Finite { x // x ∈ commutator G } :=\n\n/-- **Schreier's Lemma**: A finite index subgroup of a finitely generated\ngroup is finitely generated. -/\ntheorem ∀ {G : Type u_1} [inst : Group G] (H : Subgroup G) [hG : Group.FG G] [inst_1 : Subgroup.FiniteIndex H],\n  Group.FG { x // x ∈ H } :=\n\n/-- Prove that $\\mathbb{Q}$ has no proper subgroups of finite index. -/\ntheorem", "choices": ["∀ {Q : Type u_1} [inst : Field Q] [inst_1 : NoProperSubgroups Q] (H : Subgroup Q),\n  Subgroup.FiniteIndex H → Subgroup.index H = 1 ", "∀ {R : Type u_1} [inst : Field R] [inst_1 : Field.IsRational R] {H : Subgroup R} [self : Subgroup.FiniteIndex H], H = ⊤ ", "∀ {G : Type u_1} [inst : Group G] [inst_1 : DivisionRing G] (H : Subgroup G), Subgroup.FiniteIndex H → H = ⊤ ", "∀ {G : Type u_1} [inst : Group G] (H : Subgroup G) [hQ : G ≃ ℚ] [inst_1 : Subgroup.FiniteIndex H],\n  H = ⊤ ", "∀ {Q : Type u_1} [inst : Field Q] [inst_1 : RatEmbedding Q], (∀ (H : Subgroup Q), Subgroup.FiniteIndex H → H = ⊤) ", "∀ {R : Type u_1} [inst : Field R] [inst_1 : IsFractionRing ℚ R] (H : Subgroup R) [inst_2 : Subgroup.FiniteIndex H],\n  H = ⊤ ", "∀ {Q : Type u_1} [inst : Field Q] (H : Subgroup Q) [inst_1 : Subgroup.FiniteIndex H], H = ⊤ ", "∀ (H : Subgroup ℚ) [subgroup_finite_index : Subgroup.FiniteIndex H], H = Subgroup.top ℚ ", "∀ {Q : Type u_1} [inst : Field Q] [inst_1 : DiscreteValuationRing Q] (H : Subgroup Q) [inst_2 : Subgroup.FiniteIndex H],\n  H = ⊤ ", "∀ {G : Type u_1} [inst : Field G] (H : Subgroup G) [inst_1 : IsFractionRing ℤ G] [self : Subgroup.FiniteIndex H], Subgroup.index H = 1 "]}
{"docString": "Prove that if $G$ is an abelian simple group then $G \\cong Z_{p}$ for some prime $p$ (do not assume $G$ is a finite group).", "prompts": "[{\"theorem\":\n  \"∀ (G : Type u) [inst : AddCommGroup G] [inst_1 : Finite G], ∃ ι x p x e, Nonempty (G ≃+ ⨁ (i : ι), ZMod (p i ^ e i))\",\n  \"isProp\": true,\n  \"docString\":\n  \"**Structure theorem of finite abelian groups** : Any finite abelian group is a direct sum of\\nsome `ZMod (p i ^ e i)` for some prime powers `p i ^ e i`. \"},\n {\"theorem\":\n  \"∀ (G : Type u) [inst : AddCommGroup G] [hG : AddGroup.FG G],\\n  ∃ n ι x p x e, Nonempty (G ≃+ (Fin n →₀ ℤ) × ⨁ (i : ι), ZMod (p i ^ e i))\",\n  \"isProp\": true,\n  \"docString\":\n  \"**Structure theorem of finitely generated abelian groups** : Any finitely generated abelian\\ngroup is the product of a power of `ℤ` and a direct sum of some `ZMod (p i ^ e i)` for some\\nprime powers `p i ^ e i`. \"},\n {\"theorem\":\n  \"∀ {α : Type u} [inst : Group α] [inst_1 : Fintype α] {p : ℕ} [hp : Fact (Nat.Prime p)],\\n  Fintype.card α = p → IsSimpleGroup α\",\n  \"isProp\": true,\n  \"docString\": \"A finite group of prime order is simple. \"},\n {\"theorem\":\n  \"∀ {G : Type u_1} [inst : Group G] [inst_1 : Fintype G] (p : ℕ) [hp : Fact (Nat.Prime p)],\\n  p ∣ Fintype.card G → ∃ x, orderOf x = p\",\n  \"isProp\": true,\n  \"docString\":\n  \"For every prime `p` dividing the order of a finite group `G` there exists an element of order\\n`p` in `G`. This is known as Cauchy's theorem. \"}]\n", "prompt_cons": "/-- **Structure theorem of finite abelian groups** : Any finite abelian group is a direct sum of\nsome `ZMod (p i ^ e i)` for some prime powers `p i ^ e i`. -/\ntheorem ∀ (G : Type u) [inst : AddCommGroup G] [inst_1 : Finite G], ∃ ι x p x e, Nonempty (G ≃+ ⨁ (i : ι), ZMod (p i ^ e i)) :=\n\n/-- **Structure theorem of finitely generated abelian groups** : Any finitely generated abelian\ngroup is the product of a power of `ℤ` and a direct sum of some `ZMod (p i ^ e i)` for some\nprime powers `p i ^ e i`. -/\ntheorem ∀ (G : Type u) [inst : AddCommGroup G] [hG : AddGroup.FG G],\n  ∃ n ι x p x e, Nonempty (G ≃+ (Fin n →₀ ℤ) × ⨁ (i : ι), ZMod (p i ^ e i)) :=\n\n/-- A finite group of prime order is simple. -/\ntheorem ∀ {α : Type u} [inst : Group α] [inst_1 : Fintype α] {p : ℕ} [hp : Fact (Nat.Prime p)],\n  Fintype.card α = p → IsSimpleGroup α :=\n\n/-- For every prime `p` dividing the order of a finite group `G` there exists an element of order\n`p` in `G`. This is known as Cauchy's theorem. -/\ntheorem ∀ {G : Type u_1} [inst : Group G] [inst_1 : Fintype G] (p : ℕ) [hp : Fact (Nat.Prime p)],\n  p ∣ Fintype.card G → ∃ x, orderOf x = p :=\n\n/-- Prove that if $G$ is an abelian simple group then $G \\cong Z_{p}$ for some prime $p$ (do not assume $G$ is a finite group). -/\ntheorem", "choices": ["∀ (G : Type u) [inst : AddCommGroup G] [IsSimpleGroup G],\n  ∃ p [Fact (Nat.Prime p)], Nonempty (G ≃+ ZMod p) ", "∀ (G : Type u) [inst : AddCommGroup G] [hG : IsSimpleGroup G'],\n  ∃ p, Fact (Nat.Prime p) ∧ Nonempty (G ≃+ ZMod p) ", "∀ {G : Type u} [inst : AddCommGroup G] [h : IsSimpleAddGroup G],\n  ∃ p [Fact (Nat.Prime p)], Nonempty (G ≃+ ZMod p) ", "∀ (G : Type u) [inst : AddCommGroup G] [simple_group : IsSimpleAddGroup G],\n  ∃ p, Nat.Prime p ∧ Nonempty (G ≃+ ZMod p) ", "∀ (G : Type u) [inst : AddCommGroup G] [is_simple : IsSimpleGroup (Multiplicative G)], \n  ∃ (p : ℕ) (hp : Fact (Nat.Prime p)), Nonempty (G ≃+ ZMod p) ", "∀ (G : Type u) [inst : AddCommGroup G] [hG : IsSimpleAddGroup G],\n  ∃ p [hp : Fact (Nat.Prime p)], Nonempty (G ≃+ ZMod p) ", "∀ (G : Type u) [inst : AddCommGroup G] [hG : IsSimpleAddGroup G],\n  ∃ p, Fact (Nat.Prime p) ∧ Nonempty (G ≃+ ZMod p) ", "∀ (G : Type u) [inst : AddCommGroup G] [inst_1 : IsSimpleAddGroup G],\n  ∃ p [hp : Fact (Nat.Prime p)], Nonempty (G ≃+ ZMod p) ", "∀ (G : Type u) [inst : AddCommGroup G] [inst_1 : IsSimpleAddGroup G],\n  ∃ (p : ℕ) (hp : Fact (Nat.Prime p)), Nonempty (G ≃+ ZMod p) ", "∀ (G : Type u) [inst : AddCommGroup G] [inst_1 : IsSimpleAddGroup G], ∃ p [_inst_2 : Fact (Nat.Prime p)], Nonempty (G ≃+ ZMod p) "]}
{"docString": "Prove that subgroups of a solvable group are solvable.", "prompts": "[{\"theorem\":\n  \"∀ {G : Type u_1} [inst : Group G] [h : Group.IsNilpotent G], IsSolvable G\",\n  \"isProp\": true,\n  \"docString\": \"A nilpotent subgroup is solvable \"},\n {\"theorem\":\n  \"∀ {G : Type u_1} [inst : Group G], Monoid.IsTorsionFree G → ∀ (H : Subgroup G), Monoid.IsTorsionFree { x // x ∈ H }\",\n  \"isProp\": true,\n  \"docString\": \"Subgroups of torsion-free groups are torsion-free. \"},\n {\"theorem\":\n  \"∀ {G : Type u_1} [inst : AddGroup G],\\n  AddMonoid.IsTorsionFree G → ∀ (H : AddSubgroup G), AddMonoid.IsTorsionFree { x // x ∈ H }\",\n  \"isProp\": true,\n  \"docString\":\n  \"Subgroups of additive torsion-free groups are additively torsion-free.\"},\n {\"theorem\":\n  \"∀ {G : Type u_1} [inst : Group G] (P : Subgroup G), Subgroup.FG P ↔ Submonoid.FG P.toSubmonoid\",\n  \"isProp\": true,\n  \"docString\":\n  \"A subgroup is finitely generated if and only if it is finitely generated as a submonoid. \"}]\n", "prompt_cons": "/-- A nilpotent subgroup is solvable -/\ntheorem ∀ {G : Type u_1} [inst : Group G] [h : Group.IsNilpotent G], IsSolvable G :=\n\n/-- Subgroups of torsion-free groups are torsion-free. -/\ntheorem ∀ {G : Type u_1} [inst : Group G], Monoid.IsTorsionFree G → ∀ (H : Subgroup G), Monoid.IsTorsionFree { x // x ∈ H } :=\n\n/-- Subgroups of additive torsion-free groups are additively torsion-free. -/\ntheorem ∀ {G : Type u_1} [inst : AddGroup G],\n  AddMonoid.IsTorsionFree G → ∀ (H : AddSubgroup G), AddMonoid.IsTorsionFree { x // x ∈ H } :=\n\n/-- A subgroup is finitely generated if and only if it is finitely generated as a submonoid. -/\ntheorem ∀ {G : Type u_1} [inst : Group G] (P : Subgroup G), Subgroup.FG P ↔ Submonoid.FG P.toSubmonoid :=\n\n/-- Prove that subgroups of a solvable group are solvable. -/\ntheorem", "choices": ["forall {G : Type u_1} [inst : Group G] [h : IsSolvable G], ∀ (H : Subgroup G), IsSolvable H ", "∀ {G : Type u_1} [inst : Group G] [h : IsSolvable G], ∀ (H : Subgroup G), IsSolvable { x // x ∈ H } ", "forall {G : Type u_1} [inst : Group G] [h : IsSolvable G] (H : Subgroup G), IsSolvable {x // x ∈ H} ", "∀ {G : Type u_1} [inst : Group G] [h : IsSolvable G], ∀ (H : Subgroup G), IsSolvable { x // x ∈ H } ", "∀ {G : Type u_1} [inst : Group G] [h : IsSolvable G], ∀ (H : Subgroup G), IsSolvable { x // x ∈ H } ", "∀ {G : Type u_1} [inst : Group G] [hSolvable : IsSolvable G] (H : Subgroup G), IsSolvable H ", "∀ {G : Type u_1} [inst : Group G] [h : IsSolvable G] (H : Subgroup G), IsSolvable H ", "∀ {G : Type u_1} [inst : Group G] [h : IsSolvable G] (H : Subgroup G), IsSolvable { x // x ∈ H } ", "∀ {G : Type u_1} [inst : Group G], IsSolvable G → ∀ (H : Subgroup G), IsSolvable { x // x ∈ H } ", "∀ {G : Type u_1} [inst : Group G] [h : IsSolvable G] (H : Subgroup G), IsSolvable { x // x ∈ H } "]}
{"docString": "Prove that if $H$ is a nontrivial normal subgroup of the solvable group $G$ then there is a nontrivial subgroup $A$ of $H$ with $A \\unlhd G$ and $A$ abelian.", "prompts": "[{\"theorem\":\n  \"∀ {G : Type u_1} [inst : Group G] [h : Group.IsNilpotent G], IsSolvable G\",\n  \"isProp\": true,\n  \"docString\": \"A nilpotent subgroup is solvable \"},\n {\"theorem\":\n  \"∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G] {p n : ℕ} [_hp : Fact (Nat.Prime p)],\\n  p ^ (n + 1) ∣ Fintype.card G →\\n    ∀ {H : Subgroup G},\\n      Fintype.card { x // x ∈ H } = p ^ n → p ^ (n + 1) ∣ Fintype.card { x // x ∈ Subgroup.normalizer H }\",\n  \"isProp\": true,\n  \"docString\":\n  \"If `H` is a `p`-subgroup but not a Sylow `p`-subgroup of cardinality `p ^ n`,\\nthen `p ^ (n + 1)` divides the cardinality of the normalizer of `H`. \"},\n {\"theorem\":\n  \"∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G] {p n : ℕ} [hp : Fact (Nat.Prime p)] {H : Subgroup G},\\n  Fintype.card { x // x ∈ H } = p ^ n →\\n    Fintype.card { x // x ∈ Subgroup.normalizer H } ≡ Fintype.card G [MOD p ^ (n + 1)]\",\n  \"isProp\": true,\n  \"docString\":\n  \"If `H` is a subgroup of `G` of cardinality `p ^ n`, then the cardinality of the\\nnormalizer of `H` is congruent mod `p ^ (n + 1)` to the cardinality of `G`.  \"},\n {\"theorem\":\n  \"∀ {G : Type u_1} [inst : Group G] (H : Subgroup G), H = ⊥ ∨ Nontrivial { x // x ∈ H }\",\n  \"isProp\": true,\n  \"docString\": \"A subgroup is either the trivial subgroup or nontrivial. \"}]\n", "prompt_cons": "/-- A nilpotent subgroup is solvable -/\ntheorem ∀ {G : Type u_1} [inst : Group G] [h : Group.IsNilpotent G], IsSolvable G :=\n\n/-- If `H` is a `p`-subgroup but not a Sylow `p`-subgroup of cardinality `p ^ n`,\nthen `p ^ (n + 1)` divides the cardinality of the normalizer of `H`. -/\ntheorem ∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G] {p n : ℕ} [_hp : Fact (Nat.Prime p)],\n  p ^ (n + 1) ∣ Fintype.card G →\n    ∀ {H : Subgroup G},\n      Fintype.card { x // x ∈ H } = p ^ n → p ^ (n + 1) ∣ Fintype.card { x // x ∈ Subgroup.normalizer H } :=\n\n/-- If `H` is a subgroup of `G` of cardinality `p ^ n`, then the cardinality of the\nnormalizer of `H` is congruent mod `p ^ (n + 1)` to the cardinality of `G`. -/\ntheorem ∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G] {p n : ℕ} [hp : Fact (Nat.Prime p)] {H : Subgroup G},\n  Fintype.card { x // x ∈ H } = p ^ n →\n    Fintype.card { x // x ∈ Subgroup.normalizer H } ≡ Fintype.card G [MOD p ^ (n + 1)] :=\n\n/-- A subgroup is either the trivial subgroup or nontrivial. -/\ntheorem ∀ {G : Type u_1} [inst : Group G] (H : Subgroup G), H = ⊥ ∨ Nontrivial { x // x ∈ H } :=\n\n/-- Prove that if $H$ is a nontrivial normal subgroup of the solvable group $G$ then there is a nontrivial subgroup $A$ of $H$ with $A \\unlhd G$ and $A$ abelian. -/\ntheorem", "choices": ["∀ {G : Type u_1} [inst : Group G] [h : IsSolvable G] {H : Subgroup G} (hn : Subgroup.normal H) (hnt : Nontrivial { x // x ∈ H }),\n  ∃ A : Subgroup G, A ≤ H ∧ Subgroup.normal A ∧ IsAbelian A ∧ Nontrivial { x // x ∈ A } ", "∀ {G : Type u_1} [inst : Group G] [h : IsSolvable G] (H : Subgroup G) [hn : Subgroup.Normal H],\n  Nontrivial { x // x ∈ H } → ∃ (A : Subgroup G), Nontrivial { x // x ∈ A } ∧ A ≤ H ∧ Subgroup.Normal A ∧ IsAbelian A ", "∀ {G : Type u_1} [inst : Group G] [IsSolvable G] {H : Subgroup G} [Subgroup.Normal H],\n  Nontrivial { x // x ∈ H } → ∃ A : Subgroup G, Nontrivial { x // x ∈ A } ∧ A.normal G ∧ IsAbelian A ", "∀ {G : Type u_1} [inst : Group G] [inst_1 : IsSolvable G] {H : Subgroup G} (hH : H.normal),\n  Nontrivial { x // x ∈ H } → ∃ (A : Subgroup G), A.normal ∧ IsAbelian A ∧ Nontrivial { x // x ∈ A } ", "∀ {G : Type u_1} [inst : Group G] [is_solvable : IsSolvable G] (H : Subgroup G) [h : Subgroup.Normal H],\n  Nontrivial { x // x ∈ H } → ∃ A : Subgroup G, Nontrivial { x // x ∈ A } ∧ Subgroup.Normal A ∧ IsAbelian A ", "∀ {G : Type u_1} [inst : Group G] [h : IsSolvable G] (H : Subgroup G) [hH : Subgroup.Normal H],\n  Nontrivial { x // x ∈ H } → ∃ A : Subgroup G, A ⊆ H ∧ Subgroup.Normal A ∧ IsAbelian A ", "∀ {G : Type u_1} [inst : Group G] [hG : IsSolvable G] (H : Subgroup G) [hH : H.normal],\n  Nontrivial { x // x ∈ H } → ∃ (A : Subgroup G), A ≤ H ∧ Nontrivial { x // x ∈ A } ∧ A.normal ∧ IsAbelian A ", "∀ {G : Type u_1} [inst : Group G] [h : IsSolvable G] (H : Subgroup G) [hn : Subgroup.Normal H] [ht : Nontrivial { x // x ∈ H }],\n  ∃ A : Subgroup G, A ≤ H ∧ Subgroup.Normal A ∧ IsAbelian A ", "∀ {G : Type u_1} [inst : Group G] [hG : IsSolvable G] (H : Subgroup G) [_inst_1 : Subgroup.Normal H] (hH : Nontrivial {x // x ∈ H}),\n  ∃ A : Subgroup G, A ≤ H ∧ Subgroup.Normal A ∧ IsAbelian ({x // x ∈ A}) ", "∀ {G : Type u_1} [inst : Group G] [h : IsSolvable G] (H : Subgroup G) [hn : Subgroup.Normal H] [ht : Nontrivial { x // x ∈ H }],\n  ∃ A : Subgroup G, A ≤ H ∧ Subgroup.Normal A ∧ IsAbelian { x // x ∈ A } "]}
{"docString": "Let $G$ be a transitive permutation group on the finite set $A$ with $|A|>1$. Show that there is some $\\sigma \\in G$ such that $\\sigma(a) \\neq a$ for all $a \\in A$.", "prompts": "[{\"theorem\":\n  \"∀ (G : Type u_1) [inst : Group G] [inst_1 : Finite ↑(commutatorSet G)], Finite { x // x ∈ commutator G }\",\n  \"isProp\": true,\n  \"docString\":\n  \"A theorem of Schur: A group with finitely many commutators has finite commutator subgroup. \"},\n {\"theorem\":\n  \"∀ {G : Type u_1} [inst : Group G] [hN : Nontrivial G], Monoid.IsTorsion G → ¬Monoid.IsTorsionFree G\",\n  \"isProp\": true,\n  \"docString\": \"A nontrivial torsion group is not torsion-free. \"},\n {\"theorem\":\n  \"∀ {G : Type u_1} [inst : Group G] [hN : Nontrivial G], Monoid.IsTorsionFree G → ¬Monoid.IsTorsion G\",\n  \"isProp\": true,\n  \"docString\": \"A nontrivial torsion-free group is not torsion. \"},\n {\"theorem\":\n  \"∀ {α : Type u_1} [self : LinearOrderedCommGroupWithZero α] (a : α), a ≠ 0 → a * a⁻¹ = 1\",\n  \"isProp\": true,\n  \"docString\": \"Every nonzero element of a group with zero is invertible. \"}]\n", "prompt_cons": "/-- A theorem of Schur: A group with finitely many commutators has finite commutator subgroup. -/\ntheorem ∀ (G : Type u_1) [inst : Group G] [inst_1 : Finite ↑(commutatorSet G)], Finite { x // x ∈ commutator G } :=\n\n/-- A nontrivial torsion group is not torsion-free. -/\ntheorem ∀ {G : Type u_1} [inst : Group G] [hN : Nontrivial G], Monoid.IsTorsion G → ¬Monoid.IsTorsionFree G :=\n\n/-- A nontrivial torsion-free group is not torsion. -/\ntheorem ∀ {G : Type u_1} [inst : Group G] [hN : Nontrivial G], Monoid.IsTorsionFree G → ¬Monoid.IsTorsion G :=\n\n/-- Every nonzero element of a group with zero is invertible. -/\ntheorem ∀ {α : Type u_1} [self : LinearOrderedCommGroupWithZero α] (a : α), a ≠ 0 → a * a⁻¹ = 1 :=\n\n/-- Let $G$ be a transitive permutation group on the finite set $A$ with $|A|>1$. Show that there is some $\\sigma \\in G$ such that $\\sigma(a) \\neq a$ for all $a \\in A$. -/\ntheorem", "choices": ["∀ {G : Type u_1} [inst : Group G] [hT : Transitive G] [hA : Nonempty A] [h1 : Fintype.card A > 1], ∃ σ : G, ∀ a : A, σ • a ≠ a ", "∀ {G : Type u_1} [inst : Group G] (A : Set G) [inst_1 : Fintype A] [hN : Fintype.card A > 1], IsTransitive G A → ∃ σ : G, ∀ a ∈ A, σ * a ≠ a ", "∀ (G : Type u_1) (A : Type u_2) [inst : Fintype A] [inst_1 : Group G] [hN : Fintype.card A > 1] [mul_action : MulAction G A], Transitive G A → ∃ σ : G, ∀ a : A, MulAction.acts_on σ a ≠ a ", "∀ (G : Type u_1) [inst : Group G] [inst_1 : Fintype G] (A : Type u_2) [inst_2 : Fintype A] [hA : Fintype.card A > 1] [MulAction G A] [hG : MulAction.IsTransitive G A], ∃ σ : G, ∀ a : A, σ • a ≠ a ", "∀ (G : Type u_1) [inst : Group G] [inst_1 : Fintype G] (A : Type u_2) [inst_2 : Fintype A] [inst_3 : Nonempty A] [hN : Fintype.card A > 1], IsTransitive G A → ∃ σ : G, (∀ a : A, σ • a ≠ a) ", "∀ (G : Type u_1) [inst : Group G] [inst_1 : Fintype G] [inst_2 : MulAction G (fin n)] (a : fin n), n > 1 → ∃ σ ∈ G, ∀ a : fin n, σ • a ≠ a ", "∀ (G : Type u_1) [inst : Group G] [finA : Fintype G] [transG : Transitive G] (A : Type u_2) [inst_1 : Fintype A] [inst_2 : Nonempty A], Fintype.card A > 1 → ∃ σ : G, ∀ a : A, σ ≠ a ", "∀ (G : Type u_1) [inst : Group G] [inst_1 : Fintype G] [inst_2 : Fintype (perm G)] (A : set G) [hA : Fintype A] (h1 : card A > 1) (h2 : ∀ (a : G), ∃ σ ∈ perm G, σ a ≠ a),\n  ∃ σ : G → G, σ ∈ perm G ∧ ∀ a ∈ A, σ a ≠ a ", "∀ (G : Type u_1) [inst : Group G] (A : Type u_2) [instA : Fintype A] [hA : Fintype.card A > 1], Transitive G A → ∃ (σ : G), ∀ (a : A), σ • a ≠ a ", "∀ (G : Type u_1) [inst : Group G] (A : Type u_2) [inst_1 : Fintype A] [inst_2 : Fintype G], Transitive G A → (∀ a : A, ∃ σ : G, σ * a ≠ a) "]}
{"docString": "Let $G$ be a finite group of composite order $n$ with the property that $G$ has a subgroup of order $k$ for each positive integer $k$ dividing $n$. Prove that $G$ is not simple.", "prompts": "[{\"theorem\":\n  \"∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G] (p : ℕ) {n : ℕ} [inst_2 : Fact (Nat.Prime p)],\\n  p ^ n ∣ Fintype.card G → ∃ K, Fintype.card { x // x ∈ K } = p ^ n\",\n  \"isProp\": true,\n  \"docString\":\n  \"A generalisation of **Sylow's first theorem**. If `p ^ n` divides\\nthe cardinality of `G`, then there is a subgroup of cardinality `p ^ n` \"},\n {\"theorem\":\n  \"∀ {α : Type u} [inst : Group α] [inst_1 : Fintype α] {p : ℕ} [hp : Fact (Nat.Prime p)],\\n  Fintype.card α = p → IsSimpleGroup α\",\n  \"isProp\": true,\n  \"docString\": \"A finite group of prime order is simple. \"},\n {\"theorem\":\n  \"∀ (n : ℕ) {a : ℕ}, 0 < a → ((∃ k, a * k < n ∧ n < a * (k + 1)) ↔ ¬a ∣ n)\",\n  \"isProp\": true,\n  \"docString\":\n  \"`n` is not divisible by `a` iff it is between `a * k` and `a * (k + 1)` for some `k`. \"},\n {\"theorem\":\n  \"∀ {G : Type u_1} [inst : LinearOrderedAddCommGroup G] [inst_1 : TopologicalSpace G] [inst_2 : OrderTopology G]\\n  [inst_3 : Archimedean G] (S : AddSubgroup G), S ≠ ⊥ → (¬∃ a, IsLeast {g | g ∈ S ∧ 0 < g} a) → Dense ↑S\",\n  \"isProp\": true,\n  \"docString\":\n  \"Let `S` be a nontrivial additive subgroup in an archimedean linear ordered additive commutative\\ngroup `G` with order topology. If the set of positive elements of `S` does not have a minimal\\nelement, then `S` is dense `G`. \"}]\n", "prompt_cons": "/-- A generalisation of **Sylow's first theorem**. If `p ^ n` divides\nthe cardinality of `G`, then there is a subgroup of cardinality `p ^ n` -/\ntheorem ∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G] (p : ℕ) {n : ℕ} [inst_2 : Fact (Nat.Prime p)],\n  p ^ n ∣ Fintype.card G → ∃ K, Fintype.card { x // x ∈ K } = p ^ n :=\n\n/-- A finite group of prime order is simple. -/\ntheorem ∀ {α : Type u} [inst : Group α] [inst_1 : Fintype α] {p : ℕ} [hp : Fact (Nat.Prime p)],\n  Fintype.card α = p → IsSimpleGroup α :=\n\n/-- `n` is not divisible by `a` iff it is between `a * k` and `a * (k + 1)` for some `k`. -/\ntheorem ∀ (n : ℕ) {a : ℕ}, 0 < a → ((∃ k, a * k < n ∧ n < a * (k + 1)) ↔ ¬a ∣ n) :=\n\n/-- Let `S` be a nontrivial additive subgroup in an archimedean linear ordered additive commutative\ngroup `G` with order topology. If the set of positive elements of `S` does not have a minimal\nelement, then `S` is dense `G`. -/\ntheorem ∀ {G : Type u_1} [inst : LinearOrderedAddCommGroup G] [inst_1 : TopologicalSpace G] [inst_2 : OrderTopology G]\n  [inst_3 : Archimedean G] (S : AddSubgroup G), S ≠ ⊥ → (¬∃ a, IsLeast {g | g ∈ S ∧ 0 < g} a) → Dense ↑S :=\n\n/-- Let $G$ be a finite group of composite order $n$ with the property that $G$ has a subgroup of order $k$ for each positive integer $k$ dividing $n$. Prove that $G$ is not simple. -/\ntheorem", "choices": ["∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G] {n : ℕ},\n  Fintype.card G = n → n ≠ 1 → (∀ k, k ∣ n → ∃ H : Subgroup G, Fintype.card H = k) → ¬IsSimpleGroup G ", "∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G] {n : ℕ} (hn : 0 < n) [h : Fact (¬Nat.Prime n)],\n  (∀ k, 0 < k → k ∣ n → ∃ K : Subgroup G, Fintype.card ↥K = k) → ¬IsSimpleGroup G ", "∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G] {n : ℕ} (hn : 0 < n) (hG : Fintype.card G = n),\n  (∀ k, 0 < k → k ∣ n → ∃ K, Fintype.card { x // x ∈ K } = k) → ¬IsSimpleGroup G ", "∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G] {n : ℕ},\n  (∀ k, k ∣ n → ∃ H : Subgroup G, Fintype.card H = k) → Nat.Prime n → ¬IsSimpleGroup G ", "∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G] (n : ℕ),\n  Fintype.card G = n → Nat.Composite n → (∀ k, 0 < k → k ∣ n → ∃ K, Fintype.card { x // x ∈ K } = k) → ¬IsSimpleGroup G ", "∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G] {n : ℕ} (hn : 1 < n) [inst_2 : Fact (n ∣ Fintype.card G)],\n  (∀ k, 1 ≤ k → k ∣ n → ∃ K, Fintype.card { x // x ∈ K } = k) → ¬IsSimpleGroup G ", "∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G] {n : ℕ}, n ≠ 0 → (∀ k, k ∣ n → ∃ K, Fintype.card { x // x ∈ K } = k) →\n  ¬IsSimpleGroup G ", "∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G] {n : ℕ}, 0 < n → Fintype.card G = n → ¬Nat.Prime n →\n  (∀ k, 0 < k → k ∣ n → ∃ K, Fintype.card { x // x ∈ K } = k) → ¬IsSimpleGroup G ", "∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G] {n : ℕ} (hn : Fintype.card G = n),\n  (∀ k : ℕ, k ∣ n → ∃ K, Fintype.card { x // x ∈ K } = k) → ¬IsSimpleGroup G ", "∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G] {n : ℕ} [hn : Fact (0 < n)] (h : ∀ k, 0 < k → k ∣ n → ∃ K, Fintype.card { x // x ∈ K } = k),\n  Nat.Prime n → ¬IsSimpleGroup G "]}
{"docString": "Prove that characteristic subgroups are normal.", "prompts": "[{\"theorem\":\n  \"∀ {G : Type u_1} [inst : TopologicalSpace G] [inst_1 : Group G] [inst_2 : TopologicalGroup G] (N : Subgroup G)\\n  [inst_3 : Subgroup.Normal N], Subgroup.Normal (Subgroup.topologicalClosure N)\",\n  \"isProp\": true,\n  \"docString\": \"The topological closure of a normal subgroup is normal.\"},\n {\"theorem\":\n  \"∀ {G : Type u_1} [inst : Group G] (H₁ H₂ : Subgroup G),\\n  Subgroup.Normal H₁ → Subgroup.Normal H₂ → Disjoint H₁ H₂ → ∀ (x y : G), x ∈ H₁ → y ∈ H₂ → Commute x y\",\n  \"isProp\": true,\n  \"docString\": \"Elements of disjoint, normal subgroups commute. \"},\n {\"theorem\":\n  \"∀ {G : Type u_1} [inst : Group G] (H : Subgroup G), NormalizerCondition G → IsCoatom H → Subgroup.Normal H\",\n  \"isProp\": true,\n  \"docString\":\n  \"In a group that satisfies the normalizer condition, every maximal subgroup is normal \"},\n {\"theorem\":\n  \"∀ {G : Type u_1} [inst : AddGroup G] (H₁ H₂ : AddSubgroup G),\\n  AddSubgroup.Normal H₁ → AddSubgroup.Normal H₂ → Disjoint H₁ H₂ → ∀ (x y : G), x ∈ H₁ → y ∈ H₂ → AddCommute x y\",\n  \"isProp\": true,\n  \"docString\": \"Elements of disjoint, normal subgroups commute.\"}]\n", "prompt_cons": "/-- The topological closure of a normal subgroup is normal. -/\ntheorem ∀ {G : Type u_1} [inst : TopologicalSpace G] [inst_1 : Group G] [inst_2 : TopologicalGroup G] (N : Subgroup G)\n  [inst_3 : Subgroup.Normal N], Subgroup.Normal (Subgroup.topologicalClosure N) :=\n\n/-- Elements of disjoint, normal subgroups commute. -/\ntheorem ∀ {G : Type u_1} [inst : Group G] (H₁ H₂ : Subgroup G),\n  Subgroup.Normal H₁ → Subgroup.Normal H₂ → Disjoint H₁ H₂ → ∀ (x y : G), x ∈ H₁ → y ∈ H₂ → Commute x y :=\n\n/-- In a group that satisfies the normalizer condition, every maximal subgroup is normal -/\ntheorem ∀ {G : Type u_1} [inst : Group G] (H : Subgroup G), NormalizerCondition G → IsCoatom H → Subgroup.Normal H :=\n\n/-- Elements of disjoint, normal subgroups commute. -/\ntheorem ∀ {G : Type u_1} [inst : AddGroup G] (H₁ H₂ : AddSubgroup G),\n  AddSubgroup.Normal H₁ → AddSubgroup.Normal H₂ → Disjoint H₁ H₂ → ∀ (x y : G), x ∈ H₁ → y ∈ H₂ → AddCommute x y :=\n\n/-- Prove that characteristic subgroups are normal. -/\ntheorem", "choices": ["∀ {G : Type u_1} [inst : Group G] (H : Subgroup G), Subgroup.Characteristic H → Subgroup.Normal H ", "∀ {G : Type u_1} [inst : Group G] (H : Subgroup G),\n  Subgroup.Characteristic H → Subgroup.Normal H ", "∀ {G : Type u_1} [inst : Group G] (H : Subgroup G), Subgroup.Characteristic H → Subgroup.Normal H ", "∀ {G : Type u_1} [inst : Group G] (H : Subgroup G), Subgroup.Characteristic H → Subgroup.Normal H ", "∀ {G : Type u_1} [inst : Group G] (H : Subgroup G),\n  Subgroup.Characteristic H → Subgroup.Normal H ", "∀ {G : Type u_1} [inst : Group G] (H : Subgroup G), Subgroup.Characteristic H → Subgroup.Normal H ", "∀ {G : Type u_1} [inst : Group G] (H : Subgroup G),\n  Subgroup.Characteristic H → Subgroup.Normal H ", "forall {G : Type u_1} [inst : Group G] (H : Subgroup G),\n  Subgroup.Characteristic H → Subgroup.Normal H ", "∀ {G : Type u_1} [inst : Group G] (H : Subgroup G), Subgroup.Characteristic H → Subgroup.Normal H ", "forall {G : Type u_1} [inst : Group G] (H : Subgroup G), Subgroup.Characteristic H → Subgroup.Normal H "]}
{"docString": "If $H$ is the unique subgroup of a given order in a group $G$ prove $H$ is characteristic in $G$.", "prompts": "[{\"theorem\":\n  \"∀ {p : ℕ} {G : Type u_1} [inst : Group G] (H : Subgroup G) [inst_1 : Finite (Sylow p G)],\\n  Finite (Sylow p { x // x ∈ H })\",\n  \"isProp\": true,\n  \"docString\":\n  \"If `H` is a subgroup of `G`, then `Finite (Sylow p G)` implies `Finite (Sylow p H)`. \"},\n {\"theorem\":\n  \"∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G] {p n : ℕ} [hp : Fact (Nat.Prime p)],\\n  p ^ (n + 1) ∣ Fintype.card G →\\n    ∀ {H : Subgroup G}, Fintype.card { x // x ∈ H } = p ^ n → ∃ K, Fintype.card { x // x ∈ K } = p ^ (n + 1) ∧ H ≤ K\",\n  \"isProp\": true,\n  \"docString\":\n  \"If `H` is a subgroup of `G` of cardinality `p ^ n`,\\nthen `H` is contained in a subgroup of cardinality `p ^ (n + 1)`\\nif `p ^ (n + 1)` divides the cardinality of `G` \"},\n {\"theorem\":\n  \"∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G] (p : ℕ) {n m : ℕ} [_hp : Fact (Nat.Prime p)],\\n  p ^ m ∣ Fintype.card G →\\n    ∀ (H : Subgroup G), Fintype.card { x // x ∈ H } = p ^ n → n ≤ m → ∃ K, Fintype.card { x // x ∈ K } = p ^ m ∧ H ≤ K\",\n  \"isProp\": true,\n  \"docString\":\n  \"If `H` is a subgroup of `G` of cardinality `p ^ n`,\\nthen `H` is contained in a subgroup of cardinality `p ^ m`\\nif `n ≤ m` and `p ^ m` divides the cardinality of `G` \"},\n {\"theorem\":\n  \"∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G] {p n : ℕ} [hp : Fact (Nat.Prime p)] {H : Subgroup G},\\n  Fintype.card { x // x ∈ H } = p ^ n →\\n    Fintype.card { x // x ∈ Subgroup.normalizer H } ≡ Fintype.card G [MOD p ^ (n + 1)]\",\n  \"isProp\": true,\n  \"docString\":\n  \"If `H` is a subgroup of `G` of cardinality `p ^ n`, then the cardinality of the\\nnormalizer of `H` is congruent mod `p ^ (n + 1)` to the cardinality of `G`.  \"}]\n", "prompt_cons": "/-- If `H` is a subgroup of `G`, then `Finite (Sylow p G)` implies `Finite (Sylow p H)`. -/\ntheorem ∀ {p : ℕ} {G : Type u_1} [inst : Group G] (H : Subgroup G) [inst_1 : Finite (Sylow p G)],\n  Finite (Sylow p { x // x ∈ H }) :=\n\n/-- If `H` is a subgroup of `G` of cardinality `p ^ n`,\nthen `H` is contained in a subgroup of cardinality `p ^ (n + 1)`\nif `p ^ (n + 1)` divides the cardinality of `G` -/\ntheorem ∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G] {p n : ℕ} [hp : Fact (Nat.Prime p)],\n  p ^ (n + 1) ∣ Fintype.card G →\n    ∀ {H : Subgroup G}, Fintype.card { x // x ∈ H } = p ^ n → ∃ K, Fintype.card { x // x ∈ K } = p ^ (n + 1) ∧ H ≤ K :=\n\n/-- If `H` is a subgroup of `G` of cardinality `p ^ n`,\nthen `H` is contained in a subgroup of cardinality `p ^ m`\nif `n ≤ m` and `p ^ m` divides the cardinality of `G` -/\ntheorem ∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G] (p : ℕ) {n m : ℕ} [_hp : Fact (Nat.Prime p)],\n  p ^ m ∣ Fintype.card G →\n    ∀ (H : Subgroup G), Fintype.card { x // x ∈ H } = p ^ n → n ≤ m → ∃ K, Fintype.card { x // x ∈ K } = p ^ m ∧ H ≤ K :=\n\n/-- If `H` is a subgroup of `G` of cardinality `p ^ n`, then the cardinality of the\nnormalizer of `H` is congruent mod `p ^ (n + 1)` to the cardinality of `G`. -/\ntheorem ∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G] {p n : ℕ} [hp : Fact (Nat.Prime p)] {H : Subgroup G},\n  Fintype.card { x // x ∈ H } = p ^ n →\n    Fintype.card { x // x ∈ Subgroup.normalizer H } ≡ Fintype.card G [MOD p ^ (n + 1)] :=\n\n/-- If $H$ is the unique subgroup of a given order in a group $G$ prove $H$ is characteristic in $G$. -/\ntheorem", "choices": ["∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G] {p n : ℕ} {H : Subgroup G},\n  Fintype.card { x // x ∈ H } = p ^ n →\n    (∀ K : Subgroup G, Fintype.card { x // x ∈ K } = p ^ n → K = H) → Subgroup.characteristic H ", "∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G] {p n : ℕ} [hp : Fact (Nat.Prime p)] {H : Subgroup G},\n  Fintype.card { x // x ∈ H } = p ^ n →\n    (∀ K : Subgroup G, Fintype.card { x // x ∈ K } = p ^ n → K = H) →\n      Subgroup.IsCharSubgroup H ", "∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G] {p n : ℕ} [_hp : Fact (Nat.Prime p)] {H : Subgroup G},\n  Fintype.card { x // x ∈ H } = p ^ n →\n    (∀ K : Subgroup G, Fintype.card { x // x ∈ K } = p ^ n → K = H) →\n      Subgroup.IsCharacteristic G H ", "∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G] {p n : ℕ} [hp : Fact (Nat.Prime p)] {H : Subgroup G},\n  Fintype.card { x // x ∈ H } = p ^ n →\n    (∀ K : Subgroup G, Fintype.card { x // x ∈ K } = p ^ n → K = H) → H.char G ", "∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G] {p n : ℕ} [hp : Fact (Nat.Prime p)] {H : Subgroup G},\n  Fintype.card { x // x ∈ H } = p ^ n →\n    (∀ K : Subgroup G, Fintype.card { x // x ∈ K } = p ^ n → K = H) →\n      Subgroup.charact_of_unique_card H ", "∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G] {H : Subgroup G},\n  (∀ (K : Subgroup G), Fintype.card { x // x ∈ K } = Fintype.card { x // x ∈ H } → K = H) →\n    Subgroup.characteristic H ", "∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G] {p n : ℕ} {H : Subgroup G},\n  (∀ (K : Subgroup G), Fintype.card { x // x ∈ K } = Fintype.card { x // x ∈ H } → K = H) →\n    Subgroup.IsCharSubgroup H ", "∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G] {p n : ℕ} [hp : Fact (Nat.Prime p)] {H : Subgroup G},\n  Fintype.card { x // x ∈ H } = p ^ n →\n  (∀ K : Subgroup G, Fintype.card { x // x ∈ K } = p ^ n → K = H) →\n  Subgroup.IsChar H ", "∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G] {p n : ℕ} [hp : Fact (Nat.Prime p)] {H : Subgroup G},\n  Fintype.card { x // x ∈ H } = p ^ n →\n    (∀ K : Subgroup G, Fintype.card { x // x ∈ K } = p ^ n → K = H) →\n      Subgroup.charact H ", "∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G] {p n : ℕ} [hp : Fact (Nat.Prime p)] {H : Subgroup G},\n  Fintype.card { x // x ∈ H } = p ^ n →\n    (∀ K : Subgroup G, Fintype.card { x // x ∈ K } = p ^ n → K = H) →\n      Subgroup.characteristic H "]}
{"docString": "Prove that if $P \\in \\operatorname{Syl}_{p}(G)$ and $H$ is a subgroup of $G$ containing $P$ then $P \\in \\operatorname{Syl}_{p}(H)$.", "prompts": "[{\"theorem\":\n  \"∀ {p : ℕ} {G : Type u_1} [inst : Group G] (H : Subgroup G) [inst_1 : Finite (Sylow p G)],\\n  Finite (Sylow p { x // x ∈ H })\",\n  \"isProp\": true,\n  \"docString\":\n  \"If `H` is a subgroup of `G`, then `Finite (Sylow p G)` implies `Finite (Sylow p H)`. \"},\n {\"theorem\":\n  \"∀ {p : ℕ} {G : Type u_1} [inst : Group G] {P : Subgroup G}, IsPGroup p { x // x ∈ P } → ∃ Q, P ≤ ↑Q\",\n  \"isProp\": true,\n  \"docString\":\n  \"A generalization of **Sylow's first theorem**.\\nEvery `p`-subgroup is contained in a Sylow `p`-subgroup. \"},\n {\"theorem\":\n  \"∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G] (p : ℕ) {n : ℕ} [inst_2 : Fact (Nat.Prime p)],\\n  p ^ n ∣ Fintype.card G → ∃ K, Fintype.card { x // x ∈ K } = p ^ n\",\n  \"isProp\": true,\n  \"docString\":\n  \"A generalisation of **Sylow's first theorem**. If `p ^ n` divides\\nthe cardinality of `G`, then there is a subgroup of cardinality `p ^ n` \"},\n {\"theorem\":\n  \"∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G] {p n : ℕ} [hp : Fact (Nat.Prime p)],\\n  p ^ (n + 1) ∣ Fintype.card G →\\n    ∀ {H : Subgroup G}, Fintype.card { x // x ∈ H } = p ^ n → ∃ K, Fintype.card { x // x ∈ K } = p ^ (n + 1) ∧ H ≤ K\",\n  \"isProp\": true,\n  \"docString\":\n  \"If `H` is a subgroup of `G` of cardinality `p ^ n`,\\nthen `H` is contained in a subgroup of cardinality `p ^ (n + 1)`\\nif `p ^ (n + 1)` divides the cardinality of `G` \"}]\n", "prompt_cons": "/-- If `H` is a subgroup of `G`, then `Finite (Sylow p G)` implies `Finite (Sylow p H)`. -/\ntheorem ∀ {p : ℕ} {G : Type u_1} [inst : Group G] (H : Subgroup G) [inst_1 : Finite (Sylow p G)],\n  Finite (Sylow p { x // x ∈ H }) :=\n\n/-- A generalization of **Sylow's first theorem**.\nEvery `p`-subgroup is contained in a Sylow `p`-subgroup. -/\ntheorem ∀ {p : ℕ} {G : Type u_1} [inst : Group G] {P : Subgroup G}, IsPGroup p { x // x ∈ P } → ∃ Q, P ≤ ↑Q :=\n\n/-- A generalisation of **Sylow's first theorem**. If `p ^ n` divides\nthe cardinality of `G`, then there is a subgroup of cardinality `p ^ n` -/\ntheorem ∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G] (p : ℕ) {n : ℕ} [inst_2 : Fact (Nat.Prime p)],\n  p ^ n ∣ Fintype.card G → ∃ K, Fintype.card { x // x ∈ K } = p ^ n :=\n\n/-- If `H` is a subgroup of `G` of cardinality `p ^ n`,\nthen `H` is contained in a subgroup of cardinality `p ^ (n + 1)`\nif `p ^ (n + 1)` divides the cardinality of `G` -/\ntheorem ∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G] {p n : ℕ} [hp : Fact (Nat.Prime p)],\n  p ^ (n + 1) ∣ Fintype.card G →\n    ∀ {H : Subgroup G}, Fintype.card { x // x ∈ H } = p ^ n → ∃ K, Fintype.card { x // x ∈ K } = p ^ (n + 1) ∧ H ≤ K :=\n\n/-- Prove that if $P \\in \\operatorname{Syl}_{p}(G)$ and $H$ is a subgroup of $G$ containing $P$ then $P \\in \\operatorname{Syl}_{p}(H)$. -/\ntheorem", "choices": ["∀ {p : ℕ} {G : Type u_1} [inst : Group G] {P : Subgroup G} (H : Subgroup G),\n  P ∈ Sylow p G → (∀ x, x ∈ P → x ∈ H) → P ∈ Sylow p { x // x ∈ H } ", "∀ {p : ℕ} {G : Type u_1} [inst : Group G] {P : Subgroup G} (H : Subgroup G),\n  P ∈ Sylow p G → P ≤ H → P ∈ Sylow p { x // x ∈ H } ", "∀ {p : ℕ} {G : Type u_1} [inst : Group G] {P : Subgroup G} (H : Subgroup G),\n  P ∈ Sylow p G → P ∈ Sylow p { x // x ∈ H } ", "∀ {p : ℕ} {G : Type u_1} [inst : Group G] {P : Subgroup G} (H : Subgroup G) [inst_1 : SylowPGroup p G P],\n  P ≤ H → ∃ Q : Subgroup { x // x ∈ H }, SylowPGroup p H Q ∧ P = ↑Q ", "∀ {p : ℕ} {G : Type u_1} [inst : Group G] {P : Subgroup G} {H : Subgroup G} (hSyl : IsSylow p P) (hPH : P ≤ H),\n  IsSylow p { x // x ∈ H } ", "forall {p : ℕ} {G : Type u_1} [inst : Group G] (H : Subgroup G) (P : Subgroup G),\n  IsPGroup p { x // x ∈ P } → P ∈ Sylow p G → P ∈ Sylow p { x // x ∈ H } ", "∀ {p : ℕ} {G : Type u_1} [inst : Group G] (H : Subgroup G) (P : Subgroup G), P ∈ Sylow p G → P ≤ H → P ∈ Sylow p { x // x ∈ H } ", "∀ {p : ℕ} {G : Type u_1} [inst : Group G] {P : Subgroup G} {H : Subgroup G}, \n  IsPGroup p { x // x ∈ P } → P ≤ H → ∃ Q : Sylow p { x // x ∈ H }, P ≤ ↑Q ", "∀ {p : ℕ} {G : Type u_1} [inst : Group G] {P : Subgroup G} (H : Subgroup G),\n  IsSylow p P → P ≤ H → IsSylow p {x // x ∈ P} ", "∀ {p : ℕ} {G : Type u_1} [inst : Group G] (H : Subgroup G) (P : Sylow p G),\n  P.1 ≤ H → Sylow p { x // x ∈ H } "]}
{"docString": "Prove that a group of order 312 has a normal Sylow $p$-subgroup for some prime $p$ dividing its order.", "prompts": "[{\"theorem\":\n  \"∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G] (p : ℕ) {n : ℕ} [inst_2 : Fact (Nat.Prime p)],\\n  p ^ n ∣ Fintype.card G → ∃ K, Fintype.card { x // x ∈ K } = p ^ n\",\n  \"isProp\": true,\n  \"docString\":\n  \"A generalisation of **Sylow's first theorem**. If `p ^ n` divides\\nthe cardinality of `G`, then there is a subgroup of cardinality `p ^ n` \"},\n {\"theorem\":\n  \"∀ {p : ℕ} {G : Type u_1} [inst : Group G] {P : Subgroup G}, IsPGroup p { x // x ∈ P } → ∃ Q, P ≤ ↑Q\",\n  \"isProp\": true,\n  \"docString\":\n  \"A generalization of **Sylow's first theorem**.\\nEvery `p`-subgroup is contained in a Sylow `p`-subgroup. \"},\n {\"theorem\":\n  \"∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G] {p : ℕ} [hp : Fact (Nat.Prime p)] (P : Sylow p G),\\n  Fintype.card { x // x ∈ ↑P } = p ^ ↑(Nat.factorization (Fintype.card G)) p\",\n  \"isProp\": true,\n  \"docString\":\n  \"The cardinality of a Sylow subgroup is `p ^ n`\\nwhere `n` is the multiplicity of `p` in the group order. \"},\n {\"theorem\":\n  \"∀ (p : ℕ) (G : Type u_1) [inst : Group G] [inst_1 : Fact (Nat.Prime p)] [inst_2 : Fintype (Sylow p G)],\\n  Fintype.card (Sylow p G) ≡ 1 [MOD p]\",\n  \"isProp\": true,\n  \"docString\":\n  \"A generalization of **Sylow's third theorem**.\\nIf the number of Sylow `p`-subgroups is finite, then it is congruent to `1` modulo `p`. \"}]\n", "prompt_cons": "/-- A generalisation of **Sylow's first theorem**. If `p ^ n` divides\nthe cardinality of `G`, then there is a subgroup of cardinality `p ^ n` -/\ntheorem ∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G] (p : ℕ) {n : ℕ} [inst_2 : Fact (Nat.Prime p)],\n  p ^ n ∣ Fintype.card G → ∃ K, Fintype.card { x // x ∈ K } = p ^ n :=\n\n/-- A generalization of **Sylow's first theorem**.\nEvery `p`-subgroup is contained in a Sylow `p`-subgroup. -/\ntheorem ∀ {p : ℕ} {G : Type u_1} [inst : Group G] {P : Subgroup G}, IsPGroup p { x // x ∈ P } → ∃ Q, P ≤ ↑Q :=\n\n/-- The cardinality of a Sylow subgroup is `p ^ n`\nwhere `n` is the multiplicity of `p` in the group order. -/\ntheorem ∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G] {p : ℕ} [hp : Fact (Nat.Prime p)] (P : Sylow p G),\n  Fintype.card { x // x ∈ ↑P } = p ^ ↑(Nat.factorization (Fintype.card G)) p :=\n\n/-- A generalization of **Sylow's third theorem**.\nIf the number of Sylow `p`-subgroups is finite, then it is congruent to `1` modulo `p`. -/\ntheorem ∀ (p : ℕ) (G : Type u_1) [inst : Group G] [inst_1 : Fact (Nat.Prime p)] [inst_2 : Fintype (Sylow p G)],\n  Fintype.card (Sylow p G) ≡ 1 [MOD p] :=\n\n/-- Prove that a group of order 312 has a normal Sylow $p$-subgroup for some prime $p$ dividing its order. -/\ntheorem", "choices": ["∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G], Fintype.card G = 312 → ∃ p [hp : Fact (Nat.Prime p)], ∃ P : Sylow p G, P.normal ", "∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G] (p : ℕ) {n : ℕ} [inst_2 : Fact (Nat.Prime p)],\n  Fintype.card G = 312 → ∃ K : Subgroup G, Subgroup.normal K ∧ Fintype.card { x // x ∈ K } = p ^ n ", "∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G],\n  Fintype.card G = 312 → ∃ p [inst_2 : Fact (Nat.Prime p)], ∃ P : Sylow p G, Sylow.normal P ", "∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G], Fintype.card G = 312 → ∃ p, ∃ K : Sylow p G, ∀ H : Sylow p G, H = K ", "∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G],\n  Fintype.card G = 312 → ∃ p K, Fact (Nat.Prime p) ∧ p ∣ Fintype.card G ∧ IsPGroup p { x // x ∈ K } ∧ Subgroup.Normal K ", "∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G],\n  Fintype.card G = 312 → ∃ p K [inst_2 : Fact (Nat.Prime p)], Fintype.card { x // x ∈ K } = p ∧ IsNormalSubgroup K ", "∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G], Fintype.card G = 312 →\n  ∃ p, Fact (Nat.Prime p) ∧ p ∣ 312 ∧ ∃ (P : Sylow p G), Subgroup.normal ↑P ", "∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G],\n  Fintype.card G = 312 → ∃ p [Fact (Nat.Prime p)] (P : Sylow p G), IsNormalSubgroup P ", "∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G], Fintype.card G = 312 → ∃ p : ℕ, ∃ [inst_2 : Fact (Nat.Prime p)], ∃ P : Sylow p G, P.normal ", "∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G], Fintype.card G = 312 → ∃ p K, Fact (Nat.Prime p) ∧ p ∣ Fintype.card G ∧ is_normal_subgroup K ∧ Fintype.card { x // x ∈ K } = p "]}
{"docString": "Let $|G|=p q r$, where $p, q$ and $r$ are primes with $p<q<r$. Prove that $G$ has a normal Sylow subgroup for either $p, q$ or $r$.", "prompts": "[{\"theorem\":\n  \"∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G] (p : ℕ) {n : ℕ} [inst_2 : Fact (Nat.Prime p)],\\n  p ^ n ∣ Fintype.card G → ∃ K, Fintype.card { x // x ∈ K } = p ^ n\",\n  \"isProp\": true,\n  \"docString\":\n  \"A generalisation of **Sylow's first theorem**. If `p ^ n` divides\\nthe cardinality of `G`, then there is a subgroup of cardinality `p ^ n` \"},\n {\"theorem\":\n  \"∀ {p : ℕ} {G : Type u_1} [inst : Group G] (H : Subgroup G) [inst_1 : Finite (Sylow p G)],\\n  Finite (Sylow p { x // x ∈ H })\",\n  \"isProp\": true,\n  \"docString\":\n  \"If `H` is a subgroup of `G`, then `Finite (Sylow p G)` implies `Finite (Sylow p H)`. \"},\n {\"theorem\":\n  \"∀ (p : ℕ) (G : Type u_1) [inst : Group G] [inst_1 : Fact (Nat.Prime p)] [inst_2 : Fintype (Sylow p G)],\\n  Fintype.card (Sylow p G) ≡ 1 [MOD p]\",\n  \"isProp\": true,\n  \"docString\":\n  \"A generalization of **Sylow's third theorem**.\\nIf the number of Sylow `p`-subgroups is finite, then it is congruent to `1` modulo `p`. \"},\n {\"theorem\":\n  \"∀ {p : ℕ} {G : Type u_1} [inst : Group G] {P : Subgroup G}, IsPGroup p { x // x ∈ P } → ∃ Q, P ≤ ↑Q\",\n  \"isProp\": true,\n  \"docString\":\n  \"A generalization of **Sylow's first theorem**.\\nEvery `p`-subgroup is contained in a Sylow `p`-subgroup. \"}]\n", "prompt_cons": "/-- A generalisation of **Sylow's first theorem**. If `p ^ n` divides\nthe cardinality of `G`, then there is a subgroup of cardinality `p ^ n` -/\ntheorem ∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G] (p : ℕ) {n : ℕ} [inst_2 : Fact (Nat.Prime p)],\n  p ^ n ∣ Fintype.card G → ∃ K, Fintype.card { x // x ∈ K } = p ^ n :=\n\n/-- If `H` is a subgroup of `G`, then `Finite (Sylow p G)` implies `Finite (Sylow p H)`. -/\ntheorem ∀ {p : ℕ} {G : Type u_1} [inst : Group G] (H : Subgroup G) [inst_1 : Finite (Sylow p G)],\n  Finite (Sylow p { x // x ∈ H }) :=\n\n/-- A generalization of **Sylow's third theorem**.\nIf the number of Sylow `p`-subgroups is finite, then it is congruent to `1` modulo `p`. -/\ntheorem ∀ (p : ℕ) (G : Type u_1) [inst : Group G] [inst_1 : Fact (Nat.Prime p)] [inst_2 : Fintype (Sylow p G)],\n  Fintype.card (Sylow p G) ≡ 1 [MOD p] :=\n\n/-- A generalization of **Sylow's first theorem**.\nEvery `p`-subgroup is contained in a Sylow `p`-subgroup. -/\ntheorem ∀ {p : ℕ} {G : Type u_1} [inst : Group G] {P : Subgroup G}, IsPGroup p { x // x ∈ P } → ∃ Q, P ≤ ↑Q :=\n\n/-- Let $|G|=p q r$, where $p, q$ and $r$ are primes with $p<q<r$. Prove that $G$ has a normal Sylow subgroup for either $p, q$ or $r$. -/\ntheorem", "choices": ["∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G] (p q r : ℕ) [inst_2 : Fact (Nat.Prime p)] [inst_3 : Fact (Nat.Prime q)] [inst_4 : Fact (Nat.Prime r)],\n  Fintype.card G = p * q * r → (Sylow.exists_normal p G) ∨ (Sylow.exists_normal q G) ∨ (Sylow.exists_normal r G) ", "∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G] (p q r : ℕ) [inst_2 : Fact (Nat.Prime p)] [inst_3 : Fact (Nat.Prime q)] [inst_4 : Fact (Nat.Prime r)],\n  Fintype.card G = p * q * r → (∃ P : Sylow p G, Subgroup.Normal P) ∨ (∃ Q : Sylow q G, Subgroup.Normal Q) ∨ (∃ R : Sylow r G, Subgroup.Normal R) ", "∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G] (p q r : ℕ) [inst_2 : Fact (Nat.Prime p)] [inst_3 : Fact (Nat.Prime q)] [inst_4 : Fact (Nat.Prime r)],\n  Fintype.card G = p * q * r → (p < q) → (q < r) → (∃ K : Sylow p G, is_normal G K) ∨ (∃ L : Sylow q G, is_normal G L) ∨ (∃ M : Sylow r G, is_normal G M) ", "∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G] (p q r : ℕ) [inst_2 : Fact (Nat.Prime p)] [inst_3 : Fact (Nat.Prime q)] [inst_4 : Fact (Nat.Prime r)],\n  Fintype.card G = p * q * r → (p < q) → (q < r) → ∃ P, IsPGroup p { x // x ∈ P } ∧ Subgroup.Normal P ∨\n                                  ∃ Q, IsPGroup q { x // x ∈ Q } ∧ Subgroup.Normal Q ∨\n                                  ∃ R, IsPGroup r { x // x ∈ R } ∧ Subgroup.Normal R ", "∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G] (p q r : ℕ) [inst_2 : Fact (Nat.Prime p)] [inst_3 : Fact (Nat.Prime q)] [inst_4 : Fact (Nat.Prime r)],\n  Fintype.card G = p * q * r → (∃ M, is_normal (Sylow p G) M) ∨ (∃ N, is_normal (Sylow q G) N) ∨ (∃ O, is_normal (Sylow r G) O) ", "∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G] (p q r : ℕ) [inst_2 : Fact (Nat.Prime p)] [inst_3 : Fact (Nat.Prime q)] [inst_4 : Fact (Nat.Prime r)],\n  p < q → q < r → Fintype.card G = p * q * r → ∃ P : Sylow p G, IsNormal P ∨ ∃ Q : Sylow q G, IsNormal Q ∨ ∃ R : Sylow r G, IsNormal R ", "∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G] (p q r : ℕ) [inst_2 : Fact (Nat.Prime p)] [inst_3 : Fact (Nat.Prime q)] [inst_4 : Fact (Nat.Prime r)],\n  Fintype.card G = p * q * r → (∃ P : Sylow p G, Subgroup.normal P) ∨ (∃ Q : Sylow q G, Subgroup.normal Q) ∨ (∃ R : Sylow r G, Subgroup.normal R) ", "∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G] (p q r : ℕ) [inst_2 : Fact (Nat.Prime p)] [inst_3 : Fact (Nat.Prime q)] [inst_4 : Fact (Nat.Prime r)],\n  Fintype.card G = p * q * r → (∃ P : Sylow p G, P.normal) ∨ (∃ Q : Sylow q G, Q.normal) ∨ (∃ R : Sylow r G, R.normal) ", "∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G] (p q r : ℕ) [inst_2 : Fact (Nat.Prime p)] [inst_3 : Fact (Nat.Prime q)] [inst_4 : Fact (Nat.Prime r)],\n  p < q ∧ q < r ∧ Fintype.card G = p * q * r → (∃ P : Sylow p G, is_normal P) ∨ (∃ Q : Sylow q G, is_normal Q) ∨ (∃ R : Sylow r G, is_normal R) ", "∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G] (p q r : ℕ) [inst_2 : Fact (Nat.Prime p)] [inst_3 : Fact (Nat.Prime q)] [inst_4 : Fact (Nat.Prime r)],\n  Fintype.card G = p * q * r → (∃ P : Sylow p G, IsNormal P) ∨ (∃ Q : Sylow q G, IsNormal Q) ∨ (∃ R : Sylow r G, IsNormal R) "]}
{"docString": "Prove that a group of order 200 has a normal Sylow 5-subgroup.", "prompts": "[{\"theorem\":\n  \"∀ {G : Type u_1} [hG : Group G] [inst : Fintype G],\\n  ((p : { x // x ∈ (Nat.factorization (Fintype.card G)).support }) → (P : Sylow (↑p) G) → { x // x ∈ ↑P }) ≃* G →\\n    Group.IsNilpotent G\",\n  \"isProp\": true,\n  \"docString\":\n  \"If a finite group is the direct product of its Sylow groups, it is nilpotent \"},\n {\"theorem\":\n  \"∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G] {p : ℕ} [hp : Fact (Nat.Prime p)] (P : Sylow p G),\\n  Nat.coprime (Fintype.card { x // x ∈ ↑P }) (Subgroup.index ↑P)\",\n  \"isProp\": true,\n  \"docString\": \"Sylow subgroups are Hall subgroups. \"},\n {\"theorem\":\n  \"∀ {G : Type u_1} {s : Set G} [inst : Group G], IsNormalSubgroup (Group.normalClosure s)\",\n  \"isProp\": true,\n  \"docString\": \"The normal closure of s is a normal subgroup. \"},\n {\"theorem\":\n  \"∀ {G : Type u_1} [inst : Group G] [h : Group.IsNilpotent G], IsSolvable G\",\n  \"isProp\": true,\n  \"docString\": \"A nilpotent subgroup is solvable \"}]\n", "prompt_cons": "/-- If a finite group is the direct product of its Sylow groups, it is nilpotent -/\ntheorem ∀ {G : Type u_1} [hG : Group G] [inst : Fintype G],\n  ((p : { x // x ∈ (Nat.factorization (Fintype.card G)).support }) → (P : Sylow (↑p) G) → { x // x ∈ ↑P }) ≃* G →\n    Group.IsNilpotent G :=\n\n/-- Sylow subgroups are Hall subgroups. -/\ntheorem ∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G] {p : ℕ} [hp : Fact (Nat.Prime p)] (P : Sylow p G),\n  Nat.coprime (Fintype.card { x // x ∈ ↑P }) (Subgroup.index ↑P) :=\n\n/-- The normal closure of s is a normal subgroup. -/\ntheorem ∀ {G : Type u_1} {s : Set G} [inst : Group G], IsNormalSubgroup (Group.normalClosure s) :=\n\n/-- A nilpotent subgroup is solvable -/\ntheorem ∀ {G : Type u_1} [inst : Group G] [h : Group.IsNilpotent G], IsSolvable G :=\n\n/-- Prove that a group of order 200 has a normal Sylow 5-subgroup. -/\ntheorem", "choices": ["∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G] (h : Fintype.card G = 200),\n  ∃ (P : Sylow 5 G), IsNormalSubgroup ↑P ", "∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G] (hG : Fintype.card G = 200),\n  ∃ (P : Sylow 5 G), IsNormalSubgroup (↑P : Set G) ", "∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G] (hG : Fintype.card G = 200),\n  Exists (λ P : Sylow 5 G, Subgroup.Normal (↑P)) ", "∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G] (hG : Fintype.card G = 200), ∃ Q : Sylow 5 G, IsNormalSubgroup (↑Q) ", "∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G] (h : Fintype.card G = 200),\n  ∃ (P : Sylow 5 G), IsNormalSubgroup (↑P) ", "∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G] [h : Fintype.card G = 200],\n  ∃ P : Sylow 5 G, IsNormalSubgroup (↥↑P) ", "∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G] (hG : Fintype.card G = 200),\n  ∃ (P : Sylow 5 G), IsNormalSubgroup ↑P ", "∀ {G : Type u} [inst : Group G] [hG : Fintype G] (h : Fintype.card G = 200),\n  ∃ (P : Sylow 5 G), IsNormalSubgroup ↑P ", "∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G] (hG : Fintype.card G = 200),\n  ∃ (P : Sylow 5 G), IsNormalSubgroup (↑P) ", "∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G] [hG : Fintype.card G = 200], ∃ Q : Sylow 5 G, IsNormalSubgroup (Q : Subgroup G) "]}
{"docString": "Prove that if $|G|=1365$ then $G$ is not simple.", "prompts": "[{\"theorem\":\n  \"∀ {G : Type u_1} [inst : Group G] [hN : Nontrivial G], Monoid.IsTorsion G → ¬Monoid.IsTorsionFree G\",\n  \"isProp\": true,\n  \"docString\": \"A nontrivial torsion group is not torsion-free. \"},\n {\"theorem\":\n  \"∀ {α : Type u_1} [inst : Fintype α] [inst_1 : DecidableEq α],\\n  5 ≤ Fintype.card α →\\n    ∀ {f : Equiv.Perm α} (hf : Equiv.Perm.IsThreeCycle f),\\n      Subgroup.normalClosure {{ val := f, property := (_ : f ∈ alternatingGroup α) }} = ⊤\",\n  \"isProp\": true,\n  \"docString\":\n  \"A key lemma to prove $A_5$ is simple. Shows that any normal subgroup of an alternating group on\\nat least 5 elements is the entire alternating group if it contains a 3-cycle. \"},\n {\"theorem\":\n  \"∀ {G : Type u_1} [inst : Group G] [hN : Nontrivial G], Monoid.IsTorsionFree G → ¬Monoid.IsTorsion G\",\n  \"isProp\": true,\n  \"docString\": \"A nontrivial torsion-free group is not torsion. \"},\n {\"theorem\": \"IsSimpleGroup { x // x ∈ alternatingGroup (Fin 5) }\",\n  \"isProp\": true,\n  \"docString\":\n  \"Shows that $A_5$ is simple by taking an arbitrary non-identity element and showing by casework\\non its cycle type that its normal closure is all of $A_5$. \"}]\n", "prompt_cons": "/-- A nontrivial torsion group is not torsion-free. -/\ntheorem ∀ {G : Type u_1} [inst : Group G] [hN : Nontrivial G], Monoid.IsTorsion G → ¬Monoid.IsTorsionFree G :=\n\n/-- A key lemma to prove $A_5$ is simple. Shows that any normal subgroup of an alternating group on\nat least 5 elements is the entire alternating group if it contains a 3-cycle. -/\ntheorem ∀ {α : Type u_1} [inst : Fintype α] [inst_1 : DecidableEq α],\n  5 ≤ Fintype.card α →\n    ∀ {f : Equiv.Perm α} (hf : Equiv.Perm.IsThreeCycle f),\n      Subgroup.normalClosure {{ val := f, property := (_ : f ∈ alternatingGroup α) }} = ⊤ :=\n\n/-- A nontrivial torsion-free group is not torsion. -/\ntheorem ∀ {G : Type u_1} [inst : Group G] [hN : Nontrivial G], Monoid.IsTorsionFree G → ¬Monoid.IsTorsion G :=\n\n/-- Shows that $A_5$ is simple by taking an arbitrary non-identity element and showing by casework\non its cycle type that its normal closure is all of $A_5$. -/\ntheorem IsSimpleGroup { x // x ∈ alternatingGroup (Fin 5) } :=\n\n/-- Prove that if $|G|=1365$ then $G$ is not simple. -/\ntheorem", "choices": ["∀ {G : Type u_1} [inst : Group G] [Fintype G],\n  Fintype.card G = 1365 → (¬IsSimpleGroup G) ", "∀ {G : Type u_1} [inst : Group G] [inst_1 : Fintype G], Fintype.card G = 1365 → ¬IsSimpleGroup G ", "∀ {G : Type u_1} [inst : Group G] [inst_1 : Fintype G], Fintype.card G = 1365 → ¬IsSimpleGroup G ", "∀ {G : Type u_1} [inst : Group G] [inst_1 : Fintype G],\n  Fintype.card G = 1365 → ¬IsSimpleGroup G ", "∀ {G : Type u_1} [inst : Group G] [hN : Fintype G], Fintype.card G = 1365 → ¬IsSimpleGroup G ", "∀ {G : Type u_1} [inst : Group G] [inst_1 : Fintype G] [hN : Nontrivial G],\n  Fintype.card G = 1365 → ¬IsSimpleGroup G ", "∀ {G : Type u_1} [inst : Group G] [inst_1 : Fintype G],\n  Fintype.card G = 1365 → ¬IsSimpleGroup G ", "∀ {G : Type u_1} [inst : Group G] [inst_1 : Fintype G],\n  Fintype.card G = 1365 → ¬IsSimpleGroup G ", "∀ {G : Type u_1} [inst : Group G] [inst_1 : Fintype G],\n  Fintype.card G = 1365 → ¬IsSimpleGroup G ", "forall {G : Type u_1} [inst : Group G] [inst_1 : Fintype G] [Nonempty G],\n  Fintype.card G = 1365 → ¬IsSimpleGroup G "]}
{"docString": "Prove that if $|G|=132$ then $G$ is not simple.", "prompts": "[{\"theorem\":\n  \"∀ {G : Type u_1} [inst : Group G] [hN : Nontrivial G], Monoid.IsTorsion G → ¬Monoid.IsTorsionFree G\",\n  \"isProp\": true,\n  \"docString\": \"A nontrivial torsion group is not torsion-free. \"},\n {\"theorem\":\n  \"∀ {R : Type u_1} [inst : NonAssocSemiring R] [inst_1 : Nontrivial R], ringChar R ≠ 2 → 2 ≠ 0\",\n  \"isProp\": true,\n  \"docString\":\n  \"We have `2 ≠ 0` in a nontrivial ring whose characteristic is not `2`. \"},\n {\"theorem\":\n  \"∀ {G : Type u_1} [inst : Group G] [hN : Nontrivial G], Monoid.IsTorsionFree G → ¬Monoid.IsTorsion G\",\n  \"isProp\": true,\n  \"docString\": \"A nontrivial torsion-free group is not torsion. \"},\n {\"theorem\":\n  \"∀ (A : Type u_2) {B : Type u_1} [inst : CommRing A] [inst_1 : Ring B] [inst_2 : Algebra A B] (x : B)\\n  [inst_3 : Nontrivial B], ¬IsUnit (minpoly A x)\",\n  \"isProp\": true,\n  \"docString\": \"A minimal polynomial is not a unit. \"}]\n", "prompt_cons": "/-- A nontrivial torsion group is not torsion-free. -/\ntheorem ∀ {G : Type u_1} [inst : Group G] [hN : Nontrivial G], Monoid.IsTorsion G → ¬Monoid.IsTorsionFree G :=\n\n/-- We have `2 ≠ 0` in a nontrivial ring whose characteristic is not `2`. -/\ntheorem ∀ {R : Type u_1} [inst : NonAssocSemiring R] [inst_1 : Nontrivial R], ringChar R ≠ 2 → 2 ≠ 0 :=\n\n/-- A nontrivial torsion-free group is not torsion. -/\ntheorem ∀ {G : Type u_1} [inst : Group G] [hN : Nontrivial G], Monoid.IsTorsionFree G → ¬Monoid.IsTorsion G :=\n\n/-- A minimal polynomial is not a unit. -/\ntheorem ∀ (A : Type u_2) {B : Type u_1} [inst : CommRing A] [inst_1 : Ring B] [inst_2 : Algebra A B] (x : B)\n  [inst_3 : Nontrivial B], ¬IsUnit (minpoly A x) :=\n\n/-- Prove that if $|G|=132$ then $G$ is not simple. -/\ntheorem", "choices": ["∀ {G : Type u_1} [inst : Group G] [hN : Fintype G], Fintype.card G = 132 → ¬IsSimpleGroup G ", "∀ {G : Type u_1} [inst : Group G] [hN : Nontrivial G], Fintype.card G = 132 → ¬IsSimpleGroup G ", "∀ {G : Type u_1} [inst : Group G] {hG : Fintype G}, Fintype.card G = 132 → ¬IsSimpleGroup G ", "∀ {G : Type u_1} [inst : Group G] [hG : Fintype G], fintype.card G = 132 → ¬IsSimpleGroup G ", "∀ {G : Type u_1} [inst : Group G] [hN : Nontrivial G], Fintype.card G = 132 → ¬IsSimpleGroup G ", "∀ {G : Type u_1} [inst : Group G] [hN : Fintype G] [hG : Nontrivial G], Fintype.card G = 132 → ¬IsSimpleGroup G ", "∀ {G : Type u_1} [inst : Group G] [hN : Nontrivial G], Fintype.card G = 132 → ¬IsSimpleGroup G ", "forall {G : Type u_1} [inst : Group G] [hN : Fact (fintype.card G = 132)], ¬IsSimpleGroup G ", "∀ {G : Type u_1} [inst : Group G] [hN : Fintype G], Fintype.card G = 132 → ¬IsSimpleGroup G ", "∀ {G : Type u_1} [inst : Group G] [hN : Nontrivial G], Fintype.card G = 132 → ¬IsSimpleGroup G "]}
{"docString": "Let $G$ be a group of order 105. Prove that if a Sylow 3-subgroup of $G$ is normal then $G$ is abelian.", "prompts": "[{\"theorem\":\n  \"∀ {α : Type u_1} [inst : Fintype α] [inst_1 : DecidableEq α],\\n  5 ≤ Fintype.card α →\\n    ∀ {f : Equiv.Perm α} (hf : Equiv.Perm.IsThreeCycle f),\\n      Subgroup.normalClosure {{ val := f, property := (_ : f ∈ alternatingGroup α) }} = ⊤\",\n  \"isProp\": true,\n  \"docString\":\n  \"A key lemma to prove $A_5$ is simple. Shows that any normal subgroup of an alternating group on\\nat least 5 elements is the entire alternating group if it contains a 3-cycle. \"},\n {\"theorem\":\n  \"∀ {G : Type u_1} [hG : Group G] [inst : Fintype G],\\n  ((p : { x // x ∈ (Nat.factorization (Fintype.card G)).support }) → (P : Sylow (↑p) G) → { x // x ∈ ↑P }) ≃* G →\\n    Group.IsNilpotent G\",\n  \"isProp\": true,\n  \"docString\":\n  \"If a finite group is the direct product of its Sylow groups, it is nilpotent \"},\n {\"theorem\":\n  \"∀ {G : Type u_1} [hG : Group G] [inst : Fintype G],\\n  List.TFAE\\n    [Group.IsNilpotent G, NormalizerCondition G, ∀ (H : Subgroup G), IsCoatom H → Subgroup.Normal H,\\n      ∀ (p : ℕ), Fact (Nat.Prime p) → ∀ (P : Sylow p G), Subgroup.Normal ↑P,\\n      Nonempty\\n        (((p : { x // x ∈ (Nat.factorization (Fintype.card G)).support }) → (P : Sylow (↑p) G) → { x // x ∈ ↑P }) ≃* G)]\",\n  \"isProp\": true,\n  \"docString\":\n  \"A finite group is nilpotent iff the normalizer condition holds, and iff all maximal groups are\\nnormal and iff all sylow groups are normal and iff the group is the direct product of its sylow\\ngroups. \"},\n {\"theorem\":\n  \"∀ {g : Equiv.Perm (Fin 5)}, 3 ∈ Equiv.Perm.cycleType g → Equiv.Perm.IsThreeCycle (g * g)\",\n  \"isProp\": true,\n  \"docString\":\n  \"Part of proving $A_5$ is simple. Shows that the square of any element of $A_5$ with a 3-cycle in\\nits cycle decomposition is a 3-cycle, so the normal closure of the original element must be\\n$A_5$. \"}]\n", "prompt_cons": "/-- A key lemma to prove $A_5$ is simple. Shows that any normal subgroup of an alternating group on\nat least 5 elements is the entire alternating group if it contains a 3-cycle. -/\ntheorem ∀ {α : Type u_1} [inst : Fintype α] [inst_1 : DecidableEq α],\n  5 ≤ Fintype.card α →\n    ∀ {f : Equiv.Perm α} (hf : Equiv.Perm.IsThreeCycle f),\n      Subgroup.normalClosure {{ val := f, property := (_ : f ∈ alternatingGroup α) }} = ⊤ :=\n\n/-- If a finite group is the direct product of its Sylow groups, it is nilpotent -/\ntheorem ∀ {G : Type u_1} [hG : Group G] [inst : Fintype G],\n  ((p : { x // x ∈ (Nat.factorization (Fintype.card G)).support }) → (P : Sylow (↑p) G) → { x // x ∈ ↑P }) ≃* G →\n    Group.IsNilpotent G :=\n\n/-- A finite group is nilpotent iff the normalizer condition holds, and iff all maximal groups are\nnormal and iff all sylow groups are normal and iff the group is the direct product of its sylow\ngroups. -/\ntheorem ∀ {G : Type u_1} [hG : Group G] [inst : Fintype G],\n  List.TFAE\n    [Group.IsNilpotent G, NormalizerCondition G, ∀ (H : Subgroup G), IsCoatom H → Subgroup.Normal H,\n      ∀ (p : ℕ), Fact (Nat.Prime p) → ∀ (P : Sylow p G), Subgroup.Normal ↑P,\n      Nonempty\n        (((p : { x // x ∈ (Nat.factorization (Fintype.card G)).support }) → (P : Sylow (↑p) G) → { x // x ∈ ↑P }) ≃* G)] :=\n\n/-- Part of proving $A_5$ is simple. Shows that the square of any element of $A_5$ with a 3-cycle in\nits cycle decomposition is a 3-cycle, so the normal closure of the original element must be\n$A_5$. -/\ntheorem ∀ {g : Equiv.Perm (Fin 5)}, 3 ∈ Equiv.Perm.cycleType g → Equiv.Perm.IsThreeCycle (g * g) :=\n\n/-- Let $G$ be a group of order 105. Prove that if a Sylow 3-subgroup of $G$ is normal then $G$ is abelian. -/\ntheorem", "choices": ["∀ {G : Type u_1} [hG : Group G] [inst : Fintype G],\n  Fintype.card G = 105 →\n    (∀ (P : Sylow 3 G), Subgroup.Normal ↑P) → AddCommGroup.IsAddAbelian G ", "∀ {G : Type u_1} [hG : Group G] [inst : Fintype G],\n  Fintype.card G = 105 →\n    (∃ (P : Sylow 3 G), Subgroup.Normal ↑P) → IsAbelian G ", "∀ {G : Type u_1} [hG : Group G] [inst : Fintype G],\n  Fintype.card G = 105 →\n    (∀ (P : Sylow 3 G), Subgroup.Normal ↑P) →\n      Group.IsAbelian G ", "∀ {G : Type u_1} [hG : Group G] [inst : Fintype G],\n  Fintype.card G = 105 →\n    (∀ (P : Sylow 3 G), Subgroup.Normal ↑P) →\n      IsAbelian G ", "∀ {G : Type u_1} [hG : Group G] [inst : Fintype G],\n  Fintype.card G = 105 →\n    ∀ {P : Sylow 3 G}, Subgroup.Normal ↑P → IsAbelian G ", "∀ {G : Type u_1} [hG : Group G] [inst : Fintype G],\n  Fintype.card G = 105 →\n    ∀ (P3 : Sylow 3 G), Subgroup.Normal ↑P3 → IsAbelian G ", "∀ {G : Type u_1} [hG : Group G] [inst : Fintype G],\n  Fintype.card G = 105 →\n    (∀ (P : Sylow 3 G), Subgroup.Normal ↑P) →\n      Group.IsAbelian G ", "∀ {G : Type u_1} [hG : Group G] [inst : Fintype G],\n  Fintype.card G = 105 →\n    (∀ (P : Sylow 3 G), Subgroup.Normal ↑P) →\n      IsAbelian G ", "forall {G : Type u_1} [hG : Group G] [inst : Fintype G],\n  Fintype.card G = 105 →\n    (forall {P : Sylow 3 G}, Subgroup.Normal ↑P → Group.IsAbelian G) ", "∀ {G : Type u_1} [hG : Group G] [inst : Fintype G],\n  Fintype.card G = 105 →\n    (∃ (P : Sylow 3 G), Subgroup.Normal ↑P) → Group.IsAbelian G "]}
{"docString": "Prove that a subgroup $H$ of $G$ is normal if and only if $[G, H] \\leq H$.", "prompts": "[{\"theorem\":\n  \"∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G] {p n : ℕ} [hp : Fact (Nat.Prime p)] {H : Subgroup G},\\n  Fintype.card { x // x ∈ H } = p ^ n →\\n    Fintype.card { x // x ∈ Subgroup.normalizer H } ≡ Fintype.card G [MOD p ^ (n + 1)]\",\n  \"isProp\": true,\n  \"docString\":\n  \"If `H` is a subgroup of `G` of cardinality `p ^ n`, then the cardinality of the\\nnormalizer of `H` is congruent mod `p ^ (n + 1)` to the cardinality of `G`.  \"},\n {\"theorem\":\n  \"∀ {p : ℕ} {G : Type u_1} [inst : Group G] (H : Subgroup G) [inst_1 : Finite (Sylow p G)],\\n  Finite (Sylow p { x // x ∈ H })\",\n  \"isProp\": true,\n  \"docString\":\n  \"If `H` is a subgroup of `G`, then `Finite (Sylow p G)` implies `Finite (Sylow p H)`. \"},\n {\"theorem\":\n  \"∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G] (p : ℕ) {n m : ℕ} [_hp : Fact (Nat.Prime p)],\\n  p ^ m ∣ Fintype.card G →\\n    ∀ (H : Subgroup G), Fintype.card { x // x ∈ H } = p ^ n → n ≤ m → ∃ K, Fintype.card { x // x ∈ K } = p ^ m ∧ H ≤ K\",\n  \"isProp\": true,\n  \"docString\":\n  \"If `H` is a subgroup of `G` of cardinality `p ^ n`,\\nthen `H` is contained in a subgroup of cardinality `p ^ m`\\nif `n ≤ m` and `p ^ m` divides the cardinality of `G` \"},\n {\"theorem\":\n  \"∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G] {p n : ℕ} [hp : Fact (Nat.Prime p)],\\n  p ^ (n + 1) ∣ Fintype.card G →\\n    ∀ {H : Subgroup G}, Fintype.card { x // x ∈ H } = p ^ n → ∃ K, Fintype.card { x // x ∈ K } = p ^ (n + 1) ∧ H ≤ K\",\n  \"isProp\": true,\n  \"docString\":\n  \"If `H` is a subgroup of `G` of cardinality `p ^ n`,\\nthen `H` is contained in a subgroup of cardinality `p ^ (n + 1)`\\nif `p ^ (n + 1)` divides the cardinality of `G` \"}]\n", "prompt_cons": "/-- If `H` is a subgroup of `G` of cardinality `p ^ n`, then the cardinality of the\nnormalizer of `H` is congruent mod `p ^ (n + 1)` to the cardinality of `G`. -/\ntheorem ∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G] {p n : ℕ} [hp : Fact (Nat.Prime p)] {H : Subgroup G},\n  Fintype.card { x // x ∈ H } = p ^ n →\n    Fintype.card { x // x ∈ Subgroup.normalizer H } ≡ Fintype.card G [MOD p ^ (n + 1)] :=\n\n/-- If `H` is a subgroup of `G`, then `Finite (Sylow p G)` implies `Finite (Sylow p H)`. -/\ntheorem ∀ {p : ℕ} {G : Type u_1} [inst : Group G] (H : Subgroup G) [inst_1 : Finite (Sylow p G)],\n  Finite (Sylow p { x // x ∈ H }) :=\n\n/-- If `H` is a subgroup of `G` of cardinality `p ^ n`,\nthen `H` is contained in a subgroup of cardinality `p ^ m`\nif `n ≤ m` and `p ^ m` divides the cardinality of `G` -/\ntheorem ∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G] (p : ℕ) {n m : ℕ} [_hp : Fact (Nat.Prime p)],\n  p ^ m ∣ Fintype.card G →\n    ∀ (H : Subgroup G), Fintype.card { x // x ∈ H } = p ^ n → n ≤ m → ∃ K, Fintype.card { x // x ∈ K } = p ^ m ∧ H ≤ K :=\n\n/-- If `H` is a subgroup of `G` of cardinality `p ^ n`,\nthen `H` is contained in a subgroup of cardinality `p ^ (n + 1)`\nif `p ^ (n + 1)` divides the cardinality of `G` -/\ntheorem ∀ {G : Type u} [inst : Group G] [inst_1 : Fintype G] {p n : ℕ} [hp : Fact (Nat.Prime p)],\n  p ^ (n + 1) ∣ Fintype.card G →\n    ∀ {H : Subgroup G}, Fintype.card { x // x ∈ H } = p ^ n → ∃ K, Fintype.card { x // x ∈ K } = p ^ (n + 1) ∧ H ≤ K :=\n\n/-- Prove that a subgroup $H$ of $G$ is normal if and only if $[G, H] \\leq H$. -/\ntheorem", "choices": ["∀ {G : Type u} [inst : Group G] {H : Subgroup G},\n  Subgroup.normal H ↔ Subgroup.commSubgroup G H ≤ H ", "∀ {G : Type u} [inst : Group G] {H : Subgroup G},\n  Subgroup.normal H ↔ Subgroup.comap (MulEquiv.toMonoidHom (commutator G H)) H ≤ H ", "∀ {G : Type u} [inst : Group G] {H : Subgroup G},\n  Subgroup.normal H ↔ Subgroup.commutator G H ≤ H ", "∀ {G : Type u} [inst : Group G] {H : Subgroup G},\n  Subgroup.normal H ↔ Subgroup.to_submonoid (Subgroup.commutator G H) ≤ Subgroup.to_submonoid H ", "∀ {G : Type u} [inst : Group G] {H : Subgroup G},\n  H.normal ↔ Subgroup.comm_group H ≤ H ", "∀ {G : Type u} [inst : Group G] {H : Subgroup G},\n  Subgroup.normal H ↔ Subgroup.comap (MulAut.conjL.to_monoid_hom) H ≤ H ", "∀ {G : Type u} [inst : Group G] {H : Subgroup G},\n  Subgroup.normal H ↔ ∀ (a : G), ∀ (b : G),\n    H (a * b * a⁻¹) → H (b * a * b⁻¹) ", "∀ {G : Type u} [inst : Group G] {H : Subgroup G},\n  (Subgroup.normal H ↔ Subgroup.comm_group G H ≤ H) ", "∀ {G : Type u} [inst : Group G] {H : Subgroup G},\n  Subgroup.normal H ↔ Subgroup.IsSubgroup { x // x ∈ Subgroup.commG G H } H ", "∀ {G : Type u} [inst : Group G] (H : Subgroup G),\n  Subgroup.normal H ↔ Subgroup.comm_subgroup G H ≤ H "]}
{"docString": "Prove that if $R$ is an integral domain and $x^{2}=1$ for some $x \\in R$ then $x=\\pm 1$.", "prompts": "[{\"theorem\":\n  \"∀ {R : Type u_1} [inst : CommRing R] {P : Ideal R}, Ideal.IsPrime P → IsDomain (Polynomial R ⧸ Ideal.map Polynomial.C P)\",\n  \"isProp\": true,\n  \"docString\":\n  \"If `P` is a prime ideal of `R`, then `R[x]/(P)` is an integral domain. \"},\n {\"theorem\":\n  \"∀ {R : Type u_1} [inst : CommRing R] [inst_1 : IsDomain R] {s : Multiset (Ideal R)},\\n  Multiset.prod s = ⊥ ↔ ∃ I, I ∈ s ∧ I = ⊥\",\n  \"isProp\": true,\n  \"docString\":\n  \"A product of ideals in an integral domain is zero if and only if one of the terms is zero. \"},\n {\"theorem\":\n  \"∀ {R : Type u_1} {A : Type u_2} {B : Type u_3} [inst : CommRing R] [inst_1 : CommRing A] [inst_2 : CommRing B]\\n  [inst_3 : Algebra A B] [inst_4 : Algebra R B] [inst_5 : Algebra R A] [inst_6 : IsScalarTower R A B],\\n  Algebra.IsIntegral R A → ∀ (x : B), IsIntegral A x → IsIntegral R x\",\n  \"isProp\": true,\n  \"docString\":\n  \"If A is an R-algebra all of whose elements are integral over R,\\nand x is an element of an A-algebra that is integral over A, then x is integral over R.\"},\n {\"theorem\":\n  \"∀ (R : Type) [inst : CommRing R] [inst_1 : IsDomain R] (K : Type) [inst_2 : Field K] [inst_3 : Algebra (Polynomial R) K]\\n  [inst_4 : IsFractionRing (Polynomial R) K] (f : Polynomial R) {g₁ g₂ : Polynomial R},\\n  Polynomial.Monic g₁ →\\n    Polynomial.Monic g₂ →\\n      IsCoprime g₁ g₂ →\\n        ∃ q r₁ r₂,\\n          Polynomial.degree r₁ < Polynomial.degree g₁ ∧\\n            Polynomial.degree r₂ < Polynomial.degree g₂ ∧ ↑f / (↑g₁ * ↑g₂) = ↑q + ↑r₁ / ↑g₁ + ↑r₂ / ↑g₂\",\n  \"isProp\": true,\n  \"docString\":\n  \"Let R be an integral domain and f, g₁, g₂ ∈ R[X]. Let g₁ and g₂ be monic and coprime.\\nThen, ∃ q, r₁, r₂ ∈ R[X] such that f / g₁g₂ = q + r₁/g₁ + r₂/g₂ and deg(r₁) < deg(g₁) and\\ndeg(r₂) < deg(g₂).\\n\"}]\n", "prompt_cons": "/-- If `P` is a prime ideal of `R`, then `R[x]/(P)` is an integral domain. -/\ntheorem ∀ {R : Type u_1} [inst : CommRing R] {P : Ideal R}, Ideal.IsPrime P → IsDomain (Polynomial R ⧸ Ideal.map Polynomial.C P) :=\n\n/-- A product of ideals in an integral domain is zero if and only if one of the terms is zero. -/\ntheorem ∀ {R : Type u_1} [inst : CommRing R] [inst_1 : IsDomain R] {s : Multiset (Ideal R)},\n  Multiset.prod s = ⊥ ↔ ∃ I, I ∈ s ∧ I = ⊥ :=\n\n/-- If A is an R-algebra all of whose elements are integral over R,\nand x is an element of an A-algebra that is integral over A, then x is integral over R. -/\ntheorem ∀ {R : Type u_1} {A : Type u_2} {B : Type u_3} [inst : CommRing R] [inst_1 : CommRing A] [inst_2 : CommRing B]\n  [inst_3 : Algebra A B] [inst_4 : Algebra R B] [inst_5 : Algebra R A] [inst_6 : IsScalarTower R A B],\n  Algebra.IsIntegral R A → ∀ (x : B), IsIntegral A x → IsIntegral R x :=\n\n/-- Let R be an integral domain and f, g₁, g₂ ∈ R[X]. Let g₁ and g₂ be monic and coprime.\nThen, ∃ q, r₁, r₂ ∈ R[X] such that f / g₁g₂ = q + r₁/g₁ + r₂/g₂ and deg(r₁) < deg(g₁) and\ndeg(r₂) < deg(g₂). -/\ntheorem ∀ (R : Type) [inst : CommRing R] [inst_1 : IsDomain R] (K : Type) [inst_2 : Field K] [inst_3 : Algebra (Polynomial R) K]\n  [inst_4 : IsFractionRing (Polynomial R) K] (f : Polynomial R) {g₁ g₂ : Polynomial R},\n  Polynomial.Monic g₁ →\n    Polynomial.Monic g₂ →\n      IsCoprime g₁ g₂ →\n        ∃ q r₁ r₂,\n          Polynomial.degree r₁ < Polynomial.degree g₁ ∧\n            Polynomial.degree r₂ < Polynomial.degree g₂ ∧ ↑f / (↑g₁ * ↑g₂) = ↑q + ↑r₁ / ↑g₁ + ↑r₂ / ↑g₂ :=\n\n/-- Prove that if $R$ is an integral domain and $x^{2}=1$ for some $x \\in R$ then $x=\\pm 1$. -/\ntheorem", "choices": ["∀ (R : Type u_1) [inst : CommRing R] [inst_1 : IsDomain R] (x : R),\n  x ^ 2 = 1 → x = 1 ∨ x = -1 ", "∀ {R : Type u_1} [inst : CommRing R] [inst_1 : IsDomain R] {x : R},\n  x^2 = 1 → x = 1 ∨ x = -1 ", "∀ {R : Type u_1} [inst : CommRing R] (x : R), x^2 = 1 → x = 1 ∨ x = -1 ", "∀ {R : Type u_1} [inst : CommRing R] [inst_1 : IsDomain R] (x : R), x^2 = 1 → x = 1 ∨ x = -1 ", "∀ {R : Type u_1} [inst : CommRing R] [inst_1 : IsDomain R] (x : R), x ^ 2 = 1 → x = 1 ∨ x = -1 ", "∀ {R : Type u_1} [inst : CommRing R] [inst_1 : IsDomain R] (x : R), x ^ 2 = 1 → x = 1 ∨ x = -1 ", "∀ {R : Type u_1} [inst : CommRing R] [inst_1 : IsDomain R] (x : R), x ^ 2 = 1 → x = 1 ∨ x = -1 ", "∀ (R : Type) [inst : CommRing R] [inst_1 : IsDomain R] (x : R),\n  x^2 = 1 → x = 1 ∨ x = -1 ", "∀ {R : Type u_1} [inst : CommRing R] [inst_1 : IsDomain R] (x : R), x * x = 1 → x = 1 ∨ x = -1 ", "∀ {R : Type u_1} [inst : CommRing R] [inst_1 : IsDomain R] (x : R), x ^ 2 = 1 → x = 1 ∨ x = -1 "]}
{"docString": "A ring $R$ is called a Boolean ring if $a^{2}=a$ for all $a \\in R$. Prove that every Boolean ring is commutative.", "prompts": "[{\"theorem\":\n  \"∀ {R : Type u_1} [inst : Finite R] [inst : CommRing R] [inst_1 : IsReduced R] [inst_2 : CharP R 2] (a : R), IsSquare a\",\n  \"isProp\": true,\n  \"docString\":\n  \"If `ringChar R = 2`, where `R` is a finite reduced commutative ring,\\nthen every `a : R` is a square. \"},\n {\"theorem\":\n  \"∀ (R : Type u_1) [inst : CommRing R], Nonempty (Algebra ℚ R) ↔ ∀ (I : Ideal R), I ≠ ⊤ → CharZero (R ⧸ I)\",\n  \"isProp\": true,\n  \"docString\":\n  \"A ring is a `ℚ`-algebra iff it has equal characteristic zero. \"},\n {\"theorem\": \"∀ {α : Type u_1} [self : BooleanRing α] (a : α), a * a = a\",\n  \"isProp\": true,\n  \"docString\": \"Multiplication in a boolean ring is idempotent. \"},\n {\"theorem\":\n  \"∀ {R : Type u_1} [inst : Ring R] [inst_1 : TopologicalSpace R] [inst_2 : NonarchimedeanRing R] (U : OpenAddSubgroup R),\\n  ∃ V, ↑V * ↑V ⊆ ↑U\",\n  \"isProp\": true,\n  \"docString\":\n  \"An open subgroup of a nonarchimedean ring contains the square of another one. \"}]\n", "prompt_cons": "/-- If `ringChar R = 2`, where `R` is a finite reduced commutative ring,\nthen every `a : R` is a square. -/\ntheorem ∀ {R : Type u_1} [inst : Finite R] [inst : CommRing R] [inst_1 : IsReduced R] [inst_2 : CharP R 2] (a : R), IsSquare a :=\n\n/-- A ring is a `ℚ`-algebra iff it has equal characteristic zero. -/\ntheorem ∀ (R : Type u_1) [inst : CommRing R], Nonempty (Algebra ℚ R) ↔ ∀ (I : Ideal R), I ≠ ⊤ → CharZero (R ⧸ I) :=\n\n/-- Multiplication in a boolean ring is idempotent. -/\ntheorem ∀ {α : Type u_1} [self : BooleanRing α] (a : α), a * a = a :=\n\n/-- An open subgroup of a nonarchimedean ring contains the square of another one. -/\ntheorem ∀ {R : Type u_1} [inst : Ring R] [inst_1 : TopologicalSpace R] [inst_2 : NonarchimedeanRing R] (U : OpenAddSubgroup R),\n  ∃ V, ↑V * ↑V ⊆ ↑U :=\n\n/-- A ring $R$ is called a Boolean ring if $a^{2}=a$ for all $a \\in R$. Prove that every Boolean ring is commutative. -/\ntheorem", "choices": ["∀ {R : Type u_1} [inst : BooleanRing R], IsCommutative R (*) ", "∀ {R : Type u_1} [inst : Ring R] [self : BooleanRing R], IsCommutative R (*) ", "∀ {α : Type u_1} [self : BooleanRing α], IsCommutative α (*) ", "∀ {R : Type u_1} [inst : Ring R] [h : ∀ a : R, a * a = a], IsCommutative R ", "∀ {R : Type u_1} [self : Ring R] (h : ∀ (a : R), a * a = a), IsCommutative R (*) ", "∀ {R : Type u_1} [inst : Ring R] [inst_1 : ∀ (a : R), a * a = a], IsCommutative R (*) ", "∀ {R : Type u_1} [inst : BooleanRing R], IsCommutative R mul ", "∀ {R : Type u_1} [inst : BooleanRing R], IsCommutative R (*) ", "∀ {α : Type u_1} [self : BooleanRing α], IsCommutative α (*) ", "∀ {R : Type u_1} [inst : BooleanRing R], ∀ (a b : R), a * b = b * a "]}
{"docString": "Let $G=\\left\\{g_{1}, \\ldots, g_{n}\\right\\}$ be a finite group. Prove that the element $N=g_{1}+g_{2}+\\ldots+g_{n}$ is in the center of the group ring $R G$.", "prompts": "[{\"theorem\":\n  \"∀ {G : Type u_1} [inst : Group G], SMulCommClass G { x // x ∈ Subgroup.center G } G\",\n  \"isProp\": true,\n  \"docString\": \"The center of a group acts commutatively on that group. \"},\n {\"theorem\":\n  \"∀ {G : Type u_1} [inst : Group G], MulAction.fixedPoints (ConjAct G) G = ↑(Subgroup.center G)\",\n  \"isProp\": true,\n  \"docString\":\n  \"The set of fixed points of the conjugation action of `G` on itself is the center of `G`. \"},\n {\"theorem\":\n  \"∀ {A : Type u_1} [inst : AddGroup A] {H : AddSubgroup A},\\n  AddSubgroup.Normal H → ∀ (n : A), n ∈ H → ∀ (g : A), g + n + -g ∈ H\",\n  \"isProp\": true,\n  \"docString\": \"`N` is closed under additive conjugation \"},\n {\"theorem\":\n  \"∀ (α : Type u) (β : Type v) [inst : AddGroup α] [inst_1 : AddAction α β] [inst_2 : Fintype α]\\n  [inst_3 : (a : α) → Fintype ↑(AddAction.fixedBy α β a)] [inst_4 : Fintype (Quotient (AddAction.orbitRel α β))],\\n  (Finset.sum Finset.univ fun a => Fintype.card ↑(AddAction.fixedBy α β a)) =\\n    Fintype.card (Quotient (AddAction.orbitRel α β)) * Fintype.card α\",\n  \"isProp\": true,\n  \"docString\":\n  \"**Burnside's lemma** : given a finite additive group `G` acting on a set `X`,\\nthe average number of elements fixed by each `g ∈ G` is the number of orbits. \"}]\n", "prompt_cons": "/-- The center of a group acts commutatively on that group. -/\ntheorem ∀ {G : Type u_1} [inst : Group G], SMulCommClass G { x // x ∈ Subgroup.center G } G :=\n\n/-- The set of fixed points of the conjugation action of `G` on itself is the center of `G`. -/\ntheorem ∀ {G : Type u_1} [inst : Group G], MulAction.fixedPoints (ConjAct G) G = ↑(Subgroup.center G) :=\n\n/-- `N` is closed under additive conjugation -/\ntheorem ∀ {A : Type u_1} [inst : AddGroup A] {H : AddSubgroup A},\n  AddSubgroup.Normal H → ∀ (n : A), n ∈ H → ∀ (g : A), g + n + -g ∈ H :=\n\n/-- **Burnside's lemma** : given a finite additive group `G` acting on a set `X`,\nthe average number of elements fixed by each `g ∈ G` is the number of orbits. -/\ntheorem ∀ (α : Type u) (β : Type v) [inst : AddGroup α] [inst_1 : AddAction α β] [inst_2 : Fintype α]\n  [inst_3 : (a : α) → Fintype ↑(AddAction.fixedBy α β a)] [inst_4 : Fintype (Quotient (AddAction.orbitRel α β))],\n  (Finset.sum Finset.univ fun a => Fintype.card ↑(AddAction.fixedBy α β a)) =\n    Fintype.card (Quotient (AddAction.orbitRel α β)) * Fintype.card α :=\n\n/-- Let $G=\\left\\{g_{1}, \\ldots, g_{n}\\right\\}$ be a finite group. Prove that the element $N=g_{1}+g_{2}+\\ldots+g_{n}$ is in the center of the group ring $R G$. -/\ntheorem", "choices": ["∀ {R : Type u_1} {G : Type u_2} [inst : Semiring R] [inst_1 : Group G] [inst_2 : Fintype G],\n  (Finset.sum Finset.univ fun a => a) ∈ Subgroup.center (GroupRing R G) ", "∀ {R : Type u} [inst : Semiring R] {G : Type v} [inst_1 : Group G] [inst_2 : Fintype G],\n  let N : R[G] ", "∀ {R : Type u} [inst : CommRing R] {G : Type v} [inst_1 : Group G] [inst_2 : Fintype G],\n  let N ", "∀ {R : Type u_1} {G : Type u_2} [inst : Semiring R] [inst_2 : Group G] [inst_3 : Fintype G],\n  let N ", "∀ {R : Type u_1} [inst : Ring R] {G : Type u_2} [inst_1 : Group G] [inst_2 : Fintype G], \n  let N ", "∀ {R : Type u} {G : Type v} [inst : Semiring R] [inst_1 : Group G] [inst_2 : Fintype G] [inst_3 : MulSemiringAction R G],\n  let N : R[G] ", "∀ {R : Type u} {G : Type v} [inst : Semiring R] [inst_1 : Group G] [inst_2 : Fintype G],\n  let N ", "∀ {R : Type u_1} [inst : Semiring R] {G : Type u_2} [inst_1 : Group G] [inst_2 : Fintype G],\n  let N ", "∀ {R : Type u} [inst : CommRing R] {G : Type v} [inst_1 : Fintype G] [inst_2 : Mul G] [inst_3 : One G],\n  (Finset.sum Finset.univ (fun g => g)) ∈ Subgroup.center (GroupRing R G) ", "forall {R : Type u} {G : Type v} [inst : Semiring R] [inst_1 : Group G] [inst_2 : Fintype G]\n  [inst_3 : MulSemiringAction G R], (Finset.sum Finset.univ fun g => g) ∈ Subgroup.center (GroupRing R G) "]}
{"docString": "An ideal $N$ is called nilpotent if $N^{n}$ is the zero ideal for some $n \\geq 1$. Prove that the ideal $p \\mathbb{Z} / p^{m} \\mathbb{Z}$ is a nilpotent ideal in the ring $\\mathbb{Z} / p^{m} \\mathbb{Z}$.", "prompts": "[{\"theorem\":\n  \"∀ {G : Type u_1} [inst : Group G] (H : Subgroup G) [inst_1 : Subgroup.Normal H] [_h : Group.IsNilpotent G],\\n  Group.IsNilpotent (G ⧸ H)\",\n  \"isProp\": true,\n  \"docString\": \"A quotient of a nilpotent group is nilpotent \"},\n {\"theorem\":\n  \"∀ {G : Type u_1} [hG : Group G] [inst : Finite G] {p : ℕ} [hp : Fact (Nat.Prime p)], IsPGroup p G → Group.IsNilpotent G\",\n  \"isProp\": true,\n  \"docString\": \"A p-group is nilpotent \"},\n {\"theorem\":\n  \"∀ {η : Type u_1} {Gs : η → Type u_2} [inst : (i : η) → Group (Gs i)] [inst_1 : Finite η]\\n  [inst_2 : ∀ (i : η), Group.IsNilpotent (Gs i)], Group.IsNilpotent ((i : η) → Gs i)\",\n  \"isProp\": true,\n  \"docString\": \"n-ary products of nilpotent groups are nilpotent \"},\n {\"theorem\":\n  \"∀ {G : Type u_1} [inst : Group G] [h : Group.IsNilpotent G], IsSolvable G\",\n  \"isProp\": true,\n  \"docString\": \"A nilpotent subgroup is solvable \"}]\n", "prompt_cons": "/-- A quotient of a nilpotent group is nilpotent -/\ntheorem ∀ {G : Type u_1} [inst : Group G] (H : Subgroup G) [inst_1 : Subgroup.Normal H] [_h : Group.IsNilpotent G],\n  Group.IsNilpotent (G ⧸ H) :=\n\n/-- A p-group is nilpotent -/\ntheorem ∀ {G : Type u_1} [hG : Group G] [inst : Finite G] {p : ℕ} [hp : Fact (Nat.Prime p)], IsPGroup p G → Group.IsNilpotent G :=\n\n/-- n-ary products of nilpotent groups are nilpotent -/\ntheorem ∀ {η : Type u_1} {Gs : η → Type u_2} [inst : (i : η) → Group (Gs i)] [inst_1 : Finite η]\n  [inst_2 : ∀ (i : η), Group.IsNilpotent (Gs i)], Group.IsNilpotent ((i : η) → Gs i) :=\n\n/-- A nilpotent subgroup is solvable -/\ntheorem ∀ {G : Type u_1} [inst : Group G] [h : Group.IsNilpotent G], IsSolvable G :=\n\n/-- An ideal $N$ is called nilpotent if $N^{n}$ is the zero ideal for some $n \\geq 1$. Prove that the ideal $p \\mathbb{Z} / p^{m} \\mathbb{Z}$ is a nilpotent ideal in the ring $\\mathbb{Z} / p^{m} \\mathbb{Z}$. -/\ntheorem", "choices": ["∀ {p m : ℕ} [hp : Fact (Nat.Prime p)] [hm : 1 ≤ m], Ideal.IsNilpotent (Ideal.span ({p} : Set (Zmod (p ^ m)))) ", "/-- A quotient of a nilpotent group is nilpotent -/\ntheorem quotient_nilpotent {G : Type u_1} [inst : Group G] (H : Subgroup G) [inst_1 : Subgroup.Normal H] [_h : Group.IsNilpotent G] :\n  Group.IsNilpotent (G ⧸ H) ", "∀ {m : ℕ} {p : ℕ} [hp : Fact (Nat.Prime p)], Ideal.IsNilpotent (Ideal.span {p} : Ideal (Zmod (p^m))) ", "∀ {R : Type u_1} [comm_ring R] [is_domain R] {p m : ℕ} [hp : Fact (Nat.Prime p)], \n  Ideal.IsNilpotent (Ideal.span {p} : Ideal (R ⧸ (Ideal.span {p ^ m}))) ", "forall (p m : ℕ) [hp : Fact (Nat.Prime p)] [hm : 0 < m],\n  IsNilpotentIdeal (Ideal_span ({p} : Set (Zmod (p ^ m)))) ", "∀ {m : ℕ} {p : ℕ} [hp : Fact (Nat.Prime p)], Ring.IsNilpotentIdeal (Ideal.span {p} : Ideal (Zmod (p ^ m))) ", "∀ {p m : ℕ} [hp : Fact (Nat.Prime p)], \n  Ideal.IsNilpotent (Ideal.span {(p : Zmod (p ^ m))}) ", "{p : ℕ} [hp : Fact (Nat.Prime p)] {m : ℕ} (m_pos : 0 < m) :\n  Ring.Ideal.IsNilpotent (Ideal.span (singleton (coe p)) : Ideal (Zmod (p ^ m))) ", "∀ {R : Type u_1} [inst : CommRing R] (I : Ideal R) [inst_2 : Ideal.IsPrincipal I] {m : ℕ} {p : ℕ} [hp : Fact (Nat.Prime p)],\n  (I = Ideal.span ({p ^ m})) → Ideal.IsNilpotent (I ⧸ (Ideal.span ({p ^ (m - 1)}))) ", "∀ {R : Type u_1} [inst : CommRing R] (N : Ideal R) [inst_1 : Ideal.IsNilpotent N], IsNilpotentIdeal (N ⧸ N) "]}
{"docString": "Let $N$ be a positive integer. Let $M$ be an integer relatively prime to $N$ and let $d$ be an integer relatively prime to $\\varphi(N)$, where $\\varphi$ denotes Euler's $\\varphi$-function. Prove that if $M_{1} \\equiv M^{d} \\pmod N$ then $M \\equiv M_{1}^{d^{\\prime}} \\pmod N$ where $d^{\\prime}$ is the inverse of $d \\bmod \\varphi(N)$: $d d^{\\prime} \\equiv 1 \\pmod {\\varphi(N)}$.", "prompts": "[{\"theorem\":\n  \"∀ {n : ℕ}, n ≠ 0 → ∀ (d : ℕ), ∃ᶠ (m : ℕ) in Filter.atTop, m ≡ d [MOD n]\",\n  \"isProp\": true,\n  \"docString\": \"Infinitely many natural numbers are equal to `d` mod `n`. \"},\n {\"theorem\":\n  \"∀ {a b c : ℤ}, a % b = c → Int.natAbs (a - c) < Int.natAbs b → a = c\",\n  \"isProp\": true,\n  \"docString\":\n  \"If two integers are congruent to a sufficiently large modulus,\\nthey are equal. \"},\n {\"theorem\":\n  \"∀ {M : Type u_1} [inst : Monoid M] (c : Con M) (n : ℕ) {w x : M}, ↑c w x → ↑c (w ^ n) (x ^ n)\",\n  \"isProp\": true,\n  \"docString\": \"Multiplicative congruence relations preserve natural powers. \"},\n {\"theorem\": \"∀ {a : ℤ} {m n : ℕ}, Int.gcd a (↑m * ↑n) = 1 → Int.gcd a ↑n = 1\",\n  \"isProp\": true,\n  \"docString\": \"If `gcd a (m * n) = 1`, then `gcd a n = 1`. \"}]\n", "prompt_cons": "/-- Infinitely many natural numbers are equal to `d` mod `n`. -/\ntheorem ∀ {n : ℕ}, n ≠ 0 → ∀ (d : ℕ), ∃ᶠ (m : ℕ) in Filter.atTop, m ≡ d [MOD n] :=\n\n/-- If two integers are congruent to a sufficiently large modulus,\nthey are equal. -/\ntheorem ∀ {a b c : ℤ}, a % b = c → Int.natAbs (a - c) < Int.natAbs b → a = c :=\n\n/-- Multiplicative congruence relations preserve natural powers. -/\ntheorem ∀ {M : Type u_1} [inst : Monoid M] (c : Con M) (n : ℕ) {w x : M}, ↑c w x → ↑c (w ^ n) (x ^ n) :=\n\n/-- If `gcd a (m * n) = 1`, then `gcd a n = 1`. -/\ntheorem ∀ {a : ℤ} {m n : ℕ}, Int.gcd a (↑m * ↑n) = 1 → Int.gcd a ↑n = 1 :=\n\n/-- Let $N$ be a positive integer. Let $M$ be an integer relatively prime to $N$ and let $d$ be an integer relatively prime to $\\varphi(N)$, where $\\varphi$ denotes Euler's $\\varphi$-function. Prove that if $M_{1} \\equiv M^{d} \\pmod N$ then $M \\equiv M_{1}^{d^{\\prime}} \\pmod N$ where $d^{\\prime}$ is the inverse of $d \\bmod \\varphi(N)$: $d d^{\\prime} \\equiv 1 \\pmod {\\varphi(N)}$. -/\ntheorem", "choices": ["∀ {N : ℕ}, N > 0 → ∀ {M : ℤ} {d : ℕ}, Int.gcd M ↑N = 1 → Int.gcd d (Nat.totient N) = 1 → ∀ (M_1 : ℤ), M_1 ≡ M ^ d [MOD ↑N] → ∃ (d' : ℕ), d * d' ≡ 1 [MOD Nat.totient N] ∧ M ≡ M_1 ^ d' [MOD ↑N] ", "∀ {N : ℕ}, N > 0 → ∀ {M : ℤ}, Int.gcd M ↑N = 1 → ∀ {d : ℕ}, Int.gcd d (nat.totient N) = 1 → ∀ {M₁ : ℤ}, M₁ ≡ M ^ d [MOD ↑N] → ∃ (d' : ℕ), d * d' ≡ 1 [MOD nat.totient N] ∧ M ≡ M₁ ^ d' [MOD ↑N] ", "∀ {N : ℕ} (hN : N ≠ 0) {M : ℤ} {d : ℕ}, Int.gcd M ↑N = 1 → Int.gcd ↑d (Euler.phi N) = 1 → ∀ {M1 : ℤ}, M1 ≡ M ^ ↑d [MOD ↑N] → ∃ (dp : ℕ), dp ≡ d⁻¹ [MOD Euler.phi N] ∧ M ≡ M1 ^ ↑dp [MOD ↑N] ", "∀ {N : ℕ}, N > 0 → ∀ {M d : ℤ}, Int.gcd M ↑N = 1 → Int.gcd d (nat.totient N) = 1 → ∀ {M₁ : ℤ}, M₁ ≡ M^d [MOD ↑N] → ∃ (d' : ℤ), d * d' ≡ 1 [MOD nat.totient N] ∧ M ≡ M₁^d' [MOD ↑N] ", "∀ {N : ℕ}, N > 0 → ∀ {M d : ℤ}, Int.gcd M ↑N = 1 → Int.gcd d (Int.natAbs (Euler.phi N)) = 1 →\n  ∀ {M₁ : ℤ}, M₁ ≡ (M^d) [MOD ↑N] → ∃ (d' : ℤ), d * d' ≡ 1 [MOD (Int.natAbs (Euler.phi N))] ∧ M ≡ (M₁^d') [MOD ↑N] ", "∀ {N M d M₁ : ℕ}, N > 0 → Int.gcd M N = 1 → Int.gcd d (nat.totient N) = 1 → (M₁ ≡ (M ^ d) [MOD N]) → ∃ (d' : ℕ), (d * d') % nat.totient N = 1 ∧ (M ≡ (M₁ ^ d') [MOD N]) ", "∀ {N : ℕ}, N > 0 → ∀ {M : ℤ}, Int.gcd M ↑N = 1 → ∀ {d : ℤ}, Int.gcd d (Int.natAbs (Euler.phi N)) = 1 →\n  ∀ {M1 : ℤ}, M1 ≡ (M ^ d) [ZMOD ↑N] →\n  ∃ (d' : ℤ), d * d' ≡ 1 [ZMOD (Int.natAbs (Euler.phi N))] ∧ M ≡ (M1 ^ d') [ZMOD ↑N] ", "∀ {N : ℕ}, N > 0 → ∀ {M d : ℤ}, Int.gcd M ↑N = 1 → Int.gcd d (Int.ofNat (Nat.totient N)) = 1 → ∀ {M1 : ℤ}, M1 ≡ (M ^ d) [ZMOD ↑N] → ∃ (d' : ℤ), d * d' ≡ 1 [ZMOD (Int.ofNat (Nat.totient N))] → M ≡ (M1 ^ d') [ZMOD ↑N] ", "∀ {N : ℕ}, N > 0 → ∀ {M : ℤ}, Int.gcd M ↑N = 1 → ∀ {d : ℕ}, Int.gcd ↑d (Nat.totient N) = 1 → ∀ {M₁ : ℤ}, M₁ ≡ M ^ d [MOD ↑N] → ∃ (d' : ℕ), d * d' ≡ 1 [MOD Nat.totient N] ∧ M ≡ M₁ ^ d' [MOD ↑N] ", "∀ {N : ℕ} (hn : N > 0) {M : ℤ} (hM : Int.gcd M ↑N = 1) {d : ℕ} (hd : Int.gcd (↑d) (nat.totient N) = 1) {M₁ : ℤ}, M₁ ≡ M ^ d [ZMOD ↑N] → ∃ (d' : ℕ), (↑d * ↑d') % nat.totient N = 1 ∧ M ≡ M₁ ^ d' [ZMOD ↑N] "]}
{"docString": "Prove that if an integer is the sum of two rational squares, then it is the sum of two integer squares.", "prompts": "[{\"theorem\":\n  \"∀ {a b x y u v : ℕ}, a = x ^ 2 + y ^ 2 → b = u ^ 2 + v ^ 2 → ∃ r s, a * b = r ^ 2 + s ^ 2\",\n  \"isProp\": true,\n  \"docString\":\n  \"The set of natural numbers that are sums of two squares is closed under multiplication. \"},\n {\"theorem\": \"∀ {n : ℕ}, IsSquare (-1) → ∃ x y, n = x ^ 2 + y ^ 2\",\n  \"isProp\": true,\n  \"docString\":\n  \"If `-1` is a square modulo the natural number `n`, then `n` is a sum of two squares. \"},\n {\"theorem\":\n  \"∀ {α : Type u} [inst : LinearOrderedRing α] {x y : α}, x * x + y * y = 0 ↔ x = 0 ∧ y = 0\",\n  \"isProp\": true,\n  \"docString\": \"The sum of two squares is zero iff both elements are zero. \"},\n {\"theorem\": \"∀ {m n : ℕ}, (∀ (a : ℕ), m ∣ a ↔ n ∣ a) ↔ m = n\",\n  \"isProp\": true,\n  \"docString\":\n  \"Two natural numbers are equal if and only if they have the same multiples. \"}]\n", "prompt_cons": "/-- The set of natural numbers that are sums of two squares is closed under multiplication. -/\ntheorem ∀ {a b x y u v : ℕ}, a = x ^ 2 + y ^ 2 → b = u ^ 2 + v ^ 2 → ∃ r s, a * b = r ^ 2 + s ^ 2 :=\n\n/-- If `-1` is a square modulo the natural number `n`, then `n` is a sum of two squares. -/\ntheorem ∀ {n : ℕ}, IsSquare (-1) → ∃ x y, n = x ^ 2 + y ^ 2 :=\n\n/-- The sum of two squares is zero iff both elements are zero. -/\ntheorem ∀ {α : Type u} [inst : LinearOrderedRing α] {x y : α}, x * x + y * y = 0 ↔ x = 0 ∧ y = 0 :=\n\n/-- Two natural numbers are equal if and only if they have the same multiples. -/\ntheorem ∀ {m n : ℕ}, (∀ (a : ℕ), m ∣ a ↔ n ∣ a) ↔ m = n :=\n\n/-- Prove that if an integer is the sum of two rational squares, then it is the sum of two integer squares. -/\ntheorem", "choices": ["∀ {n : ℤ}, ∃ x y : ℚ, n = x ^ 2 + y ^ 2 → ∃ r s : ℤ, n = r ^ 2 + s ^ 2 ", "∀ {n : ℤ}, (∃ x y : ℚ, n = x ^ 2 + y ^ 2) → ∃ r s : ℤ, n = r ^ 2 + s ^ 2 ", "∀ {k : ℤ}, (∃ x y : ℚ, k = x ^ 2 + y ^ 2) → ∃ r s : ℤ, k = r ^ 2 + s ^ 2 ", "∀ {n : ℤ}, (∃ (x y : ℚ), n = x ^ 2 + y ^ 2) → ∃ (a b : ℤ), n = a ^ 2 + b ^ 2 ", "∀ {z : ℤ}, (∃ p q r s : ℚ, z = (p * p + q * q) ∧ z = (r * r + s * s)) → ∃ x y, z = x ^ 2 + y ^ 2 ", "∀ {x y z : ℚ}, z = x ^ 2 + y ^ 2 → ∃ m n : ℕ, z = (m ^ 2 + n ^ 2) ", "∀ {z : ℤ}, ∃ p q : ℚ, z = p ^ 2 + q ^ 2 → ∃ x y : ℤ, z = x ^ 2 + y ^ 2 ", "∀ {m : ℤ}, (∃ x y : ℚ, m = x ^ 2 + y ^ 2) → ∃ r s : ℤ, m = r ^ 2 + s ^ 2 ", "∀ {n : ℤ}, (∃ x y : ℚ, n = x ^ 2 + y ^ 2) → ∃ r s : ℤ, n = r ^ 2 + s ^ 2 ", "∀ {z : ℤ}, ∃ x y : ℚ, z = x ^ 2 + y ^ 2 → ∃ r s : ℤ, z = r ^ 2 + s ^ 2 "]}
{"docString": "Prove that the quotient ring $\\mathbb{Z}[i] /(1+i)$ is a field of order 2.", "prompts": "[{\"theorem\":\n  \"∀ {R : Type u} [inst : CommRing R] (I : Ideal R), Ideal.IsMaximal I ↔ IsField (R ⧸ I)\",\n  \"isProp\": true,\n  \"docString\":\n  \"The quotient of a ring by an ideal is a field iff the ideal is maximal. \"},\n {\"theorem\":\n  \"∀ {F : Type u_1} [inst : Field F] [inst_1 : Finite F], ringChar F = 2 → ∀ (a : F), IsSquare a\",\n  \"isProp\": true,\n  \"docString\":\n  \"In a finite field of characteristic `2`, all elements are squares. \"},\n {\"theorem\":\n  \"∀ {F : Type u_1} [inst : Field F] [inst_1 : Fintype F], ringChar F = 2 ↔ Fintype.card F % 2 = 0\",\n  \"isProp\": true,\n  \"docString\":\n  \"The finite field `F` has even cardinality iff it has characteristic `2`. \"},\n {\"theorem\":\n  \"∀ {R : Type u_1} [inst : CommRing R] [inst_1 : IsDomain R] [inst_2 : IsDedekindDomain R]\\n  [inst_3 : Fintype (ClassGroup R)], Fintype.card (ClassGroup R) = 1 ↔ IsPrincipalIdealRing R\",\n  \"isProp\": true,\n  \"docString\":\n  \"The class number is `1` iff the ring of integers is a principal ideal domain. \"}]\n", "prompt_cons": "/-- The quotient of a ring by an ideal is a field iff the ideal is maximal. -/\ntheorem ∀ {R : Type u} [inst : CommRing R] (I : Ideal R), Ideal.IsMaximal I ↔ IsField (R ⧸ I) :=\n\n/-- In a finite field of characteristic `2`, all elements are squares. -/\ntheorem ∀ {F : Type u_1} [inst : Field F] [inst_1 : Finite F], ringChar F = 2 → ∀ (a : F), IsSquare a :=\n\n/-- The finite field `F` has even cardinality iff it has characteristic `2`. -/\ntheorem ∀ {F : Type u_1} [inst : Field F] [inst_1 : Fintype F], ringChar F = 2 ↔ Fintype.card F % 2 = 0 :=\n\n/-- The class number is `1` iff the ring of integers is a principal ideal domain. -/\ntheorem ∀ {R : Type u_1} [inst : CommRing R] [inst_1 : IsDomain R] [inst_2 : IsDedekindDomain R]\n  [inst_3 : Fintype (ClassGroup R)], Fintype.card (ClassGroup R) = 1 ↔ IsPrincipalIdealRing R :=\n\n/-- Prove that the quotient ring $\\mathbb{Z}[i] /(1+i)$ is a field of order 2. -/\ntheorem", "choices": ["quotient_Zi_by_1_plus_i_is_field_of_order_2 : IsField (ℤ[i] ⧸ Ideal.span [(1 + I)]) ∧ Fintype.card (ℤ[i] ⧸ Ideal.span [(1 + I)]) = 2 ", "Ideal.Quotient.mk (Ideal.span {(1 + I)} : Ideal ℤ[i]) = ideal.quotient.mk (Ideal.span {(1 + I)}),\nInst : Field (ℤ[i] ⧸ Ideal.span {(1 + I)}) ", "Ideal.QuotientIsFieldOfOrderTwo : ∀ {R : Type u_1} [inst : CommRing R] [inst_1 : IsDomain R] (I : Ideal R),\n  Ideal.IsMaximal I → Fintype.card (R ⧸ I) = 2 → IsField (R ⧸ I) ", "IsField (ℤ[i] ⧸ (1 + I)) ∧ Fintype.card (ℤ[i] ⧸ (1 + I)) = 2 ", "IsField (ℤ[i] ⧸ Ideal.span {(1 + I)}) ∧ Fintype.card (ℤ[i] ⧸ Ideal.span {(1 + I)}) = 2 ", "∀ {I : Ideal ℤ[i]}, I = Ideal.span {(1 : ℤ[i]) + I} → IsField (ℤ[i] ⧸ I) ∧ Fintype.card (ℤ[i] ⧸ I) = 2 ", "IsField (ℤ[i] ⧸ Ideal.span {(1 + I)}) ∧ Fintype.card (ℤ[i] ⧸ Ideal.span {(1 + I)}) = 2 ", "inst_1 : Fintype (ℤ[i] ⧸ (1 + I)),\nIsField (ℤ[i] ⧸ (1 + I)) ∧ Fintype.card (ℤ[i] ⧸ (1 + I)) = 2 ", "QuotientRing_Zi_Field : ∃ (I : Ideal ℤ[i]), Ideal.IsMaximal I ∧ Fintype.card (ℤ[i] ⧸ I) = 2 ", "IsField (ℤ[i] ⧸ Ideal.span {(1 + I)} : Type u_1) ∧ Fintype.card (ℤ[i] ⧸ Ideal.span {(1 + I)}) = 2 "]}
{"docString": "Prove that $(x, y)$ is not a principal ideal in $\\mathbb{Q}[x, y]$.", "prompts": "[{\"theorem\":\n  \"∀ (A : Type u_2) {B : Type u_1} [inst : CommRing A] [inst_1 : Ring B] [inst_2 : Algebra A B] (x : B)\\n  [inst_3 : Nontrivial B], ¬IsUnit (minpoly A x)\",\n  \"isProp\": true,\n  \"docString\": \"A minimal polynomial is not a unit. \"},\n {\"theorem\":\n  \"∀ (R : Type u_1) (S : Type u_2) [inst : Ring R] [inst_1 : Ring S] [inst : IsDomain (R × S)] [inst : Nontrivial R]\\n  [inst : Nontrivial S], False\",\n  \"isProp\": true,\n  \"docString\": \"The product of two nontrivial rings is not a domain \"},\n {\"theorem\":\n  \"∀ {d : ℤ} {a : Pell.Solution₁ d}, 1 < Pell.Solution₁.x a → Pell.Solution₁.y a ≠ 0\",\n  \"isProp\": true,\n  \"docString\": \"A solution with `x > 1` must have `y ≠ 0`. \"},\n {\"theorem\":\n  \"∀ {R : Type u_1} [inst : NonAssocSemiring R] [inst_1 : Nontrivial R], ringChar R ≠ 2 → 2 ≠ 0\",\n  \"isProp\": true,\n  \"docString\":\n  \"We have `2 ≠ 0` in a nontrivial ring whose characteristic is not `2`. \"}]\n", "prompt_cons": "/-- A minimal polynomial is not a unit. -/\ntheorem ∀ (A : Type u_2) {B : Type u_1} [inst : CommRing A] [inst_1 : Ring B] [inst_2 : Algebra A B] (x : B)\n  [inst_3 : Nontrivial B], ¬IsUnit (minpoly A x) :=\n\n/-- The product of two nontrivial rings is not a domain -/\ntheorem ∀ (R : Type u_1) (S : Type u_2) [inst : Ring R] [inst_1 : Ring S] [inst : IsDomain (R × S)] [inst : Nontrivial R]\n  [inst : Nontrivial S], False :=\n\n/-- A solution with `x > 1` must have `y ≠ 0`. -/\ntheorem ∀ {d : ℤ} {a : Pell.Solution₁ d}, 1 < Pell.Solution₁.x a → Pell.Solution₁.y a ≠ 0 :=\n\n/-- We have `2 ≠ 0` in a nontrivial ring whose characteristic is not `2`. -/\ntheorem ∀ {R : Type u_1} [inst : NonAssocSemiring R] [inst_1 : Nontrivial R], ringChar R ≠ 2 → 2 ≠ 0 :=\n\n/-- Prove that $(x, y)$ is not a principal ideal in $\\mathbb{Q}[x, y]$. -/\ntheorem", "choices": ["∀ (Q : Type u_1) [inst : Field Q], ¬IsPrincipalIdealRing (Q[x, y]) ", "∀ (Q : Type u_1) [inst : Field Q], ¬IsPrincipalIdealRing (Q[X, Y]) ", "∀ (R : Type u_1) [inst : Field R] [inst_1 : CommRing (Polynomial R)], ¬IsPrincipalIdealRing (Polynomial R × Polynomial R) ", "∀ (Q : Type) (x y : Q) [inst : Field Q], ¬IsPrincipalIdealRing (Q[x, y]) ", "∀ (Q : Type u_1) [inst : Field Q] {x y : Q[X]}, ¬IsPrincipalIdealRing (Q[X, y]) ", "∀ (R : Type u_1) (S : Type u_2) [inst : CommRing R] [inst_1 : CommRing S] [inst_2 : IsDomain R] [inst_3 : IsDomain S] [inst_4 : Algebra R S],\n¬IsPrincipalIdealRing (R × S) ", "∀ (x y : Rat.Polynomial) [inst : CommRing Rat.Polynomial], ¬IsPrincipalIdealRing (Rat.Polynomial × Rat.Polynomial) ", "not_principal_ideal_Qxy : ∀ (x y : ℚ[X]), ¬IsPrincipalIdealRing (x, y) ", "∀ (Q : Type u_1) [inst : Field Q] (x y : Polynomial Q), ¬IsPrincipalIdealRing (Polynomial Q × Polynomial Q) ", "NotPrincipalIdeal.exists_xy (QX : Type u_1) [inst : CommRing QX] [inst_1 : IsDomain QX] [inst_2 : Algebra ℚ QX] (x y : QX) : ¬IsPrincipalIdealRing QX "]}
{"docString": "Prove that if $f(x)$ and $g(x)$ are polynomials with rational coefficients whose product $f(x) g(x)$ has integer coefficients, then the product of any coefficient of $g(x)$ with any coefficient of $f(x)$ is an integer.", "prompts": "[{\"theorem\":\n  \"∀ (R : Type) [inst : CommRing R] [inst_1 : IsDomain R] (K : Type) [inst_2 : Field K] [inst_3 : Algebra (Polynomial R) K]\\n  [inst_4 : IsFractionRing (Polynomial R) K] (f : Polynomial R) {g₁ g₂ : Polynomial R},\\n  Polynomial.Monic g₁ →\\n    Polynomial.Monic g₂ →\\n      IsCoprime g₁ g₂ →\\n        ∃ q r₁ r₂,\\n          Polynomial.degree r₁ < Polynomial.degree g₁ ∧\\n            Polynomial.degree r₂ < Polynomial.degree g₂ ∧ ↑f / (↑g₁ * ↑g₂) = ↑q + ↑r₁ / ↑g₁ + ↑r₂ / ↑g₂\",\n  \"isProp\": true,\n  \"docString\":\n  \"Let R be an integral domain and f, g₁, g₂ ∈ R[X]. Let g₁ and g₂ be monic and coprime.\\nThen, ∃ q, r₁, r₂ ∈ R[X] such that f / g₁g₂ = q + r₁/g₁ + r₂/g₂ and deg(r₁) < deg(g₁) and\\ndeg(r₂) < deg(g₂).\\n\"},\n {\"theorem\":\n  \"∀ {R : Type u} [inst : CommSemiring R] (I : Ideal (Polynomial R)) (p : Polynomial R),\\n  (∀ (n : ℕ), Polynomial.coeff p n ∈ Ideal.comap Polynomial.C I) → p ∈ I\",\n  \"isProp\": true,\n  \"docString\":\n  \"If every coefficient of a polynomial is in an ideal `I`, then so is the polynomial itself \"},\n {\"theorem\":\n  \"∀ {F : Type u_2} {M₀ : Type u_1} [inst : MonoidWithZero M₀] [inst_1 : MonoidWithZeroHomClass F ℚ M₀] {f g : F},\\n  (∀ (m : ℤ), ↑f ↑m = ↑g ↑m) → f = g\",\n  \"isProp\": true,\n  \"docString\":\n  \"If `f` and `g` agree on the integers then they are equal `φ`. \"},\n {\"theorem\":\n  \"∀ {M : Type u_1} {α : Sort u_2} [inst : CommMonoid M] {f : α → M} (p : M → Prop),\\n  p 1 → (∀ (x y : M), p x → p y → p (x * y)) → (∀ (i : α), p (f i)) → p (∏ᶠ (i : α), f i)\",\n  \"isProp\": true,\n  \"docString\":\n  \"To prove a property of a finite product, it suffices to prove that the property is\\nmultiplicative and holds on the factors. \"}]\n", "prompt_cons": "/-- Let R be an integral domain and f, g₁, g₂ ∈ R[X]. Let g₁ and g₂ be monic and coprime.\nThen, ∃ q, r₁, r₂ ∈ R[X] such that f / g₁g₂ = q + r₁/g₁ + r₂/g₂ and deg(r₁) < deg(g₁) and\ndeg(r₂) < deg(g₂). -/\ntheorem ∀ (R : Type) [inst : CommRing R] [inst_1 : IsDomain R] (K : Type) [inst_2 : Field K] [inst_3 : Algebra (Polynomial R) K]\n  [inst_4 : IsFractionRing (Polynomial R) K] (f : Polynomial R) {g₁ g₂ : Polynomial R},\n  Polynomial.Monic g₁ →\n    Polynomial.Monic g₂ →\n      IsCoprime g₁ g₂ →\n        ∃ q r₁ r₂,\n          Polynomial.degree r₁ < Polynomial.degree g₁ ∧\n            Polynomial.degree r₂ < Polynomial.degree g₂ ∧ ↑f / (↑g₁ * ↑g₂) = ↑q + ↑r₁ / ↑g₁ + ↑r₂ / ↑g₂ :=\n\n/-- If every coefficient of a polynomial is in an ideal `I`, then so is the polynomial itself -/\ntheorem ∀ {R : Type u} [inst : CommSemiring R] (I : Ideal (Polynomial R)) (p : Polynomial R),\n  (∀ (n : ℕ), Polynomial.coeff p n ∈ Ideal.comap Polynomial.C I) → p ∈ I :=\n\n/-- If `f` and `g` agree on the integers then they are equal `φ`. -/\ntheorem ∀ {F : Type u_2} {M₀ : Type u_1} [inst : MonoidWithZero M₀] [inst_1 : MonoidWithZeroHomClass F ℚ M₀] {f g : F},\n  (∀ (m : ℤ), ↑f ↑m = ↑g ↑m) → f = g :=\n\n/-- To prove a property of a finite product, it suffices to prove that the property is\nmultiplicative and holds on the factors. -/\ntheorem ∀ {M : Type u_1} {α : Sort u_2} [inst : CommMonoid M] {f : α → M} (p : M → Prop),\n  p 1 → (∀ (x y : M), p x → p y → p (x * y)) → (∀ (i : α), p (f i)) → p (∏ᶠ (i : α), f i) :=\n\n/-- Prove that if $f(x)$ and $g(x)$ are polynomials with rational coefficients whose product $f(x) g(x)$ has integer coefficients, then the product of any coefficient of $g(x)$ with any coefficient of $f(x)$ is an integer. -/\ntheorem", "choices": ["∀ {R : Type u} [inst : CommRing R] [inst_1 : IsDomain R] {f g : Polynomial R} (hf : ∀ (n : ℕ), ↑(Polynomial.coeff f n) ∈ ℤ) (hg : ∀ (n : ℕ), ↑(Polynomial.coeff g n) ∈ ℤ),\n∀ (m n : ℕ), ↑(Polynomial.coeff f m) * ↑(Polynomial.coeff g n) ∈ ℤ ", "∀ {f g : Polynomial ℚ} (hf : ∀ (n : ℕ), Polynomial.coeff f n ∈ ℤ) (hg : ∀ (n : ℕ), Polynomial.coeff g n ∈ ℤ),\n  ∀ (i j : ℕ), Polynomial.coeff f i * Polynomial.coeff g j ∈ ℤ ", "∀ {R : Type u} [inst : CommRing R] [inst_1 : IsDomain R] (f g : Polynomial ℚ),\n  (∀ (m : ℕ), Polynomial.coeff (f * g) m ∈ ℤ) →\n    ∀ (i j : ℕ), ↑(Polynomial.coeff f i) * ↑(Polynomial.coeff g j) ∈ ℤ ", "∀ {R : Type} [inst : CommRing R] [inst_1 : IsDomain R] (K : Type) [inst_2 : Field K] [inst_3 : Algebra (Polynomial R) K]\n  [inst_4 : IsFractionRing (Polynomial R) K] (f g : Polynomial R),\n  (∀ (n : ℕ), Polynomial.coeff (f * g) n ∈ ℤ) →\n    (∀ (i j : ℕ), Polynomial.coeff f i * Polynomial.coeff g j ∈ ℤ) ", "∀ {R : Type} [inst : CommRing R] [inst_1 : IsDomain R] (K : Type) [inst_2 : Field K] [inst_3 : Algebra (Polynomial R) K] [inst_4 : IsFractionRing (Polynomial R) K] (f g : Polynomial R),\n  (∀ (n : ℕ), (Polynomial.coeff (f * g) n).is_integer) →\n    ∀ (i j : ℕ), ((Polynomial.coeff f i) * (Polynomial.coeff g j)).is_integer ", "∀ {R : Type u} [inst : CommRing R] [inst_1 : IsDomain R] [inst_2 : Algebra R ℚ] (f g : Polynomial R),\n  (∀ (n : ℕ), Polynomial.coeff (f * g) n ∈ ℤ) →\n    ∀ (m n : ℕ), Polynomial.coeff f m * Polynomial.coeff g n ∈ ℤ ", "∀ (R : Type) [inst : CommRing R] [inst_1 : IsDomain R] (Q : Type) [inst_2 : DivisionRing Q] [inst_3 : Algebra R Q]\n  [inst_4 : IsFractionRing R Q] (f g : Polynomial R) (hf : ∀ (n : ℕ), (Polynomial.coeff f n) * (Polynomial.coeff g n) ∈ R),\n  ∀ i j, (Polynomial.coeff f i) * (Polynomial.coeff g j) ∈ R ", "∀ {R : Type} [inst : CommRing R] [inst_1 : IsDomain R] (f g : Polynomial ℕ),\n  (∀ (n : ℕ), Polynomial.coeff (f * g) n ∈ ℤ) →\n    (∀ (i j : ℕ), (Polynomial.coeff f i) * (Polynomial.coeff g j) ∈ ℤ) ", "∀ {f g : Polynomial ℚ},\n  (∀ (m : ℕ), Polynomial.coeff (f * g) m ∈ ℤ) →\n  ∀ {i j : ℕ}, ↑(Polynomial.coeff f i) * ↑(Polynomial.coeff g j) ∈ ℤ ", "∀ {f g : Polynomial ℚ} (hf : ∀ (n : ℕ), Polynomial.coeff f n ∈ ℤ) (hg : ∀ (n : ℕ), Polynomial.coeff g n ∈ ℤ),\n  ∀ (m n : ℕ), (Polynomial.coeff f m * Polynomial.coeff g n) ∈ ℤ "]}
{"docString": "Prove that $x^6+30x^5-15x^3 + 6x-120$ is irreducible in $\\mathbb{Z}[x]$.", "prompts": "[{\"theorem\":\n  \"∀ {A : Type u_1} {B : Type u_2} [inst : CommRing A] [inst_1 : Ring B] [inst_2 : Algebra A B] {x : B}\\n  [inst_3 : IsDomain A] [inst_4 : IsDomain B], IsIntegral A x → Irreducible (minpoly A x)\",\n  \"isProp\": true,\n  \"docString\": \"A minimal polynomial is irreducible. \"},\n {\"theorem\": \"∀ {n : ℕ}, 0 < n → Irreducible (Polynomial.cyclotomic n ℚ)\",\n  \"isProp\": true,\n  \"docString\": \"`cyclotomic n ℚ` is irreducible. \"},\n {\"theorem\":\n  \"∀ {p : Polynomial ℤ},\\n  Polynomial.IsUnitTrinomial p →\\n    (∀ (z : ℂ), ¬(↑(Polynomial.aeval z) p = 0 ∧ ↑(Polynomial.aeval z) (Polynomial.mirror p) = 0)) → Irreducible p\",\n  \"isProp\": true,\n  \"docString\":\n  \"A unit trinomial is irreducible if it has no complex roots in common with its mirror \"},\n {\"theorem\":\n  \"∀ {p : Polynomial ℤ}, Polynomial.IsUnitTrinomial p → IsCoprime p (Polynomial.mirror p) → Irreducible p\",\n  \"isProp\": true,\n  \"docString\":\n  \"A unit trinomial is irreducible if it is coprime with its mirror \"}]\n", "prompt_cons": "/-- A minimal polynomial is irreducible. -/\ntheorem ∀ {A : Type u_1} {B : Type u_2} [inst : CommRing A] [inst_1 : Ring B] [inst_2 : Algebra A B] {x : B}\n  [inst_3 : IsDomain A] [inst_4 : IsDomain B], IsIntegral A x → Irreducible (minpoly A x) :=\n\n/-- `cyclotomic n ℚ` is irreducible. -/\ntheorem ∀ {n : ℕ}, 0 < n → Irreducible (Polynomial.cyclotomic n ℚ) :=\n\n/-- A unit trinomial is irreducible if it has no complex roots in common with its mirror -/\ntheorem ∀ {p : Polynomial ℤ},\n  Polynomial.IsUnitTrinomial p →\n    (∀ (z : ℂ), ¬(↑(Polynomial.aeval z) p = 0 ∧ ↑(Polynomial.aeval z) (Polynomial.mirror p) = 0)) → Irreducible p :=\n\n/-- A unit trinomial is irreducible if it is coprime with its mirror -/\ntheorem ∀ {p : Polynomial ℤ}, Polynomial.IsUnitTrinomial p → IsCoprime p (Polynomial.mirror p) → Irreducible p :=\n\n/-- Prove that $x^6+30x^5-15x^3 + 6x-120$ is irreducible in $\\mathbb{Z}[x]$. -/\ntheorem", "choices": ["irreducible_x_pow_6 : Irreducible (Polynomial.x ^ 6 + 30 * Polynomial.x ^ 5 - 15 * Polynomial.x ^ 3 + 6 * Polynomial.x - 120) ", "irreducible_x_pow_6_plus_30x_pow_5_minus_15x_pow_3_plus_6x_minus_120 : Irreducible (Polynomial.x ^ 6 + 30 * Polynomial.x ^ 5 - 15 * Polynomial.x ^ 3 + 6 * Polynomial.x - 120) ", "irreducible_poly : Irreducible (Poly.mk (6 :: -15 :: 0 :: 30 :: 0 :: 0 :: 1)) ", "theorem x_pow_6_irreducible : Irreducible (Polynomial.x ^ 6 + 30 * Polynomial.x ^ 5 - 15 * Polynomial.x ^ 3 + 6 * Polynomial.x - 120) ", "irreducible_x_pow_6_plus_30x_pow_5_minus_15x_pow_3_plus_6x_minus_120 : Irreducible (Polynomial.x ^ 6 + 30 * Polynomial.x ^ 5 - 15 * Polynomial.x ^ 3 + 6 * Polynomial.x - 120) ", "example : Irreducible (Polynomial.x ^ 6 + 30 * Polynomial.x ^ 5 - 15 * Polynomial.x ^ 3 + 6 * Polynomial.x - 120 : Polynomial ℤ) ", "example : Irreducible (Polynomial.x^6 + (30 : ℤ) * Polynomial.x^5 - (15 : ℤ) * Polynomial.x^3 + (6 : ℤ) * Polynomial.x - (120 : ℤ)) ", "irreducible_X_pow_6_add_30_X_pow_5_sub_15_X_pow_3_add_6_x_sub_120 : Irreducible (Polynomial.x ^ 6 + 30 * Polynomial.x ^ 5 - 15 * Polynomial.x ^ 3 + 6 * Polynomial.x - 120) ", "example : Irreducible (Polynomial.x ^ 6 + 30 * Polynomial.x ^ 5 - 15 * Polynomial.x ^ 3 + 6 * Polynomial.x - 120) ", "irreducible_x_pow_6_30x_pow_5_minus_15x_pow_3_plus_6x_minus_120 : Irreducible (Polynomial.x ^ 6 + 30 * Polynomial.x ^ 5 - 15 * Polynomial.x ^ 3 + 6 * Polynomial.x - 120) "]}
{"docString": "Prove that $\\frac{(x+2)^p-2^p}{x}$, where $p$ is an odd prime, is irreducible in $\\mathbb{Z}[x]$.", "prompts": "[{\"theorem\": \"∀ {p : ℕ} [inst : Fact (Nat.Prime p)], p % 2 = 1 ↔ p ≠ 2\",\n  \"isProp\": true,\n  \"docString\": \"A prime `p` satisfies `p % 2 = 1` if and only if `p ≠ 2`. \"},\n {\"theorem\":\n  \"∀ {p : ℕ} [inst : Fact (Nat.Prime p)], p ≠ 2 → (IsSquare 2 ↔ p % 8 = 1 ∨ p % 8 = 7)\",\n  \"isProp\": true,\n  \"docString\":\n  \"`2` is a square modulo an odd prime `p` iff `p` is congruent to `1` or `7` mod `8`. \"},\n {\"theorem\":\n  \"∀ {p : ℕ} [inst : Fact (Nat.Prime p)], p ≠ 2 → (IsSquare (-2) ↔ p % 8 = 1 ∨ p % 8 = 3)\",\n  \"isProp\": true,\n  \"docString\":\n  \"`-2` is a square modulo an odd prime `p` iff `p` is congruent to `1` or `3` mod `8`. \"},\n {\"theorem\":\n  \"∀ {p : ℕ+} {K : Type u} {L : Type v} [inst : Field L] {ζ : L} [inst_1 : Field K] [inst_2 : Algebra K L]\\n  [hpri : Fact (Nat.Prime ↑p)] [hcyc : IsCyclotomicExtension {p} K L],\\n  IsPrimitiveRoot ζ ↑p → Irreducible (Polynomial.cyclotomic (↑p) K) → p ≠ 2 → ↑(Algebra.norm K) (ζ - 1) = ↑↑p\",\n  \"isProp\": true,\n  \"docString\":\n  \"If `Irreducible (cyclotomic p K)` (in particular for `K = ℚ`) and `p` is an odd prime,\\nthen the norm of `ζ - 1` is `p`. \"}]\n", "prompt_cons": "/-- A prime `p` satisfies `p % 2 = 1` if and only if `p ≠ 2`. -/\ntheorem ∀ {p : ℕ} [inst : Fact (Nat.Prime p)], p % 2 = 1 ↔ p ≠ 2 :=\n\n/-- `2` is a square modulo an odd prime `p` iff `p` is congruent to `1` or `7` mod `8`. -/\ntheorem ∀ {p : ℕ} [inst : Fact (Nat.Prime p)], p ≠ 2 → (IsSquare 2 ↔ p % 8 = 1 ∨ p % 8 = 7) :=\n\n/-- `-2` is a square modulo an odd prime `p` iff `p` is congruent to `1` or `3` mod `8`. -/\ntheorem ∀ {p : ℕ} [inst : Fact (Nat.Prime p)], p ≠ 2 → (IsSquare (-2) ↔ p % 8 = 1 ∨ p % 8 = 3) :=\n\n/-- If `Irreducible (cyclotomic p K)` (in particular for `K = ℚ`) and `p` is an odd prime,\nthen the norm of `ζ - 1` is `p`. -/\ntheorem ∀ {p : ℕ+} {K : Type u} {L : Type v} [inst : Field L] {ζ : L} [inst_1 : Field K] [inst_2 : Algebra K L]\n  [hpri : Fact (Nat.Prime ↑p)] [hcyc : IsCyclotomicExtension {p} K L],\n  IsPrimitiveRoot ζ ↑p → Irreducible (Polynomial.cyclotomic (↑p) K) → p ≠ 2 → ↑(Algebra.norm K) (ζ - 1) = ↑↑p :=\n\n/-- Prove that $\\frac{(x+2)^p-2^p}{x}$, where $p$ is an odd prime, is irreducible in $\\mathbb{Z}[x]$. -/\ntheorem", "choices": ["∀ {p : ℕ} [inst : Fact (Nat.Prime p)], p ≠ 2 → Irreducible ((Polynomial.x + 2) ^ p - (2 ^ p) / Polynomial.x) ", "∀ {p : ℕ} [inst : Fact (Nat.Prime p)], p ≠ 2 → Irreducible (Polynomial.x_pow_add_C_nat p 2) ", "∀ {p : ℕ} [inst : Fact (Nat.Prime p)], p ≠ 2 → Irreducible (Polynomial.map (Int.castRingHom ℚ) (((Polynomial.x + 2)^p - 2^p) /ₘ Polynomial.x)) ", "∀ {p : ℕ} [inst : Fact (Nat.Prime p)], p ≠ 2 → Irreducible (Polynomial.x_pow_add_C_div (p : ℕ) 2) ", "∀ {p : ℕ} [inst : Fact (Nat.Prime p)], p ≠ 2 → Irreducible (Polynomial.eval (x+2)^p - 2^p / x) ", "∀ {p : ℕ} [inst : Fact (Nat.Prime p)], p ≠ 2 → Irreducible (Polynomial.x_add_mul (2 ^ p) (x + 2) ^ p - 2 ^ p) ", "∀ {p : ℕ} [inst : Fact (Nat.Prime p)], p ≠ 2 → Irreducible (Polynomial.map (Int.castRingHom ℤ) ((X + 2)^p - 2^p) / X) ", "∀ {p : ℕ} [inst : Fact (Nat.Prime p)], p ≠ 2 → Irreducible ((X + 2)^p - 2^p / X) ", "∀ {p : ℕ} [inst : Fact (Nat.Prime p)], p ≠ 2 → Irreducible (Polynomial.x_pow_sub (Polynomial.C 2) p) ", "∀ {p : ℕ} [inst : Fact (Nat.Prime p)], p ≠ 2 →\n  Irreducible (Polynomial.xgcd (Polynomial.map ℤ (Polynomial.pow_mod (Polynomial.x + 2) p - Polynomial.pow_mod 2 p)) (Polynomial.x)) "]}
{"docString": "Prove that $x^2+y^2-1$ is irreducible in $\\mathbb{Q}[x,y]$.", "prompts": "[{\"theorem\":\n  \"∀ {d : ℤ} (a : Pell.Solution₁ d), Pell.Solution₁.x a ^ 2 - d * Pell.Solution₁.y a ^ 2 = 1\",\n  \"isProp\": true,\n  \"docString\":\n  \"The proof that `a` is a solution to the Pell equation `x^2 - d*y^2 = 1` \"},\n {\"theorem\": \"∀ {n : ℕ}, 0 < n → Irreducible (Polynomial.cyclotomic n ℤ)\",\n  \"isProp\": true,\n  \"docString\": \"`cyclotomic n ℤ` is irreducible. \"},\n {\"theorem\": \"∀ {n : ℕ}, 0 < n → Irreducible (Polynomial.cyclotomic n ℚ)\",\n  \"isProp\": true,\n  \"docString\": \"`cyclotomic n ℚ` is irreducible. \"},\n {\"theorem\":\n  \"∀ {A : Type u_1} {B : Type u_2} [inst : CommRing A] [inst_1 : Ring B] [inst_2 : Algebra A B] {x : B}\\n  [inst_3 : IsDomain A] [inst_4 : IsDomain B], IsIntegral A x → Irreducible (minpoly A x)\",\n  \"isProp\": true,\n  \"docString\": \"A minimal polynomial is irreducible. \"}]\n", "prompt_cons": "/-- The proof that `a` is a solution to the Pell equation `x^2 - d*y^2 = 1` -/\ntheorem ∀ {d : ℤ} (a : Pell.Solution₁ d), Pell.Solution₁.x a ^ 2 - d * Pell.Solution₁.y a ^ 2 = 1 :=\n\n/-- `cyclotomic n ℤ` is irreducible. -/\ntheorem ∀ {n : ℕ}, 0 < n → Irreducible (Polynomial.cyclotomic n ℤ) :=\n\n/-- `cyclotomic n ℚ` is irreducible. -/\ntheorem ∀ {n : ℕ}, 0 < n → Irreducible (Polynomial.cyclotomic n ℚ) :=\n\n/-- A minimal polynomial is irreducible. -/\ntheorem ∀ {A : Type u_1} {B : Type u_2} [inst : CommRing A] [inst_1 : Ring B] [inst_2 : Algebra A B] {x : B}\n  [inst_3 : IsDomain A] [inst_4 : IsDomain B], IsIntegral A x → Irreducible (minpoly A x) :=\n\n/-- Prove that $x^2+y^2-1$ is irreducible in $\\mathbb{Q}[x,y]$. -/\ntheorem", "choices": ["Irreducible (Polynomial.map (Polynomial.algebraMap ℚ[x] ℚ) (x ^ 2 + y ^ 2 - 1)) ", "Irreducible (Polynomial.x ^ 2 + Polynomial.y ^ 2 - 1 : Polynomial ℚ[ℚ]) ", "Irreducible (Polynomial.map (algebra_map ℚ (Polynomial ℚ)) (Polynomial.map (algebra_map ℚ (Polynomial ℚ)) (Polynomial.x ^ 2 + Polynomial.y ^ 2 - 1))) ", "Irreducible (Polynomial.x ^ 2 + Polynomial.y ^ 2 - 1 : Polynomial ℚ[ℕ]) ", "Irreducible (Polynomial.map (Polynomial.eval₂_ring_hom (Polynomial.eval₂_ring_hom (algebra_map ℚ (FractionRing ℚ[X])) Polynomial.x) Polynomial.y) (Polynomial.x ^ 2 + Polynomial.y ^ 2 - 1)) ", "Irreducible ((Polynomial.x ^ 2 + Polynomial.y ^ 2) - 1 : Polynomial ℚ) ", "Irreducible (Polynomial.x^2 + Polynomial.y^2 - 1 : Polynomial ℚ) ", "Irreducible (Polynomial.eval₂ (RingHom.id ℚ) (Polynomial.x ^ 2 + Polynomial.y ^ 2 - 1)) ", "Irreducible (Polynomial.map₂ ℚ ℚ (Polynomial.x ^ 2 + Polynomial.y ^ 2 - 1)) ", "Irreducible (Polynomial.map (algebraMap ℚ (Polynomial ℚ)) (Polynomial.x ^ 2 + Polynomial.y ^ 2 - 1)) "]}
