{"total-prompts": 40,
 "temperature": 0.9,
 "query-number": 12,
 "number-similar-sentences": 12,
 "include-fixed": false,
 "failures":
 ["Every set of Borel measure zero is Lebesgue measurable.",
  "Every infinite set contains a finite set.",
  "Every commutative division ring is a field.",
  "Every group is non-empty."],
 "elaborated-prompts":
 [{"theorem": "∀ (p : ℕ), Nat.Prime p ↔ p = 2 ∨ Odd p",
   "some-correct": null,
   "prompt": "Every prime number is `2` or odd.",
   "correct": null,
   "comments": "",
   "all-elabs":
   ["∀ (p : ℕ), Nat.Prime p ↔ (p = 2 ∨ Odd p)",
    "∀ (p : ℕ), Nat.Prime p ↔ p = 2 ∨ Odd p"]},
  {"theorem": "∀ (n : ℕ), ∃ k, k > n ∧ Odd k",
   "some-correct": null,
   "prompt": "There are infinitely many odd natural numbers.",
   "correct": null,
   "comments": "",
   "all-elabs":
   ["∀ (n : ℕ), ∃ (k : ℕ), k > n ∧ Odd k",
    "∀ (n : ℕ), Odd (2 * n + 1)",
    "∀ (n : ℕ), ∃ (m : ℕ), m > n ∧ Odd m",
    "∀ (n : ℕ), ∃ (m : ℕ), Odd m ∧ m > n",
    "∀ (n : ℕ), ∃ (k : ℕ), n = 2 * k + 1"]},
  {"theorem": "∀ (p : ℕ), Nat.Prime p → p % 2 = 1 → p ≥ 3",
   "some-correct": null,
   "prompt": "The smallest odd prime is `3`.",
   "correct": null,
   "comments": "",
   "all-elabs":
   ["∀ (p : ℕ), Nat.Prime p → p ≠ 2 → 3 ≤ p",
    "lemma smallest_odd_prime : Nat.Prime 3 ",
    "∀ (p : ℕ), Nat.Prime p → p % 2 = 1 → p ≥ 3",
    "∀ (p : ℕ), Nat.Prime p → p ≥ 3",
    "∀ (p : ℕ), Nat.Prime p → p % 2 = 1 → 3 ≤ p",
    "∀ (p : ℕ), Nat.Prime p ∧ p % 2 = 1 → 3 ≤ p"]},
  {"theorem": "∀ {n : ℕ}, ∃ p, Nat.Prime p ∧ p > n ∧ Odd p",
   "some-correct": null,
   "prompt": "There are infinitely many odd prime numbers.",
   "correct": null,
   "comments": "",
   "all-elabs":
   ["Set.Infinite {p | Nat.Prime p ∧ Odd p}",
    "∀ {n : ℕ}, ∃ p, Nat.Prime p ∧ p > n ∧ Odd p",
    "∃ k : ℕ, Set.Infinite {p | Nat.Prime p ∧ Odd p}",
    "∀ n, ∃ p, Nat.Prime p ∧ p > n ∧ Odd p"]},
  {"theorem":
   "∀ {K : Type u} {V : Type v} [inst : DivisionRing K] [inst_1 : AddCommGroup V] [inst_2 : Module K V],\n  FiniteDimensional.finrank K V = 2 → FiniteDimensional K V",
   "some-correct": null,
   "prompt":
   "If a vector space has dimension `2` then it is finite dimensional.",
   "correct": null,
   "comments": "",
   "all-elabs":
   ["∀ {K : Type u} {V : Type v} [inst : DivisionRing K] [inst_1 : AddCommGroup V] [inst_2 : Module K V],\n  FiniteDimensional.finrank K V = 2 → FiniteDimensional K V",
    "∀ {K : Type u} {V : Type v} [inst : DivisionRing K] [inst_1 : AddCommGroup V] [inst_2 : Module K V],\n  (FiniteDimensional.finrank K V = 2) → FiniteDimensional K V"]},
  {"theorem": "{R : Type u} → [inst : Field R] → DivisionRing R",
   "some-correct": null,
   "prompt": "Every field is a division ring.",
   "correct": null,
   "comments": "",
   "all-elabs":
   ["∀ {K : Type u} [inst : Field K], DivisionRing K",
    "∀ {R : Type u} [inst : Field R], DivisionRing R"]},
  {"theorem":
   "∀ {K : Type u} {V : Type v} [inst : DivisionRing K] [inst_1 : AddCommGroup V] [inst_2 : Module K V],\n  FiniteDimensional K V → FiniteDimensional.finrank K V = 2 → FiniteDimensional K V",
   "some-correct": null,
   "prompt": "If a space has dimension `2` then it is finite dimensional.",
   "correct": null,
   "comments": "",
   "all-elabs":
   ["∀ {K : Type u} {V : Type v} [inst : DivisionRing K] [inst_1 : AddCommGroup V] [inst_2 : Module K V],\n  FiniteDimensional.finrank K V = 2 → FiniteDimensional K V",
    "∀ {K : Type u} {V : Type v} [inst : DivisionRing K] [inst_1 : AddCommGroup V] [inst_2 : Module K V], FiniteDimensional K V →\n  (FiniteDimensional.finrank K V = 2 → FiniteDimensional K V)",
    "∀ {K : Type u} {V : Type v} [inst : DivisionRing K] [inst_1 : AddCommGroup V]\n  [inst_2 : Module K V], FiniteDimensional K V → FiniteDimensional K V ∧ (FiniteDimensional.finrank K V = bit0 1)",
    "∀ (K : Type u_1) (V : Type u_2) [inst : DivisionRing K] [inst_1 : AddCommGroup V] [inst_2 : Module K V]\n  [inst_3 : FiniteDimensional K V], FiniteDimensional.finrank K V = bit0 (bit1 1) → FiniteDimensional K V"]},
  {"theorem": "∀ (n : ℕ), ∃ m, m = n + 1",
   "some-correct": null,
   "prompt": "Every natural number has a successor.",
   "correct": null,
   "comments": "",
   "all-elabs":
   ["∀ (n : ℕ), ∃ (m : ℕ), m = n + 1",
    "∀ (n : ℕ), ∃ (m : ℕ), n.succ = m",
    "∀ {n : ℕ}, ∃ (m : ℕ), m = n + 1",
    "∀ (n : ℕ), ∃ (m : ℕ), n = m.succ"]},
  {"theorem": "∀ (n : ℕ), n < n + 1",
   "some-correct": null,
   "prompt": "Every natural number is less than its successor.",
   "correct": null,
   "comments": "",
   "all-elabs": ["∀ (n : ℕ), n < n + 1", "∀ (n : ℕ), n < n.succ"]},
  {"theorem":
   "∀ {α : Type u_1} [inst : MeasurableSpace α] (s : Set α), MeasurableSet s",
   "some-correct": null,
   "prompt": "Every set is Lebesgue measurable.",
   "correct": null,
   "comments": "",
   "all-elabs":
   ["∀ {α : Type u_1} [inst : MeasurableSpace α] (s : Set α), MeasurableSet s",
    "∀ {α : Type u_1} [inst : MeasurableSpace α], MeasurableSpace α",
    "∀ {α : Type u_1} [inst : MeasurableSpace α] (s : Set α), MeasurableSet s "]},
  {"theorem": "∀ {p : ℕ}, Nat.Prime p → ∀ {n : ℕ}, p = n * n → False",
   "some-correct": null,
   "prompt": "No prime number is a perfect square.",
   "correct": null,
   "comments": "",
   "all-elabs":
   ["∀ {p : ℕ}, Nat.Prime p → ∀ {n : ℕ}, p = n * n → False",
    "∀ {p : ℕ}, Nat.Prime p → ¬IsSquare p",
    "∀ {p : ℕ}, Nat.Prime p → ¬∃ n, n * n = p"]},
  {"theorem": "∀ {p : ℕ}, Nat.Prime p → p > 2",
   "some-correct": null,
   "prompt": "Every odd prime number is greater than `2`.",
   "correct": null,
   "comments": "",
   "all-elabs": ["∀ {p : ℕ}, Nat.Prime p → p > 2"]},
  {"theorem":
   "∀ {α : Type u} [inst : LinearOrderedRing α] {a b : α} {c d e f g h : α},\n  (∃ w x y z, a = w ^ 2 + x ^ 2 + y ^ 2 + z ^ 2) →\n    (∃ u v s t, b = u ^ 2 + v ^ 2 + s ^ 2 + t ^ 2) → ∃ r1 r2 r3 r4, a * b = r1 ^ 2 + r2 ^ 2 + r3 ^ 2 + r4 ^ 2",
   "some-correct": null,
   "prompt":
   "The product of two numbers, each of which is the sum of four squares, is itself a sum of four squares.",
   "correct": null,
   "comments": "",
   "all-elabs":
   ["∀ {α : Type u} [inst : LinearOrderedRing α] {a b c d x y z w : α},\n  ∃ (p q r s : α), a = p ^ 2 + q ^ 2 + r ^ 2 + s ^ 2 → b = p ^ 2 + q ^ 2 + r ^ 2 + s ^ 2 →\n    (∃ (u v t s : α), a * b = u ^ 2 + v ^ 2 + t ^ 2 + s ^ 2)",
    "∀ {α : Type} [Ring α] (a b c d u v w x : α),\n  ∃ (p q r s : α),\n    (a ^ 2 + b ^ 2 + c ^ 2 + d ^ 2) * (u ^ 2 + v ^ 2 + w ^ 2 + x ^ 2) = p ^ 2 + q ^ 2 + r ^ 2 + s ^ 2",
    "∀ {α : Type u} [inst : LinearOrderedRing α] {a b c d e f g h : α},\n  (∃ (w x y z : α), a = w ^ 2 + x ^ 2 + y ^ 2 + z ^ 2) →\n  (∃ (u v s t : α), b = u ^ 2 + v ^ 2 + s ^ 2 + t ^ 2) →\n  ∃ (r1 r2 r3 r4 : α), a * b = r1 ^ 2 + r2 ^ 2 + r3 ^ 2 + r4 ^ 2"]},
  {"theorem":
   "∀ {α : Type u} [inst : TopologicalSpace α] [inst_1 : CompactSpace α], LocallyCompactSpace α",
   "some-correct": null,
   "prompt": "Every compact topological space is locally compact.",
   "correct": null,
   "comments": "",
   "all-elabs":
   ["∀ {α : Type u} [inst : TopologicalSpace α] [inst_1 : CompactSpace α], LocallyCompactSpace α",
    "∀ (α : Type u) [inst : TopologicalSpace α] [inst_1 : CompactSpace α], LocallyCompactSpace α",
    "∀ {α : Type u} [inst : TopologicalSpace α] [inst_1 : CompactSpace α],\n  LocallyCompactSpace α"]},
  {"theorem":
   "∀ {α : Type u_1} {β : Type u_2} [inst : UniformSpace α] [inst_1 : UniformSpace β] {f : α → β},\n  Continuous f → UniformContinuous f",
   "some-correct": null,
   "prompt": "Every continuous function is uniformly continuous.",
   "correct": null,
   "comments": "",
   "all-elabs":
   ["∀ {α : Type u} {β : Type v} [inst : UniformSpace α] [inst_1 : UniformSpace β] {f : α → β},\n  Continuous f → UniformContinuous f",
    "∀ {α : Type u_1} {β : Type u_2} [inst : UniformSpace α] [inst_1 : UniformSpace β] {f : α → β},\n  Continuous f → UniformContinuous f"]},
  {"theorem": "∀ {p q : ℕ}, Nat.Prime p → Nat.Prime q → p ≠ q → p + q ≠ 6",
   "some-correct": null,
   "prompt": "`6` is not the sum of two distinct prime numbers.",
   "correct": null,
   "comments": "",
   "all-elabs":
   ["∀ {p q : ℕ}, Nat.Prime p → Nat.Prime q → p ≠ q → p + q ≠ 6",
    "¬ (∃ (p q : ℕ), Nat.Prime p ∧ Nat.Prime q ∧ p ≠ q ∧ p + q = 6)",
    "∀ {p q : ℕ}, Nat.Prime p → Nat.Prime q → ¬(p = q) → p + q ≠ 6",
    "¬ ∃ (p q : ℕ), Nat.Prime p → Nat.Prime q → p ≠ q → p + q = 6",
    "¬ (∃ (p₁ p₂ : ℕ), Nat.Prime p₁ ∧ Nat.Prime p₂ ∧ p₁ ≠ p₂ ∧ p₁ + p₂ = 6)"]},
  {"theorem": "∀ (n : ℤ), ¬Irrational ↑n",
   "some-correct": null,
   "prompt": "No integer is irrational.",
   "correct": null,
   "comments": "",
   "all-elabs":
   ["∀ (n : ℤ), ¬Irrational (n : ℝ)",
    "∀ (n : ℤ), ¬ Irrational n",
    "∀ (n : ℤ), ¬Irrational n",
    "¬(∃ r : ℝ, Irrational r ∧ ∃ n : ℤ, r = ↑n)",
    "¬ (∃ (n : ℤ), Irrational (↑n))",
    "¬ (∃ (x : ℤ), Irrational x)",
    "¬ (∃ (n : ℤ), Irrational n)"]},
  {"theorem": "∀ {R : Type u} [inst : Ring R], IsUnit 1",
   "some-correct": null,
   "prompt": "The identity element in a ring is a unit.",
   "correct": null,
   "comments": "",
   "all-elabs":
   ["∀ {R : Type u} [inst : Ring R], IsUnit (1 : R)",
    "∀ {R : Type u} [inst : Ring R], IsUnit (1:R)",
    "∀ {R : Type u} [inst : Semiring R], IsUnit (1 : R)"]},
  {"theorem":
   "{G : Type u_1} → [inst : Group G] → (H : Subgroup G) → Group { x // x ∈ H }",
   "some-correct": null,
   "prompt": "Every subgroup of a group is a group.",
   "correct": null,
   "comments": "",
   "all-elabs":
   ["∀ {G : Type u_1} [inst : Group G] (H : Subgroup G), Group H",
    "∀ {G : Type u_1} [inst : Group G] (H : Subgroup G), Group H "]},
  {"theorem": "∀ {m n : ℕ}, m + n = m + n",
   "some-correct": null,
   "prompt": "The sum of two natural numbers is a natural number.",
   "correct": null,
   "comments": "",
   "all-elabs": ["∀ {m n : ℕ}, (m + n : ℕ) = m + n"]},
  {"theorem": "∀ {G : Type u_1} [inst : Group G], IsOfFinOrder 1",
   "some-correct": null,
   "prompt": "The identity element of a group has finite order.",
   "correct": null,
   "comments": "",
   "all-elabs":
   ["∀ {G : Type u_1} [inst : Monoid G], IsOfFinOrder (1 : G)",
    "∀ {G : Type u_1} [inst : Group G], IsOfFinOrder (1 : G)"]},
  {"theorem": "Nat.Prime 7",
   "some-correct": null,
   "prompt": "`7` is a prime number.",
   "correct": null,
   "comments": "",
   "all-elabs":
   ["Fact (Nat.Prime 7)", "example : Nat.Prime 7 ", "fact : Nat.Prime 7"]},
  {"theorem":
   "∃ n, n = 3 ∧ Nat.Prime 2 ∧ Nat.Prime 3 ∧ Nat.Prime 5 ∧ ∀ (m : ℕ), m > 5 → ¬Nat.Prime m",
   "some-correct": null,
   "prompt": "There are `3` prime numbers below `8`.",
   "correct": null,
   "comments": "",
   "all-elabs":
   ["∃ (n : ℕ), n = 3 ∧ nat.prime 2 ∧ nat.prime 3 ∧ nat.prime 5 ∧ ∀ (m : ℕ), m > 5 → ¬nat.prime m"]},
  {"theorem": "∀ {α : Type u} {a : Set α}, Set.Finite a → ∅ ⊆ a",
   "some-correct": null,
   "prompt": "The empty set is contained in every finite set.",
   "correct": null,
   "comments": "",
   "all-elabs":
   ["∀ {α : Type u} {a : Set α}, Set.Finite a → ∅ ⊆ a",
    "∀ {α : Type u} (a : Set α), Set.Finite a → ∅ ⊆ a",
    "∀ {α : Type u} {s : Set α}, Set.Finite s → ∅ ⊆ s"]},
  {"theorem": "{R : Type u_1} → [inst : CommRing R] → Monoid R",
   "some-correct": null,
   "prompt": "Every commutative ring is a monoid.",
   "correct": null,
   "comments": "",
   "all-elabs": ["∀ {R : Type u_1} [inst : CommRing R], Monoid R"]},
  {"theorem":
   "∀ (F : Type u) [inst : Field F] [inst_1 : Fintype F], Fintype.card F ≠ 10",
   "some-correct": null,
   "prompt": "There is no field of order `10`.",
   "correct": null,
   "comments": "",
   "all-elabs":
   ["∀ {F : Type u_1} [inst : Field F] [fin : Fintype F], Fintype.card F ≠ 10",
    "∀ (F : Type u) [inst : Field F] [inst_1 : Fintype F], Fintype.card F ≠ 10"]},
  {"theorem": "∀ {n : ℕ}, Odd n → ∃ x y, x ≠ y ∧ n = x + y",
   "some-correct": null,
   "prompt":
   "Every odd natural number is the sum of two distinct natural numbers.",
   "correct": null,
   "comments": "",
   "all-elabs":
   ["∀ {n : ℕ}, Odd n → ∃ x y, x ≠ y ∧ n = x + y",
    "∀ {n : ℕ}, Odd n → ∃ (a b : ℕ), a ≠ b ∧ n = a + b",
    "∀ {n : ℕ}, Odd n → ∃ x y, n = x + y ∧ x ≠ y",
    "∀ {n : ℕ}, Odd n → ∃ (x y : ℕ), x ≠ y ∧ n = x + y"]},
  {"theorem":
   "∀ {G : Type u_1} [inst : Monoid G] {x : G}, IsOfFinOrder x ↔ True",
   "some-correct": null,
   "prompt": "Every element in the trivial group has finite order.",
   "correct": null,
   "comments": "",
   "all-elabs":
   ["∀ {G : Type u_1} [inst : Monoid G] {x : G}, IsOfFinOrder x ↔ G = ⊤",
    "∀ {G : Type u_1} [inst : Monoid G] {x : G}, IsOfFinOrder x ↔ True",
    "∀ {G : Type u_1} [inst : Monoid G] {x : G}, IsOfFinOrder x ↔ IsOfFinOrder x",
    "∀ {G : Type u_1} [inst : Monoid G] (x : G), IsOfFinOrder x",
    "∀ {G : Type u_1} [inst : Group G] {x : G}, x = 1 → IsOfFinOrder x"]},
  {"theorem": "∀ {n : ℕ}, Even n → Even (n * n)",
   "some-correct": null,
   "prompt": "The square of an even number is even.",
   "correct": null,
   "comments": "",
   "all-elabs":
   ["∀ {n : ℕ}, Even n → Even (n ^ 2)",
    "∀ (n : ℕ), Even n → Even (n ^ 2)",
    "∀ {n : ℕ}, Even n → Even (n^2)",
    "∀ {n : ℕ}, Even n → Even (n * n)"]},
  {"theorem": "∀ {α : Type u} [inst : MulOneClass α], id 1 = 1",
   "some-correct": null,
   "prompt":
   "The image of the identity element under the identity map is the identity element.",
   "correct": null,
   "comments": "",
   "all-elabs":
   ["∀ {α : Type u} [inst : MulOneClass α], id 1 = 1",
    "forall {α : Type u} [inst : MulOneClass α], id 1 = 1",
    "∀ {α : Type u} [inst : MulOneClass α], id (1 : α) = 1",
    "∀ {α : Type u}, id (id α) = id α",
    "∀ {α : Type u}, id id = id"]},
  {"theorem": "∀ {α : Type u} (x : α), Function.IsFixedPt id x",
   "some-correct": null,
   "prompt":
   "Every point is a fixed point of the identity function on a space.",
   "correct": null,
   "comments": "",
   "all-elabs":
   ["∀ {α : Type u_1} (x : α), Function.IsFixedPt id x",
    "∀ {α : Type u}, ∀ (x : α), Function.IsFixedPt id x",
    "∀ {α : Type u}, ∀ x : α, Function.IsFixedPt id x"]},
  {"theorem":
   "∀ {α : Type u} [inst : PseudoMetricSpace α] {x : α}, Metric.diam {x} = 0",
   "some-correct": null,
   "prompt": "The diameter of a singleton space is `0`.",
   "correct": null,
   "comments": "",
   "all-elabs":
   ["∀ {α : Type u} [inst : PseudoMetricSpace α] {x : α}, Metric.diam {x} = 0",
    "∀ {α : Type u} [inst : PseudoMetricSpace α] (x : α), Metric.diam {x} = 0"]},
  {"theorem":
   "∀ {α : Type u} [inst : TopologicalSpace α] (x : α), IsConnected (connectedComponent x)",
   "some-correct": null,
   "prompt": "All connected components of a topological space are connected.",
   "correct": null,
   "comments": "",
   "all-elabs":
   ["∀ {α : Type u} [inst : TopologicalSpace α], ∀ (x : α), IsConnected (connectedComponent x)",
    "∀ {α : Type u} [inst : TopologicalSpace α],\n  ∀ (x : α), IsConnected (connectedComponent x)",
    "∀ {α : Type u} [inst : TopologicalSpace α] (x : α),\n  IsConnected (connectedComponent x)"]},
  {"theorem": "∃ M, Ideal.IsMaximal M",
   "some-correct": null,
   "prompt": "The ring of integers has a maximal ideal.",
   "correct": null,
   "comments": "",
   "all-elabs":
   ["∃ M : Ideal ℤ, Ideal.IsMaximal M",
    "∃ (I : Ideal ℤ), Ideal.IsMaximal I",
    "∃ (M : Ideal ℤ), Ideal.IsMaximal M",
    "∃ M, Ideal.IsMaximal M"]},
  {"theorem": "PythagoreanTriple 3 4 5",
   "some-correct": null,
   "prompt": "The numbers `3`, `4` and `5` form a Pythagorean triple.",
   "correct": null,
   "comments": "",
   "all-elabs": ["PythagoreanTriple 3 4 5"]},
  {"theorem":
   "∀ {K : Type u} {V : Type v} [inst : DivisionRing K] [inst_1 : AddCommGroup V] [inst_2 : Module K V],\n  Basis (↑∅) K V → Submodule.span K ∅ = ⊥",
   "some-correct": null,
   "prompt": "A vector space with the empty set as basis is trivial. ",
   "correct": null,
   "comments": "",
   "all-elabs":
   ["∀ {K : Type u} {V : Type v} [inst : DivisionRing K] [inst_1 : AddCommGroup V] [inst_2 : Module K V],\n  Basis (∅ : Set V) K V → Submodule.span K ∅ = ⊥"]}],
 "elaborated": 36}