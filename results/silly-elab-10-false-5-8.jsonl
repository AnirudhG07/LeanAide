{"theorem":"∀ {p : ℕ}, Nat.Prime p → p = 2 ∨ Odd p","text":"Every prime number is `2` or odd.","result":true,"fullPrompt":"No prompt (maybe using cached data)","all_elaborations":["∀ {p : ℕ} [inst : Fact (Nat.Prime p)], p = 2 ∨ Odd p ","∀ (p : ℕ) [inst : Fact (Nat.Prime p)], p = 2 ∨ Odd p ","∀ {p : ℕ}, Nat.Prime p → (p = 2 ∨ Odd p) ","∀ (p : ℕ), Nat.Prime p → p = 2 ∨ Odd p "]}
{"theorem":"∃ᶠ (m : ℕ) in Filter.atTop, m % 2 = 1","text":"There are infinitely many odd natural numbers.","result":true,"fullPrompt":"No prompt (maybe using cached data)","all_elaborations":["∃ᶠ (m : ℕ) in Filter.atTop, m % 2 = 1 ","∃ᶠ (n : ℕ) in Filter.atTop, n % 2 = 1 "]}
{"theorem":"ℕ","text":"The smallest odd prime is `3`.","result":true,"fullPrompt":"No prompt (maybe using cached data)","all_elaborations":["Nat.min_odd_prime : Nat.minFac 2 + 1 = 3 ","Nat.min_odd_prime_is_3 : Nat.minFac 9 = 3 ","Nat.min_odd_prime : ℕ "]}
{"theorem":"Set.Infinite {p | Nat.Prime p ∧ Odd p}","text":"There are infinitely many odd prime numbers.","result":true,"fullPrompt":"No prompt (maybe using cached data)","all_elaborations":["Set.Infinite {p | Nat.Prime p ∧ p % 2 = 1} ","Set.Infinite {p | Nat.Prime p ∧ Odd p} "]}
{"theorem":"∀ {K : Type u} {V : Type v} [inst : DivisionRing K] [inst_1 : AddCommGroup V] [inst_2 : Module K V],\n  Module.rank K V = 2 → FiniteDimensional K V","text":"If a vector space has dimension `2` then it is finite dimensional.","result":true,"fullPrompt":"No prompt (maybe using cached data)","all_elaborations":["forall {K : Type u} {V : Type v} [inst : DivisionRing K] [inst_1 : AddCommGroup V] [inst_2 : Module K V],\n  Module.rank K V = 2 → FiniteDimensional K V ","∀ {K : Type u} {V : Type v} [inst : DivisionRing K] [inst_1 : AddCommGroup V] [inst_2 : Module K V],\n  Module.rank K V = 2 → FiniteDimensional K V "]}
{"theorem":"{K : Type u} → [inst : Field K] → DivisionRing K","text":"Every field is a division ring.","result":true,"fullPrompt":"No prompt (maybe using cached data)","all_elaborations":["∀ (K : Type u) [inst : Field K], DivisionRing K ","∀ {K : Type u_1} [inst : Field K], DivisionRing K ","∀ {K : Type u} [inst : Field K], DivisionRing K "]}
{"theorem":"∀ {K : Type u} {V : Type v} [inst : DivisionRing K] [inst_1 : AddCommGroup V] [inst_2 : Module K V],\n  Module.rank K V = 2 → FiniteDimensional K V","text":"If a space has dimension `2` then it is finite dimensional.","result":true,"fullPrompt":"No prompt (maybe using cached data)","all_elaborations":["∀ {K : Type u} {V : Type v} [inst : DivisionRing K] [inst_1 : AddCommGroup V] [inst_2 : Module K V]\n  (h : Module.rank K V = 2), FiniteDimensional K V ","∀ {K : Type u} {V : Type v} [inst : DivisionRing K] [inst_1 : AddCommGroup V] [inst_2 : Module K V],\n  (Module.rank K V = 2) → FiniteDimensional K V ","∀ {K : Type u} {V : Type v} [inst : DivisionRing K] [inst_1 : AddCommGroup V] [inst_2 : Module K V],\n  Module.rank K V = 2 → FiniteDimensional K V ","∀ {K : Type u} {V : Type v} [inst : DivisionRing K] [inst_1 : AddCommGroup V] [inst_2 : Module K V] {ι : Type w}\n  [inst_3 : Fintype ι] (h_dim : Fintype.card ι = 2), FiniteDimensional K V "]}
{"theorem":"∀ (n : ℕ), ∃ k, n + 1 = k","text":"Every natural number has a successor.","result":true,"fullPrompt":"No prompt (maybe using cached data)","all_elaborations":["∀ (n : ℕ), ∃ k, n + 1 = k ","∀ (n : ℕ), ∃ m, n + 1 = m ","∀ (n : ℕ), ∃ m, m = n + 1 ","∀ (n : ℕ), ∃ (k : ℕ), k = n + 1 "]}
{"theorem":"∀ {n : ℕ}, n < Nat.succ n","text":"Every natural number is less than its successor.","result":true,"fullPrompt":"No prompt (maybe using cached data)","all_elaborations":["∀ {n : ℕ}, n < Nat.succ n ","∀ (n : ℕ), n < n.succ ","∀ {n : ℕ}, n < n.succ ","∀ (n : ℕ), n < n + 1 "]}
{"theorem":"∀ {α : Type u_1} [inst : MeasurableSpace α] [inst_1 : TopologicalSpace α] [inst_2 : BorelSpace α],\n  OpensMeasurableSpace α","text":"Every set is Lebesgue measurable.","result":true,"fullPrompt":"No prompt (maybe using cached data)","all_elaborations":["∀ {α : Type u_1} [inst : MeasurableSpace α] (s : Set α), MeasurableSet s ","∀ {α : Type u_1} [inst : MeasurableSpace α] [inst_1 : TopologicalSpace α] [inst_2 : BorelSpace α] [inst_3 : OpensMeasurableSpace α], \n  ∀ (s : Set α), MeasurableSet s ","∀ {α : Type u_1} [inst : MeasurableSpace α] [inst_1 : TopologicalSpace α] [inst_2 : BorelSpace α], OpensMeasurableSpace α "]}
{"theorem":"∀ {α : Type u_1} [inst : MeasurableSpace α] (μ : MeasureTheory.Measure α) {s : Set α}, ?m.729893 μ = 0 → MeasurableSet s","text":"Every set of Borel measure zero is Lebesgue measurable.","result":true,"fullPrompt":"No prompt (maybe using cached data)","all_elaborations":["∀ {α : Type u_1} [inst : MeasurableSpace α] [inst_1 : TopologicalSpace α] [inst_2 : BorelSpace α]\n  (μ : MeasureTheory.Measure α) {s : Set α}, ↑↑μ s = 0 → MeasurableSet s ","∀ {α : Type u_1} [inst : MeasurableSpace α] [inst_1 : TopologicalSpace α] [inst_2 : BorelSpace α]\n  (μ : MeasureTheory.Measure α) (s : Set α), ↑↑μ s = 0 → MeasurableSet s ","∀ {α : Type u_1} [inst : TopologicalSpace α] [inst_1 : MeasurableSpace α] [inst_2 : BorelSpace α]\n  (μ : MeasureTheory.Measure α) {s : Set α}, ↑↑μ s = 0 → MeasurableSet s ","∀ {α : Type u_1} [inst : MeasurableSpace α] [inst_1 : TopologicalSpace α] [inst_2 : BorelSpace α] (μ : MeasureTheory.Measure α)\n  {s : Set α}, ↑↑μ s = 0 → MeasurableSet s ","∀ {α : Type u_1} [inst : TopologicalSpace α] [inst_1 : MeasurableSpace α] [inst_2 : BorelSpace α]\n  (μ : MeasureTheory.Measure α) (s : Set α), ↑↑μ s = 0 → MeasurableSet s ","∀ {α : Type u_1} [inst : MeasurableSpace α] (μ : MeasureTheory.Measure α) {s : Set α},\n  ↑↑μ s = 0 → MeasurableSet s "]}
{"theorem":"∀ {p : ℕ}, Nat.Prime p → ¬∃ t, t * t = p","text":"No prime number is a perfect square.","result":true,"fullPrompt":"No prompt (maybe using cached data)","all_elaborations":["∀ {p : ℕ}, Nat.Prime p → ¬∃ t, t * t = p ","∀ {p : ℕ}, Nat.Prime p → ¬∃ n, n * n = p "]}
{"theorem":"∀ {p : ℕ} [inst : Fact (Nat.Prime p)], Odd p → p > 2","text":"Every odd prime number is greater than `2`.","result":true,"fullPrompt":"No prompt (maybe using cached data)","all_elaborations":["∀ (p : ℕ) [inst : Fact (Nat.Prime p)], p % 2 = 1 → p > 2 ","∀ {p : ℕ} [inst : Fact (Nat.Prime p)], Odd p → p > 2 ","∀ (p : ℕ) [inst : Fact (Nat.Prime p)], Odd p → p > 2 "]}
{"theorem":"∀ {a b x y u v r s : ℕ},\n  a = x ^ 2 + y ^ 2 + u ^ 2 + v ^ 2 →\n    b = r ^ 2 + s ^ 2 + x ^ 2 + y ^ 2 → ∃ p q t z, a * b = p ^ 2 + q ^ 2 + t ^ 2 + z ^ 2","text":"The product of two numbers, each of which is the sum of four squares, is itself a sum of four squares.","result":true,"fullPrompt":"No prompt (maybe using cached data)","all_elaborations":["∀ {a b x y z w u v : ℕ},\n  a = x ^ 2 + y ^ 2 + z ^ 2 + w ^ 2 → b = u ^ 2 + v ^ 2 + z ^ 2 + w ^ 2 →\n  ∃ r s t u, a * b = r ^ 2 + s ^ 2 + t ^ 2 + u ^ 2 ","∀ {a b x y u v : ℕ}, a = x ^ 2 + y ^ 2 + u ^ 2 + v ^ 2 → b = x ^ 2 + y ^ 2 + u ^ 2 + v ^ 2 → ∃ r s t w, a * b = r ^ 2 + s ^ 2 + t ^ 2 + w ^ 2 ","∀ {a b x y u v r s : ℕ},\n  a = x ^ 2 + y ^ 2 + u ^ 2 + v ^ 2 →\n  b = r ^ 2 + s ^ 2 + x ^ 2 + y ^ 2 →\n  ∃ p q t z, a * b = p ^ 2 + q ^ 2 + t ^ 2 + z ^ 2 ","∀ {a b x y u v r s : ℕ}, a = x ^ 2 + y ^ 2 + r ^ 2 + s ^ 2 → b = u ^ 2 + v ^ 2 + r ^ 2 + s ^ 2 → ∃ p q r s, a * b = p ^ 2 + q ^ 2 + r ^ 2 + s ^ 2 ","∀ {a b x y u v r s : ℕ}, a = x ^ 2 + y ^ 2 + r ^ 2 + s ^ 2 → b = u ^ 2 + v ^ 2 + r ^ 2 + s ^ 2 → ∃ p q m n, a * b = p ^ 2 + q ^ 2 + m ^ 2 + n ^ 2 ","∀ {a b x y u v r s : ℕ}, a = x ^ 2 + y ^ 2 + u ^ 2 + v ^ 2 → b = r ^ 2 + s ^ 2 + x ^ 2 + y ^ 2 → ∃ p q l m, a * b = p ^ 2 + q ^ 2 + l ^ 2 + m ^ 2 ","∀ {a b x y u v r s t w : ℕ},\n  a = x ^ 2 + y ^ 2 + r ^ 2 + s ^ 2 →\n  b = u ^ 2 + v ^ 2 + t ^ 2 + w ^ 2 →\n  ∃ m n o p, a * b = m ^ 2 + n ^ 2 + o ^ 2 + p ^ 2 ","∀ {a b x y u v r s : ℕ}, a = x ^ 2 + y ^ 2 + u ^ 2 + v ^ 2 → b = r ^ 2 + s ^ 2 + x ^ 2 + y ^ 2 → ∃ w t z p, a * b = w ^ 2 + t ^ 2 + z ^ 2 + p ^ 2 "]}
{"theorem":"∀ {α : Type u} [inst : TopologicalSpace α] [inst_1 : CompactSpace α], LocallyCompactSpace α","text":"Every compact topological space is locally compact.","result":true,"fullPrompt":"No prompt (maybe using cached data)","all_elaborations":["∀ {α : Type u} [inst : TopologicalSpace α] [inst_1 : CompactSpace α], LocallyCompactSpace α "]}
{"theorem":"∀ {α : Type u_1} {β : Type u_2} [inst : UniformSpace α] [inst_1 : UniformSpace β] {f : α → β},\n  Continuous f → UniformContinuous f","text":"Every continuous function is uniformly continuous.","result":true,"fullPrompt":"No prompt (maybe using cached data)","all_elaborations":["∀ {α : Type u_1} {β : Type u_2} [inst : UniformSpace α] [inst_1 : UniformSpace β] {f : α → β},\n  Continuous f → UniformContinuous f ","∀ {α : Type u_1} {β : Type u_2} [inst : UniformSpace α] [inst_1 : UniformSpace β] (f : α → β),\n  Continuous f → UniformContinuous f "]}
{"theorem":"∀ {a b : ℕ}, Nat.Prime a → Nat.Prime b → a ≠ b → a + b ≠ 6","text":"`6` is not the sum of two distinct prime numbers.","result":true,"fullPrompt":"No prompt (maybe using cached data)","all_elaborations":["¬∃ p q : ℕ, Nat.Prime p ∧ Nat.Prime q ∧ p ≠ q ∧ p + q = 6 ","¬∃ (p q : ℕ), Nat.Prime p ∧ Nat.Prime q ∧ p ≠ q ∧ p + q = 6 ","¬ ∃ p q : ℕ, Nat.Prime p ∧ Nat.Prime q ∧ p ≠ q ∧ p + q = 6 ","∀ {a b : ℕ}, Nat.Prime a → Nat.Prime b → a ≠ b → a + b ≠ 6 ","¬∃ (a b : ℕ), Nat.Prime a ∧ Nat.Prime b ∧ a ≠ b ∧ a + b = 6 ","¬∃ (p q : ℕ), Nat.Prime p → Nat.Prime q → p ≠ q → p + q = 6 "]}
{"theorem":"∀ (z : ℤ), ¬Irrational ↑z","text":"No integer is irrational.","result":true,"fullPrompt":"No prompt (maybe using cached data)","all_elaborations":["∀ (z : ℤ), ¬Irrational (↑z) ","∀ (n : ℤ), ¬Irrational (↑n : ℝ) ","∀ (n : ℤ), ¬Irrational (↑n) ","∀ (n : ℤ), ¬Irrational ↑n "]}
{"theorem":"∀ {R : Type u} [inst : Ring R], IsUnit 1","text":"The identity element in a ring is a unit.","result":true,"fullPrompt":"No prompt (maybe using cached data)","all_elaborations":["∀ {R : Type u} [inst : Ring R], IsUnit (1 : R) "]}
{"theorem":"{G : Type u_1} → [inst : Group G] → (H : Subgroup G) → Group { x // x ∈ H }","text":"Every subgroup of a group is a group.","result":true,"fullPrompt":"No prompt (maybe using cached data)","all_elaborations":["∀ {G : Type u_1} [inst : Group G] (H : Subgroup G), Group {x // x ∈ H} ","∀ {G : Type u_1} [inst : Group G] (H : Subgroup G), Group { x // x ∈ H } ","forall {G : Type u_1} [inst : Group G] (H : Subgroup G), Group { x // x ∈ H } "]}
{"theorem":"∀ (m n : ℕ), ∃ k, m + n = k","text":"The sum of two natural numbers is a natural number.","result":true,"fullPrompt":"No prompt (maybe using cached data)","all_elaborations":["∀ (m n : ℕ), ∃ k, m + n = k ","∀ (m n : ℕ), ∃ (k : ℕ), m + n = k ","∀ (m n : ℕ), ∃ r, m + n = r ","∀ (a b : ℕ), ∃ (c : ℕ), a + b = c "]}
{"theorem":"∀ {G : Type u_1} [inst : Monoid G], IsOfFinOrder 1","text":"The identity element of a group has finite order.","result":true,"fullPrompt":"No prompt (maybe using cached data)","all_elaborations":["∀ {G : Type u_1} [inst : Monoid G], IsOfFinOrder (1 : G) ","forall {G : Type u_1} [inst : Monoid G], IsOfFinOrder (1 : G) "]}
{"theorem":"Fact (Nat.Prime 7)","text":"`7` is a prime number.","result":true,"fullPrompt":"No prompt (maybe using cached data)","all_elaborations":["Fact (Nat.Prime 7) "]}
{"theorem":"Finset.card (Finset.filter Nat.Prime (Finset.range 8)) = 3","text":"There are `3` prime numbers below `8`.","result":true,"fullPrompt":"No prompt (maybe using cached data)","all_elaborations":["Nat.card_prime_below_8 : Finset.card (Finset.filter Nat.Prime (Finset.range 8)) = 3 ","Nat.card_primes_below_8 : Finset.card (Finset.filter Nat.Prime (Finset.range 8)) = 3 ","Fact (∃ (primes_below_eight : List ℕ), primes_below_eight = [2, 3, 5, 7] ∧ List.length primes_below_eight = 3) "]}
{"theorem":"∀ {α : Type u} {s : Set α}, Set.Finite s → ∅ ⊆ s","text":"The empty set is contained in every finite set.","result":true,"fullPrompt":"No prompt (maybe using cached data)","all_elaborations":["∀ {α : Type u} {s : Set α}, Set.Finite s → ∅ ⊆ s ","∀ {α : Type u} {a : Set α}, Set.Finite a → ∅ ⊆ a ","∀ {α : Type u} {s : Set α}, Set.Finite s → HasSubset.Subset ∅ s "]}
{"theorem":"∀ {α : Type u} {s : Set α} [inst : Infinite α], ∃ t, Set.Finite t ∧ t ⊆ s","text":"Every infinite set contains a finite set.","result":true,"fullPrompt":"No prompt (maybe using cached data)","all_elaborations":["∀ {α : Type u} {s : Set α}, ¬Set.Finite s → ∃ t : Set α, Set.Finite t ∧ t ⊆ s ","∀ {α : Type u} {s : Set α}, Set.Infinite s → ∀ (n : ℕ), ∃ t : Finset α, ↑t ⊆ s ∧ Finset.card t = n ","∀ {α : Type u} {s : Set α} [inst : Infinite α], ∃ t : Set α, Set.Finite t ∧ t ⊆ s "]}
{"theorem":"{R : Type u} → [inst : CommRing R] → Monoid R","text":"Every commutative ring is a monoid.","result":true,"fullPrompt":"No prompt (maybe using cached data)","all_elaborations":["∀ {R : Type u} [inst : CommRing R], Monoid R "]}
{"theorem":"∀ {n : ℕ}, Odd n → ∃ a b, a ≠ b ∧ n = a + b","text":"Every odd natural number is the sum of two distinct natural numbers.","result":true,"fullPrompt":"No prompt (maybe using cached data)","all_elaborations":["∀ {n : ℕ}, Odd n → ∃ a b : ℕ, a ≠ b ∧ n = a + b ","∀ {n : ℕ}, Odd n → ∃ m k : ℕ, m ≠ k ∧ n = m + k ","∀ (n : ℕ), Odd n → ∃ a b : ℕ, a ≠ b ∧ n = a + b ","∀ {n : ℕ}, Odd n → ∃ a b : ℕ, n = a + b ∧ a ≠ b ","∀ {n : ℕ}, Odd n → ∃ (a b : ℕ), a ≠ b ∧ n = a + b ","∀ {n : ℕ}, Odd n → ∃ x y : ℕ, x ≠ y ∧ n = x + y "]}
{"theorem":"∀ {G : Type u_1} [inst : GroupWithZero G] (x : G), IsOfFinOrder x","text":"Every element in the trivial group has finite order.","result":true,"fullPrompt":"No prompt (maybe using cached data)","all_elaborations":["∀ {G : Type u_1} [inst : Group G], IsOfFinOrder (1 : G) ","∀ {G : Type u_1} [inst : GroupWithZero G], IsOfFinOrder (0 : G) ","forall {G : Type u_1} [inst : GroupWithZero G] (x : G), IsOfFinOrder x ","∀ {G : Type u_1} [inst : Group G] [Subsingleton G] (x : G), IsOfFinOrder x ","∀ {G : Type u_1} [inst : Monoid G] [inst_1 : Unique G], ∀ (x : G), IsOfFinOrder x ","∀ {G : Type u_1} [inst : GroupWithZero G] {x : G}, IsOfFinOrder x "]}
{"theorem":"∀ {α : Type u} [inst : LinearOrderedRing α] {x : α}, Even x → Even (x * x)","text":"The square of an even number is even.","result":true,"fullPrompt":"No prompt (maybe using cached data)","all_elaborations":["∀ {α : Type u} [inst : CommRing α] {x : α}, x % 2 = 0 → (x * x) % 2 = 0 ","∀ {α : Type u} [inst : LinearOrderedRing α] {x : α}, Even x → Even (x * x) ","∀ {n : ℕ}, Even (n ^ 2) ↔ Even n ","∀ {α : Type u} [inst : LinearOrderedRing α] {x : α}, x % 2 = 0 → (x * x) % 2 = 0 ","∀ {α : Type u} [inst : Semiring α] {x : α}, Even x → Even (x * x) ","∀ {α : Type u} [inst : Semiring α] {a : α}, Even a → Even (a * a) "]}
{"theorem":"∀ (A : Type u) [inst : CommRing A] [inst_1 : Nontrivial A] [inst_2 : DivisionRing A], IsField A","text":"Every commutative division ring is a field.","result":true,"fullPrompt":"No prompt (maybe using cached data)","all_elaborations":["∀ (A : Type u) [inst : CommRing A] [inst_1 : Nontrivial A] [inst_2 : DivisionRing A], IsField A ","∀ {R : Type u} [inst : CommRing R] [inst_1 : DivisionRing R], IsField R ","∀ {R : Type u} [inst : CommRing R] [inst_1 : IsDomain R] [inst_2 : DivisionRing R], IsField R "]}
{"theorem":"∀ {α : Type u} (x : α), Function.IsFixedPt id x","text":"Every point is a fixed point of the identity function on a space.","result":true,"fullPrompt":"No prompt (maybe using cached data)","all_elaborations":["∀ {α : Type u} (x : α), Function.IsFixedPt id x "]}
{"theorem":"∀ {α : Type u} [inst : PseudoMetricSpace α] {x : α}, Metric.diam {x} = 0","text":"The diameter of a singleton space is `0`.","result":true,"fullPrompt":"No prompt (maybe using cached data)","all_elaborations":["∀ {α : Type u} [inst : PseudoMetricSpace α] {x : α}, Metric.diam {x} = 0 "]}
{"theorem":"∀ (G : Type u_1) [inst : Group G], Nonempty G","text":"Every group is non-empty.","result":true,"fullPrompt":"No prompt (maybe using cached data)","all_elaborations":["∀ {G : Type u} [inst : Group G], Nonempty G ","∀ (G : Type u_1) [inst : Group G], Nonempty G "]}
{"theorem":"∀ {α : Type u} [inst : TopologicalSpace α] (x : α), IsConnected (connectedComponent x)","text":"All connected components of a topological space are connected.","result":true,"fullPrompt":"No prompt (maybe using cached data)","all_elaborations":["∀ {α : Type u} [inst : TopologicalSpace α] (x : α), ConnectedSpace (connectedComponent x) ","∀ {α : Type u} [inst : TopologicalSpace α] (x : α), IsConnected (connectedComponent x) ","∀ {α : Type u} [inst : TopologicalSpace α] (x : α),\n  IsConnected (connectedComponent x) ","forall {α : Type u} [inst : TopologicalSpace α] (x : α), IsConnected (connectedComponent x) "]}
{"theorem":"∀ {R : Type u_1} [inst : CommRing R] [inst_1 : IsDomain R], ∃ M, Ideal.IsMaximal M","text":"The ring of integers has a maximal ideal.","result":true,"fullPrompt":"No prompt (maybe using cached data)","all_elaborations":["∀ {R : Type u_1} [inst : CommRing R] [inst_1 : IsDomain R] [inst_2 : IsDedekindDomain R], ∃ M, Ideal.IsMaximal M ","∀ {K : Type u} [inst : Field K] [inst_1 : NumberField K], ∃ M, Ideal.IsMaximal M ","∀ {R : Type u} [inst : CommRing R] [inst_1 : IsDomain R] [inst_2 : IsDedekindDomain R], ∃ M, Ideal.IsMaximal M ","∀ {O : Type u_1} [inst : CommRing O] [inst_1 : IsDomain O] [inst_2 : IsDedekindDomain O], ∃ M, Ideal.IsMaximal M ","forall {R : Type u} [inst : CommRing R] [inst_1 : IsDomain R] [inst_2 : IsDedekindDomain R], ∃ M, Ideal.IsMaximal M ","∀ {R : Type u_1} [inst : CommRing R] [inst_1 : IsDomain R], ∃ M, Ideal.IsMaximal M "]}
{"theorem":"PythagoreanTriple 3 4 5","text":"The numbers `3`, `4` and `5` form a Pythagorean triple.","result":true,"fullPrompt":"No prompt (maybe using cached data)","all_elaborations":["PythagoreanTriple 3 4 5 "]}
