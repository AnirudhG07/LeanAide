{"total-prompts": 40,
 "temperature": 0.8,
 "query-number": 5,
 "number-similar-sentences": 10,
 "include-fixed": false,
 "failures":
 ["If a vector space has dimension `2` then it is finite dimensional.",
  "If a space has dimension `2` then it is finite dimensional.",
  "Every set of Borel measure zero is Lebesgue measurable.",
  "Every subgroup of a group is a group.",
  "There is no field of order `10`.",
  "The ring of integers has a maximal ideal.",
  "A vector space with the empty set as basis is trivial."],
 "elaborated-prompts":
 [{"theorem": "∀ (Prime : ℕ), Nat.Prime Prime → Prime = 2 ∨ Prime % 2 = 1",
   "some-correct": null,
   "prompt": "Every prime number is `2` or odd.",
   "correct": null,
   "comments": "",
   "all-elabs":
   ["(prime : ℕ) (hp : nat.prime prime) :\n prime = 2 ∨ prime % 2 = 1 ",
    "(prime : ℕ) (hprime : nat.prime prime) :\n prime = 2 ∨ prime % 2 = 1 ",
    "(prime : ℕ) (hprime : nat.prime prime) : prime = 2 ∨ prime % 2 = 1 ",
    "(n : ℕ) [fact (nat.prime n)] : n = 2 ∨ n % 2 = 1 ",
    "(prime : ℕ) (hp : nat.prime prime) : prime = 2 ∨ prime % 2 = 1 ",
    "(prime : ℕ) (hp : nat.prime prime) :\nprime = 2 ∨ prime % 2 = 1 ",
    "(prime_num : ℕ) [fact (nat.prime prime_num)] : prime_num = 2 ∨ prime_num % 2 = 1 "]},
  {"theorem": "∀ (k : ℕ), ∃ n, n > k ∧ n % 2 = 1",
   "some-correct": null,
   "prompt": "There are infinitely many odd natural numbers.",
   "correct": null,
   "comments": "",
   "all-elabs":
   [": ∃ f : ℕ → ℕ, function.injective f ∧ ∀ n, odd (f n) ",
    ": ∀ k : ℕ, ∃ n : ℕ, n > k ∧ n % 2 = 1 ",
    ": ∃ f : ℕ → ℕ, function.injective f ∧ ∀ n, ∃ k, f n = 2 * k + 1 ",
    ": ∀ N : ℕ, ∃ n : ℕ, n > N ∧ n % 2 = 1 "]},
  {"theorem": "Prime 3",
   "some-correct": null,
   "prompt": "The smallest odd prime is `3`.",
   "correct": null,
   "comments": "",
   "all-elabs":
   ["smallest_odd_prime : prime 3 ",
    ": prime 3 ",
    "smallest_odd_prime_is_3 : prime 3 "]},
  {"theorem": "∀ (N : ℕ), ∃ p, p > N ∧ Prime p ∧ Odd p",
   "some-correct": null,
   "prompt": "There are infinitely many odd prime numbers.",
   "correct": null,
   "comments": "",
   "all-elabs":
   [": ∀ N : ℕ, ∃ p : ℕ, prime p ∧ odd p ∧ p > N ",
    ": ∃ f : ℕ → ℕ, (∀ n : ℕ, prime (f n) ∧ odd (f n)) ∧ ∀ m n : ℕ, m ≠ n → f m ≠ f n ",
    ": ∃ f : ℕ → ℕ, ∀ n : ℕ, prime (f n) ∧ odd (f n) ",
    "infinitely_many_odd_primes : ∃ p : ℕ, ∀ n, prime (2 * n * p + 1) ",
    ": ∃ f : ℕ → ℕ, (∀ n, prime (f n)) ∧ (∀ n, f n % 2 = 1) ∧ (∀ m n, m ≠ n → f m ≠ f n) ",
    ": ∀ N : ℕ, ∃ p > N, prime p ∧ odd p ",
    "infinitely_many_odd_primes : ∃ f : ℕ → ℕ, (∀ n : ℕ, prime (2 * (f n) + 1)) ∧ function.injective f ",
    "infinitely_many_odd_primes : ∀ N : ℕ, ∃ p, prime p ∧ p % 2 = 1 ∧ N ≤ p "]},
  {"theorem":
   "Type u_12 → ∀ (K : Type u_13) [inst : DivisionRing K], IsField K",
   "some-correct": null,
   "prompt": "Every field is a division ring.",
   "correct": null,
   "comments": "",
   "all-elabs":
   ["(field_division_ring : Type*) [field field_division_ring] : division_ring field_division_ring ",
    "(field_to_division_ring : Type*) [field field_to_division_ring] : division_ring field_to_division_ring ",
    "(field K : Type*) [division_ring K] : is_field K "]},
  {"theorem": "∀ (n : ℕ), ∃ m, m = n + 1",
   "some-correct": null,
   "prompt": "Every natural number has a successor.",
   "correct": null,
   "comments": "",
   "all-elabs":
   ["(n : ℕ) : ∃ m : ℕ, m = n + 1 ",
    "(n : ℕ) :\n ∃ m : ℕ, m = n + 1 ",
    "(n : ℕ) : ∃ m : ℕ, n + 1 = m ",
    "(n : ℕ) : ∃ k : ℕ, k = n + 1 "]},
  {"theorem": "∀ (n : ℕ), n < n + 1",
   "some-correct": null,
   "prompt": "Every natural number is less than its successor.",
   "correct": null,
   "comments": "",
   "all-elabs": ["(n : ℕ) : n < n + 1 ", "(n : ℕ) : n < n.succ "]},
  {"theorem":
   "∀ (X : Type u_12) [inst : MeasurableSpace X] (A : Set X), MeasurableSet A",
   "some-correct": null,
   "prompt": "Every set is Lebesgue measurable.",
   "correct": null,
   "comments": "",
   "all-elabs":
   ["(X : Type*) [measurable_space X] (A : set X) : measurable_set A "]},
  {"theorem": "∀ (n : ℕ), Prime n → ¬∃ m, n = m ^ 2",
   "some-correct": null,
   "prompt": "No prime number is a perfect square.",
   "correct": null,
   "comments": "",
   "all-elabs":
   ["(no_prime_perfect_square : ℕ → Prop) (p : ℕ) (hp : prime p) :\n no_prime_perfect_square p ",
    "(n : ℕ) (hn : prime n) : ¬∃ m : ℕ, n = m ^ 2 "]},
  {"theorem":
   "∀ (Prime : ℕ) [hp : Fact (Nat.Prime Prime)], Odd Prime → Prime > 2",
   "some-correct": null,
   "prompt": "Every odd prime number is greater than `2`.",
   "correct": null,
   "comments": "",
   "all-elabs":
   ["(prime : ℕ) [hp : fact (nat.prime prime)] (h_odd : odd prime) :\nprime > 2 ",
    "(p : ℕ) [h_prime : fact (prime p)] (hp_odd : odd p) :\np > 2 ",
    "(odd_prime : ℕ) (h_prime : nat.prime odd_prime) (h_odd : odd_prime % 2 = 1) : odd_prime > 2 ",
    "(odd_prime : ℕ) [h_odd_prime : fact (nat.prime odd_prime)] (h_odd : odd odd_prime) :\n  odd_prime > 2 "]},
  {"theorem": "∀ (n m : ℕ), ∃ a b c d, n * m = a ^ 2 + b ^ 2 + c ^ 2 + d ^ 2",
   "some-correct": null,
   "prompt":
   "The product of two numbers, each of which is the sum of four squares, is itself a sum of four squares.",
   "correct": null,
   "comments": "",
   "all-elabs":
   ["(four_squares_sum : ℕ → ℕ → ℕ → ℕ → ℕ) (m n : ℕ) :\n ∃ a b c d : ℕ, m * n = four_squares_sum a b c d ",
    "(n m : ℕ) :\n ∃ a b c d : ℕ, a^2 + b^2 + c^2 + d^2 = n * m ",
    "(n m : ℕ) :\n∃ a b c d : ℕ, n * m = a^2 + b^2 + c^2 + d^2 ",
    "(n m : ℕ) : ∃ a b c d : ℕ, n * m = a^2 + b^2 + c^2 + d^2 ",
    "(z w : ℤ) : ∃ a b c d : ℤ, z * w = a^2 + b^2 + c^2 + d^2 ",
    "(n m : ℕ) :\n  ∃ a b c d : ℕ, n * m = a^2 + b^2 + c^2 + d^2 ",
    "(n m : ℕ) :\n ∃ a b c d : ℕ, n * m = a^2 + b^2 + c^2 + d^2 "]},
  {"theorem":
   "∀ (X : Type u_12) [inst : TopologicalSpace X] [inst_1 : CompactSpace X], LocallyCompactSpace X",
   "some-correct": null,
   "prompt": "Every compact topological space is locally compact.",
   "correct": null,
   "comments": "",
   "all-elabs":
   ["(X : Type*) [topological_space X] [compact_space X] : \nlocally_compact_space X ",
    "(X : Type*) [topological_space X] [compact_space X] :\n  locally_compact_space X ",
    "(X : Type*) [topological_space X] [compact_space X] :\n ∀ x : X, ∃ U : set X, is_open U ∧ x ∈ U ∧ is_compact (closure U) ",
    "(X : Type*) [topological_space X] [compact_space X] :\n locally_compact_space X ",
    "(X : Type*) [topological_space X] [compact_space X] :\n  ∀ x : X, ∃ U : set X, is_open U ∧ is_compact U ∧ x ∈ U "]},
  {"theorem":
   "∀ (X : Type u_12) (Y : Type u_13) [inst : MetricSpace X] [inst_1 : MetricSpace Y] [inst_2 : CompactSpace X] (f : X → Y),\n  Continuous f → UniformContinuous f",
   "some-correct": null,
   "prompt": "Every continuous function is uniformly continuous.",
   "correct": null,
   "comments": "",
   "all-elabs":
   ["(X : Type*) [metric_space X] (Y : Type*) [metric_space Y] (f : X → Y) (hf : continuous f) :\n  uniform_continuous f ",
    "(X : Type*) (Y : Type*) [uniform_space X] [uniform_space Y] [compact_space X] (f : X → Y) (hf : continuous f) :\n  uniform_continuous f ",
    "(X : Type*) [metric_space X] (f : X → ℝ) (hf : continuous f) :\n  uniform_continuous f ",
    "(X Y : Type*) [metric_space X] [metric_space Y] [compact_space X]\n(f : X → Y) (hf : continuous f) : uniform_continuous f "]},
  {"theorem": "¬∃ p q, Prime p ∧ Prime q ∧ p ≠ q ∧ p + q = 6",
   "some-correct": null,
   "prompt": "`6` is not the sum of two distinct prime numbers.",
   "correct": null,
   "comments": "",
   "all-elabs":
   [":\n  ¬ (∃ p q : ℕ, prime p ∧ prime q ∧ p ≠ q ∧ p + q = 6) ",
    ": ¬ (∃ p q : ℕ, p ≠ q ∧ prime p ∧ prime q ∧ 6 = p + q) ",
    ": ¬∃ (p q : ℕ), prime p ∧ prime q ∧ p ≠ q ∧ p + q = 6 ",
    ": ¬ ∃ (p q : ℕ), prime p ∧ prime q ∧ p ≠ q ∧ p + q = 6 ",
    ": ¬∃ (p q : ℕ), p ≠ q ∧ prime p ∧ prime q ∧ p + q = 6 ",
    ": ¬∃ p q : ℕ, prime p ∧ prime q ∧ p ≠ q ∧ p + q = 6 ",
    ": ¬(∃ p q : ℕ, prime p ∧ prime q ∧ p ≠ q ∧ p + q = 6) "]},
  {"theorem": "(∀ (n : ℤ), Irrational ↑n) → False",
   "some-correct": null,
   "prompt": "No integer is irrational.",
   "correct": null,
   "comments": "",
   "all-elabs":
   ["(no_irrational_integer : ∀ n : ℤ, irrational (n : ℝ)) : false ",
    "(not_irrational : ℤ → Prop) (h : ∀ n : ℤ, ¬ not_irrational n) : ∀ m : ℤ, ¬ not_irrational m "]},
  {"theorem": "∀ (X : Type u_12) [inst : Ring X], IsUnit 1",
   "some-correct": null,
   "prompt": "The identity element in a ring is a unit.",
   "correct": null,
   "comments": "",
   "all-elabs":
   ["(X : Type*) [ring X] : is_unit (1 : X) ",
    "(G : Type*) [ring G] : is_unit (1 : G) ",
    "(id : Type*) [ring id] : is_unit (1 : id) ",
    "(G : Type*) [ring G] :\nis_unit (1 : G) "]},
  {"theorem": "∀ (n m : ℕ), ∃ k, n + m = k",
   "some-correct": null,
   "prompt": "The sum of two natural numbers is a natural number.",
   "correct": null,
   "comments": "",
   "all-elabs": ["(n m : ℕ) : ℕ ", "(n m : ℕ) : ∃ k : ℕ, n + m = k "]},
  {"theorem": "∀ (G : Type u_12) [inst : Group G], ∃ n, n > 0 ∧ 1 ^ n = 1",
   "some-correct": null,
   "prompt": "The identity element of a group has finite order.",
   "correct": null,
   "comments": "",
   "all-elabs":
   ["(G : Type*) [group G] : ∃ n : ℕ, n ≠ 0 ∧ (1 : G) ^ n = 1 ",
    "(G : Type*) [group G] : ∃ n : ℕ, n > 0 ∧ (1 : G) ^ n = 1 ",
    "(G : Type*) [group G] :\n∀ (e : G), e = 1 → ∃ n : ℕ, 0 < n ∧ e ^ n = 1 ",
    "(G : Type*) [group G] : ∃ n : ℕ, (1 : G) ^ n = 1 "]},
  {"theorem": "Prime 7",
   "some-correct": null,
   "prompt": "`7` is a prime number.",
   "correct": null,
   "comments": "",
   "all-elabs":
   ["prime_7 : nat.prime 7 ",
    "prime_7 : prime 7 ",
    "prime_seven : nat.prime 7 ",
    ": prime 7 ",
    ": nat.prime 7 ",
    "prime 7 "]},
  {"theorem": "∃ primes, primes = {2, 3, 5, 7} ∧ Finset.card primes = 3",
   "some-correct": null,
   "prompt": "There are `3` prime numbers below `8`.",
   "correct": null,
   "comments": "",
   "all-elabs":
   [": ∃ (s : finset ℕ), s = {2, 3, 5, 7} ∧ ∀ p ∈ s, prime p ",
    ": ∃ (primes : finset ℕ), primes = {2, 3, 5, 7} ∧ primes.card = 3 "]},
  {"theorem": "∀ {α : Type u_12} (s : Finset α), ∅ ⊆ s",
   "some-correct": null,
   "prompt": "The empty set is contained in every finite set.",
   "correct": null,
   "comments": "",
   "all-elabs":
   ["{α : Type*} (s : finset α) : ∅ ⊆ s ",
    "(A : Type) [fintype A] :\n ∅ ⊆ (set.univ : set A) "]},
  {"theorem":
   "∀ (X : Type u_12) [inst : Infinite X] (n : ℕ), ∃ A, Finset.card A = n",
   "some-correct": null,
   "prompt": "Every infinite set contains a finite set.",
   "correct": null,
   "comments": "",
   "all-elabs":
   ["(X : Type*) [infinite X] (n : ℕ) :\n  ∃ A : finset X, finset.card A = n ",
    "(X : Type*) [infinite X] (n : ℕ) : ∃ (S : finset X), S.card = n ",
    "(X : Type*) [infinite X] (n : ℕ) : ∃ (A : finset X), A.card = n ",
    "(X : Type*) [infinite X] (n : ℕ) : ∃ A : finset X, finset.card A = n ",
    "(G : Type*) [infinite G] (n : ℕ) : ∃ (s : finset G), s.card = n ",
    "(X : Type*) [infinite X] (n : ℕ) : ∃ (A : finset X), finset.card A = n ",
    "(X : Type*) (hx : infinite X) (n : ℕ) :\n  ∃ (A : finset X), A.card = n "]},
  {"theorem":
   "(com_ring : Type u_12) → [inst : CommRing com_ring] → Monoid com_ring",
   "some-correct": null,
   "prompt": "Every commutative ring is a monoid.",
   "correct": null,
   "comments": "",
   "all-elabs":
   ["(comm_ring R : Type*) : monoid R ",
    "(comm_ring_to_monoid : Type*) [comm_ring comm_ring_to_monoid] : monoid comm_ring_to_monoid ",
    "(com_ring : Type*) [comm_ring com_ring] : monoid com_ring "]},
  {"theorem": "∀ (n : ℕ), Odd n → ∃ a b, a ≠ b ∧ n = a + b",
   "some-correct": null,
   "prompt":
   "Every odd natural number is the sum of two distinct natural numbers.",
   "correct": null,
   "comments": "",
   "all-elabs":
   ["  every_odd_sum_two_distinct : ∀ (n : ℕ), odd n → ∃ (a b : ℕ), a ≠ b ∧ a + b = n ",
    "every_odd_sum_of_two_distinct_naturals : ∀ n : ℕ, n % 2 = 1 → ∃ a b : ℕ, a ≠ b ∧ a + b = n ",
    "every_odd_sum_of_two_distinct_naturals :\n  ∀ n : ℕ, odd n → ∃ a b : ℕ, a ≠ b ∧ n = a + b ",
    "every_odd_sum_two_distinct : ∀ n : ℕ, odd n → ∃ a b : ℕ, a ≠ b ∧ a + b = n ",
    "every_odd_sum_of_two_distinct_naturals :\n ∀ n : ℕ, odd n → ∃ m k : ℕ, m ≠ k ∧ n = m + k ",
    "(n : ℕ) (h_n_odd : n % 2 = 1) :\n ∃ (a b : ℕ), a ≠ b ∧ a + b = n ",
    "every_odd_sum_of_two_distinct_naturals :\n  ∀ n : ℕ, odd n → ∃ a b : ℕ, a ≠ b ∧ a + b = n ",
    "(n : ℕ) (hn_odd : n % 2 = 1) :\n ∃ a b : ℕ, a ≠ b ∧ a + b = n ",
    "every_odd_sum_two_distinct : ∀ n : ℕ, odd n → ∃ a b : ℕ, a ≠ b ∧ n = a + b "]},
  {"theorem":
   "∀ (G : Type u_12) [inst : Group G], (∀ (x : G), x = 1) → ∀ (x : G), ∃ n, x ^ n = 1",
   "some-correct": null,
   "prompt": "Every element in the trivial group has finite order.",
   "correct": null,
   "comments": "",
   "all-elabs":
   ["(trivial_group : Type*) [group trivial_group] : ∀ x : trivial_group, ∃ n : ℕ, x^n = 1 ",
    "(G : Type*) [group G] (hx : ∀ g : G, ∃ n : ℕ, g ^ n = 1) : ∀ g : G, is_of_fin_order g ",
    "(G : Type*) [group G] (hg : ∀ x : G, x = 1) (x : G) : ∃ n : ℕ, x ^ n = 1 ",
    "(trivial_group : Type*) [group_with_zero trivial_group] : ∀ a : trivial_group, ∃ n : ℕ, a ^ n = 1 ",
    "(G : Type*) [group G] (x : G) (h : ∀ y : G, y = 1) : ∃ n : ℕ, x ^ n = 1 ",
    "(G : Type*) [group G] [unique G] (x : G) : ∃ n : ℕ, n ≠ 0 ∧ x ^ n = 1 ",
    "(G : Type*) [group G] (x : G) (htriv : ∀ y : G, y = 1) : ∃ n : ℕ, x ^ n = 1 "]},
  {"theorem": "∀ (n : ℕ), Even n → Even (n ^ 2)",
   "some-correct": null,
   "prompt": "The square of an even number is even.",
   "correct": null,
   "comments": "",
   "all-elabs":
   ["(n : ℕ) (hn : even n) : even (n^2) ",
    "(n : ℕ) (h : even n) : even (n^2) ",
    "(sq_even : ℕ) (h : even sq_even) : even (sq_even^2) ",
    "(n : ℕ) (hn : even n) :\n even (n^2) ",
    "(n : ℕ) (h : even n) :\n even (n^2) ",
    "(square_of_even : ℕ) (h : even square_of_even) : even (square_of_even ^ 2) "]},
  {"theorem":
   "∀ (comm_div_ring : Type u_12) [inst : CommRing comm_div_ring] [inst_1 : Nontrivial comm_div_ring]\n  [inst_2 : IsDomain comm_div_ring], IsField comm_div_ring",
   "some-correct": null,
   "prompt": "Every commutative division ring is a field.",
   "correct": null,
   "comments": "",
   "all-elabs":
   ["(G : Type*) [comm_ring G] [div_inv_monoid G] (hz : ∀ (a : G), a * a⁻¹ = 1) :\nfield G ",
    "(comm_div_ring : Type*) [comm_ring comm_div_ring] [division_ring comm_div_ring] : field comm_div_ring ",
    "(comm_div_ring : Type*) [comm_ring comm_div_ring] [nontrivial comm_div_ring]\n[is_domain comm_div_ring] : is_field comm_div_ring ",
    "(comm_div_ring : Type*) [comm_ring comm_div_ring] [nontrivial comm_div_ring] [is_domain comm_div_ring] : is_field comm_div_ring ",
    "(G : Type*) [comm_ring G] [nontrivial G] (hG : ∀ x : G, x ≠ 0 → ∃ y : G, x * y = 1) :\n is_field G ",
    "(G : Type*) [comm_ring G] [nontrivial G] (h_div : ∀ x y : G, x ≠ 0 → y ≠ 0 → ∃ z, x * y * z = 1) :\n  field G ",
    "(comm_div_ring : Type*) [comm_ring comm_div_ring] [nontrivial comm_div_ring] [is_domain comm_div_ring] :\nis_field comm_div_ring "]},
  {"theorem":
   "∀ (G : Type u_12) [inst : Group G] (id_map : G → G), (∀ (g : G), id_map g = g) → id_map 1 = 1",
   "some-correct": null,
   "prompt":
   "The image of the identity element under the identity map is the identity element.",
   "correct": null,
   "comments": "",
   "all-elabs":
   ["(G : Type*) [group G] (id_map : G → G) (h : ∀ g : G, id_map g = g) :\n id_map 1 = 1 ",
    "(G : Type*) [group G] (id_map : G → G) (h_id_map : ∀ x : G, id_map x = x) :\nid_map 1 = 1 ",
    "(G : Type*) [group G] (id_map : G → G) (h_id_map : ∀ x : G, id_map x = x) :\n id_map 1 = 1 ",
    "(G : Type*) [group G] :\nid (1 : G) = 1 ",
    "(G : Type*) [group G] :\n(id : G → G) 1 = 1 ",
    "(G : Type*) [group G] (id_map : G → G) (h : ∀ x : G, id_map x = x) :\n id_map 1 = 1 ",
    "(G : Type*) [group G] : id 1 = 1 "]},
  {"theorem": "∀ (X : Type u_12) (x : X), id x = x",
   "some-correct": null,
   "prompt":
   "Every point is a fixed point of the identity function on a space.",
   "correct": null,
   "comments": "",
   "all-elabs":
   ["(X : Type*) (x : X) : id x = x ", "(X : Type*) : ∀ x : X, id x = x "]},
  {"theorem":
   "∀ (s : Type u_12) [inst : MetricSpace s] (x : s), Metric.diam {x} = 0",
   "some-correct": null,
   "prompt": "The diameter of a singleton space is `0`.",
   "correct": null,
   "comments": "",
   "all-elabs":
   ["(s : Type*) [metric_space s] (x : s) :\n metric.diam (singleton x) = 0 ",
    "(X : Type*) [metric_space X] (x : X) :\nmetric.diam (singleton x) = 0 ",
    "(X : Type*) [pseudo_emetric_space X] (x : X) :\n emetric.diam (singleton x) = 0 ",
    "(X : Type*) [pseudo_metric_space X] (x : X) :\n  metric.diam (singleton x) = 0 ",
    "(X : Type*) [metric_space X] (x : X) :\n  metric.diam (singleton x) = 0 "]},
  {"theorem": "∀ (G : Type u_12) [inst : Group G], Nonempty G",
   "some-correct": null,
   "prompt": "Every group is non-empty.",
   "correct": null,
   "comments": "",
   "all-elabs":
   ["(G : Type*) [group G] : nonempty G ",
    "(group_nonempty : Type*) [group group_nonempty] : nonempty group_nonempty "]},
  {"theorem":
   "∀ (X : Type u_12) [inst : TopologicalSpace X] (C : Set X), IsConnected C → IsConnected C",
   "some-correct": null,
   "prompt": "All connected components of a topological space are connected.",
   "correct": null,
   "comments": "",
   "all-elabs":
   ["(X : Type*) [topological_space X] (C : set X) (hC : is_connected C) :\n  is_connected C ",
    "(X : Type*) [topological_space X] (C : set X) (hC : is_connected C) :\nis_connected C ",
    "(X : Type*) [topological_space X]\n(component : set X) (h_component : is_connected component) :\nis_preconnected component ",
    "(X : Type*) [topological_space X]\n(component : set X) (h_component : is_connected component) :\nis_connected component ",
    "(X : Type*) [topological_space X] (C : set X) (hC : is_connected C) : is_connected C "]},
  {"theorem": "∃ a b c, a ^ 2 + b ^ 2 = c ^ 2 ∧ a = 3 ∧ b = 4 ∧ c = 5",
   "some-correct": null,
   "prompt": "The numbers `3`, `4` and `5` form a Pythagorean triple.",
   "correct": null,
   "comments": "",
   "all-elabs":
   [": ∃ (a b c : ℕ), a^2 + b^2 = c^2 ∧ a = 3 ∧ b = 4 ∧ c = 5 ",
    ": ∃ a b c : ℕ, a^2 + b^2 = c^2 ∧ a = 3 ∧ b = 4 ∧ c = 5 ",
    ": ∃ a b c : ℕ, a ^ 2 + b ^ 2 = c ^ 2 ∧ a = 3 ∧ b = 4 ∧ c = 5 ",
    ": real.sqrt (3^2 + 4^2) = 5 ",
    ": ∃ a b c : ℕ, a * a + b * b = c * c ∧ a = 3 ∧ b = 4 ∧ c = 5 "]}],
 "elaborated": 33}