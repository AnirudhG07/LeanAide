{"total-prompts": 40,
 "temperature": 0.8,
 "query-number": 5,
 "number-similar-sentences": 10,
 "include-fixed": false,
 "failures":
 ["Every set of Borel measure zero is Lebesgue measurable.",
  "There is no field of order `10`.",
  "A vector space with the empty set as basis is trivial."],
 "elaborated-prompts":
 [{"theorem": "∀ (p : ℕ) [inst : Fact (Nat.Prime p)], Odd p ∨ p = 2",
   "some-correct": null,
   "prompt": "Every prime number is `2` or odd.",
   "groups":
   [["∀ (p : ℕ) [inst : Fact (Nat.Prime p)], Odd p ∨ p = 2",
     "∀ (p : ℕ) [inst : Fact (Nat.Prime p)], Odd p ∨ p = 2"],
    ["∀ (p : ℕ), Nat.Prime p → p = 2 ∨ Odd p"],
    ["∀ (p : ℕ) [inst : Fact (Nat.Prime p)], p = 2 ∨ Odd p"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   [" ∀ (p : ℕ), Nat.Prime p → p = 2 ∨ Odd p ",
    " ∀ (p : ℕ) [inst : Fact (Nat.Prime p)], p = 2 ∨ Odd p ",
    " ∀ (p : ℕ) [inst : Fact (Nat.Prime p)], Odd p ∨ p = 2 ",
    " ∀ (p : ℕ) [inst : Fact (Nat.Prime p)], Odd p ∨ p = 2 "]},
  {"theorem": "Set.Infinite {x | x % 2 = 1}",
   "some-correct": null,
   "prompt": "There are infinitely many odd natural numbers.",
   "groups":
   [["Set.Infinite {x | x % 2 = 1}", "Set.Infinite {x | x % 2 = 1}"],
    ["∀ (l : List ℕ), List.Nodup l → List.length l < ⊤ → ∃ n ∈ l, ¬Even n ∧ ∀ m ∈ l, m ≠ n → Even m"],
    ["Set.Infinite {m | Odd m}"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   [" Set.Infinite {x : ℕ | x % 2 = 1} ",
    " Set.Infinite {x : ℕ | x % 2 = 1}",
    " Set.Infinite {m : ℕ | Odd m} ",
    " ∀ (l : List ℕ), l.Nodup → l.length < ⊤ → ∃ n ∈ l, ¬Even n ∧ ∀ m ∈ l, m ≠ n → Even m"]},
  {"theorem": "∀ (p : ℕ), Nat.Prime p ↔ p = 3 ∧ p % 2 = 1",
   "some-correct": null,
   "prompt": "The smallest odd prime is `3`.",
   "groups": [["∀ (p : ℕ), Nat.Prime p ↔ p = 3 ∧ p % 2 = 1"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   [" Nat.Prime 3",
    " Nat.Prime 3",
    " ∀ (p : ℕ), Nat.Prime p ↔ p = 3 ∧ p % 2 = 1"]},
  {"theorem":
   "∀ {p q : ℕ}, Nat.Prime p → Nat.Prime q → p ≠ q → p % 2 ≠ 0 → q % 2 ≠ 0 → True",
   "some-correct": null,
   "prompt": "There are infinitely many odd prime numbers.",
   "groups":
   [["∀ {p q : ℕ}, Nat.Prime p → Nat.Prime q → p ≠ q → p % 2 ≠ 0 → q % 2 ≠ 0 → True"],
    ["Set.Infinite {p | Nat.Prime p ∧ p ≠ 2}"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   [" Set.Infinite {p | Nat.Prime p ∧ p ≠ 2}",
    " ∀ {p q : ℕ}, Nat.Prime p → Nat.Prime q → p ≠ q → p % 2 ≠ 0 → q % 2 ≠ 0 → True "]},
  {"theorem":
   "∀ {K : Type u} {V : Type v} [inst : DivisionRing K] [inst_1 : AddCommGroup V] [inst_2 : Module K V],\n  Module.rank K V = 2 → FiniteDimensional K V",
   "some-correct": null,
   "prompt":
   "If a vector space has dimension `2` then it is finite dimensional.",
   "groups":
   [["∀ {K : Type u} {V : Type v} [inst : DivisionRing K] [inst_1 : AddCommGroup V] [inst_2 : Module K V],\n  Module.rank K V = 2 → FiniteDimensional K V",
     "∀ {K : Type u} {V : Type v} [inst : DivisionRing K] [inst_1 : AddCommGroup V] [inst_2 : Module K V],\n  Module.rank K V = 2 → FiniteDimensional K V",
     "∀ {K : Type u} {V : Type v} [inst : DivisionRing K] [inst_1 : AddCommGroup V] [inst_2 : Module K V],\n  Module.rank K V = 2 → FiniteDimensional K V",
     "∀ {K : Type u} {V : Type v} [inst : DivisionRing K] [inst_1 : AddCommGroup V] [inst_2 : Module K V],\n  Module.rank K V = 2 → FiniteDimensional K V"],
    ["∀ {𝕜 : Type u_1} {V : Type u_2} [inst : DivisionRing 𝕜] [inst_1 : AddCommGroup V] [inst_2 : Module 𝕜 V] {ι : Type w},\n  Module.rank 𝕜 V = 2 → FiniteDimensional 𝕜 V"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   [" ∀ {K : Type u} {V : Type v} [inst : DivisionRing K] [inst_1 : AddCommGroup V] [inst_2 : Module K V],\n  Module.rank K V = 2 → FiniteDimensional K V ",
    " ∀ {K : Type u} {V : Type v} [inst : DivisionRing K] [inst_1 : AddCommGroup V] [inst_2 : Module K V],\n  Module.rank K V = 2 → FiniteDimensional K V ",
    " ∀ {K : Type u} {V : Type v} [inst : DivisionRing K] [inst_1 : AddCommGroup V] [inst_2 : Module K V],\n  Module.rank K V = 2 → FiniteDimensional K V ",
    " ∀ {K : Type u} {V : Type v} [inst : DivisionRing K] [inst_1 : AddCommGroup V] [inst_2 : Module K V],\n  Module.rank K V = 2 → FiniteDimensional K V ",
    " ∀ {𝕜 : Type u_1} {V : Type u_2} [inst : DivisionRing 𝕜] [inst_1 : AddCommGroup V] [inst_2 : Module 𝕜 V] {ι : Type w},\n  Module.rank 𝕜 V = 2 → FiniteDimensional 𝕜 V "]},
  {"theorem": "{K : Type u} → [inst : Field K] → DivisionRing K",
   "some-correct": null,
   "prompt": "Every field is a division ring.",
   "groups":
   [["{K : Type u} → [inst : Field K] → DivisionRing K",
     "{K : Type u} → [inst : Field K] → DivisionRing K"],
    ["(K : Type u_1) → [inst : Field K] → DivisionRing K"],
    ["{K : Type u_1} → [inst : Field K] → DivisionRing K"],
    ["{K : Type u} → [inst : Field K] → DivisionRing K"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   [" ∀ {K : Type u} [inst : Field K], DivisionRing K ",
    " ∀ {K : Type u} [inst : Field K], DivisionRing K ",
    " ∀ {K : Type u_1} [inst : Field K], DivisionRing K ",
    " ∀ {K : Type u} [inst : Field K], DivisionRing K",
    " ∀ (K : Type u_1) [inst : Field K], DivisionRing K"]},
  {"theorem":
   "∀ {𝕜 : Type u_1} {V : Type u_2} [inst : DivisionRing 𝕜] [inst_1 : AddCommGroup V] [inst_2 : Module 𝕜 V]\n  [inst_3 : FiniteDimensional 𝕜 V] (e₁ e₂ : V), LinearIndependent 𝕜 ![e₁, e₂] → FiniteDimensional 𝕜 V",
   "some-correct": null,
   "prompt": "If a space has dimension `2` then it is finite dimensional.",
   "groups":
   [["∀ {𝕜 : Type u_1} {V : Type u_2} [inst : DivisionRing 𝕜] [inst_1 : AddCommGroup V] [inst_2 : Module 𝕜 V]\n  [inst_3 : FiniteDimensional 𝕜 V] (e₁ e₂ : V), LinearIndependent 𝕜 ![e₁, e₂] → FiniteDimensional 𝕜 V",
     "∀ {𝕜 : Type u_1} {α : Type u_2} [inst : DivisionRing 𝕜] [inst_1 : Fintype α] [inst_2 : AddCommGroup α]\n  [inst_3 : DistribMulAction 𝕜 α] [inst_4 : Module 𝕜 α] [inst_5 : FiniteDimensional 𝕜 α], Module.Finite 𝕜 α"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   [" ∀ {𝕜 : Type u_1} {V : Type u_2} [inst : DivisionRing 𝕜] [inst_1 : AddCommGroup V] [inst_2 : Module 𝕜 V]\n  [inst_3 : FiniteDimensional 𝕜 V] (e₁ e₂ : V), LinearIndependent 𝕜 ![e₁, e₂] → FiniteDimensional 𝕜 V",
    " ∀ {𝕜 : Type u_1} {α : Type u_2} [inst : DivisionRing 𝕜] [inst_1 : Fintype α] [inst_2 : AddCommGroup α]\n  [inst_3 : DistribMulAction 𝕜 α] [inst_4 : Module 𝕜 α] [inst_5 : FiniteDimensional 𝕜 α],\n  Module.Finite 𝕜 α"]},
  {"theorem": "∀ (n : ℕ), ∃ k, n = k + 1",
   "some-correct": null,
   "prompt": "Every natural number has a successor.",
   "groups":
   [["∀ (n : ℕ), ∃ k, n = k + 1", "∀ (n : ℕ), ∃ m, n = m + 1"],
    ["∀ (K : Type u_1) [inst : LinearOrderedField K] [inst_1 : FloorRing K] (v : K) (n : ℕ),\n  ∃ q, GeneralizedContinuedFraction.convergents (GeneralizedContinuedFraction.of v) n = q"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   [" ∀ (n : ℕ), ∃ k, n = k + 1 ",
    " ∀ (n : ℕ), ∃ m, n = m + 1 ",
    " Set.InjOn Nat.succ {x | x ≠ 0}",
    " ∀ (K : Type u_1) [inst : LinearOrderedField K] [inst_1 : FloorRing K] (v : K) (n : ℕ),\n  ∃ q, GeneralizedContinuedFraction.convergents (GeneralizedContinuedFraction.of v) n = ↑q "]},
  {"theorem": "∀ (n : ℕ), n ≤ Nat.succ n",
   "some-correct": null,
   "prompt": "Every natural number is less than its successor.",
   "groups":
   [["∀ (n : ℕ), n ≤ Nat.succ n", "∀ (n : ℕ), n ≤ Nat.succ n"],
    ["∀ (n : ℕ), n < Nat.succ n", "∀ (n : ℕ), n < Nat.succ n"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   [" ∀ n : ℕ, n < n.succ",
    " ∀ n : ℕ, n < n.succ ",
    " ∀ n : ℕ, n ≤ Nat.succ n ",
    " ∀ (n : ℕ), n ≤ Nat.succ n"]},
  {"theorem":
   "∀ {α : Type u_6} [inst : MeasurableSpace α], MeasureTheory.Measure α → ∀ (s : Set α), MeasurableSet s",
   "some-correct": null,
   "prompt": "Every set is Lebesgue measurable.",
   "groups":
   [["∀ {α : Type u_6} [inst : MeasurableSpace α], MeasureTheory.Measure α → ∀ (s : Set α), MeasurableSet s"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   [" ∀ {α : Type u_6} [inst : MeasurableSpace α] (μ : MeasureTheory.Measure α) (s : Set α), MeasurableSet s"]},
  {"theorem":
   "∀ {α : Type u_3} [inst : CommRing α] {p : ℕ}, Nat.Prime p → ¬∃ a, a * a = p ∧ a ≠ 1",
   "some-correct": null,
   "prompt": "No prime number is a perfect square.",
   "groups":
   [["∀ {α : Type u_3} [inst : CommRing α] {p : ℕ}, Nat.Prime p → ¬∃ a, a * a = p ∧ a ≠ 1"],
    ["∀ {p n : ℕ}, Nat.Prime p → p ∣ n → ¬IsSquare n"],
    ["∀ {p n : ℕ}, Nat.Prime p → p ∣ n → ¬∃ t, t * t = n"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   [" ∀ {p n : ℕ}, Nat.Prime p → p ∣ n → ¬IsSquare n ",
    " ∀ {p n : ℕ}, Nat.Prime p → p ∣ n → ¬∃ t, t * t = n ",
    " ∀ {p n : ℕ}, Nat.Prime p → n = p ^ 2 → n = 0 ∨ n = 1 ∨ p = 2",
    " ∀ {α : Type u_3} [inst : CommRing α] {p : ℕ} (h : Nat.Prime p), ¬∃ a : ℕ, a * a = p ∧ a ≠ 1"]},
  {"theorem": "∀ {p : ℕ}, Nat.Prime p → Odd p → p ≠ 2",
   "some-correct": null,
   "prompt": "Every odd prime number is greater than `2`.",
   "groups":
   [["∀ {p : ℕ}, Nat.Prime p → Odd p → p ≠ 2"],
    ["∀ {p : ℕ}, Nat.Prime p → Odd p → 2 < p"],
    ["∀ {p : ℕ}, Prime p → Odd p → 2 < p"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   [" ∀ {p : ℕ}, Nat.Prime p → Odd p → 2 < p",
    " ∀ {p : ℕ}, Prime p → Odd p → 2 < p",
    " ∀ (p' : ℕ), Odd (p' + 2) → Prime p' → 2 < p'",
    " ∀ {p : ℕ}, Nat.Prime p → Odd p → p ≠ 2 "]},
  {"theorem":
   "∀ {R : Type u_1} [inst : CommRing R] (a b : R),\n  ∃ x y z u v,\n    a = x ^ 2 + y ^ 2 + z ^ 2 + u ^ 2 ∧ b = x ^ 2 + y ^ 2 + z ^ 2 + u ^ 2 →\n      ∃ r s t w, a * b = r ^ 2 + s ^ 2 + t ^ 2 + w ^ 2",
   "some-correct": null,
   "prompt":
   "The product of two numbers, each of which is the sum of four squares, is itself a sum of four squares.",
   "groups":
   [["∀ {R : Type u_1} [inst : CommRing R] (a b : R),\n  ∃ x y z u v,\n    a = x ^ 2 + y ^ 2 + z ^ 2 + u ^ 2 ∧ b = x ^ 2 + y ^ 2 + z ^ 2 + u ^ 2 →\n      ∃ r s t w, a * b = r ^ 2 + s ^ 2 + t ^ 2 + w ^ 2"],
    ["∀ {R : Type u_1} [inst : CommRing R] (a b : R),\n  IsSquare (a ^ 2 + b ^ 2) → IsSquare (a ^ 2 - b ^ 2) → ∃ x y z w, a * b = x ^ 2 + y ^ 2 + z ^ 2 + w ^ 2"],
    ["∀ {a b : ℕ},\n  ∃ x y z u v,\n    a = x ^ 2 + y ^ 2 + z ^ 2 + u ^ 2 ∧ b = x ^ 2 + y ^ 2 + z ^ 2 + u ^ 2 →\n      ∃ r s t w, a * b = r ^ 2 + s ^ 2 + t ^ 2 + w ^ 2"],
    ["∀ (a b : ℕ),\n  ∃ x y z w u v u_1 v_1,\n    a = x ^ 2 + y ^ 2 + z ^ 2 + w ^ 2 ∧ b = u ^ 2 + v ^ 2 + u_1 ^ 2 + v_1 ^ 2 →\n      ∃ r s t u, a * b = r ^ 2 + s ^ 2 + t ^ 2 + u ^ 2"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   [" ∀ {R : Type u_1} [inst : CommRing R] (a b : R),\n  IsSquare (a ^ 2 + b ^ 2) → IsSquare (a ^ 2 - b ^ 2) → ∃ x y z w, a * b = x ^ 2 + y ^ 2 + z ^ 2 + w ^ 2 ",
    " ∀ {a b : ℕ}, ∃ x y z u v, a = x ^ 2 + y ^ 2 + z ^ 2 + u ^ 2 ∧ b = x ^ 2 + y ^ 2 + z ^ 2 + u ^ 2 → ∃ r s t w, a * b = r ^ 2 + s ^ 2 + t ^ 2 + w ^ 2 ",
    " ∀ (a b : ℕ), ∃ x y z w u v u_1 v_1, a = x ^ 2 + y ^ 2 + z ^ 2 + w ^ 2 ∧ b = u ^ 2 + v ^ 2 + u_1 ^ 2 + v_1 ^ 2 → ∃ r s t u, a * b = r ^ 2 + s ^ 2 + t ^ 2 + u ^ 2 ",
    " ∀ {R : Type u_1} [inst : CommRing R] (a b : R),\n  ∃ x y z u v : R, a = x ^ 2 + y ^ 2 + z ^ 2 + u ^ 2 ∧ b = x ^ 2 + y ^ 2 + z ^ 2 + u ^ 2 →\n      ∃ r s t w : R, a * b = r ^ 2 + s ^ 2 + t ^ 2 + w ^ 2"]},
  {"theorem":
   "∀ {X : Type u} [inst : TopologicalSpace X] [inst_1 : CompactSpace X], LocallyCompactSpace X",
   "some-correct": null,
   "prompt": "Every compact topological space is locally compact.",
   "groups":
   [["∀ {X : Type u} [inst : TopologicalSpace X] [inst_1 : CompactSpace X], LocallyCompactSpace X",
     "∀ {X : Type u} [inst : TopologicalSpace X] [inst_1 : CompactSpace X], LocallyCompactSpace X",
     "∀ {X : Type u} [inst : TopologicalSpace X] [inst_1 : CompactSpace X], LocallyCompactSpace X",
     "∀ {X : Type u} [inst : TopologicalSpace X] [inst_1 : CompactSpace X], LocallyCompactSpace X"],
    ["∀ {X : Type u_1} [inst : TopologicalSpace X] [inst_1 : CompactSpace X], LocallyCompactSpace X"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   [" ∀ {X : Type u} [inst : TopologicalSpace X] [inst_1 : CompactSpace X], LocallyCompactSpace X ",
    " ∀ {X : Type u} [inst : TopologicalSpace X] [inst_1 : CompactSpace X], LocallyCompactSpace X ",
    " ∀ {X : Type u} [inst : TopologicalSpace X] [inst_1 : CompactSpace X], LocallyCompactSpace X ",
    " ∀ {X : Type u} [inst : TopologicalSpace X] [inst_1 : CompactSpace X], LocallyCompactSpace X",
    " ∀ {X : Type u_1} [inst : TopologicalSpace X] [inst_1 : CompactSpace X], LocallyCompactSpace X"]},
  {"theorem":
   "∀ {α : Type u} {β : Type v} [inst : UniformSpace α] [inst_1 : UniformSpace β] (f : α → β) [inst_2 : TopologicalSpace α],\n  Continuous f → UniformContinuous f",
   "some-correct": null,
   "prompt": "Every continuous function is uniformly continuous.",
   "groups":
   [["∀ {α : Type u} {β : Type v} [inst : UniformSpace α] [inst_1 : UniformSpace β] (f : α → β) [inst_2 : TopologicalSpace α],\n  Continuous f → UniformContinuous f"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   [" ∀ {α : Type u} {β : Type v} [inst : UniformSpace α] [inst_1 : UniformSpace β] (f : α → β)\n  [inst_2 : TopologicalSpace α],\n  Continuous f → UniformContinuous f "]},
  {"theorem": "∀ {p q : ℕ}, Nat.Prime p → Nat.Prime q → p + q ≠ 6",
   "some-correct": null,
   "prompt": "`6` is not the sum of two distinct prime numbers.",
   "groups": [["∀ {p q : ℕ}, Nat.Prime p → Nat.Prime q → p + q ≠ 6"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   [" ¬(∃ (p q : ℕ), Nat.Prime p ∧ Nat.Prime q ∧ p ≠ q ∧ p + q = 6)",
    " ∀ {p q : ℕ}, Nat.Prime p → Nat.Prime q → p + q ≠ 6 ",
    " ¬∃ p q, Nat.Prime p ∧ Nat.Prime q ∧ 6 = p + q",
    " ¬∃ (p q : ℕ), Nat.Prime p ∧ Nat.Prime q ∧ 6 = p + q ∧ p ≠ 2 ∧ q ≠ 3 ∧ p ≠ 3 ∧ p ≠ 2"]},
  {"theorem": "∀ (n : ℤ), ¬Irrational ↑n",
   "some-correct": null,
   "prompt": "No integer is irrational.",
   "groups":
   [["∀ (n : ℤ), ¬Irrational ↑n",
     "∀ (a : ℤ), ¬Irrational ↑a",
     "∀ (p : ℕ) {a : ℚ} [hp : Fact (Nat.Prime p)], Rat.isInt a = true → ¬Irrational ↑a = (true = true)"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   [" ∀ (n : ℤ), ¬Irrational n",
    " ∀ (a : ℤ), ¬Irrational a ",
    " ∀ (p : ℕ) {a : ℚ} [hp : Fact (Nat.Prime p)], Rat.isInt a → ¬Irrational a = true"]},
  {"theorem": "∀ {R : Type u} [inst : Ring R] (r : R), IsUnit r ↔ r = 1",
   "some-correct": null,
   "prompt": "The identity element in a ring is a unit.",
   "groups":
   [["∀ {R : Type u} [inst : Ring R] (r : R), IsUnit r ↔ r = 1"],
    ["∀ {R : Type u} [inst : Ring R], IsUnit 1"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   [" ∀ {R : Type u} [inst : Ring R], IsUnit (1 : R) ",
    " ∀ {R : Type u} [inst : Ring R] (r : R), IsUnit r ↔ r = 1 "]},
  {"theorem": "{G : Type u_1} → [inst : Group G] → (H : Subgroup G) → Group ↥H",
   "some-correct": null,
   "prompt": "Every subgroup of a group is a group.",
   "groups":
   [["{G : Type u_1} → [inst : Group G] → (H : Subgroup G) → Group ↥H",
     "{G : Type u_1} → [inst : Group G] → (H : Subgroup G) → Group ↥H"],
    ["∀ {G : Type u_1} [inst : Group G] (H : Subgroup G) (x y z : G), x ∈ H → y ∈ H → z ∈ H → x * y * z⁻¹ ∈ H"],
    ["{G : Type u_1} → [inst : Group G] → (H : Subgroup G) → Group ↥H"],
    ["{G : Type u_1} → [inst : Group G] → (H : Subgroup G) → Group ↥H"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   [" ∀ {G : Type u_1} [inst : Group G] (H : Subgroup G), Group ↥H ",
    " ∀ {G : Type u_1} [inst : Group G] (H : Subgroup G), Group ↥H ",
    " ∀ {G : Type u_1} [inst : Group G] (H : Subgroup G), Group ↥H",
    " ∀ {G : Type u_1} [inst : Group G] (H : Subgroup G), Group (↥H)",
    " ∀ {G : Type u_1} [inst : Group G] (H : Subgroup G), ∀ x y z : G, x ∈ H → y ∈ H → z ∈ H → x * y * z⁻¹ ∈ H"]},
  {"theorem":
   "∀ {m n : ℕ}, Ordinal.toPGame ↑m + Ordinal.toPGame ↑n ≈ Ordinal.toPGame (Ordinal.nadd ↑m ↑n)",
   "some-correct": null,
   "prompt": "The sum of two natural numbers is a natural number.",
   "groups":
   [["∀ {m n : ℕ}, Ordinal.toPGame ↑m + Ordinal.toPGame ↑n ≈ Ordinal.toPGame (Ordinal.nadd ↑m ↑n)"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   [" ∀ {m n : ℕ}, Ordinal.toPGame m + Ordinal.toPGame n ≈ Ordinal.toPGame (Ordinal.nadd m n) "]},
  {"theorem": "∀ {G : Type u_1} [inst : Monoid G], IsOfFinOrder 1",
   "some-correct": null,
   "prompt": "The identity element of a group has finite order.",
   "groups":
   [["∀ {G : Type u_1} [inst : Monoid G], IsOfFinOrder 1",
     "∀ {G : Type u_1} [inst : Monoid G], IsOfFinOrder 1"],
    ["∀ {G : Type u_1} [inst : Monoid G] {x : G}, IsOfFinOrder 1 ↔ x = ?m.7080279"],
    ["∀ {G : Type u_1} [inst : Group G], IsOfFinOrder 1"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   [" ∀ {G : Type u_1} [inst : Group G], IsOfFinOrder 1",
    " ∀ {G : Type u_1} [inst : Monoid G], IsOfFinOrder 1",
    " ∀ {G : Type u_1} [inst : Monoid G], IsOfFinOrder 1 ",
    " ∀ {G : Type u_1} [inst : Monoid G] {x : G}, IsOfFinOrder 1 ↔ x = 1 citep"]},
  {"theorem":
   "∀ (R : Type u) [inst : Semiring R] (q : ℕ) [hq : ExpChar R q], Nat.Prime q ↔ Prime q ∧ q ≠ 2 ∧ q ≠ 3 ∧ q ≠ 5",
   "some-correct": null,
   "prompt": "`7` is a prime number.",
   "groups":
   [["∀ (R : Type u) [inst : Semiring R] (q : ℕ) [hq : ExpChar R q], Nat.Prime q ↔ Prime q ∧ q ≠ 2 ∧ q ≠ 3 ∧ q ≠ 5"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   [" Nat.Prime 7",
    " Nat.Prime 7",
    " Nat.Prime 7",
    " ∀ (R : Type u) [inst : Semiring R] (q : ℕ) [hq : ExpChar R q], Nat.Prime q ↔ Prime q ∧ q ≠ 2 ∧ q ≠ 3 ∧ q ≠ 5"]},
  {"theorem":
   "3 = 1 + 1 + 1 ∧ 2 = 1 + 1 ∧ 3 = 1 + 1 + 1 ∧ 5 = 1 + 1 + 1 + 1 ∧ 7 = 1 + 1 + 1 + 1 + 1",
   "some-correct": null,
   "prompt": "There are `3` prime numbers below `8`.",
   "groups":
   [["3 = 1 + 1 + 1 ∧ 2 = 1 + 1 ∧ 3 = 1 + 1 + 1 ∧ 5 = 1 + 1 + 1 + 1 ∧ 7 = 1 + 1 + 1 + 1 + 1"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   [" 3 = (1 + 1 + 1) ∧ (2 = 1 + 1) ∧ (3 = 1 + 1 + 1) ∧ (5 = 1 + 1 + 1 + 1) ∧ (7 = 1 + 1 + 1 + 1 + 1)"]},
  {"theorem": "∀ {α : Type u} {s : Set α}, Set.Finite s → ∅ ⊆ s",
   "some-correct": null,
   "prompt": "The empty set is contained in every finite set.",
   "groups":
   [["∀ {α : Type u} {s : Set α}, Set.Finite s → ∅ ⊆ s",
     "∀ {α : Type u_1} (s : Set α), Set.Finite s → ∅ ⊆ s"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   [" ∀ {α : Type u} {s : Set α}, Set.Finite s → ∅ ⊆ s",
    " ∀ {α : Type u_1} (s : Set α), Set.Finite s → ∅ ⊆ s "]},
  {"theorem":
   "∀ {X : Type u} {s : Set X}, Infinite ↑s → ∃ t, Set.Finite t ∧ t ⊆ s",
   "some-correct": null,
   "prompt": "Every infinite set contains a finite set.",
   "groups":
   [["∀ {X : Type u} {s : Set X}, Infinite ↑s → ∃ t, Set.Finite t ∧ t ⊆ s"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   [" ∀ {X : Type u} {s : Set X}, Infinite s → ∃ t : Set X, Set.Finite t ∧ t ⊆ s "]},
  {"theorem": "{R : Type u_1} → [inst : CommRing R] → MulOneClass R",
   "some-correct": null,
   "prompt": "Every commutative ring is a monoid.",
   "groups": [["{R : Type u_1} → [inst : CommRing R] → MulOneClass R"]],
   "correct": null,
   "comments": "",
   "all-elabs": [" ∀ {R : Type u_1} [inst : CommRing R], MulOneClass R "]},
  {"theorem": "∀ {n : ℕ}, Odd n → ∃ m k, n = m + k ∧ m ≠ k",
   "some-correct": null,
   "prompt":
   "Every odd natural number is the sum of two distinct natural numbers.",
   "groups":
   [["∀ {n : ℕ}, Odd n → ∃ m k, n = m + k ∧ m ≠ k"],
    ["∀ {n : ℕ}, Odd n → ∃ x y, Odd x → Odd y → n = x + y ∧ x ≠ y"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   [" ∀ {n : ℕ}, Odd n → ∃ x y : ℕ, Odd x → Odd y → n = x + y ∧ x ≠ y",
    " ∀ {n : ℕ}, Odd n → ∃ a b, Odd a → Odd b → a < b → n = a + b",
    " ∀ {n : ℕ}, Odd n → ∃ m k, n = m + k ∧ m ≠ k",
    " ∀ {n : ℕ}, Odd n → ∃ a b, 0 < a ∧ 0 < b ∧ 0 < a + b ∧ 0 < a + b + n",
    " ∀ n : ℕ, Odd n → ∃ x y, x < y ∧ n = x + y ∧ ¬x = y"]},
  {"theorem": "∀ {G : Type u_1} [inst : Group G], IsOfFinOrder 1",
   "some-correct": null,
   "prompt": "Every element in the trivial group has finite order.",
   "groups":
   [["∀ {G : Type u_1} [inst : Group G], IsOfFinOrder 1",
     "∀ {G : Type u_1} [inst : Group G], IsOfFinOrder 1"],
    ["∀ {G : Type u_1} [inst : Group G] {x : G}, 0 < orderOf x ↔ x = 1"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   [" ∀ {G : Type u_1} [inst : Group G], IsOfFinOrder (1 : G)",
    " ∀ {G : Type u_1} [inst : Group G], IsOfFinOrder (1 : G) ",
    " ∀ {G : Type u_1} [inst : Group G] {x : G}, 0 < orderOf x ↔ x = 1"]},
  {"theorem": "∀ (n : ℕ), Even n → Even (n ^ 2)",
   "some-correct": null,
   "prompt": "The square of an even number is even.",
   "groups":
   [["∀ (n : ℕ), Even n → Even (n ^ 2)", "∀ {n : ℕ}, Even n → Even (n ^ 2)"],
    ["∀ {α : Type u_3} [inst : LinearOrderedRing α] {n x : α}, Even n → Even x → Even (n ^ 2 + x ^ 2)"],
    ["∀ {α : Type u} [inst : LinearOrderedCommRing α] {n : α}, Even n → Even (n ^ 2)"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   [" ∀ (n : ℕ), Even n → Even (n ^ 2)",
    " ∀ {α : Type u} [inst : LinearOrderedCommRing α] {n : α}, Even n → Even (n ^ 2) ",
    " ∀ {n : ℕ}, even n → even (n ^ 2) ",
    " ∀ {α : Type u_3} [inst : LinearOrderedRing α] {n x : α}, Even n → Even x → Even (n ^ 2 + x ^ 2)"]},
  {"theorem":
   "∀ {R : Type u} [inst : CommRing R] (r : R), r ≠ 0 → ∃ a, a * r = 1 ↔ IsField R",
   "some-correct": null,
   "prompt": "Every commutative division ring is a field.",
   "groups":
   [["∀ {R : Type u} [inst : CommRing R] (r : R), r ≠ 0 → ∃ a, a * r = 1 ↔ IsField R"],
    ["∀ {R : Type u} [inst : CommRing R] [inst_1 : IsDomain R], IsField R"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   [" ∀ {R : Type u} [inst : CommRing R] [inst_1 : IsDomain R], IsField R ",
    " ∀ {R : Type u} [inst : CommRing R], ∀ (r : R), r ≠ 0 → ∃ (a : R), a * r = 1 ↔ IsField R"]},
  {"theorem": "∀ {α : Type u} [inst : One α], id 1 = 1",
   "some-correct": null,
   "prompt":
   "The image of the identity element under the identity map is the identity element.",
   "groups": [["∀ {α : Type u} [inst : One α], id 1 = 1"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   [" ∀ {α : Type u} [inst : Group α], id 1 = 1",
    " ∀ {α : Type u} [inst : One α], id 1 = 1 ",
    " ∀ {α : Type u} [inst : One α], id (1 : α) = 1 ",
    " ∀ {α : Type u} [inst : GroupWithZero α], id 1 = 1",
    " ∀ (α : Type u) [inst : MulOneClass α], 1 = id 1"]},
  {"theorem": "∀ {α : Type u} (x : α), Function.IsFixedPt id x",
   "some-correct": null,
   "prompt":
   "Every point is a fixed point of the identity function on a space.",
   "groups":
   [["∀ {α : Type u} (x : α), Function.IsFixedPt id x",
     "∀ {α : Type u} (x : α), Function.IsFixedPt id x"],
    ["∀ {α : Type u_1} (x : α), Function.IsFixedPt id x"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   [" ∀ {α : Type u} (x : α), Function.IsFixedPt id x ",
    " ∀ {α : Type u} (x : α), Function.IsFixedPt id x ",
    " ∀ {α : Type u_1} (x : α), Function.IsFixedPt id x"]},
  {"theorem":
   "∀ {α : Type u} [inst : MetricSpace α] {x : α}, Metric.diam {x} = 0",
   "some-correct": null,
   "prompt": "The diameter of a singleton space is `0`.",
   "groups":
   [["∀ {α : Type u} [inst : MetricSpace α] {x : α}, Metric.diam {x} = 0"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   [" ∀ {α : Type u} [inst : MetricSpace α] {x : α}, Metric.diam {x} = 0 "]},
  {"theorem": "∀ {α : Type u_1} [inst : Group α], Nonempty α",
   "some-correct": null,
   "prompt": "Every group is non-empty.",
   "groups":
   [["∀ {α : Type u_1} [inst : Group α], Nonempty α",
     "∀ {G : Type u_1} [inst : Group G], Nonempty G",
     "∀ {G : Type u_1} [inst : Group G], Nonempty G"],
    ["∀ {G : Type u} [inst : Group G], Nonempty G",
     "∀ {G : Type u} [inst : Group G], Nonempty G"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   [" ∀ {α : Type u_1} [inst : Group α], Nonempty α ",
    " ∀ {G : Type u_1} [inst : Group G], Nonempty G ",
    " ∀ {G : Type u_1} [inst : Group G], Nonempty G",
    " ∀ {G : Type u} [inst : Group G], Nonempty G ",
    " ∀ {G : Type u} [inst : Group G], Nonempty G "]},
  {"theorem":
   "∀ {X : Type u} [inst : TopologicalSpace X] (x : X), IsConnected (connectedComponent x)",
   "some-correct": null,
   "prompt": "All connected components of a topological space are connected.",
   "groups":
   [["∀ {X : Type u} [inst : TopologicalSpace X] (x : X), IsConnected (connectedComponent x)",
     "∀ {X : Type u} [inst : TopologicalSpace X] (x : X), IsConnected (connectedComponent x)"],
    ["∀ {X : Type u} [inst : TopologicalSpace X] (C : Set X),\n  ConnectedSpace ↑C → ∀ (x : X) {s : Set X}, IsConnected s → x ∈ s → s ⊆ C → s = C"],
    ["∀ {α : Type u} [inst : TopologicalSpace α] [inst_1 : ConnectedSpace α] (x : α), IsConnected (connectedComponent x)"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   [" ∀ {X : Type u} [inst : TopologicalSpace X] (x : X), IsConnected (connectedComponent x) ",
    " ∀ {X : Type u} [inst : TopologicalSpace X] (x : X), IsConnected (connectedComponent x) ",
    " ∀ {α : Type u} [inst : TopologicalSpace α] [inst_1 : ConnectedSpace α], ∀ (x : α), IsConnected (connectedComponent x) ",
    " ∀ {X : Type u} [inst : TopologicalSpace X] (C : Set X),\n  ConnectedSpace.{u} C → ∀ (x : X) {s : Set X} (h : IsConnected s), x ∈ s → s ⊆ C → s = C "]},
  {"theorem":
   "∀ {R : Type u_1} [inst : CommRing R] [inst_1 : IsDomain R] [inst_2 : IsDedekindDomain R] [inst_3 : Nontrivial R],\n  ∃ M, Ideal.IsMaximal M ∧ M ≠ ⊥ ∧ ∀ (J : Ideal R), Ideal.IsMaximal J → J = M",
   "some-correct": null,
   "prompt": "The ring of integers has a maximal ideal.",
   "groups":
   [["∀ {R : Type u_1} [inst : CommRing R] [inst_1 : IsDomain R] [inst_2 : IsDedekindDomain R] [inst_3 : Nontrivial R],\n  ∃ M, Ideal.IsMaximal M ∧ M ≠ ⊥ ∧ ∀ (J : Ideal R), Ideal.IsMaximal J → J = M"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   [" ∀ {R : Type u_1} [inst : CommRing R] [inst_1 : IsDomain R] [inst_2 : IsDedekindDomain R], ∃ M, Ideal.IsMaximal M ",
    " ∀ {R : Type u} [inst : CommRing R] [inst_1 : IsDomain R] [inst_2 : IsDedekindDomain R], ∃ M, Ideal.IsMaximal M ",
    " ∃ M, Ideal.IsMaximal M",
    " ∀ {R : Type u} [inst : CommRing R] [inst_1 : IsDomain R] [inst_2 : IsDedekindDomain R], ∃ M, Ideal.IsMaximal M",
    " ∀ {R : Type u_1} [inst : CommRing R] [inst_1 : IsDomain R] [inst_2 : IsDedekindDomain R] [inst_3 : Nontrivial R],\n  ∃ M, Ideal.IsMaximal M ∧ M ≠ ⊥ ∧ ∀ J : Ideal R, Ideal.IsMaximal J → J = M"]},
  {"theorem": "PythagoreanTriple 3 4 5",
   "some-correct": null,
   "prompt": "The numbers `3`, `4` and `5` form a Pythagorean triple.",
   "groups":
   [["PythagoreanTriple 3 4 5",
     "PythagoreanTriple 3 4 5",
     "PythagoreanTriple 3 4 5",
     "PythagoreanTriple 3 4 5",
     "PythagoreanTriple 3 4 5"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   [" PythagoreanTriple 3 4 5",
    " PythagoreanTriple 3 4 5",
    " PythagoreanTriple 3 4 5",
    " PythagoreanTriple 3 4 5 ",
    " PythagoreanTriple 3 4 5 "]}],
 "elaborated": 37}