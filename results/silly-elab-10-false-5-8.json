{"total-prompts": 40,
 "temperature": 0.8,
 "query-number": 5,
 "number-similar-sentences": 10,
 "include-fixed": false,
 "failures":
 ["Every set of Borel measure zero is Lebesgue measurable.",
  "There are `3` prime numbers below `8`.",
  "There is no field of order `10`.",
  "Every commutative division ring is a field.",
  "The diameter of a singleton space is `0`.",
  "All connected components of a topological space are connected."],
 "elaborated-prompts":
 [{"theorem": "∀ (p : ℕ), Nat.Prime p → p = 2 ∨ Odd p",
   "some-correct": null,
   "prompt": "Every prime number is `2` or odd.",
   "groups":
   [["∀ (p : ℕ), Nat.Prime p → p = 2 ∨ Odd p",
     "∀ (p : ℕ), Nat.Prime p → p = 2 ∨ Odd p",
     "∀ {p : ℕ}, Nat.Prime p → p = 2 ∨ Odd p",
     "∀ (p : ℕ), Nat.Prime p → p = 2 ∨ Odd p"],
    ["∀ (p : ℕ) [inst : Fact (Nat.Prime p)], Nat.Prime p → p = 2 ∨ Odd p"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   [" ∀ (p : ℕ), Nat.Prime p → p = 2 ∨ Odd p ",
    " ∀ (p : ℕ), Nat.Prime p → p = 2 ∨ Odd p",
    " ∀ (p : ℕ) [inst : Fact (Nat.Prime p)], Nat.Prime p → p = 2 ∨ Odd p ",
    " ∀ {p : ℕ}, Nat.Prime p → p = 2 ∨ Odd p ",
    " ∀ (p : ℕ), Nat.Prime p → p = 2 ∨ Odd p ----"]},
  {"theorem":
   "∀ {n : ℕ}, n ≠ 0 → ∃ m, n ≤ m ∧ m < n + 1 ∧ m % 2 = 1 ∧ ¬∃ k, m = k + 1",
   "some-correct": null,
   "prompt": "There are infinitely many odd natural numbers.",
   "groups":
   [["∀ {n : ℕ}, n ≠ 0 → ∃ m, n ≤ m ∧ m < n + 1 ∧ m % 2 = 1 ∧ ¬∃ k, m = k + 1"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   [" Set.Infinite {x : ℕ | x % 2 = 1} ",
    " Set.Infinite {m : ℕ | m % 2 = 1} ",
    " ∀ {n : ℕ}, n ≠ 0 → ∃ m, Odd m ∧ m > n",
    " ∀ {n : ℕ}, n ≠ 0 → ∃ m, n ≤ m ∧ m < n + 1 ∧ m % 2 = 1 ∧ ¬∃ k, m = k + 1"]},
  {"theorem": "∀ (p : ℕ), Nat.Prime p → p = 3",
   "some-correct": null,
   "prompt": "The smallest odd prime is `3`.",
   "groups": [["∀ (p : ℕ), Nat.Prime p → p = 3"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   [" ∃! (p : ℕ), Nat.Prime p ∧ p % 2 = 1",
    " ∀ (p : ℕ), Nat.Prime p → p = 3",
    " Nat.Prime 3 ∧ (∀ {p : ℕ}, Nat.Prime p → p ≠ 3 → p % 2 = 0)",
    " ∃ (p : ℕ), Nat.Prime p ∧ p % 2 = 1 ∧ ∀ {q : ℕ}, Nat.Prime q → q % 2 = 1 → q ≤ p ∧ q = 3"]},
  {"theorem": "∃ n, Nat.Prime (2 * n + 1)",
   "some-correct": null,
   "prompt": "There are infinitely many odd prime numbers.",
   "groups":
   [["∃ n, Nat.Prime (2 * n + 1)"],
    ["Set.Infinite {p | Nat.Prime p ∧ p % 2 = 1}"],
    ["Set.Infinite {p | Nat.Prime p ∧ ¬Even p}"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   [" Set.Infinite {p | Nat.Prime p ∧ p % 2 = 1} ",
    " Set.Infinite {p | Nat.Prime p ∧ ¬Even p}",
    " ∃ n : ℕ, Nat.Prime (2 * n + 1)"]},
  {"theorem":
   "∀ {K : Type u} {V : Type v} [inst : DivisionRing K] [inst_1 : AddCommGroup V] [inst_2 : Module K V],\n  Module.rank K V = 2 → FiniteDimensional K V",
   "some-correct": null,
   "prompt":
   "If a vector space has dimension `2` then it is finite dimensional.",
   "groups":
   [["∀ {K : Type u} {V : Type v} [inst : DivisionRing K] [inst_1 : AddCommGroup V] [inst_2 : Module K V],\n  Module.rank K V = 2 → FiniteDimensional K V",
     "∀ {K : Type u} {V : Type v} [inst : DivisionRing K] [inst_1 : AddCommGroup V] [inst_2 : Module K V],\n  Module.rank K V = 2 → FiniteDimensional K V",
     "∀ {𝕜 : Type u} [inst : DivisionRing 𝕜] {E : Type v} [inst_1 : AddCommGroup E] [inst_2 : Module 𝕜 E],\n  Module.rank 𝕜 E = 2 → FiniteDimensional 𝕜 E"],
    ["∀ {K : Type u} {V : Type v} [inst : DivisionRing K] [inst_1 : AddCommGroup V] [inst_2 : Module K V] {ι : Type w}\n  [inst_3 : Fintype ι], Basis ι K V → Module.rank K V = 2 → FiniteDimensional K V"],
    ["∀ {𝕜 : Type u_1} {V : Type u_2} [inst : DivisionRing 𝕜] [inst_1 : AddCommGroup V] [inst_2 : Module 𝕜 V],\n  Module.rank 𝕜 V = 2 → FiniteDimensional 𝕜 V"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   [" ∀ {K : Type u} {V : Type v} [inst : DivisionRing K] [inst_1 : AddCommGroup V] [inst_2 : Module K V],\n  Module.rank K V = 2 → FiniteDimensional K V ",
    " ∀ {K : Type u} {V : Type v} [inst : DivisionRing K] [inst_1 : AddCommGroup V] [inst_2 : Module K V],\n  Module.rank K V = 2 → FiniteDimensional K V ",
    " ∀ {𝕜 : Type u_1} {V : Type u_2} [inst : DivisionRing 𝕜] [inst_1 : AddCommGroup V] [inst_2 : Module 𝕜 V] (h : Module.rank 𝕜 V = 2),\n  FiniteDimensional 𝕜 V ",
    " ∀ {K : Type u} {V : Type v} [inst : DivisionRing K] [inst_1 : AddCommGroup V] [inst_2 : Module K V] {ι : Type w}\n  [inst_3 : Fintype ι], Basis ι K V → Module.rank K V = 2 → FiniteDimensional K V ",
    " ∀ {𝕜 : Type u} [inst : DivisionRing 𝕜] {E : Type v} [inst_1 : AddCommGroup E] [inst_2 : Module 𝕜 E],\n  Module.rank 𝕜 E = 2 → FiniteDimensional 𝕜 E "]},
  {"theorem": "{K : Type u} → [inst : Field K] → DivisionRing K",
   "some-correct": null,
   "prompt": "Every field is a division ring.",
   "groups":
   [["{K : Type u} → [inst : Field K] → DivisionRing K",
     "{K : Type u} → [inst : Field K] → DivisionRing K",
     "{K : Type u} → [inst : Field K] → DivisionRing K"],
    ["(K : Type u) → [inst : Field K] → DivisionRing K"],
    ["{K : Type u_1} → [inst : Field K] → DivisionRing K"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   [" ∀ {K : Type u} [inst : Field K], DivisionRing K ",
    " ∀ {K : Type u} [inst : Field K], DivisionRing K ",
    " ∀ {K : Type u} [inst : Field K], DivisionRing K ",
    " ∀ {K : Type u_1} [inst : Field K], DivisionRing K ",
    " ∀ (K : Type u) [inst : Field K], DivisionRing K "]},
  {"theorem":
   "∀ {𝕜 : Type u_1} {E : Type u_2} [inst : NontriviallyNormedField 𝕜] [inst_1 : CompleteSpace 𝕜] [inst_2 : AddCommGroup E]\n  [inst_3 : TopologicalSpace E] [inst_4 : T2Space E] [inst_5 : TopologicalAddGroup E] [inst_6 : Module 𝕜 E]\n  [inst_7 : ContinuousSMul 𝕜 E] [inst_8 : FiniteDimensional 𝕜 E] (n : ℕ) [inst_9 : Fact (2 ≤ n)], FiniteDimensional 𝕜 E",
   "some-correct": null,
   "prompt": "If a space has dimension `2` then it is finite dimensional.",
   "groups":
   [["∀ {𝕜 : Type u_1} {E : Type u_2} [inst : NontriviallyNormedField 𝕜] [inst_1 : CompleteSpace 𝕜] [inst_2 : AddCommGroup E]\n  [inst_3 : TopologicalSpace E] [inst_4 : T2Space E] [inst_5 : TopologicalAddGroup E] [inst_6 : Module 𝕜 E]\n  [inst_7 : ContinuousSMul 𝕜 E] [inst_8 : FiniteDimensional 𝕜 E] (n : ℕ) [inst_9 : Fact (2 ≤ n)], FiniteDimensional 𝕜 E"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   [" ∀ {𝕜 : Type u_1} {E : Type u_2} [inst : NontriviallyNormedField 𝕜] [inst_1 : CompleteSpace 𝕜] [inst_2 : AddCommGroup E]\n  [inst_3 : TopologicalSpace E] [inst_4 : T2Space E] [inst_5 : TopologicalAddGroup E] [inst_6 : Module 𝕜 E]\n  [inst_7 : ContinuousSMul 𝕜 E] [inst_8 : FiniteDimensional 𝕜 E] (n : ℕ) [inst_9 : Fact (2 ≤ n)],\n  FiniteDimensional 𝕜 E"]},
  {"theorem": "∀ (n : ℕ), ∃ m, Nat.succ m = n",
   "some-correct": null,
   "prompt": "Every natural number has a successor.",
   "groups":
   [["∀ (n : ℕ), ∃ m, Nat.succ m = n",
     "∀ (n : ℕ), ∃ a, Nat.succ a = n",
     "∀ {n : ℕ}, ∃ a, Nat.succ a = n",
     "∀ (n : ℕ), ∃ m, m + 1 = n"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   [" ∀ (n : ℕ), ∃ m, Nat.succ m = n",
    " ∀ (n : ℕ), ∃ a, Nat.succ a = n",
    " ∀ {n : ℕ}, ∃ a, Nat.succ a = n",
    " ∀ n : ℕ, ∃ m, m + 1 = n"]},
  {"theorem": "∀ (n : ℕ), n ≤ n + 1",
   "some-correct": null,
   "prompt": "Every natural number is less than its successor.",
   "groups":
   [["∀ (n : ℕ), n ≤ n + 1",
     "∀ (n : ℕ), n < Nat.succ n",
     "∀ {α : Type u_2} [inst : LinearOrderedSemiring α] {n : ℕ}, n ≤ n + 1"],
    ["∀ (n : ℕ), n ≤ Nat.succ n"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   [" ∀ n : ℕ, n ≤ n + 1",
    " ∀ n : ℕ, n < Nat.succ n",
    " ∀ n : ℕ, n ≤ n.succ ",
    " ∀ {α : Type u_2} [inst : LinearOrderedSemiring α] {n : ℕ}, n ≤ n + 1 "]},
  {"theorem":
   "∀ {α : Type u_6} [inst : MeasurableSpace α] (μ : MeasureTheory.Measure α) (s : Set α),\n  ∃ t, s ⊆ t ∧ MeasurableSet t ∧ ↑↑μ t = ↑↑μ s ∧ ↑↑μ tᶜ = ↑↑μ sᶜ",
   "some-correct": null,
   "prompt": "Every set is Lebesgue measurable.",
   "groups":
   [["∀ {α : Type u_6} [inst : MeasurableSpace α] (μ : MeasureTheory.Measure α) (s : Set α),\n  ∃ t, s ⊆ t ∧ MeasurableSet t ∧ ↑↑μ t = ↑↑μ s ∧ ↑↑μ tᶜ = ↑↑μ sᶜ"],
    ["∀ {α : Type u_1} [inst : MeasurableSpace α] (μ : MeasureTheory.Measure α), MeasurableSet {x | ↑↑μ {x} ≠ 0}"],
    ["∀ {α : Type u_1} [inst : MeasurableSpace α], MeasureTheory.Measure α → ∀ (s : Set α), MeasurableSet s"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   [" ∀ {α : Type u_1} [inst : MeasurableSpace α] (μ : MeasureTheory.Measure α), MeasurableSet {x | μ {x} ≠ 0}",
    " ∀ {α : Type u_1} [inst : MeasurableSpace α] (μ : MeasureTheory.Measure α),\n  ∀ s : Set α, MeasurableSet s",
    " ∀ {α : Type u_6} [inst : MeasurableSpace α] (μ : MeasureTheory.Measure α), ∀ s : Set α,\n  ∃ t, s ⊆ t ∧ MeasurableSet t ∧ μ t = μ s ∧ μ tᶜ = μ sᶜ"]},
  {"theorem": "∀ {p : ℕ}, Nat.Prime p → ¬∃ t, t * t = p",
   "some-correct": null,
   "prompt": "No prime number is a perfect square.",
   "groups":
   [["∀ {p : ℕ}, Nat.Prime p → ¬∃ t, t * t = p",
     "∀ {p : ℕ}, Nat.Prime p → ¬∃ x, x * x = p"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   [" ∀ {p : ℕ}, Nat.Prime p → ¬∃ t, t * t = p ",
    " ∀ {p : ℕ}, Nat.Prime p → ¬∃ x, x * x = p"]},
  {"theorem": "∀ {p : ℕ}, Nat.Prime p → p % 2 = 1 → 2 < p",
   "some-correct": null,
   "prompt": "Every odd prime number is greater than `2`.",
   "groups":
   [["∀ {p : ℕ}, Nat.Prime p → p % 2 = 1 → 2 < p",
     "∀ {p : ℕ}, Nat.Prime p → p % 2 = 1 → 2 < p"],
    ["∀ (p : ℕ), Nat.Prime p → Odd p → 2 < p",
     "∀ (p : ℕ), Nat.Prime p → Odd p → 2 < p"],
    ["∀ (p : ℕ) [inst : Fact (Nat.Prime p)], p % 2 = 1 → 2 < p"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   [" ∀ (p : ℕ), Nat.Prime p → Odd p → 2 < p",
    " ∀ {p : ℕ}, Nat.Prime p → p % 2 = 1 → 2 < p",
    " ∀ (p : ℕ), Nat.Prime p → Odd p → 2 < p ",
    " ∀ (p : ℕ) [inst : Fact (Nat.Prime p)] (h : p % 2 = 1), 2 < p",
    " ∀ {p : ℕ}, Nat.Prime p → p % 2 = 1 → 2 < p "]},
  {"theorem":
   "∀ {α : Type u_1} [inst : LinearOrderedCommRing α] (a b : α),\n  IsSquare a ↔\n    ∃ x y z u v,\n      a = x ^ 2 + y ^ 2 + z ^ 2 + u ^ 2 ∧ IsSquare b ↔\n        ∃ x_1 y_1 z_1 u_1 v,\n          b = x_1 ^ 2 + y_1 ^ 2 + z_1 ^ 2 + u_1 ^ 2 → ∃ r s t u, a * b = r ^ 2 + s ^ 2 + t ^ 2 + u ^ 2",
   "some-correct": null,
   "prompt":
   "The product of two numbers, each of which is the sum of four squares, is itself a sum of four squares.",
   "groups":
   [["∀ {α : Type u_1} [inst : LinearOrderedCommRing α] (a b : α),\n  IsSquare a ↔\n    ∃ x y z u v,\n      a = x ^ 2 + y ^ 2 + z ^ 2 + u ^ 2 ∧ IsSquare b ↔\n        ∃ x_1 y_1 z_1 u_1 v,\n          b = x_1 ^ 2 + y_1 ^ 2 + z_1 ^ 2 + u_1 ^ 2 → ∃ r s t u, a * b = r ^ 2 + s ^ 2 + t ^ 2 + u ^ 2"],
    ["∀ {α : Type u} [inst : CommRing α] {a b x y u v : α},\n  a = x ^ 2 + y ^ 2 + u ^ 2 + v ^ 2 →\n    b = x ^ 2 + y ^ 2 + u ^ 2 + v ^ 2 → ∃ r s t u, a * b = r ^ 2 + s ^ 2 + t ^ 2 + u ^ 2"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   [" ∀ {α : Type u} [inst : CommRing α] {a b x y u v : α},\n  a = x ^ 2 + y ^ 2 + u ^ 2 + v ^ 2 → b = x ^ 2 + y ^ 2 + u ^ 2 + v ^ 2 → ∃ r s t u, a * b = r ^ 2 + s ^ 2 + t ^ 2 + u ^ 2 ",
    " ∀ {α : Type u_1} [inst : LinearOrderedCommRing α] (a b : α),\n  IsSquare (↑a) ↔ ∃ x y z u v, a = x ^ 2 + y ^ 2 + z ^ 2 + u ^ 2 ∧\n     IsSquare (↑b) ↔ ∃ x y z u v, b = x ^ 2 + y ^ 2 + z ^ 2 + u ^ 2 →\n    ∃ r s t u, a * b = r ^ 2 + s ^ 2 + t ^ 2 + u ^ 2 "]},
  {"theorem":
   "∀ {X : Type u_1} [inst : TopologicalSpace X] [inst_1 : CompactSpace X], LocallyCompactSpace X",
   "some-correct": null,
   "prompt": "Every compact topological space is locally compact.",
   "groups":
   [["∀ {X : Type u_1} [inst : TopologicalSpace X] [inst_1 : CompactSpace X], LocallyCompactSpace X",
     "∀ {X : Type u_1} [inst : TopologicalSpace X] [inst_1 : CompactSpace X], LocallyCompactSpace X",
     "∀ {X : Type u_1} [inst : TopologicalSpace X] [inst_1 : CompactSpace X], LocallyCompactSpace X"],
    ["∀ {X : Type u_4} [inst : TopologicalSpace X] [inst_1 : CompactSpace X], LocallyCompactSpace X"],
    ["∀ {X : Type u} [inst : TopologicalSpace X] [inst_1 : CompactSpace X], LocallyCompactSpace X"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   [" ∀ {X : Type u_1} [inst : TopologicalSpace X] [inst_1 : CompactSpace X], LocallyCompactSpace X ",
    " ∀ {X : Type u_1} [inst : TopologicalSpace X] [inst_1 : CompactSpace X], LocallyCompactSpace X ",
    " ∀ {X : Type u_1} [inst : TopologicalSpace X] [inst_1 : CompactSpace X], LocallyCompactSpace X ",
    " ∀ {X : Type u} [inst : TopologicalSpace X] [inst_1 : CompactSpace X], LocallyCompactSpace X",
    " ∀ {X : Type u_4} [inst : TopologicalSpace X] [inst_1 : CompactSpace X], LocallyCompactSpace X"]},
  {"theorem":
   "∀ {α : Type u} {β : Type v} [inst : UniformSpace α] [inst_1 : UniformSpace β] {f : α → β} [inst_2 : TopologicalSpace α],\n  Continuous f → UniformContinuous f",
   "some-correct": null,
   "prompt": "Every continuous function is uniformly continuous.",
   "groups":
   [["∀ {α : Type u} {β : Type v} [inst : UniformSpace α] [inst_1 : UniformSpace β] {f : α → β} [inst_2 : TopologicalSpace α],\n  Continuous f → UniformContinuous f",
     "∀ {α : Type u} {β : Type v} [inst : UniformSpace α] [inst_1 : UniformSpace β] {f : α → β} [inst_2 : TopologicalSpace α],\n  Continuous f → UniformContinuous f"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   [" ∀ {α : Type u} {β : Type v} [inst : UniformSpace α] [inst_1 : UniformSpace β] {f : α → β} [inst_2 : TopologicalSpace α],\n  Continuous f → UniformContinuous f ",
    " ∀ {α : Type u} {β : Type v} [inst : UniformSpace α] [inst_1 : UniformSpace β] {f : α → β} [inst_2 : TopologicalSpace α],\n  Continuous f → UniformContinuous f "]},
  {"theorem": "¬∃ p p_1, Nat.Prime p ∧ Nat.Prime p_1 ∧ p + p_1 = 6",
   "some-correct": null,
   "prompt": "`6` is not the sum of two distinct prime numbers.",
   "groups":
   [["¬∃ p p_1, Nat.Prime p ∧ Nat.Prime p_1 ∧ p + p_1 = 6"],
    ["¬∃ p q, Nat.Prime p ∧ Nat.Prime q ∧ 6 = p + q"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   [" ¬(∃ (p q : ℕ), Nat.Prime p ∧ Nat.Prime q ∧ 6 = p + q) ",
    " ¬∃ (p p_1 : ℕ), Nat.Prime p ∧ Nat.Prime p_1 ∧ p + p_1 = 6 "]},
  {"theorem": "∀ {a : ℤ}, Irrational ↑a → a = 0",
   "some-correct": null,
   "prompt": "No integer is irrational.",
   "groups":
   [["∀ {a : ℤ}, Irrational ↑a → a = 0",
     "∀ {a : ℤ}, ¬Irrational ↑a",
     "∀ {α : Type u_2} [inst : LinearOrderedCommRing α] (a : ℤ), Irrational ↑a → False",
     "∀ (a : ℤ), ¬Irrational ↑a ∧ (1 ≤ a ∨ a ≤ -1) → ¬Irrational ↑a",
     "∀ {a : ℤ}, Irrational ↑a → a = 0 ∨ Int.natAbs a < 1 ∨ ∃ q, ↑a = q"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   [" ∀ {a : ℤ}, Irrational a → a = 0",
    " ∀ {a : ℤ}, ¬Irrational a",
    " ∀ {α : Type u_2} [inst : LinearOrderedCommRing α] (a : ℤ) (h : Irrational a), False ",
    " ∀ (a : ℤ), ¬Irrational a ∧ (1 ≤ a ∨ a ≤ -1) → ¬Irrational a",
    " ∀ {a : ℤ}, Irrational a → a = 0 ∨ Int.natAbs a < 1 ∨ ∃ q : ℚ, a = q"]},
  {"theorem": "∀ {R : Type u_1} [inst : Ring R] (x : R), x = 1 → IsUnit x",
   "some-correct": null,
   "prompt": "The identity element in a ring is a unit.",
   "groups": [["∀ {R : Type u_1} [inst : Ring R] (x : R), x = 1 → IsUnit x"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   [" ∀ {R : Type u} [inst : Ring R], IsUnit 1",
    " ∀ {α : Type u} [inst : Ring α], IsUnit 1 ",
    " ∀ {R : Type u_1} [inst : Ring R] (x : R), x = 1 → IsUnit x"]},
  {"theorem": "{G : Type u_1} → [inst : Group G] → (H : Subgroup G) → Group ↥H",
   "some-correct": null,
   "prompt": "Every subgroup of a group is a group.",
   "groups":
   [["{G : Type u_1} → [inst : Group G] → (H : Subgroup G) → Group ↥H",
     "{G : Type u_1} → [inst : Group G] → (H : Subgroup G) → Group ↥H",
     "{G : Type u_1} → [inst : Group G] → (H : Subgroup G) → Group ↥H"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   [" ∀ {G : Type u_1} [inst : Group G] (H : Subgroup G), Group ↥H ",
    " ∀ {G : Type u_1} [inst : Group G] (H : Subgroup G), Group ↥H ",
    " ∀ {G : Type u_1} [inst : Group G] (H : Subgroup G), Group ↥H "]},
  {"theorem":
   "∀ {m n : ℕ}, Ordinal.toPGame ↑m + Ordinal.toPGame ↑n ≈ Ordinal.toPGame (Ordinal.nadd ↑m ↑n)",
   "some-correct": null,
   "prompt": "The sum of two natural numbers is a natural number.",
   "groups":
   [["∀ {m n : ℕ}, Ordinal.toPGame ↑m + Ordinal.toPGame ↑n ≈ Ordinal.toPGame (Ordinal.nadd ↑m ↑n)",
     "∀ (m n : ℕ), Ordinal.toPGame ↑m + Ordinal.toPGame ↑n ≈ Ordinal.toPGame (Ordinal.nadd ↑m ↑n)"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   [" ∀ {m n : ℕ}, Ordinal.toPGame m + Ordinal.toPGame n ≈ Ordinal.toPGame (Ordinal.nadd m n)",
    " ∀ (m n : ℕ), Ordinal.toPGame m + Ordinal.toPGame n ≈ Ordinal.toPGame (Ordinal.nadd m n) "]},
  {"theorem": "∀ {G : Type u_1} [inst : Group G], IsOfFinOrder 1",
   "some-correct": null,
   "prompt": "The identity element of a group has finite order.",
   "groups": [["∀ {G : Type u_1} [inst : Group G], IsOfFinOrder 1"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   [" ∀ {G : Type u_1} [inst : Group G], IsOfFinOrder (1 : G)",
    " ∀ {G : Type u_1} [inst : Monoid G], orderOf (1 : G) = 1 ↔ IsOfFinOrder 1 "]},
  {"theorem": "Nat.Prime 7",
   "some-correct": null,
   "prompt": "`7` is a prime number.",
   "groups": [["Nat.Prime 7", "Nat.Prime 7", "Nat.Prime 7"], ["Prime 7"]],
   "correct": null,
   "comments": "",
   "all-elabs": [" Nat.Prime 7", " Nat.Prime 7 ", " Nat.Prime 7 ", " Prime 7"]},
  {"theorem": "∀ {α : Type u} (s : Finset α), ∅ ⊆ s",
   "some-correct": null,
   "prompt": "The empty set is contained in every finite set.",
   "groups": [["∀ {α : Type u} (s : Finset α), ∅ ⊆ s"]],
   "correct": null,
   "comments": "",
   "all-elabs": [" ∀ {α : Type u} (s : Finset α), (∅ : Finset α) ⊆ s"]},
  {"theorem":
   "∀ {α : Type u} [inst : Infinite α] (s : Set α), ∃ t, Set.Finite t ∧ t ⊆ s",
   "some-correct": null,
   "prompt": "Every infinite set contains a finite set.",
   "groups":
   [["∀ {α : Type u} [inst : Infinite α] (s : Set α), ∃ t, Set.Finite t ∧ t ⊆ s"],
    ["∀ {α : Type u} (s : Set α), Infinite ↑s → ∃ t, Set.Finite t ∧ t ⊆ s"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   [" ∀ {α : Type u} (s : Set α), Infinite s → ∃ t, Set.Finite t ∧ t ⊆ s ",
    " ∀ {α : Type u} [inst : Infinite α] (s : Set α), ∃ (t : Set α), Set.Finite t ∧ t ⊆ s"]},
  {"theorem": "{R : Type u} → [inst : CommRing R] → MulOneClass R",
   "some-correct": null,
   "prompt": "Every commutative ring is a monoid.",
   "groups":
   [["{R : Type u} → [inst : CommRing R] → MulOneClass R",
     "{R : Type u} → [inst : CommRing R] → MulOneClass R"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   [" ∀ {R : Type u} [inst : CommRing R], MulOneClass R ",
    " ∀ {R : Type u} [inst : CommRing R], MulOneClass R "]},
  {"theorem": "∀ {m : ℕ}, Odd m → ∃ a b, m = a + b ∧ Odd a ∧ Odd b ∧ a ≠ b",
   "some-correct": null,
   "prompt":
   "Every odd natural number is the sum of two distinct natural numbers.",
   "groups":
   [["∀ {m : ℕ}, Odd m → ∃ a b, m = a + b ∧ Odd a ∧ Odd b ∧ a ≠ b"],
    ["∀ {n : ℕ}, Odd n → ∃ a b, a ≠ b ∧ n = a + b"],
    ["∀ {n : ℕ}, Odd n → ∃ a b, n = a + b ∧ ¬IsUnit ↑a ∧ ¬IsUnit ↑b"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   [" ∀ {n : ℕ}, Odd n → ∃ a b, Odd a → Odd b → a ≠ b → n = a + b",
    " ∀ {n : ℕ}, Odd n → ∃ a b, a ≠ b ∧ n = a + b",
    " ∀ {n : ℕ}, Odd n → ∃ a b, n = a + b ∧ ¬IsUnit (a : ℤ) ∧ ¬IsUnit (b : ℤ)",
    " ∀ {n : ℕ}, Odd n → ∃ x y, 0 < x ∧ 0 < y ∧ x ≠ y ∧ x + y = n",
    " ∀ {m : ℕ}, Odd m → ∃ a b : ℕ, m = a + b ∧ Odd a ∧ Odd b ∧ a ≠ b"]},
  {"theorem":
   "∀ {G : Type u_1} [inst : Group G] (x : G), 1 < orderOf x ↔ x = 1",
   "some-correct": null,
   "prompt": "Every element in the trivial group has finite order.",
   "groups":
   [["∀ {G : Type u_1} [inst : Group G] (x : G), 1 < orderOf x ↔ x = 1"],
    ["∀ {α : Type u} [inst : Monoid α] [inst_1 : Subsingleton α], IsOfFinOrder 1"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   [" ∀ {α : Type u} [inst : Monoid α] [inst_1 : Subsingleton α], IsOfFinOrder (1 : α) ",
    " ∀ {G : Type u_1} [inst : Group G] (x : G), 1 < orderOf x ↔ x = 1 "]},
  {"theorem": "∀ (n : ℕ), Even n → Even (n * n)",
   "some-correct": null,
   "prompt": "The square of an even number is even.",
   "groups":
   [["∀ (n : ℕ), Even n → Even (n * n)",
     "∀ {α : Type u} [inst : LinearOrderedRing α] {n : α}, Even n → Even (n * n)"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   [" ∀ n : ℕ, Even n → Even (n ^ 2) ",
    " ∀ n : ℕ, Even n → Even (n * n)",
    " ∀ {α : Type u} [inst : LinearOrderedRing α] {n : α}, Even n → Even (n * n) ",
    " ∀ {α : Type u} [inst : LinearOrderedRing α] (n : α), Even n → Even (n ^ 2) ",
    " ∀ {α : Type u_1} [inst : LinearOrderedRing α] (n : α), Even n → Even (n ^ 2) "]},
  {"theorem": "∀ {α : Type u} [inst : Group α], id 1 = 1",
   "some-correct": null,
   "prompt":
   "The image of the identity element under the identity map is the identity element.",
   "groups":
   [["∀ {α : Type u} [inst : Group α], id 1 = 1",
     "∀ {α : Type u} [inst : Monoid α] {a : α}, id a = a"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   [" ∀ {α : Type u} [inst : Group α], id (1 : α) = 1",
    " ∀ {α : Type u} [inst : Monoid α], id (id 1) = 1",
    " ∀ (α : Type u) [inst : AddMonoidWithOne α], id 1 = 1",
    " ∀ {α : Type u} [inst : Monoid α], ∀ {a : α}, id a = a"]},
  {"theorem": "∀ {α : Type u_1} (x : α), Function.IsFixedPt id x",
   "some-correct": null,
   "prompt":
   "Every point is a fixed point of the identity function on a space.",
   "groups":
   [["∀ {α : Type u_1} (x : α), Function.IsFixedPt id x",
     "∀ {α : Type u_1} {x : α}, Function.IsFixedPt id x"],
    ["∀ {α : Type u} (x : α), Function.IsFixedPt id x",
     "∀ {α : Type u} (x : α), Function.IsFixedPt id x"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   [" ∀ {α : Type u} (x : α), Function.IsFixedPt id x ",
    " ∀ {α : Type u_1} (x : α), Function.IsFixedPt id x ",
    " ∀ {α : Type u} (x : α), Function.IsFixedPt id x",
    " ∀ {α : Type u_1} {x : α}, Function.IsFixedPt id x "]},
  {"theorem": "∀ {α : Type u} [inst : Group α], Nonempty α",
   "some-correct": null,
   "prompt": "Every group is non-empty.",
   "groups":
   [["∀ {α : Type u} [inst : Group α], Nonempty α",
     "∀ {α : Type u} [inst : Group α], Nonempty α",
     "∀ {G : Type u} [inst : Group G], Nonempty G"],
    ["∀ {α : Type u_1} [inst : Group α], Nonempty α",
     "∀ {G : Type u_1} [inst : Group G], Nonempty G"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   [" ∀ {α : Type u_1} [inst : Group α], Nonempty α ",
    " ∀ {α : Type u} [inst : Group α], Nonempty α ",
    " ∀ {α : Type u} [inst : Group α], Nonempty α ",
    " ∀ {G : Type u_1} [inst : Group G], Nonempty G",
    " ∀ {G : Type u} [inst : Group G], Nonempty G "]},
  {"theorem":
   "∀ {R : Type u_1} [inst : CommRing R] [inst_1 : IsDomain R] {I : Ideal R}, Ideal.IsMaximal I → ¬I = ⊥",
   "some-correct": null,
   "prompt": "The ring of integers has a maximal ideal.",
   "groups":
   [["∀ {R : Type u_1} [inst : CommRing R] [inst_1 : IsDomain R] {I : Ideal R}, Ideal.IsMaximal I → ¬I = ⊥"],
    ["∀ {R : Type u} [inst : CommRing R] [inst_1 : IsDomain R] [inst_2 : IsDedekindDomain R], ∃ M, Ideal.IsMaximal M"],
    ["∀ {R : Type u_1} [inst : CommRing R] [inst_1 : IsDomain R] [inst_2 : IsDedekindDomain R] [inst_3 : Nontrivial R],\n  ∃ M, Ideal.IsMaximal M"],
    ["∀ {R : Type u} [inst : CommRing R] [inst_1 : IsDomain R] [inst_2 : IsDedekindDomain R] {M : Ideal R},\n  Ideal.IsMaximal M → M ≠ ⊥"],
    ["∀ {R : Type u} [inst : CommRing R] [inst_1 : IsDomain R] (M : Ideal R), Ideal.IsMaximal M → ¬IsField R"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   [" ∀ {R : Type u} [inst : CommRing R] [inst_1 : IsDomain R] [inst_2 : IsDedekindDomain R], ∃ M : Ideal R, Ideal.IsMaximal M ",
    " ∀ {R : Type u_1} [inst : CommRing R] [inst_1 : IsDomain R] [inst_2 : IsDedekindDomain R] [inst_3 : Nontrivial R], ∃ M : Ideal R, Ideal.IsMaximal M ",
    " ∀ {R : Type u} [inst : CommRing R] [inst_1 : IsDomain R] [inst_2 : IsDedekindDomain R] {M : Ideal R}, Ideal.IsMaximal M → M ≠ ⊥ ",
    " ∀ {R : Type u} [inst : CommRing R] [inst_1 : IsDomain R] (M : Ideal R), Ideal.IsMaximal M → ¬IsField R",
    " ∀ {R : Type u_1} [inst : CommRing R] [inst_1 : IsDomain R] {I : Ideal R}, Ideal.IsMaximal I → ¬I = ⊥ "]},
  {"theorem": "PythagoreanTriple 3 4 5",
   "some-correct": null,
   "prompt": "The numbers `3`, `4` and `5` form a Pythagorean triple.",
   "groups":
   [["PythagoreanTriple 3 4 5",
     "PythagoreanTriple 3 4 5",
     "PythagoreanTriple 3 4 5",
     "PythagoreanTriple 3 4 5",
     "PythagoreanTriple 3 4 5"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   [" PythagoreanTriple 3 4 5",
    " PythagoreanTriple 3 4 5",
    " PythagoreanTriple 3 4 5",
    " PythagoreanTriple 3 4 5",
    " PythagoreanTriple 3 4 5 "]},
  {"theorem":
   "∀ {K : Type u} {V : Type v} [inst : DivisionRing K] [inst_1 : AddCommGroup V] [inst_2 : Module K V] {ι : Type w}\n  (s : Set ι), s = ∅ → Module.rank K V = 0",
   "some-correct": null,
   "prompt": "A vector space with the empty set as basis is trivial.",
   "groups":
   [["∀ {K : Type u} {V : Type v} [inst : DivisionRing K] [inst_1 : AddCommGroup V] [inst_2 : Module K V] {ι : Type w}\n  (s : Set ι), s = ∅ → Module.rank K V = 0"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   [" ∀ {K : Type u} {V : Type v} [inst : DivisionRing K] [inst_1 : AddCommGroup V] [inst_2 : Module K V]\n  {ι : Type w} (s : Set ι), s = ∅ → Module.rank K V = 0 "]}],
 "elaborated": 34}