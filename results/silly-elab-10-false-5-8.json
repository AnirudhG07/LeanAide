{"total-prompts": 40,
 "temperature": 0.8,
 "query-number": 5,
 "number-similar-sentences": 10,
 "include-fixed": false,
 "failures":
 ["If a space has dimension `2` then it is finite dimensional.",
  "Every set of Borel measure zero is Lebesgue measurable.",
  "Every commutative ring is a monoid.",
  "A vector space with the empty set as basis is trivial."],
 "elaborated-prompts":
 [{"theorem": "∀ (p : ℕ), Nat.Prime p → p = 2 ∨ Odd p",
   "some-correct": null,
   "prompt": "Every prime number is `2` or odd.",
   "groups":
   [["∀ (p : ℕ), Nat.Prime p → p = 2 ∨ Odd p",
     "∀ (p : ℕ), Nat.Prime p → p = 2 ∨ Odd p"],
    ["∀ (p : ℕ) [inst : Fact (Nat.Prime p)], Odd p ∨ p = 2"],
    ["∀ (p : ℕ) [inst : Fact (Nat.Prime p)], p = 2 ∨ Odd p"],
    ["∀ (p : ℕ) [inst : Fact (Nat.Prime p)], Nat.Prime p → p = 2 ∨ Odd p"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   [" ∀ (p : ℕ) [inst : Fact (Nat.Prime p)], p = 2 ∨ Odd p ",
    " ∀ (p : ℕ), Nat.Prime p → p = 2 ∨ Odd p",
    " ∀ (p : ℕ), Nat.Prime p → p = 2 ∨ Odd p",
    " ∀ (p : ℕ) [inst : Fact (Nat.Prime p)], Nat.Prime p → p = 2 ∨ Odd p ",
    " ∀ (p : ℕ) [inst : Fact (Nat.Prime p)], Odd p ∨ p = 2"]},
  {"theorem": "Set.Infinite {x | x % 2 = 1}",
   "some-correct": null,
   "prompt": "There are infinitely many odd natural numbers.",
   "groups":
   [["Set.Infinite {x | x % 2 = 1}",
     "Set.Infinite {x | x % 2 = 1}",
     "Set.Infinite {n | n % 2 = 1}"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   [" Set.Infinite {x : ℕ | x % 2 = 1} ",
    " Set.Infinite {x : ℕ | x % 2 = 1}",
    " Set.Infinite { n : ℕ | n % 2 = 1 }"]},
  {"theorem":
   "∀ {p : ℕ} [inst : Fact (Nat.Prime p)], Nat.Prime p → p < 3 → false = true",
   "some-correct": null,
   "prompt": "The smallest odd prime is `3`.",
   "groups":
   [["∀ {p : ℕ} [inst : Fact (Nat.Prime p)], Nat.Prime p → p < 3 → false = true"],
    ["∀ (p : ℕ) [inst : Fact (Nat.Prime p)], p < 3 → ¬p % 2 = 1"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   [" Nat.Prime 3 ∧ ¬Nat.Prime 2",
    " Nat.Prime 3 ∧ ¬(Nat.Prime 2)",
    " ∀ (p : ℕ) [inst : Fact (Nat.Prime p)], p < 3 → ¬p % 2 = 1",
    " ∃! (p : ℕ), Nat.Prime p ∧ p ≠ 2",
    " ∀ {p : ℕ} [inst : Fact (Nat.Prime p)], Nat.Prime p → p < 3 → false "]},
  {"theorem": "Set.Infinite {p | Nat.Prime p ∧ Odd p}",
   "some-correct": null,
   "prompt": "There are infinitely many odd prime numbers.",
   "groups":
   [["Set.Infinite {p | Nat.Prime p ∧ Odd p}",
     "Set.Infinite {p | Nat.Prime p ∧ Odd p}",
     "Set.Infinite {p | Nat.Prime p ∧ Odd p}"],
    ["Set.Infinite {p | Nat.Prime p ∧ p % 2 = 1}"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   [" Set.Infinite {p | Nat.Prime p ∧ Odd p} ",
    " Set.Infinite {p | Nat.Prime p ∧ Odd p}",
    " Set.Infinite {p | Nat.Prime p ∧ Odd p}",
    " Set.Infinite {p | Nat.Prime p ∧ p % 2 = 1}"]},
  {"theorem":
   "∀ {K : Type u} {V : Type v} [inst : DivisionRing K] [inst_1 : AddCommGroup V] [inst_2 : Module K V],\n  Module.rank K V = 2 → FiniteDimensional K V",
   "some-correct": null,
   "prompt":
   "If a vector space has dimension `2` then it is finite dimensional.",
   "groups":
   [["∀ {K : Type u} {V : Type v} [inst : DivisionRing K] [inst_1 : AddCommGroup V] [inst_2 : Module K V],\n  Module.rank K V = 2 → FiniteDimensional K V",
     "∀ {𝕜 : Type u} [inst : DivisionRing 𝕜] (V : Type v) [inst_1 : AddCommGroup V] [inst_2 : Module 𝕜 V],\n  Module.rank 𝕜 V = 2 → FiniteDimensional 𝕜 V"],
    ["∀ {𝕜 : Type u_1} {V : Type u_2} [inst : DivisionRing 𝕜] [inst_1 : AddCommGroup V] [inst_2 : Module 𝕜 V]\n  [inst_3 : FiniteDimensional 𝕜 V], Module.rank 𝕜 V = 2 → FiniteDimensional 𝕜 V"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   [" ∀ {K : Type u} {V : Type v} [inst : DivisionRing K] [inst_1 : AddCommGroup V] [inst_2 : Module K V],\n  Module.rank K V = 2 → FiniteDimensional K V ",
    " ∀ {𝕜 : Type u} [inst : DivisionRing 𝕜] (V : Type v) [inst_1 : AddCommGroup V] [inst_2 : Module 𝕜 V],\n  Module.rank 𝕜 V = 2 → FiniteDimensional 𝕜 V ",
    " ∀ {𝕜 : Type u_1} {V : Type u_2} [inst : DivisionRing 𝕜] [inst_1 : AddCommGroup V] [inst_2 : Module 𝕜 V] [inst_3 : FiniteDimensional 𝕜 V], Module.rank 𝕜 V = 2 → FiniteDimensional 𝕜 V "]},
  {"theorem": "{K : Type u} → [inst : Field K] → DivisionRing K",
   "some-correct": null,
   "prompt": "Every field is a division ring.",
   "groups":
   [["{K : Type u} → [inst : Field K] → DivisionRing K",
     "{K : Type u} → [inst : Field K] → DivisionRing K",
     "{K : Type u} → [inst : Field K] → DivisionRing K"],
    ["{K : Type u_1} → [inst : Field K] → DivisionRing K"],
    ["{K : Type u_1} → [inst : Field K] → DivisionRing K"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   [" ∀ {K : Type u} [inst : Field K], DivisionRing K ",
    " ∀ {K : Type u} [inst : Field K], DivisionRing K ",
    " ∀ {K : Type u} [inst : Field K], DivisionRing K ",
    " ∀ {K : Type u_1} [inst : Field K], DivisionRing K ",
    " ∀ {K : Type u_1} [inst : Field K], DivisionRing K"]},
  {"theorem": "∀ (n : ℕ), ∃ k, k = n + 1",
   "some-correct": null,
   "prompt": "Every natural number has a successor.",
   "groups":
   [["∀ (n : ℕ), ∃ k, k = n + 1",
     "∀ (x : ℕ), ∃ y, Nat.succ x = y",
     "∀ {x : ℕ}, x ≠ 0 → ∃ y, y = x + 1"],
    ["∀ (n : ℕ), ∃ k, n = k + 1"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   [" Set.InjOn Nat.succ {x | x ≠ 0} ",
    " ∀ (n : ℕ), ∃ k, n = k + 1",
    " ∀ (n : ℕ), ∃ (k : ℕ), k = n + 1",
    " ∀ (x : ℕ), ∃ (y : ℕ), Nat.succ x = y",
    " ∀ {x : ℕ}, x ≠ 0 → ∃ y, y = x + 1 "]},
  {"theorem": "∀ (n : ℕ), n ≤ n + 1",
   "some-correct": null,
   "prompt": "Every natural number is less than its successor.",
   "groups":
   [["∀ (n : ℕ), n ≤ n + 1",
     "∀ (n : ℕ), n < Nat.succ n",
     "∀ (n : ℕ), n < Nat.succ n",
     "∀ {α : Type u_9} [inst : LinearOrder α] (n : ℕ), n ≤ n + 1"],
    ["∀ {α : Type u_9} [inst : LinearOrder α] {n : ℕ}, n ≤ Nat.succ n"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   [" ∀ n : ℕ, n ≤ n + 1 ",
    " ∀ n : ℕ, n < Nat.succ n",
    " ∀ n : ℕ, n < n.succ",
    " ∀ {α : Type u_9} [inst : LinearOrder α] (n : ℕ), n ≤ n + 1",
    " ∀ {α : Type u_9} [inst : LinearOrder α] {n : ℕ}, n ≤ Nat.succ n "]},
  {"theorem":
   "∀ {α : Type u_1} [inst : MeasurableSpace α], MeasureTheory.Measure α → ∀ (s : Set α), MeasurableSet s",
   "some-correct": null,
   "prompt": "Every set is Lebesgue measurable.",
   "groups":
   [["∀ {α : Type u_1} [inst : MeasurableSpace α], MeasureTheory.Measure α → ∀ (s : Set α), MeasurableSet s",
     "∀ {α : Type u_1} [inst : MeasurableSpace α], MeasureTheory.Measure α → ∀ (s : Set α), MeasurableSet s"],
    ["∀ {α : Type u_6} [inst : MeasurableSpace α] (μ : MeasureTheory.Measure α) (s : Set α), MeasurableSet s ∨ ↑↑μ s = 0"],
    ["∀ {α : Type u_6} [inst : MeasurableSpace α] {s : Set α}, MeasurableSet s"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   [" ∀ {α : Type u_1} [inst : MeasurableSpace α] (μ : MeasureTheory.Measure α), ∀ s : Set α, MeasurableSet s",
    " ∀ {α : Type u_1} [inst : MeasurableSpace α] (μ : MeasureTheory.Measure α),\n  ∀ s : Set α, MeasurableSet s",
    " ∀ {α : Type u_6} [inst : MeasurableSpace α] {s : Set α}, MeasurableSet s",
    " ∀ {α : Type u_6} [inst : MeasurableSpace α] (μ : MeasureTheory.Measure α) (s : Set α),\n  MeasurableSet s ∨ μ s = 0 "]},
  {"theorem": "∀ {p n : ℕ}, Nat.Prime p → n = p * p → n ≠ 0",
   "some-correct": null,
   "prompt": "No prime number is a perfect square.",
   "groups":
   [["∀ {p n : ℕ}, Nat.Prime p → n = p * p → n ≠ 0"],
    ["∀ {p n : ℕ}, Nat.Prime p → p ∣ n → ¬IsSquare n ∧ ¬IsSquare (n / p)"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   [" ∀ {p n : ℕ}, Nat.Prime p → p ∣ n → ¬IsSquare n ∧ ¬IsSquare (n / p) ",
    " ∀ {p n : ℕ}, Nat.Prime p → n = p * p → n ≠ 0 "]},
  {"theorem": "∀ {p : ℕ}, Nat.Prime p → Odd p → 2 < p",
   "some-correct": null,
   "prompt": "Every odd prime number is greater than `2`.",
   "groups":
   [["∀ {p : ℕ}, Nat.Prime p → Odd p → 2 < p",
     "∀ {p : ℕ}, Odd p → Nat.Prime p → 2 < p"],
    ["∀ (p : ℕ) [inst : Fact (Nat.Prime p)], p % 2 = 1 → 2 < p"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   [" ∀ {p : ℕ}, Nat.Prime p → Odd p → 2 < p",
    " ∀ (p : ℕ) [inst : Fact (Nat.Prime p)] (hp : p % 2 = 1), 2 < p",
    " ∀ {p : ℕ}, Odd p → Nat.Prime p → 2 < p "]},
  {"theorem":
   "∀ (α : Type u_1) [inst : CommRing α] (a b : α),\n  α →\n    α →\n      α →\n        α →\n          α →\n            α →\n              (IsSquare a ↔\n                ∃ x y,\n                  a = x ^ 2 + y ^ 2 ∧ IsSquare b ↔\n                    ∃ u v, b = u ^ 2 + v ^ 2 ∧ ∃ r s, a * b = r ^ 2 + s ^ 2 ∧ a ≠ 0 ∧ b ≠ 0)",
   "some-correct": null,
   "prompt":
   "The product of two numbers, each of which is the sum of four squares, is itself a sum of four squares.",
   "groups":
   [["∀ (α : Type u_1) [inst : CommRing α] (a b : α),\n  α →\n    α →\n      α →\n        α →\n          α →\n            α →\n              (IsSquare a ↔\n                ∃ x y,\n                  a = x ^ 2 + y ^ 2 ∧ IsSquare b ↔\n                    ∃ u v, b = u ^ 2 + v ^ 2 ∧ ∃ r s, a * b = r ^ 2 + s ^ 2 ∧ a ≠ 0 ∧ b ≠ 0)"],
    ["∀ {R : Type u_1} [inst : CommRing R] (a b : R),\n  (∃ x y z w, a = x ^ 2 + y ^ 2 + z ^ 2 + w ^ 2) →\n    (∃ u v t w, b = u ^ 2 + v ^ 2 + t ^ 2 + w ^ 2) → ∃ r s t u, a * b = r ^ 2 + s ^ 2 + t ^ 2 + u ^ 2"],
    ["∀ {α : Type u_1} [inst : CommRing α] {a b : α},\n  ∃ x y z w,\n    a = x ^ 2 + y ^ 2 + z ^ 2 + w ^ 2 →\n      ∃ u v r s, b = u ^ 2 + v ^ 2 + r ^ 2 + s ^ 2 → ∃ t u v r s, a * b = t ^ 2 + u ^ 2 + v ^ 2 + r ^ 2 + s ^ 2"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   [" ∀ {R : Type u_1} [inst : CommRing R] (a b : R),\n  (∃ x y z w, a = x ^ 2 + y ^ 2 + z ^ 2 + w ^ 2) → (∃ u v t w, b = u ^ 2 + v ^ 2 + t ^ 2 + w ^ 2) →\n      ∃ r s t u, a * b = r ^ 2 + s ^ 2 + t ^ 2 + u ^ 2 ",
    " ∀ {α : Type u_1} [CommRing α] {a b : α}, ∃ x y z w, a = x ^ 2 + y ^ 2 + z ^ 2 + w ^ 2 → ∃ u v r s, b = u ^ 2 + v ^ 2 + r ^ 2 + s ^ 2 → ∃ t u v r s, a * b = t ^ 2 + u ^ 2 + v ^ 2 + r ^ 2 + s ^ 2",
    " ∀ (α : Type u_1) [inst : CommRing α] (a b x y u v r s : α),\n  IsSquare a ↔ ∃ x y, a = x ^ 2 + y ^ 2 ∧\n      IsSquare b ↔ ∃ u v, b = u ^ 2 + v ^ 2 ∧\n        ∃ r s, a * b = r ^ 2 + s ^ 2 ∧ a ≠ 0 ∧ b ≠ 0"]},
  {"theorem":
   "∀ {X : Type u} [inst : TopologicalSpace X] [inst_1 : CompactSpace X], LocallyCompactSpace X",
   "some-correct": null,
   "prompt": "Every compact topological space is locally compact.",
   "groups":
   [["∀ {X : Type u} [inst : TopologicalSpace X] [inst_1 : CompactSpace X], LocallyCompactSpace X",
     "∀ {X : Type u} [inst : TopologicalSpace X] [inst_1 : CompactSpace X], LocallyCompactSpace X"],
    ["∀ {X : Type u_1} [inst : TopologicalSpace X] [inst_1 : CompactSpace X], LocallyCompactSpace X",
     "∀ {X : Type u_1} [inst : TopologicalSpace X] [inst_1 : CompactSpace X], LocallyCompactSpace X"],
    ["∀ {X : Type u_4} [inst : TopologicalSpace X] [inst_1 : CompactSpace X], LocallyCompactSpace X"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   [" ∀ {X : Type u_1} [inst : TopologicalSpace X] [inst_1 : CompactSpace X], LocallyCompactSpace X ",
    " ∀ {X : Type u_1} [inst : TopologicalSpace X] [inst_1 : CompactSpace X], LocallyCompactSpace X ",
    " ∀ {X : Type u} [inst : TopologicalSpace X] [inst_1 : CompactSpace X], LocallyCompactSpace X",
    " ∀ {X : Type u} [inst : TopologicalSpace X] [inst_1 : CompactSpace X], LocallyCompactSpace X",
    " ∀ {X : Type u_4} [inst : TopologicalSpace X] [inst_1 : CompactSpace X], LocallyCompactSpace X "]},
  {"theorem":
   "∀ {α β : Type u} [inst : UniformSpace α] [inst_1 : UniformSpace β] {f : α → β} [inst_2 : TopologicalSpace α],\n  Continuous f → UniformContinuous f",
   "some-correct": null,
   "prompt": "Every continuous function is uniformly continuous.",
   "groups":
   [["∀ {α β : Type u} [inst : UniformSpace α] [inst_1 : UniformSpace β] {f : α → β} [inst_2 : TopologicalSpace α],\n  Continuous f → UniformContinuous f"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   [" ∀ {α β : Type u} [inst : UniformSpace α] [inst_1 : UniformSpace β] {f : α → β} [inst_2 : TopologicalSpace α],\n  Continuous f → UniformContinuous f"]},
  {"theorem": "∀ {p q : ℕ}, Nat.Prime p → Nat.Prime q → p ≠ q → p + q ≠ 6",
   "some-correct": null,
   "prompt": "`6` is not the sum of two distinct prime numbers.",
   "groups": [["∀ {p q : ℕ}, Nat.Prime p → Nat.Prime q → p ≠ q → p + q ≠ 6"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   [" ¬∃ (p q : ℕ), Nat.Prime p ∧ Nat.Prime q ∧ 6 = p + q",
    " ∀ {p q : ℕ}, Nat.Prime p → Nat.Prime q → p ≠ q → p + q ≠ 6",
    " ¬(∃ (p p' : ℕ), p.Prime ∧ p' ≠ p ∧ Nat.Coprime p p' ∧ p + p' = 6) "]},
  {"theorem": "∀ {n : ℤ}, ¬Irrational ↑n ∧ ¬Rat.isInt ↑n = true",
   "some-correct": null,
   "prompt": "No integer is irrational.",
   "groups":
   [["∀ {n : ℤ}, ¬Irrational ↑n ∧ ¬Rat.isInt ↑n = true"],
    ["∀ {r : ℤ}, Irrational ↑r → r = 0"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   [" ∀ {r : ℤ}, Irrational r → r = 0",
    " ∀ {n : ℤ}, ¬Irrational n ∧ ¬Rat.isInt n = true "]},
  {"theorem": "∀ {α : Type u} [inst : Ring α] {a : α}, IsUnit a ↔ a = 1",
   "some-correct": null,
   "prompt": "The identity element in a ring is a unit.",
   "groups":
   [["∀ {α : Type u} [inst : Ring α] {a : α}, IsUnit a ↔ a = 1"],
    ["∀ {R : Type u} [inst : Ring R], R → IsUnit 1"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   [" ∀ {R : Type u} [inst : Ring R] (x : R), IsUnit (1 : R)",
    " ∀ {α : Type u} [inst : Ring α] {a : α}, IsUnit a ↔ a = 1",
    " ∀ {R : Type u_1} [inst : Ring R] (r : R), IsUnit r → IsUnit 1"]},
  {"theorem": "{G : Type u_1} → [inst : Group G] → (H : Subgroup G) → Group ↥H",
   "some-correct": null,
   "prompt": "Every subgroup of a group is a group.",
   "groups":
   [["{G : Type u_1} → [inst : Group G] → (H : Subgroup G) → Group ↥H",
     "{G : Type u_1} → [inst : Group G] → (H : Subgroup G) → Group ↥H",
     "{G : Type u_1} → [inst : Group G] → (H : Subgroup G) → Group ↥H"],
    ["∀ {G : Type u_1} [inst : Group G] (H : Subgroup G) [inst_1 : Group ↥H], True"],
    ["{G : Type u_1} → [inst : Group G] → (H : Subgroup G) → Group ↥H"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   [" ∀ {G : Type u_1} [inst : Group G] (H : Subgroup G), Group ↥H ",
    " ∀ {G : Type u_1} [inst : Group G] (H : Subgroup G), Group ↥H ",
    " ∀ {G : Type u_1} [inst : Group G] (H : Subgroup G), Group ↥H ",
    " ∀ {G : Type u_1} [inst : Group G] (H : Subgroup G), Group ↥H",
    " ∀ {G : Type u_1} [inst : Group G] (H : Subgroup G) [inst_1 : Group ↥H], True "]},
  {"theorem":
   "∀ (a b : ℕ), Ordinal.toPGame ↑a + Ordinal.toPGame ↑b ≈ Ordinal.toPGame (Ordinal.nadd ↑a ↑b)",
   "some-correct": null,
   "prompt": "The sum of two natural numbers is a natural number.",
   "groups":
   [["∀ (a b : ℕ), Ordinal.toPGame ↑a + Ordinal.toPGame ↑b ≈ Ordinal.toPGame (Ordinal.nadd ↑a ↑b)"],
    ["∀ {a b : ℕ}, ∃ c, a + b = c"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   [" ∀ {a b : ℕ}, ∃ c, a + b = c",
    " ∀ (a b : ℕ), Ordinal.toPGame a + Ordinal.toPGame b ≈ Ordinal.toPGame (Ordinal.nadd a b) "]},
  {"theorem": "∀ {G : Type u_1} [inst : Group G], 0 < orderOf 1",
   "some-correct": null,
   "prompt": "The identity element of a group has finite order.",
   "groups":
   [["∀ {G : Type u_1} [inst : Group G], 0 < orderOf 1"],
    ["∀ {α : Type u} [inst : Group α], IsOfFinOrder 1"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   [" ∀ {α : Type u} [inst : Group α], IsOfFinOrder 1 ",
    " ∀ {G : Type u_1} [inst : Group G], 0 < orderOf 1"]},
  {"theorem": "Nat.Prime 7",
   "some-correct": null,
   "prompt": "`7` is a prime number.",
   "groups":
   [["Nat.Prime 7",
     "Nat.Prime 7",
     "Nat.Prime 7",
     "Nat.Prime 7",
     "Nat.Prime 7"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   [" Nat.Prime 7",
    " Nat.Prime 7",
    " Nat.Prime 7",
    " Nat.Prime 7",
    " Nat.Prime 7 "]},
  {"theorem": "∃ n, Nat.Prime n ∧ n < 8 ∧ n ≠ 2",
   "some-correct": null,
   "prompt": "There are `3` prime numbers below `8`.",
   "groups": [["∃ n, Nat.Prime n ∧ n < 8 ∧ n ≠ 2"]],
   "correct": null,
   "comments": "",
   "all-elabs": [" ∃ n : ℕ, Nat.Prime n ∧ n < 8 ∧ n ≠ 2"]},
  {"theorem": "∀ {α : Type u} (s : Set α), Set.Finite s → ∅ ⊆ s",
   "some-correct": null,
   "prompt": "The empty set is contained in every finite set.",
   "groups":
   [["∀ {α : Type u} (s : Set α), Set.Finite s → ∅ ⊆ s",
     "∀ {α : Type u} {s : Set α}, Set.Finite s → ∅ ⊆ s"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   [" ∀ {α : Type u} (s : Set α), Set.Finite s → ∅ ⊆ s ",
    " ∀ {α : Type u} {s : Set α}, s.Finite → ∅ ⊆ s "]},
  {"theorem":
   "∀ {α : Type u} (s : Set α), Infinite ↑s → ∃ t, Set.Finite t ∧ t ⊆ s",
   "some-correct": null,
   "prompt": "Every infinite set contains a finite set.",
   "groups":
   [["∀ {α : Type u} (s : Set α), Infinite ↑s → ∃ t, Set.Finite t ∧ t ⊆ s"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   [" ∀ {α : Type u} (s : Set α), Infinite s → ∃ (t : Set α), Set.Finite t ∧ t ⊆ s "]},
  {"theorem":
   "Set.Unbounded (fun x x_1 => x < x_1) {b | Cardinal.ord (Ordinal.card b) = 10}",
   "some-correct": null,
   "prompt": "There is no field of order `10`.",
   "groups":
   [["Set.Unbounded (fun x x_1 => x < x_1) {b | Cardinal.ord (Ordinal.card b) = 10}"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   [" Set.Unbounded (fun x x_1 => x < x_1) {b | Cardinal.ord (Ordinal.card b) = 10} "]},
  {"theorem": "∀ {n : ℕ}, Odd n → ∃ a b, a ≠ b ∧ a ≠ 0 ∧ b ≠ 0 ∧ n = a + b",
   "some-correct": null,
   "prompt":
   "Every odd natural number is the sum of two distinct natural numbers.",
   "groups":
   [["∀ {n : ℕ}, Odd n → ∃ a b, a ≠ b ∧ a ≠ 0 ∧ b ≠ 0 ∧ n = a + b"],
    ["∀ (n : ℕ), Odd n → ∃ a b, a < b ∧ a + b = n"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   [" ∀ {n : ℕ}, Odd n → ∃ a b, a < b ∧ Odd a ∧ Odd b ∧ n = a + b",
    " ∀ {n : ℕ}, Odd n → ∃ a b, Odd a → Odd b → n = a + b ∧ a ≠ b ∧ b ≠ n",
    " ∀ {n : ℕ}, Odd n → ∃ a b, Odd a → Odd b → n = a + b ∧ n ≠ a ∧ n ≠ b",
    " ∀ n : ℕ, Odd n → ∃ a b : ℕ, a < b ∧ a + b = n",
    " ∀ {n : ℕ}, Odd n → ∃ a b : ℕ, a ≠ b ∧ a ≠ 0 ∧ b ≠ 0 ∧ n = a + b"]},
  {"theorem":
   "∀ {G : Type u_1} [inst : Group G] {x : G}, IsOfFinOrder x ↔ x = 1",
   "some-correct": null,
   "prompt": "Every element in the trivial group has finite order.",
   "groups":
   [["∀ {G : Type u_1} [inst : Group G] {x : G}, IsOfFinOrder x ↔ x = 1"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   [" ∀ {G : Type u_1} [inst : Group G] {x : G}, IsOfFinOrder x ↔ x = 1",
    " ∀ {α : Type u} [inst : Group α], IsOfFinOrder 1"]},
  {"theorem": "∀ (n : ℕ), Even n → Even (n * n)",
   "some-correct": null,
   "prompt": "The square of an even number is even.",
   "groups":
   [["∀ (n : ℕ), Even n → Even (n * n)",
     "∀ {α : Type u} [inst : LinearOrderedRing α] {n x : α}, Even n → Even x → Even (n * x)"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   [" ∀ (n : ℕ), Even n → Even (n ^ 2)",
    " ∀ n : ℕ, Even n → Even (n * n)",
    " ∀ {α : Type u} [inst : LinearOrderedRing α] {n x : α}, Even n → Even x → Even (n * x) ",
    " ∀ {α : Type u_3} [inst : LinearOrderedRing α] {x : α}, Even x → Even (x ^ 2) ",
    " ∀ {α : Type u_2} [inst : LinearOrderedRing α] (n : α), Even n → Even (n ^ 2)"]},
  {"theorem":
   "(R : Type u) → [inst : CommRing R] → [inst_1 : IsDomain R] → [inst_2 : GroupWithZero R] → Field R",
   "some-correct": null,
   "prompt": "Every commutative division ring is a field.",
   "groups":
   [["(R : Type u) → [inst : CommRing R] → [inst_1 : IsDomain R] → [inst_2 : GroupWithZero R] → Field R"],
    ["∀ {R : Type u} [inst : CommRing R] [inst_1 : IsDomain R], IsField R"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   [" ∀ {R : Type u} [inst : CommRing R] [inst_1 : IsDomain R], IsField R ",
    " ∀ (R : Type u) [inst : CommRing R] [inst_1 : IsDomain R] [inst_2 : GroupWithZero R], Field R "]},
  {"theorem": "∀ {α : Type u} [inst : Group α], id 1 = 1",
   "some-correct": null,
   "prompt":
   "The image of the identity element under the identity map is the identity element.",
   "groups":
   [["∀ {α : Type u} [inst : Group α], id 1 = 1",
     "∀ {α : Type u} [inst : Group α], id (id 1) = 1 ∧ id 1 = 1"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   [" ∀ {α : Type u} [inst : Group α], id 1 = 1 ",
    " ∀ {α : Type u} [inst : Group α], id (1 : α) = 1 ",
    " ∀ {α : Type u} [inst : Monoid α], 1 = id 1 ",
    " ∀ {α : Type u} [inst : Group α], 1 = id 1",
    " ∀ {α : Type u} [inst : Group α], id (id (1 : α)) = 1 ∧ id (1 : α) = 1"]},
  {"theorem": "∀ {α : Type u} (x : α), Function.IsFixedPt id x",
   "some-correct": null,
   "prompt":
   "Every point is a fixed point of the identity function on a space.",
   "groups":
   [["∀ {α : Type u} (x : α), Function.IsFixedPt id x",
     "∀ {α : Type u} (x : α), Function.IsFixedPt id x"],
    ["∀ {α : Type u_1} (x : α), Function.IsFixedPt id x"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   [" ∀ {α : Type u} (x : α), Function.IsFixedPt id x ",
    " ∀ {α : Type u} (x : α), Function.IsFixedPt id x ",
    " ∀ {α : Type u_1} (x : α), Function.IsFixedPt id x "]},
  {"theorem":
   "∀ {α : Type u} [inst : PseudoMetricSpace α] (x : α), Metric.diam {x} = 0",
   "some-correct": null,
   "prompt": "The diameter of a singleton space is `0`.",
   "groups":
   [["∀ {α : Type u} [inst : PseudoMetricSpace α] (x : α), Metric.diam {x} = 0",
     "∀ {X : Type u} [inst : MetricSpace X] {x : X}, Metric.diam {x} = 0"],
    ["∀ {α : Type u} [inst : PseudoEMetricSpace α] [inst_1 : Unique α], EMetric.diam Set.univ = 0"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   [" ∀ {α : Type u} [inst : PseudoEMetricSpace α] [inst_1 : Unique α], EMetric.diam (Set.univ : Set α) = 0 ",
    " ∀ {α : Type u} [inst : PseudoMetricSpace α] (x : α), Metric.diam {x} = 0 ",
    " ∀ {X : Type u} [inst : MetricSpace X] {x : X}, Metric.diam {x} = 0"]},
  {"theorem": "∀ {α : Type u_1} [inst : Group α], Nonempty α",
   "some-correct": null,
   "prompt": "Every group is non-empty.",
   "groups":
   [["∀ {α : Type u_1} [inst : Group α], Nonempty α",
     "∀ {α : Type u_1} [inst : Group α], Nonempty α",
     "∀ {G : Type u_1} [inst : Group G], Nonempty G"],
    ["∀ {G : Type u} [inst : Group G], Nonempty G",
     "∀ {G : Type u} [inst : Group G], Nonempty G"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   [" ∀ {α : Type u_1} [inst : Group α], Nonempty α ",
    " ∀ {α : Type u_1} [inst : Group α], Nonempty α ",
    " ∀ {G : Type u_1} [inst : Group G], Nonempty G ",
    " ∀ {G : Type u} [inst : Group G], Nonempty G ",
    " ∀ {G : Type u} [inst : Group G], Nonempty G"]},
  {"theorem":
   "∀ {X : Type u} [inst : TopologicalSpace X] (x : X), IsConnected (connectedComponent x)",
   "some-correct": null,
   "prompt": "All connected components of a topological space are connected.",
   "groups":
   [["∀ {X : Type u} [inst : TopologicalSpace X] (x : X), IsConnected (connectedComponent x)",
     "∀ {X : Type u} [inst : TopologicalSpace X] (x : X), IsConnected (connectedComponent x)",
     "∀ {X : Type u} [inst : TopologicalSpace X] (x : X), IsConnected (connectedComponent x)",
     "∀ {α : Type u} [inst : TopologicalSpace α] (a : α), IsConnected (connectedComponent a)"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   [" ∀ {X : Type u} [inst : TopologicalSpace X] (x : X), IsConnected (connectedComponent x)",
    " ∀ {X : Type u} [inst : TopologicalSpace X] (x : X),\n  IsConnected (connectedComponent x)",
    " ∀ {X : Type u} [inst : TopologicalSpace X] (x : X),\n  IsConnected (connectedComponent x) ",
    " ∀ {α : Type u} [inst : TopologicalSpace α] (a : α),\n  IsConnected (connectedComponent a) "]},
  {"theorem":
   "∃ M, Ideal.IsMaximal M ∧ Ideal.span {-1} = M ∧ ∀ {x : ℤ}, x ≠ 0 → x ∈ M",
   "some-correct": null,
   "prompt": "The ring of integers has a maximal ideal.",
   "groups":
   [["∃ M, Ideal.IsMaximal M ∧ Ideal.span {-1} = M ∧ ∀ {x : ℤ}, x ≠ 0 → x ∈ M"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   [" ∃ M, Ideal.IsMaximal M ∧ Ideal.span ({-1} : Set ℤ) = M ∧ (∀ {x : ℤ}, x ≠ 0 → x ∈ M)"]},
  {"theorem": "PythagoreanTriple 3 4 5",
   "some-correct": null,
   "prompt": "The numbers `3`, `4` and `5` form a Pythagorean triple.",
   "groups":
   [["PythagoreanTriple 3 4 5",
     "PythagoreanTriple 3 4 5",
     "PythagoreanTriple 3 4 5",
     "PythagoreanTriple 3 4 5",
     "PythagoreanTriple 3 4 5"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   [" PythagoreanTriple 3 4 5",
    " PythagoreanTriple 3 4 5",
    " PythagoreanTriple 3 4 5",
    " PythagoreanTriple 3 4 5",
    " PythagoreanTriple 3 4 5 "]}],
 "elaborated": 36}