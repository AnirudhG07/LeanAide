{"total-prompts": 40,
 "temperature": 0.8,
 "query-number": 5,
 "number-similar-sentences": 10,
 "include-fixed": false,
 "failures":
 ["If a space has dimension `2` then it is finite dimensional.",
  "The sum of two natural numbers is a natural number.",
  "There are `3` prime numbers below `8`.",
  "There is no field of order `10`.",
  "A vector space with the empty set as basis is trivial."],
 "elaborated-prompts":
 [{"theorem": "∀ (p : ℕ), Nat.Prime p ↔ p = 2 ∨ Odd p",
   "some-correct": null,
   "prompt": "Every prime number is `2` or odd.",
   "groups":
   [["∀ (p : ℕ), Nat.Prime p ↔ p = 2 ∨ Odd p",
     "∀ {p : ℕ}, Nat.Prime p ↔ p = 2 ∨ Odd p",
     "∀ (p : ℕ), Nat.Prime p ↔ p = 2 ∨ Odd p",
     "∀ (p : ℕ), Nat.Prime p ↔ p = 2 ∨ Odd p"],
    ["∀ (p : ℕ) [inst : Fact (Nat.Prime p)], p = 2 ∨ Odd p"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   ["∀ (p : ℕ), Nat.Prime p ↔ p = 2 ∨ Odd p",
    "∀ {p : ℕ}, Nat.Prime p ↔ p = 2 ∨ Odd p",
    "∀ (p : ℕ), Nat.Prime p ↔ p = 2 ∨ Odd p",
    "∀ (p : ℕ), Nat.Prime p ↔ p = 2 ∨ Odd p",
    "∀ (p : ℕ) [inst : Fact (Nat.Prime p)], p = 2 ∨ Odd p"]},
  {"theorem": "∃ᶠ (n : ℕ) in Filter.atTop, n % 2 = 1",
   "some-correct": null,
   "prompt": "There are infinitely many odd natural numbers.",
   "groups":
   [["∃ᶠ (n : ℕ) in Filter.atTop, n % 2 = 1",
     "∃ᶠ (n : ℕ) in Filter.atTop, n % 2 = 1"],
    ["∃ᶠ (n : ℕ) in Filter.atTop, ¬Even n",
     "∃ᶠ (n : ℕ) in Filter.atTop, Odd n"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   ["∃ᶠ (n : ℕ) in Filter.atTop, ¬ Even n",
    "∃ᶠ (n : ℕ) in Filter.atTop, Odd n",
    "∃ᶠ (n : ℕ) in Filter.atTop, n % 2 = 1",
    "∃ᶠ (n : ℕ) in Filter.atTop, n % 2 = 1"]},
  {"theorem": "∀ (p : ℕ), Nat.Prime p → p % 2 = 1 → p ≥ 3",
   "some-correct": null,
   "prompt": "The smallest odd prime is `3`.",
   "groups":
   [["∀ (p : ℕ), Nat.Prime p → p % 2 = 1 → p ≥ 3",
     "∀ (p : ℕ), Nat.Prime p → p % 2 = 1 → p ≥ 3"],
    ["Nat.minFac 3 = 3"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   ["∀ (p : ℕ), Nat.Prime p → p % 2 = 1 → p ≥ 3",
    "∀ (p : ℕ), Nat.Prime p → p % 2 = 1 → p ≥ 3",
    "lemma smallest_odd_prime_is_3 : Nat.minFac 3 = 3 :=\nbegin\n  exact dec_trivial,\nend"]},
  {"theorem": "{p | Nat.Prime p ∧ p % 2 = 1}.Infinite",
   "some-correct": null,
   "prompt": "There are infinitely many odd prime numbers.",
   "groups":
   [["{p | Nat.Prime p ∧ p % 2 = 1}.Infinite",
     "{p | Nat.Prime p ∧ p % 2 = 1}.Infinite",
     "{p | Nat.Prime p ∧ p % 2 = 1}.Infinite",
     "{p | Nat.Prime p ∧ p % 2 = 1}.Infinite",
     "{p | Nat.Prime p ∧ p % 2 = 1}.Infinite"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   ["Set.Infinite {p | p.Prime ∧ p % 2 = 1}",
    "Set.Infinite {p | Nat.Prime p ∧ p % 2 = 1}",
    "Set.Infinite {p | p.Prime ∧ p % 2 = 1}",
    "Set.Infinite {p | p.Prime ∧ p % 2 = 1}",
    "Set.Infinite {p | p.Prime ∧ p % 2 = 1}"]},
  {"theorem":
   "∀ {K : Type u} {V : Type v} [inst : DivisionRing K] [inst_1 : AddCommGroup V] [inst_2 : Module K V],\n  Module.rank K V = 2 → FiniteDimensional K V",
   "some-correct": null,
   "prompt":
   "If a vector space has dimension `2` then it is finite dimensional.",
   "groups":
   [["∀ {K : Type u} {V : Type v} [inst : DivisionRing K] [inst_1 : AddCommGroup V] [inst_2 : Module K V],\n  Module.rank K V = 2 → FiniteDimensional K V",
     "∀ {K : Type u} {V : Type v} [inst : DivisionRing K] [inst_1 : AddCommGroup V] [inst_2 : Module K V],\n  Module.rank K V = 2 → FiniteDimensional K V",
     "∀ {K : Type u} {V : Type v} [inst : DivisionRing K] [inst_1 : AddCommGroup V] [inst_2 : Module K V],\n  Module.rank K V = 2 → FiniteDimensional K V"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   ["∀ {K : Type u} {V : Type v} [inst : DivisionRing K] [inst_1 : AddCommGroup V] [inst_2 : Module K V],\n  Module.rank K V = 2 → FiniteDimensional K V",
    "∀ {K : Type u} {V : Type v} [inst : DivisionRing K] [inst_1 : AddCommGroup V] [inst_2 : Module K V],\n  Module.rank K V = 2 → FiniteDimensional K V",
    "∀ {K : Type u} {V : Type v} [inst : DivisionRing K] [inst_1 : AddCommGroup V] [inst_2 : Module K V],\n  Module.rank K V = 2 → FiniteDimensional K V"]},
  {"theorem": "{K : Type u} → [inst : Field K] → DivisionRing K",
   "some-correct": null,
   "prompt": "Every field is a division ring.",
   "groups":
   [["{K : Type u} → [inst : Field K] → DivisionRing K",
     "{K : Type u} → [inst : Field K] → DivisionRing K"],
    ["(K : Type u) → [inst : Field K] → DivisionRing K",
     "(K : Type u) → [inst : Field K] → DivisionRing K"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   ["∀ (K : Type u) [inst : Field K], DivisionRing K",
    "∀ (K : Type u) [inst : Field K], DivisionRing K",
    "∀ {K : Type u} [inst : Field K], DivisionRing K",
    "∀ {K : Type u} [inst : Field K], DivisionRing K"]},
  {"theorem": "∀ (n : ℕ), ∃ m, n.succ = m",
   "some-correct": null,
   "prompt": "Every natural number has a successor.",
   "groups":
   [["∀ (n : ℕ), ∃ m, n.succ = m",
     "∀ (n : ℕ), ∃ m, n.succ = m",
     "∀ (n : ℕ), ∃ m, n.succ = m",
     "∀ (n : ℕ), ∃ m, n.succ = m"],
    ["∀ (n : ℕ), ∃ m, n = ?m.57095 n m"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   ["∀ (n : ℕ), ∃ m, n = m.succ",
    "∀ (n : ℕ), ∃ (m : ℕ), n.succ = m",
    "∀ (n : ℕ), ∃ (m : ℕ), n.succ = m",
    "∀ (n : ℕ), ∃ (m : ℕ), n.succ = m",
    "∀ (n : ℕ), ∃ (m : ℕ), n.succ = m"]},
  {"theorem": "∀ (n : ℕ), n < n.succ",
   "some-correct": null,
   "prompt": "Every natural number is less than its successor.",
   "groups":
   [["∀ (n : ℕ), n < n.succ",
     "∀ (n : ℕ), n < n.succ",
     "∀ (n : ℕ), n < n.succ",
     "∀ (n : ℕ), n < n.succ",
     "∀ (n : ℕ), n < n.succ"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   ["∀ (n : ℕ), n < n.succ",
    "∀ (n : ℕ), n < n.succ",
    "∀ (n : ℕ), n < n.succ",
    "∀ (n : ℕ), n < n.succ",
    "∀ (n : ℕ), n < n.succ"]},
  {"theorem":
   "∀ {α : Type u_1} [inst : MeasurableSpace α] (s : Set α), MeasurableSet s",
   "some-correct": null,
   "prompt": "Every set is Lebesgue measurable.",
   "groups":
   [["∀ {α : Type u_1} [inst : MeasurableSpace α] (s : Set α), MeasurableSet s",
     "∀ {α : Type u_1} [inst : MeasurableSpace α] (s : Set α), MeasurableSet s"],
    ["{α : Type u_1} → [inst : MetricSpace α] → MeasurableSpace α"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   ["∀ {α : Type u_1} [inst : MeasurableSpace α] (s : Set α), MeasurableSet s",
    "∀ {α : Type u_1} [inst : MetricSpace α], MeasurableSpace α",
    "∀ {α : Type u_1} [inst : MeasurableSpace α] (s : Set α), MeasurableSet s"]},
  {"theorem":
   "∀ {α : Type u_6} [inst : TopologicalSpace α] [inst_1 : MeasurableSpace α] [inst_2 : BorelSpace α] {s : Set α},\n  ?m.92412 = 0 → MeasurableSet s",
   "some-correct": null,
   "prompt": "Every set of Borel measure zero is Lebesgue measurable.",
   "groups":
   [["∀ {α : Type u_6} [inst : TopologicalSpace α] [inst_1 : MeasurableSpace α] [inst_2 : BorelSpace α] {s : Set α},\n  ?m.92412 = 0 → MeasurableSet s"],
    ["∀ {α : Type u_6} [T : TopologicalSpace α] [M : MeasurableSpace α] [B : BorelSpace α] (A : Set α),\n  ?m.90014 A = 0 → MeasurableSet A"],
    ["∀ {α : Type u_6} [inst : TopologicalSpace α] [inst_1 : MeasurableSpace α] [inst_2 : BorelSpace α] (s : Set α),\n  ?m.90275 s = 0 → MeasurableSet s"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   ["∀ {α : Type u_6} [T : TopologicalSpace α] [M : MeasurableSpace α] [B : BorelSpace α] (A : Set α),\n  (↑↑MeasureTheory.volume A = 0) → MeasurableSet A",
    "∀ {α : Type u_6} [inst : TopologicalSpace α] [inst_1 : MeasurableSpace α] [inst_2 : BorelSpace α],\n  ∀ (s : Set α), ↑↑MeasureTheory.volume s = 0 → MeasurableSet s",
    "∀ {α : Type u_6} [inst : TopologicalSpace α] [inst_1 : MeasurableSpace α] [inst_2 : BorelSpace α],\n  ∀ {s : Set α}, ↑↑MeasureTheory.volume s = 0 → MeasurableSet s"]},
  {"theorem": "∀ {p : ℕ}, Nat.Prime p → ¬IsSquare p",
   "some-correct": null,
   "prompt": "No prime number is a perfect square.",
   "groups":
   [["∀ {p : ℕ}, Nat.Prime p → ¬IsSquare p",
     "∀ {p : ℕ}, Nat.Prime p → ¬IsSquare p",
     "¬∃ p, Nat.Prime p ∧ IsSquare p",
     "∀ {p : ℕ}, Nat.Prime p → ¬IsSquare p",
     "∀ {n : ℕ}, Nat.Prime n → ¬IsSquare n"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   ["∀ {p : ℕ}, Nat.Prime p → ¬IsSquare p",
    "∀ {p : ℕ}, Nat.Prime p → ¬IsSquare p",
    "¬∃ (p : ℕ), Nat.Prime p ∧ IsSquare p",
    "∀ {p : ℕ}, Nat.Prime p → ¬IsSquare p",
    "∀ {n : ℕ}, Nat.Prime n → ¬IsSquare n"]},
  {"theorem": "∀ (p : ℕ) [inst : Fact (Nat.Prime p)], Odd p → p > 2",
   "some-correct": null,
   "prompt": "Every odd prime number is greater than `2`.",
   "groups":
   [["∀ (p : ℕ) [inst : Fact (Nat.Prime p)], Odd p → p > 2",
     "∀ (p : ℕ) [inst : Fact (Nat.Prime p)], Odd p → p > 2"],
    ["∀ (p : ℕ), Prime p → Odd p → p > 2"],
    ["∀ (p : ℕ) [inst : Fact (Nat.Prime p)], Odd p ↔ p > 2"],
    ["∀ (p : ℕ) [inst : Fact (Nat.Prime p)], p % 2 = 1 → p > 2"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   ["∀ (p : ℕ) [inst : Fact (Nat.Prime p)], Odd p → p > 2",
    "∀ (p : ℕ) [inst : Fact (Nat.Prime p)], Odd p ↔ p > 2",
    "∀ (p : ℕ) [inst : Fact (Nat.Prime p)], Odd p → p > 2",
    "∀ (p : ℕ) [inst : Fact (Nat.Prime p)], p % 2 = 1 → p > 2",
    "∀ (p : ℕ), Prime p → Odd p → p > 2"]},
  {"theorem":
   "∀ (a b : ℕ),\n  (∃ w x y z, a = w ^ 2 + x ^ 2 + y ^ 2 + z ^ 2) →\n    (∃ u v m n, b = u ^ 2 + v ^ 2 + m ^ 2 + n ^ 2) → ∃ r s p q, a * b = r ^ 2 + s ^ 2 + p ^ 2 + q ^ 2",
   "some-correct": null,
   "prompt":
   "The product of two numbers, each of which is the sum of four squares, is itself a sum of four squares.",
   "groups":
   [["∀ (a b : ℕ),\n  (∃ w x y z, a = w ^ 2 + x ^ 2 + y ^ 2 + z ^ 2) →\n    (∃ u v m n, b = u ^ 2 + v ^ 2 + m ^ 2 + n ^ 2) → ∃ r s p q, a * b = r ^ 2 + s ^ 2 + p ^ 2 + q ^ 2",
     "∀ {a b : ℕ},\n  (∃ w x y z, a = w ^ 2 + x ^ 2 + y ^ 2 + z ^ 2) →\n    (∃ u v s t, b = u ^ 2 + v ^ 2 + s ^ 2 + t ^ 2) → ∃ r s t u, a * b = r ^ 2 + s ^ 2 + t ^ 2 + u ^ 2",
     "∀ {a b : ℕ},\n  (∃ w x y z, a = w ^ 2 + x ^ 2 + y ^ 2 + z ^ 2) →\n    (∃ u v p q, b = u ^ 2 + v ^ 2 + p ^ 2 + q ^ 2) → ∃ r s t u, a * b = r ^ 2 + s ^ 2 + t ^ 2 + u ^ 2",
     "∀ (a b : ℕ),\n  (∃ x y z w, a = x ^ 2 + y ^ 2 + z ^ 2 + w ^ 2) →\n    (∃ u v m n, b = u ^ 2 + v ^ 2 + m ^ 2 + n ^ 2) → ∃ r s p q, a * b = r ^ 2 + s ^ 2 + p ^ 2 + q ^ 2"],
    ["∀ {a b x y z w u v : ℕ},\n  a = x ^ 2 + y ^ 2 + z ^ 2 + w ^ 2 → b = u ^ 2 + v ^ 2 + z ^ 2 + w ^ 2 → ∃ r s t, a * b = r ^ 2 + s ^ 2 + t ^ 2 + u ^ 2"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   ["∀ (a b : ℕ), (∃ (w x y z : ℕ), a = w ^ 2 + x ^ 2 + y ^ 2 + z ^ 2) →\n  (∃ (u v m n : ℕ), b = u ^ 2 + v ^ 2 + m ^ 2 + n ^ 2) →\n  ∃ (r s p q : ℕ), a * b = r ^ 2 + s ^ 2 + p ^ 2 + q ^ 2",
    "∀ {a b x y z w u v : ℕ}, a = x ^ 2 + y ^ 2 + z ^ 2 + w ^ 2 → b = u ^ 2 + v ^ 2 + z ^ 2 + w ^ 2 → ∃ r s t, a * b = r ^ 2 + s ^ 2 + t ^ 2 + u ^ 2",
    "∀ {a b : ℕ}, (∃ w x y z, a = w ^ 2 + x ^ 2 + y ^ 2 + z ^ 2) → (∃ u v s t, b = u ^ 2 + v ^ 2 + s ^ 2 + t ^ 2) → ∃ r s t u, a * b = r ^ 2 + s ^ 2 + t ^ 2 + u ^ 2",
    "∀ {a b : ℕ}, (∃ w x y z, a = w ^ 2 + x ^ 2 + y ^ 2 + z ^ 2) → (∃ u v p q, b = u ^ 2 + v ^ 2 + p ^ 2 + q ^ 2) → ∃ r s t u, a * b = r ^ 2 + s ^ 2 + t ^ 2 + u ^ 2",
    "∀ (a b : ℕ), (∃ (x y z w : ℕ), a = x ^ 2 + y ^ 2 + z ^ 2 + w ^ 2) → (∃ (u v m n : ℕ), b = u ^ 2 + v ^ 2 + m ^ 2 + n ^ 2) → ∃ (r s p q : ℕ), a * b = r ^ 2 + s ^ 2 + p ^ 2 + q ^ 2"]},
  {"theorem":
   "∀ {X : Type u} [inst : TopologicalSpace X] [inst_1 : CompactSpace X], LocallyCompactSpace X",
   "some-correct": null,
   "prompt": "Every compact topological space is locally compact.",
   "groups":
   [["∀ {X : Type u} [inst : TopologicalSpace X] [inst_1 : CompactSpace X], LocallyCompactSpace X",
     "∀ {X : Type u} [inst : TopologicalSpace X] [inst_1 : CompactSpace X], LocallyCompactSpace X",
     "∀ {X : Type u} [inst : TopologicalSpace X] [inst_1 : CompactSpace X], LocallyCompactSpace X",
     "∀ {X : Type u} [inst : TopologicalSpace X] [inst_1 : CompactSpace X], LocallyCompactSpace X",
     "∀ {X : Type u} [inst : TopologicalSpace X] [inst_1 : CompactSpace X], LocallyCompactSpace X"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   ["∀ {X : Type u} [inst : TopologicalSpace X] [inst_1 : CompactSpace X], LocallyCompactSpace X",
    "∀ {X : Type u} [inst : TopologicalSpace X] [inst_1 : CompactSpace X], LocallyCompactSpace X",
    "∀ {X : Type u} [inst : TopologicalSpace X] [inst_1 : CompactSpace X], LocallyCompactSpace X",
    "∀ {X : Type u} [inst : TopologicalSpace X] [inst_1 : CompactSpace X], LocallyCompactSpace X",
    "∀ {X : Type u} [inst : TopologicalSpace X] [inst_1 : CompactSpace X], LocallyCompactSpace X"]},
  {"theorem":
   "∀ {α : Type u} {β : Type v} [inst : UniformSpace α] [inst_1 : UniformSpace β] {f : α → β},\n  Continuous f → UniformContinuous f",
   "some-correct": null,
   "prompt": "Every continuous function is uniformly continuous.",
   "groups":
   [["∀ {α : Type u} {β : Type v} [inst : UniformSpace α] [inst_1 : UniformSpace β] {f : α → β},\n  Continuous f → UniformContinuous f",
     "∀ {α : Type u} {β : Type v} [inst : UniformSpace α] [inst_1 : UniformSpace β] {f : α → β},\n  Continuous f → UniformContinuous f",
     "∀ {α : Type u} {β : Type v} [inst : UniformSpace α] [inst_1 : UniformSpace β] {f : α → β},\n  Continuous f → UniformContinuous f"],
    ["∀ {α : Type u_1} {β : Type u_2} [inst : UniformSpace α] [inst_1 : UniformSpace β] {f : α → β},\n  Continuous f → UniformContinuous f",
     "∀ {α : Type u_1} {β : Type u_2} [inst : UniformSpace α] [inst_1 : UniformSpace β] {f : α → β},\n  Continuous f → UniformContinuous f"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   ["∀ {α : Type u_1} {β : Type u_2} [inst : UniformSpace α] [inst_1 : UniformSpace β] {f : α → β},\n  Continuous f → UniformContinuous f",
    "∀ {α : Type u_1} {β : Type u_2} [inst : UniformSpace α] [inst_1 : UniformSpace β] {f : α → β},\n  Continuous f → UniformContinuous f",
    "∀ {α : Type u} {β : Type v} [inst : UniformSpace α] [inst_1 : UniformSpace β] {f : α → β},\n  Continuous f → UniformContinuous f",
    "∀ {α : Type u} {β : Type v} [inst : UniformSpace α] [inst_1 : UniformSpace β] {f : α → β},\n  Continuous f → UniformContinuous f",
    "∀ {α : Type u} {β : Type v} [inst : UniformSpace α] [inst_1 : UniformSpace β] {f : α → β},\n  Continuous f → UniformContinuous f"]},
  {"theorem": "∀ (p q : ℕ), Nat.Prime p → Nat.Prime q → p ≠ q → 6 ≠ p + q",
   "some-correct": null,
   "prompt": "`6` is not the sum of two distinct prime numbers.",
   "groups":
   [["∀ (p q : ℕ), Nat.Prime p → Nat.Prime q → p ≠ q → 6 ≠ p + q",
     "¬∃ p q, Nat.Prime p ∧ Nat.Prime q ∧ p ≠ q ∧ 6 = p + q"],
    ["¬∃ p q, Nat.Prime p → Nat.Prime q → p ≠ q → p + q = 6",
     "¬∃ p q, Nat.Prime p → Nat.Prime q → p ≠ q → p + q = 6"],
    ["¬∃ p q, ∃ (_ : Nat.Prime p) (_ : Nat.Prime q), 6 = p + q ∧ p ≠ q"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   ["¬∃ (p q : ℕ) (hp : Nat.Prime p) (hq : Nat.Prime q), 6 = p + q ∧ p ≠ q",
    "¬∃ p q : ℕ, Nat.Prime p → Nat.Prime q → p ≠ q → p + q = 6",
    "∀ (p q : ℕ), Nat.Prime p → Nat.Prime q → p ≠ q → 6 ≠ p + q",
    "¬∃ (p q : ℕ), Nat.Prime p → Nat.Prime q → p ≠ q → p + q = 6",
    "¬∃ p q, Nat.Prime p ∧ Nat.Prime q ∧ p ≠ q ∧ 6 = p + q"]},
  {"theorem": "∀ (n : ℤ), ¬Irrational ↑n",
   "some-correct": null,
   "prompt": "No integer is irrational.",
   "groups":
   [["∀ (n : ℤ), ¬Irrational ↑n",
     "∀ (n : ℤ), ¬Irrational ↑n",
     "∀ (n : ℤ), ¬Irrational ↑n",
     "∀ (n : ℤ), ¬Irrational ↑n",
     "∀ (n : ℤ), ¬Irrational ↑n"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   ["∀ (n : ℤ), ¬Irrational (↑n)",
    "∀ (n : ℤ), ¬Irrational ↑n",
    "∀ (n : ℤ), ¬Irrational ↑n",
    "∀ (n : ℤ), ¬Irrational ↑n",
    "∀ (n : ℤ), ¬Irrational n"]},
  {"theorem": "∀ {R : Type u} [inst : Ring R], IsUnit 0",
   "some-correct": null,
   "prompt": "The identity element in a ring is a unit.",
   "groups":
   [["∀ {R : Type u} [inst : Ring R], IsUnit 0",
     "∀ {R : Type u} [inst : Ring R], IsUnit 0",
     "∀ {R : Type u} [inst : Ring R], IsUnit 0",
     "∀ {R : Type u} [inst : Ring R], IsUnit 0"],
    ["∀ {R : Type u} [inst : Ring R], IsUnit 1"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   ["∀ {R : Type u} [inst : Ring R], IsUnit (1 : R)",
    "∀ {R : Type u} [inst : Ring R], IsUnit (0 : R)",
    "∀ {R : Type u} [inst : Ring R], IsUnit (0 : R)",
    "∀ {R : Type u} [inst : Ring R], IsUnit (0 : R)",
    "∀ {R : Type u} [inst : Ring R], IsUnit (0 : R)"]},
  {"theorem": "{G : Type u_1} → [inst : Group G] → (H : Subgroup G) → Group ↥H",
   "some-correct": null,
   "prompt": "Every subgroup of a group is a group.",
   "groups":
   [["{G : Type u_1} → [inst : Group G] → (H : Subgroup G) → Group ↥H",
     "{G : Type u_1} → [inst : Group G] → (H : Subgroup G) → Group ↥H",
     "{G : Type u_1} → [inst : Group G] → (H : Subgroup G) → Group ↥H",
     "{G : Type u_1} → [inst : Group G] → (H : Subgroup G) → Group ↥H",
     "{G : Type u_1} → [inst : Group G] → (H : Subgroup G) → Group ↥H"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   ["∀ {G : Type u_1} [inst : Group G] (H : Subgroup G), Group H",
    "∀ {G : Type u_1} [inst : Group G] (H : Subgroup G), Group H",
    "∀ {G : Type u_1} [inst : Group G] (H : Subgroup G), Group H",
    "∀ {G : Type u_1} [inst : Group G] (H : Subgroup G), Group H",
    "∀ {G : Type u_1} [inst : Group G] (H : Subgroup G), Group H"]},
  {"theorem": "∀ {G : Type u_1} [inst : Group G], IsOfFinOrder 1",
   "some-correct": null,
   "prompt": "The identity element of a group has finite order.",
   "groups":
   [["∀ {G : Type u_1} [inst : Group G], IsOfFinOrder 1",
     "∀ {G : Type u_1} [inst : Group G], IsOfFinOrder 1"],
    ["∀ {G : Type u} [inst : Group G], IsOfFinOrder 1"],
    ["∀ {G : Type u} [inst : Monoid G], IsOfFinOrder 1"],
    ["∀ {G : Type u_1} [inst : Monoid G], IsOfFinOrder 1"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   ["∀ {G : Type u} [inst : Group G], IsOfFinOrder (1 : G)",
    "∀ {G : Type u} [inst : Monoid G], IsOfFinOrder (1 : G)",
    "∀ {G : Type u_1} [inst : Monoid G], IsOfFinOrder (1 : G)",
    "∀ {G : Type u_1} [inst : Group G], IsOfFinOrder (1 : G)",
    "∀ {G : Type u_1} [inst : Group G], IsOfFinOrder (1 : G)"]},
  {"theorem": "Prime 7",
   "some-correct": null,
   "prompt": "`7` is a prime number.",
   "groups": [["Prime 7", "Prime 7", "Prime 7", "Prime 7", "Prime 7"]],
   "correct": null,
   "comments": "",
   "all-elabs": ["Prime 7", "Prime 7", "Prime 7", "Prime 7", "Prime 7"]},
  {"theorem": "∀ {α : Type u} (s : Finset α), ∅ ⊆ s",
   "some-correct": null,
   "prompt": "The empty set is contained in every finite set.",
   "groups":
   [["∀ {α : Type u} (s : Finset α), ∅ ⊆ s",
     "∀ {α : Type u} (s : Finset α), ∅ ⊆ s",
     "∀ {α : Type u} (s : Finset α), ∅ ⊆ s",
     "∀ {α : Type u} (s : Finset α), ∅ ⊆ s",
     "∀ {α : Type u} (s : Finset α), ∅ ⊆ s"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   ["∀ {α : Type u}, ∀ (s : Finset α), ∅ ⊆ s",
    "∀ {α : Type u} (s : Finset α), ∅ ⊆ s",
    "∀ {α : Type u}, ∀ (s : Finset α), ∅ ⊆ s",
    "∀ {α : Type u}, ∀ (s : Finset α), ∅ ⊆ s",
    "∀ {α : Type u}, ∀ (s : Finset α), ∅ ⊆ s"]},
  {"theorem": "∀ {α : Type u} {s : Set α}, s.Infinite → ∃ t, t.Finite ∧ t ⊆ s",
   "some-correct": null,
   "prompt": "Every infinite set contains a finite set.",
   "groups":
   [["∀ {α : Type u} {s : Set α}, s.Infinite → ∃ t, t.Finite ∧ t ⊆ s",
     "∀ {α : Type u} {s : Set α}, s.Infinite → ∃ t, t.Finite ∧ t ⊆ s",
     "∀ {α : Type u} {s : Set α}, s.Infinite → ∃ t, t.Finite ∧ t ⊆ s",
     "∀ {α : Type u} {s : Set α}, s.Infinite → ∃ t, t.Finite ∧ t ⊆ s",
     "∀ {α : Type u} {s : Set α}, s.Infinite → ∃ t, t.Finite ∧ t ⊆ s"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   ["∀ {α : Type u} {s : Set α}, Set.Infinite s → ∃ t : Set α, Set.Finite t ∧ t ⊆ s",
    "∀ {α : Type u} {s : Set α}, Set.Infinite s → ∃ t : Set α, Set.Finite t ∧ t ⊆ s",
    "∀ {α : Type u} {s : Set α}, Set.Infinite s → ∃ t : Set α, Set.Finite t ∧ t ⊆ s",
    "∀ {α : Type u} {s : Set α}, Set.Infinite s → ∃ (t : Set α), Set.Finite t ∧ t ⊆ s",
    "∀ {α : Type u} {s : Set α}, Set.Infinite s → ∃ t : Set α, Set.Finite t ∧ t ⊆ s"]},
  {"theorem": "{R : Type u} → [inst : CommRing R] → Monoid R",
   "some-correct": null,
   "prompt": "Every commutative ring is a monoid.",
   "groups":
   [["{R : Type u} → [inst : CommRing R] → Monoid R",
     "{R : Type u} → [inst : CommRing R] → Monoid R"],
    ["(R : Type ?u.1979109) → [inst : CommRing R] → MulOneClass R"],
    ["(R : Type u) → [inst : CommRing R] → Monoid R"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   ["∀ (R : Type u) [inst : CommRing R], Monoid R",
    "∀ {R : Type u} [inst : CommRing R], Monoid R",
    "∀ {R : Type u} [inst : CommRing R], Monoid R",
    "∀ R [inst : CommRing R], MulOneClass R"]},
  {"theorem": "∀ (n : ℕ), Odd n → ∃ a b, a ≠ b ∧ n = a + b",
   "some-correct": null,
   "prompt":
   "Every odd natural number is the sum of two distinct natural numbers.",
   "groups":
   [["∀ (n : ℕ), Odd n → ∃ a b, a ≠ b ∧ n = a + b",
     "∀ (n : ℕ), Odd n → ∃ a b, a ≠ b ∧ n = a + b",
     "∀ {n : ℕ}, Odd n → ∃ a b, a ≠ b ∧ n = a + b",
     "∀ (n : ℕ), Odd n → ∃ a b, a ≠ b ∧ n = a + b"],
    ["∀ (n : ℕ), Odd n → ∃ a b, n = a + b ∧ a ≠ b"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   ["∀ (n : ℕ), Odd n → ∃ (a b : ℕ), a ≠ b ∧ n = a + b",
    "∀ n : ℕ, Odd n → ∃ a b : ℕ, a ≠ b ∧ n = a + b",
    "∀ {n : ℕ}, Odd n → ∃ a b : ℕ, a ≠ b ∧ n = a + b",
    "∀ n : ℕ, Odd n → ∃ a b : ℕ, a ≠ b ∧ n = a + b",
    "∀ (n : ℕ), Odd n → ∃ (a b : ℕ), n = a + b ∧ a ≠ b"]},
  {"theorem": "∀ (x : Unit), IsOfFinOrder x",
   "some-correct": null,
   "prompt": "Every element in the trivial group has finite order.",
   "groups": [["∀ (x : Unit), IsOfFinOrder x"]],
   "correct": null,
   "comments": "",
   "all-elabs": ["∀ (x : Unit), IsOfFinOrder x"]},
  {"theorem": "∀ {n : ℤ}, Even n → Even (n * n)",
   "some-correct": null,
   "prompt": "The square of an even number is even.",
   "groups":
   [["∀ {n : ℤ}, Even n → Even (n * n)",
     "∀ (n : ℤ), Even n → Even (n * n)",
     "∀ (n : ℕ), Even n → Even (n * n)"],
    ["∀ (n : ℤ), Even n → Even (n ^ 2)", "∀ (n : ℤ), Even n → Even (n ^ 2)"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   ["∀ (n : ℤ), Even n → Even (n ^ 2)",
    "∀ {n : ℤ}, Even n → Even (n * n)",
    "∀ (n : ℤ), Even n → Even (n ^ 2)",
    "∀ (n : ℤ), Even n → Even (n * n)",
    "∀ (n : ℕ), Even n → Even (n * n)"]},
  {"theorem":
   "∀ {R : Type u} [inst : CommRing R], (∀ (x : R), x ≠ 0 → ∃ y, x * y = 1) → IsField R",
   "some-correct": null,
   "prompt": "Every commutative division ring is a field.",
   "groups":
   [["∀ {R : Type u} [inst : CommRing R], (∀ (x : R), x ≠ 0 → ∃ y, x * y = 1) → IsField R"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   ["∀ {R : Type u} [inst : CommRing R] (h : ∀ (x : R), x ≠ 0 → ∃ (y : R), x * y = 1), IsField R"]},
  {"theorem": "∀ {α : Type u} [inst : MulOneClass α], id 1 = 1",
   "some-correct": null,
   "prompt":
   "The image of the identity element under the identity map is the identity element.",
   "groups":
   [["∀ {α : Type u} [inst : MulOneClass α], id 1 = 1",
     "∀ {α : Type u} [inst : MulOneClass α], id 1 = 1"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   ["∀ {α : Type u} [inst : MulOneClass α], id 1 = 1",
    "∀ {α : Type u} [inst : MulOneClass α], id (1 : α) = (1 : α)"]},
  {"theorem": "∀ {α : Type u} (x : α), Function.IsFixedPt id x",
   "some-correct": null,
   "prompt":
   "Every point is a fixed point of the identity function on a space.",
   "groups":
   [["∀ {α : Type u} (x : α), Function.IsFixedPt id x",
     "∀ {α : Type u} (x : α), Function.IsFixedPt id x",
     "∀ {α : Type u} (x : α), Function.IsFixedPt id x",
     "∀ {α : Type u} [inst : TopologicalSpace α] [inst_1 : T2Space α] (x : α), Function.IsFixedPt id x",
     "∀ {α : Type u} (x : α), Function.IsFixedPt id x"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   ["∀ {α : Type u} (x : α), Function.IsFixedPt id x",
    "∀ {α : Type u} (x : α), Function.IsFixedPt id x",
    "∀ {α : Type u} (x : α), Function.IsFixedPt id x",
    "∀ {α : Type u} [inst : TopologicalSpace α] [inst_1 : T2Space α] (x : α), Function.IsFixedPt id x",
    "∀ {α : Type u} (x : α), Function.IsFixedPt id x"]},
  {"theorem":
   "∀ {α : Type u} [inst : PseudoEMetricSpace α] {x : α}, EMetric.diam {x} = 0",
   "some-correct": null,
   "prompt": "The diameter of a singleton space is `0`.",
   "groups":
   [["∀ {α : Type u} [inst : PseudoEMetricSpace α] {x : α}, EMetric.diam {x} = 0",
     "∀ {α : Type u} [inst : PseudoEMetricSpace α] {x : α}, EMetric.diam {x} = 0",
     "∀ {α : Type u} [inst : PseudoEMetricSpace α] (x : α), EMetric.diam {x} = 0"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   ["∀ {α : Type u} [inst : PseudoEMetricSpace α] {x : α}, EMetric.diam {x} = 0",
    "∀ {α : Type u} [inst : PseudoEMetricSpace α] {x : α}, EMetric.diam {x} = 0",
    "∀ {α : Type u} [inst : PseudoEMetricSpace α] (x : α), EMetric.diam {x} = 0"]},
  {"theorem": "∀ {G : Type u} [inst : Group G], Nonempty G",
   "some-correct": null,
   "prompt": "Every group is non-empty.",
   "groups":
   [["∀ {G : Type u} [inst : Group G], Nonempty G",
     "∀ {G : Type u} [inst : Group G], Nonempty G",
     "∀ {G : Type u} [inst : Group G], Nonempty G",
     "∀ {G : Type u} [inst : Group G], Nonempty G",
     "∀ {G : Type u} [inst : Group G], Nonempty G"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   ["∀ {G : Type u} [inst : Group G], Nonempty G",
    "∀ {G : Type u} [inst : Group G], Nonempty G",
    "∀ {G : Type u} [inst : Group G], Nonempty G",
    "∀ {G : Type u} [inst : Group G], Nonempty G",
    "∀ {G : Type u} [inst : Group G], Nonempty G"]},
  {"theorem":
   "∀ {α : Type u} [inst : TopologicalSpace α] (x : α), IsConnected (connectedComponent x)",
   "some-correct": null,
   "prompt": "All connected components of a topological space are connected.",
   "groups":
   [["∀ {α : Type u} [inst : TopologicalSpace α] (x : α), IsConnected (connectedComponent x)",
     "∀ {α : Type u} [inst : TopologicalSpace α] (x : α), IsConnected (connectedComponent x)"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   ["∀ {α : Type u} [inst : TopologicalSpace α], ∀ (x : α), IsConnected (connectedComponent x)",
    "∀ {α : Type u} [inst : TopologicalSpace α], ∀ (x : α), IsConnected (connectedComponent x)"]},
  {"theorem": "∃ I, I.IsMaximal",
   "some-correct": null,
   "prompt": "The ring of integers has a maximal ideal.",
   "groups":
   [["∃ I, I.IsMaximal"],
    ["∀ {R : Type u} [inst : CommRing R] [inst_1 : IsDomain R] [inst_2 : IsDedekindDomain R], ∃ M, M.IsMaximal"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   ["∀ {R : Type u} [inst : CommRing R] [inst_1 : IsDomain R] [inst_2 : IsDedekindDomain R], ∃ M, Ideal.IsMaximal M",
    "∃ I : Ideal ℤ, Ideal.IsMaximal I"]},
  {"theorem": "PythagoreanTriple 3 4 5",
   "some-correct": null,
   "prompt": "The numbers `3`, `4` and `5` form a Pythagorean triple.",
   "groups":
   [["PythagoreanTriple 3 4 5",
     "PythagoreanTriple 3 4 5",
     "PythagoreanTriple 3 4 5",
     "PythagoreanTriple 3 4 5",
     "PythagoreanTriple 3 4 5"]],
   "correct": null,
   "comments": "",
   "all-elabs":
   ["PythagoreanTriple 3 4 5",
    "PythagoreanTriple 3 4 5",
    "PythagoreanTriple 3 4 5",
    "PythagoreanTriple 3 4 5",
    "PythagoreanTriple 3 4 5"]}],
 "elaborated": 35}