[["The integers modulo `n : ℕ`. ",{"type":"ℕ → Type","name":"ZMod","isProp":false,"docString":"The integers modulo `n : ℕ`. ","distance":0.7581208525655089847106182787683792412281036376953125}],[" An integer `n` is a unit in the monoid of integers if and only if |n| = 1, where |n| represents the absolute value of `n`.",{"type":"∀ {n : ℤ}, IsUnit n ↔ n.natAbs = 1","name":"Int.isUnit_iff_natAbs_eq","isProp":true,"docString":" An integer `n` is a unit in the monoid of integers if and only if |n| = 1, where |n| represents the absolute value of `n`.","distance":0.6270741457133797158718380160280503332614898681640625}],["This theorem states that for any integer `n`, `n` is a unit in the monoid of integers if and only if the absolute value of `n` is `1`. In more mathematical terms, an integer `n` has a two-sided inverse (making it a unit) if and only if the absolute value of `n` (represented by `Int.natAbs n` in Lean) equals `1`. The two-sided inverse here would be the multiplicative inverse, as the integers form a monoid under multiplication.",{"type":"∀ {n : ℤ}, IsUnit n ↔ n.natAbs = 1","name":"Int.isUnit_iff_natAbs_eq","isProp":true,"docString":"This theorem states that for any integer `n`, `n` is a unit in the monoid of integers if and only if the absolute value of `n` is `1`. In more mathematical terms, an integer `n` has a two-sided inverse (making it a unit) if and only if the absolute value of `n` (represented by `Int.natAbs n` in Lean) equals `1`. The two-sided inverse here would be the multiplicative inverse, as the integers form a monoid under multiplication.","distance":0.75783869761258404462722637617844156920909881591796875}],["The constant function with value `n : ℤ`. ",{"type":"{α : Type u_1} → ℤ → Poly α","name":"Poly.const","isProp":false,"docString":"The constant function with value `n : ℤ`. ","distance":0.76566407427810811991975015189382247626781463623046875}],[" For any rational number 'n', the conversion of 'n' to a rational number yields the same value.",{"type":"∀ (n : ℚ), ↑n = n","name":"Rat.cast_id","isProp":true,"docString":" For any rational number 'n', the conversion of 'n' to a rational number yields the same value.","distance":0.677640478874779628171154399751685559749603271484375}],["This theorem asserts that for any rational number 'n', casting 'n' to a rational number results in 'n' itself. In other words, if a variable is already a rational number, casting it as a rational number doesn't change its value.",{"type":"∀ (n : ℚ), ↑n = n","name":"Rat.cast_id","isProp":true,"docString":"This theorem asserts that for any rational number 'n', casting 'n' to a rational number results in 'n' itself. In other words, if a variable is already a rational number, casting it as a rational number doesn't change its value.","distance":0.78403392255968740176541587061365135014057159423828125}],["The numerator of the rational number is an integer. ",{"type":"ℚ → ℤ","name":"Rat.num","isProp":false,"docString":"The numerator of the rational number is an integer. ","distance":0.77484074972921124224711775241303257644176483154296875}],["If `x^n`, `n > 0`, is integer and is not the `n`-th power of an integer, then\n`x` is irrational. ",{"type":"∀ {x : ℝ} (n : ℕ) (m : ℤ), x ^ n = ↑m → (¬∃ y, x = ↑y) → 0 < n → Irrational x","name":"irrational_nrt_of_notint_nrt","isProp":true,"docString":"If `x^n`, `n > 0`, is integer and is not the `n`-th power of an integer, then\n`x` is irrational. ","distance":0.80341297007325807033595310713280923664569854736328125}],["The limit of `n / (n + x)` is 1, for any constant `x` (valid in `ℝ` or any topological division\nalgebra over `ℝ`, e.g., `ℂ`).\n\nTODO: introduce a typeclass saying that `1 / n` tends to 0 at top, making it possible to get this\nstatement simultaneously on `ℚ`, `ℝ` and `ℂ`. ",{"type":"∀ {\u0000\u0000 : Type u_4} [inst : DivisionRing \u0000\u0000] [inst_1 : TopologicalSpace \u0000\u0000] [inst_2 : CharZero \u0000\u0000] [inst_3 : Algebra ℝ \u0000\u0000]\n  [inst_4 : ContinuousSMul ℝ \u0000\u0000] [inst_5 : TopologicalDivisionRing \u0000\u0000] (x : \u0000\u0000),\n  Filter.Tendsto (fun n => ↑n / (↑n + x)) Filter.atTop (nhds 1)","name":"tendsto_natCast_div_add_atTop","isProp":true,"docString":"The limit of `n / (n + x)` is 1, for any constant `x` (valid in `ℝ` or any topological division\nalgebra over `ℝ`, e.g., `ℂ`).\n\nTODO: introduce a typeclass saying that `1 / n` tends to 0 at top, making it possible to get this\nstatement simultaneously on `ℚ`, `ℝ` and `ℂ`. ","distance":0.804289145727034249233611262752674520015716552734375}],["If `n` is a nonzero natural number and `p ≠ 1`, then there are natural numbers `e`\nand `n'` such that `n'` is not divisible by `p` and `n = p^e * n'`. ",{"type":"∀ {n : ℕ}, n ≠ 0 → ∀ (p : ℕ), p ≠ 1 → ∃ e n', ¬p ∣ n' ∧ n = p ^ e * n'","name":"Nat.exists_eq_pow_mul_and_not_dvd","isProp":true,"docString":"If `n` is a nonzero natural number and `p ≠ 1`, then there are natural numbers `e`\nand `n'` such that `n'` is not divisible by `p` and `n = p^e * n'`. ","distance":0.81021061599991750501459364386391825973987579345703125}],["Define a (dependent) function or prove `∀ r : ℚ, p r` by dealing with rational\nnumbers of the form `n /. d` with `d ≠ 0`. ",{"type":"{C : ℚ → Sort u} → (a : ℚ) → ((n : ℤ) → (d : ℕ) → d ≠ 0 → C (Rat.divInt n ↑d)) → C a","name":"Rat.numDenCasesOn'","isProp":false,"docString":"Define a (dependent) function or prove `∀ r : ℚ, p r` by dealing with rational\nnumbers of the form `n /. d` with `d ≠ 0`. ","distance":0.82672216584506752479200031302752904593944549560546875}],["There are exactly `⌊N/n⌋` positive multiples of `n` that are `≤ N`.\nSee `Nat.card_multiples` for a \"shifted-by-one\" version. ",{"type":"∀ (N n : ℕ), (Finset.filter (fun k => k ≠ 0 ∧ n ∣ k) (Finset.range N.succ)).card = N / n","name":"Nat.card_multiples'","isProp":true,"docString":"There are exactly `⌊N/n⌋` positive multiples of `n` that are `≤ N`.\nSee `Nat.card_multiples` for a \"shifted-by-one\" version. ","distance":0.82800032821755153999987442148267291486263275146484375}],["A single variable `n` is represented by a sum with coefficient `1` and monomial `n`. ",{"type":"ℕ → Linarith.Sum","name":"Linarith.var","isProp":false,"docString":"A single variable `n` is represented by a sum with coefficient `1` and monomial `n`. ","distance":0.8297564894831988002721345765166915953159332275390625}],["Define a (dependent) function or prove `∀ r : ℚ, p r` by dealing with nonnegative rational\nnumbers of the form `n / d` with `d ≠ 0` and `n`, `d` coprime. ",{"type":"{C : ℚ≥0 → Sort u} → (q : ℚ≥0) → ((n d : ℕ) → d ≠ 0 → n.Coprime d → C (NNRat.divNat n d)) → C q","name":"NNRat.numDenCasesOn","isProp":false,"docString":"Define a (dependent) function or prove `∀ r : ℚ, p r` by dealing with nonnegative rational\nnumbers of the form `n / d` with `d ≠ 0` and `n`, `d` coprime. ","distance":0.8367699897635405559270793673931621015071868896484375}],["The denominator of the rational number is a natural number. ",{"type":"ℚ → ℕ","name":"Rat.den","isProp":false,"docString":"The denominator of the rational number is a natural number. ","distance":0.83944866807581697276674503882532007992267608642578125}],["For `n ≠ 1`, `(n-1)!` is congruent to `-1` modulo `n` only if n is prime. ",{"type":"∀ {n : ℕ}, ↑(n - 1).factorial = -1 → n ≠ 1 → Nat.Prime n","name":"Nat.prime_of_fac_equiv_neg_one","isProp":true,"docString":"For `n ≠ 1`, `(n-1)!` is congruent to `-1` modulo `n` only if n is prime. ","distance":0.84154759530686396029608431490487419068813323974609375}],["If the integer `n` is a sum of two squares of coprime integers,\nthen `-1` is a square modulo `n`. ",{"type":"∀ {n x y : ℤ}, n = x ^ 2 + y ^ 2 → IsCoprime x y → IsSquare (-1)","name":"ZMod.isSquare_neg_one_of_eq_sq_add_sq_of_isCoprime","isProp":true,"docString":"If the integer `n` is a sum of two squares of coprime integers,\nthen `-1` is a square modulo `n`. ","distance":0.84190029772348629055755964145646430552005767822265625}],["Define a (dependent) function or prove `∀ r : ℚ, p r` by dealing with rational\nnumbers of the form `n /. d` with `0 < d` and coprime `n`, `d`. ",{"type":"{C : ℚ → Sort u} → (a : ℚ) → ((n : ℤ) → (d : ℕ) → 0 < d → n.natAbs.Coprime d → C (Rat.divInt n ↑d)) → C a","name":"Rat.numDenCasesOn","isProp":false,"docString":"Define a (dependent) function or prove `∀ r : ℚ, p r` by dealing with rational\nnumbers of the form `n /. d` with `0 < d` and coprime `n`, `d`. ","distance":0.84234566612772898697159007497248239815235137939453125}],["If `n % 4 = 1`, then `(-1)^(n/2) = 1`. ",{"type":"∀ {n : ℕ}, n % 4 = 1 → (-1) ^ (n / 2) = 1","name":"ZMod.neg_one_pow_div_two_of_one_mod_four","isProp":true,"docString":"If `n % 4 = 1`, then `(-1)^(n/2) = 1`. ","distance":0.84711371109981736804428464893135242164134979248046875}],["`n : ℕ` is a _weird_ number if and only if it is abundant but not pseudoperfect. ",{"type":"ℕ → Prop","name":"Nat.Weird","isProp":false,"docString":"`n : ℕ` is a _weird_ number if and only if it is abundant but not pseudoperfect. ","distance":0.85316133278734562761513871009810827672481536865234375}],["Given `e`, a term with rational division, produces a natural number `n` and a proof of `n*e = e'`,\nwhere `e'` has no division. Assumes \"well-behaved\" division.\n",{"type":"Lean.Expr → Lean.MetaM (ℕ × Lean.Expr)","name":"CancelDenoms.derive","isProp":false,"docString":"Given `e`, a term with rational division, produces a natural number `n` and a proof of `n*e = e'`,\nwhere `e'` has no division. Assumes \"well-behaved\" division.\n","distance":0.85408513538172192713915364947752095758914947509765625}],["**Denumerability of the Rational Numbers** ",{"type":"Denumerable ℚ","name":"Rat.instDenumerable","isProp":false,"docString":"**Denumerability of the Rational Numbers** ","distance":0.858236972568245715109469529124908149242401123046875}],["If `n % 4 = 3`, then `(-1)^(n/2) = -1`. ",{"type":"∀ {n : ℕ}, n % 4 = 3 → (-1) ^ (n / 2) = -1","name":"ZMod.neg_one_pow_div_two_of_three_mod_four","isProp":true,"docString":"If `n % 4 = 3`, then `(-1)^(n/2) = -1`. ","distance":0.8645269953717391597791674939799122512340545654296875}],["If `x^n = m` is an integer and `n` does not divide the `multiplicity p m`, then `x`\nis irrational. ",{"type":"∀ {x : ℝ} (n : ℕ) {m : ℤ},\n  m ≠ 0 → ∀ (p : ℕ) [hp : Fact (Nat.Prime p)], x ^ n = ↑m → multiplicity (↑p) m % n ≠ 0 → Irrational x","name":"irrational_nrt_of_n_not_dvd_multiplicity","isProp":true,"docString":"If `x^n = m` is an integer and `n` does not divide the `multiplicity p m`, then `x`\nis irrational. ","distance":0.866367480899985498155047025647945702075958251953125}]]