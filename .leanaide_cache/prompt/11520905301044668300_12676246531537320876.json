[["The action of the original normed_field on `RestrictScalars ùïú ùïú' E`.\nThis is not an instance as it would be contrary to the purpose of `RestrictScalars`.\n",{"type":"{ùïú : Type u_8} ‚Üí\n  {ùïú' : Type u_9} ‚Üí\n    {E : Type u_10} ‚Üí\n      [inst : NormedField ùïú'] ‚Üí\n        [inst_1 : SeminormedAddCommGroup E] ‚Üí [I : NormedSpace ùïú' E] ‚Üí NormedSpace ùïú' (RestrictScalars ùïú ùïú' E)","name":"Module.RestrictScalars.normedSpaceOrig","isProp":false,"docString":"The action of the original normed_field on `RestrictScalars ùïú ùïú' E`.\nThis is not an instance as it would be contrary to the purpose of `RestrictScalars`.\n","distance":1.939765831119686811945257431943900883197784423828125}],[" For any type `Œ±` with a linear order and any `b` in `Œ±`, the `Set.projIic` function maps elements in the left-infinite right-closed interval `(-‚àû, b]` to themselves.",{"type":"‚àÄ {Œ± : Type u_1} [inst : LinearOrder Œ±] {b : Œ±} (x : ‚Üë(Set.Iic b)), Set.projIic b ‚Üëx = x","name":"Set.projIic_coe","isProp":true,"docString":" For any type `Œ±` with a linear order and any `b` in `Œ±`, the `Set.projIic` function maps elements in the left-infinite right-closed interval `(-‚àû, b]` to themselves.","distance":1.9665128654919581396853800470125861465930938720703125}],["This theorem, `RatFunc.denom_zero`, states that for any type `K`, which is a field, the denominator of the zero rational function (`RatFunc 0`) is equal to `1`. In other words, in any field, the denominator of the rational function representing zero is normalized to be the monic polynomial `1`.",{"type":"‚àÄ {K : Type u} [inst : Field K], RatFunc.denom 0 = 1","name":"RatFunc.denom_zero","isProp":true,"docString":"This theorem, `RatFunc.denom_zero`, states that for any type `K`, which is a field, the denominator of the zero rational function (`RatFunc 0`) is equal to `1`. In other words, in any field, the denominator of the rational function representing zero is normalized to be the monic polynomial `1`.","distance":1.953884044002795139505224142340011894702911376953125}],["Converts a `ZNum` to a `PosNum`, mapping all out of range values to `1`. ",{"type":"ZNum ‚Üí PosNum","name":"PosNum.ofZNum","isProp":false,"docString":"Converts a `ZNum` to a `PosNum`, mapping all out of range values to `1`. ","distance":1.9452447875769303120563336051418446004390716552734375}],[" For all natural numbers `n`, converting `n` to another type and then back to a natural number results in the original natural number `n`.",{"type":"‚àÄ (n : ‚Ñï), ‚Üën = ‚Üën","name":"Nat.cast_withBot","isProp":true,"docString":" For all natural numbers `n`, converting `n` to another type and then back to a natural number results in the original natural number `n`.","distance":1.9685289724805328237522417111904360353946685791015625}],["This theorem, `MeasureTheory.integral_divergence_of_hasFDerivWithinAt_off_countable_aux‚ÇÇ`, is an auxiliary part of a more extensive theorem in Measure Theory about the divergence of an integral when the function `f` has a derivative `f'` at points off a countable set `s` within a box `I` in a multidimensional real space. \n\nIt says that for any `n`-dimensional box `I` and a function `f` that maps a set of `n+1` real numbers to `n+1` vectors in a complete normed additive commutative group `E`, and its derivative `f'`, if `f` is continuous on the closed box `I` and for any point `x` in the open box but not in the set `s`, `f` has derivative `f'` at point `x`, then, given the integral of the sum of the application of `f'` at every point `x` to the function `Pi.single i 1` for every `i` in the universal finite set is finite on the closed box `I`, the integral over the closed box `I` of this sum equals the sum over each `i` in the universal finite set of the difference between the integrals of the function `f` applied to the function `i.insertNth (I.upper i) x` at point `i` and the function `f` applied to the function `i.insertNth (I.lower i) x` at point `i`, both integrals over a `n`-dimensional closed box that corresponds to the face `i` of the `n+1`-dimensional box `I`. In simple terms, it provides an expression for the divergence of the integral of a function in terms of the integrals over the faces of the box. \n\nThis theorem is an intermediate step in proving a more complex statement about the divergence of integrals of functions with derivatives at certain points in Measure Theory, and it drops the assumption of differentiability on the boundary of the box compared to similar previous theorems.",{"type":"‚àÄ {E : Type u} [inst : NormedAddCommGroup E] [inst_1 : NormedSpace ‚Ñù E] [inst_2 : CompleteSpace E] {n : ‚Ñï}\n  (I : BoxIntegral.Box (Fin (n + 1))) (f : (Fin (n + 1) ‚Üí ‚Ñù) ‚Üí Fin (n + 1) ‚Üí E)\n  (f' : (Fin (n + 1) ‚Üí ‚Ñù) ‚Üí (Fin (n + 1) ‚Üí ‚Ñù) ‚ÜíL[‚Ñù] Fin (n + 1) ‚Üí E) (s : Set (Fin (n + 1) ‚Üí ‚Ñù)),\n  s.Countable ‚Üí\n    ContinuousOn f (BoxIntegral.Box.Icc I) ‚Üí\n      (‚àÄ x ‚àà BoxIntegral.Box.Ioo I \\ s, HasFDerivAt f (f' x) x) ‚Üí\n        MeasureTheory.IntegrableOn (fun x => Finset.univ.sum fun i => (f' x) (Pi.single i 1) i) (BoxIntegral.Box.Icc I)\n            MeasureTheory.volume ‚Üí\n          (‚à´ (x : Fin (n + 1) ‚Üí ‚Ñù) in BoxIntegral.Box.Icc I, Finset.univ.sum fun i => (f' x) (Pi.single i 1) i) =\n            Finset.univ.sum fun i =>\n              (‚à´ (x : Fin n ‚Üí ‚Ñù) in BoxIntegral.Box.Icc (I.face i), f (i.insertNth (I.upper i) x) i) -\n                ‚à´ (x : Fin n ‚Üí ‚Ñù) in BoxIntegral.Box.Icc (I.face i), f (i.insertNth (I.lower i) x) i","name":"MeasureTheory.integral_divergence_of_hasFDerivWithinAt_off_countable_aux‚ÇÇ","isProp":true,"docString":"This theorem, `MeasureTheory.integral_divergence_of_hasFDerivWithinAt_off_countable_aux‚ÇÇ`, is an auxiliary part of a more extensive theorem in Measure Theory about the divergence of an integral when the function `f` has a derivative `f'` at points off a countable set `s` within a box `I` in a multidimensional real space. \n\nIt says that for any `n`-dimensional box `I` and a function `f` that maps a set of `n+1` real numbers to `n+1` vectors in a complete normed additive commutative group `E`, and its derivative `f'`, if `f` is continuous on the closed box `I` and for any point `x` in the open box but not in the set `s`, `f` has derivative `f'` at point `x`, then, given the integral of the sum of the application of `f'` at every point `x` to the function `Pi.single i 1` for every `i` in the universal finite set is finite on the closed box `I`, the integral over the closed box `I` of this sum equals the sum over each `i` in the universal finite set of the difference between the integrals of the function `f` applied to the function `i.insertNth (I.upper i) x` at point `i` and the function `f` applied to the function `i.insertNth (I.lower i) x` at point `i`, both integrals over a `n`-dimensional closed box that corresponds to the face `i` of the `n+1`-dimensional box `I`. In simple terms, it provides an expression for the divergence of the integral of a function in terms of the integrals over the faces of the box. \n\nThis theorem is an intermediate step in proving a more complex statement about the divergence of integrals of functions with derivatives at certain points in Measure Theory, and it drops the assumption of differentiability on the boundary of the box compared to similar previous theorems.","distance":1.9582098649242720700414110979181714355945587158203125}],["Restrict the codomain of a principal segment ",{"type":"{Œ± : Type u_1} ‚Üí\n  {Œ≤ : Type u_2} ‚Üí\n    {r : Œ± ‚Üí Œ± ‚Üí Prop} ‚Üí\n      {s : Œ≤ ‚Üí Œ≤ ‚Üí Prop} ‚Üí\n        (p : Set Œ≤) ‚Üí (f : r ‚â∫i s) ‚Üí (‚àÄ (a : Œ±), f.toRelEmbedding a ‚àà p) ‚Üí f.top ‚àà p ‚Üí r ‚â∫i Subrel s p","name":"PrincipalSeg.codRestrict","isProp":false,"docString":"Restrict the codomain of a principal segment ","distance":1.94936074415785132174505633884109556674957275390625}],["Embedding of a subtype into the ambient type as an `OrderEmbedding`. ",{"type":"{Œ± : Type u_2} ‚Üí [inst : Preorder Œ±] ‚Üí (p : Œ± ‚Üí Prop) ‚Üí Subtype p ‚Ü™o Œ±","name":"OrderEmbedding.subtype","isProp":false,"docString":"Embedding of a subtype into the ambient type as an `OrderEmbedding`. ","distance":1.951833185527893643751440322375856339931488037109375}],["`WithInitial.star` is initial. ",{"type":"{C : Type u} ‚Üí\n  [inst : CategoryTheory.Category.{v, u} C] ‚Üí CategoryTheory.Limits.IsInitial CategoryTheory.WithInitial.star","name":"CategoryTheory.WithInitial.starInitial","isProp":false,"docString":"`WithInitial.star` is initial. ","distance":1.95184542609737388119128809194080531597137451171875}],["Restrict the codomain of an initial segment ",{"type":"{Œ± : Type u_1} ‚Üí\n  {Œ≤ : Type u_2} ‚Üí\n    {r : Œ± ‚Üí Œ± ‚Üí Prop} ‚Üí {s : Œ≤ ‚Üí Œ≤ ‚Üí Prop} ‚Üí (p : Set Œ≤) ‚Üí (f : r ‚âºi s) ‚Üí (‚àÄ (a : Œ±), f a ‚àà p) ‚Üí r ‚âºi Subrel s p","name":"InitialSeg.codRestrict","isProp":false,"docString":"Restrict the codomain of an initial segment ","distance":1.9528441539824055173113492855918593704700469970703125}],["If we dilate a convex set about a point in its interior by a scale `t > 1`, the interior of\nthe result includes the closure of the original set.\n\nTODO Generalise this from convex sets to sets that are balanced / star-shaped about `x`. ",{"type":"‚àÄ {E : Type u_3} [inst : AddCommGroup E] [inst_1 : Module ‚Ñù E] [inst_2 : TopologicalSpace E]\n  [inst_3 : TopologicalAddGroup E] [inst_4 : ContinuousSMul ‚Ñù E] {s : Set E},\n  Convex ‚Ñù s ‚Üí ‚àÄ {x : E}, x ‚àà interior s ‚Üí ‚àÄ (t : ‚Ñù), 1 < t ‚Üí closure s ‚äÜ interior (‚áë(AffineMap.homothety x t) '' s)","name":"Convex.closure_subset_interior_image_homothety_of_one_lt","isProp":true,"docString":"If we dilate a convex set about a point in its interior by a scale `t > 1`, the interior of\nthe result includes the closure of the original set.\n\nTODO Generalise this from convex sets to sets that are balanced / star-shaped about `x`. ","distance":1.953665855018373864737668554880656301975250244140625}],["A \"proxy type\" equivalent to `Affine.Simplex.PointsWithCircumcenterIndex` that is constructed from `Unit`, `PLift`, `Sigma`, `Empty`, and `Sum`. See `Affine.Simplex.PointsWithCircumcenterIndex.proxyTypeEquiv` for the equivalence. (Generated by the `proxy_equiv%` elaborator.)",{"type":"‚Ñï ‚Üí Type","name":"Affine.Simplex.PointsWithCircumcenterIndex.proxyType","isProp":false,"docString":"A \"proxy type\" equivalent to `Affine.Simplex.PointsWithCircumcenterIndex` that is constructed from `Unit`, `PLift`, `Sigma`, `Empty`, and `Sum`. See `Affine.Simplex.PointsWithCircumcenterIndex.proxyTypeEquiv` for the equivalence. (Generated by the `proxy_equiv%` elaborator.)","distance":1.9540086123254527539216951481648720800876617431640625}],["A variant of `IsUnifLocDoublingMeasure.doublingConstant` which allows for scaling the\nradius by values other than `2`. ",{"type":"{Œ± : Type u_1} ‚Üí\n  [inst : MetricSpace Œ±] ‚Üí\n    [inst_1 : MeasurableSpace Œ±] ‚Üí (Œº : MeasureTheory.Measure Œ±) ‚Üí [inst : IsUnifLocDoublingMeasure Œº] ‚Üí ‚Ñù ‚Üí NNReal","name":"IsUnifLocDoublingMeasure.scalingConstantOf","isProp":false,"docString":"A variant of `IsUnifLocDoublingMeasure.doublingConstant` which allows for scaling the\nradius by values other than `2`. ","distance":1.954769163093440287326529869460500776767730712890625}],["A \"proxy type\" equivalent to `Symbol` that is constructed from `Unit`, `PLift`, `Sigma`, `Empty`, and `Sum`. See `Symbol.proxyTypeEquiv` for the equivalence. (Generated by the `proxy_equiv%` elaborator.)",{"type":"Type u_1 ‚Üí Type u_2 ‚Üí Type (max u_1 u_2)","name":"Symbol.proxyType","isProp":false,"docString":"A \"proxy type\" equivalent to `Symbol` that is constructed from `Unit`, `PLift`, `Sigma`, `Empty`, and `Sum`. See `Symbol.proxyTypeEquiv` for the equivalence. (Generated by the `proxy_equiv%` elaborator.)","distance":1.9550971398279257673635811443091370165348052978515625}],["Norm constructed from an `InnerProductSpace.Core` structure, defined to be the square root\nof the scalar product. ",{"type":"{ùïú : Type u_1} ‚Üí\n  {F : Type u_3} ‚Üí\n    [inst : IsROrC ùïú] ‚Üí [inst_1 : AddCommGroup F] ‚Üí [inst_2 : Module ùïú F] ‚Üí [c : InnerProductSpace.Core ùïú F] ‚Üí Norm F","name":"InnerProductSpace.Core.toNorm","isProp":false,"docString":"Norm constructed from an `InnerProductSpace.Core` structure, defined to be the square root\nof the scalar product. ","distance":1.95541710825617887081762091838754713535308837890625}],["The class group of principal ideal domain is finite (in fact a singleton).\n\nSee `ClassGroup.fintypeOfAdmissibleOfFinite` for a finiteness proof that works for rings of integers\nof global fields.\n",{"type":"{R : Type u_1} ‚Üí\n  [inst : CommRing R] ‚Üí [inst_1 : IsDomain R] ‚Üí [inst_2 : IsPrincipalIdealRing R] ‚Üí Fintype (ClassGroup R)","name":"instFintypeClassGroup","isProp":false,"docString":"The class group of principal ideal domain is finite (in fact a singleton).\n\nSee `ClassGroup.fintypeOfAdmissibleOfFinite` for a finiteness proof that works for rings of integers\nof global fields.\n","distance":1.9557076055517448320841822351212613284587860107421875}],["Reverse of `Set.codRestrict_restrict`. ",{"type":"‚àÄ {Œ± : Type u_1} {Œ≤ : Type u_2} {s : Set Œ±} {t : Set Œ≤} {f : Œ± ‚Üí Œ≤} (h : Set.MapsTo f s t),\n  Set.MapsTo.restrict f s t h = Set.codRestrict (Set.restrict s f) t (_ : ‚àÄ (x : ‚Üës), f ‚Üëx ‚àà t)","name":"Set.MapsTo.restrict_eq_codRestrict","isProp":true,"docString":"Reverse of `Set.codRestrict_restrict`. ","distance":1.9557697791388317654082129593007266521453857421875}],["This is a special case of a more general instance that we define in a later file. ",{"type":"‚àÄ {R : Type u} (A : Type v) [inst : CommSemiring R] [inst_1 : Semiring A] [inst_2 : Algebra R A],\n  Subsingleton (R ‚Üí‚Çê[R] A)","name":"Algebra.subsingleton_id","isProp":true,"docString":"This is a special case of a more general instance that we define in a later file. ","distance":1.955876901677083168351600761525332927703857421875}],["If we dilate the interior of a convex set about a point in its interior by a scale `t > 1`,\nthe result includes the closure of the original set.\n\nTODO Generalise this from convex sets to sets that are balanced / star-shaped about `x`. ",{"type":"‚àÄ {E : Type u_3} [inst : AddCommGroup E] [inst_1 : Module ‚Ñù E] [inst_2 : TopologicalSpace E]\n  [inst_3 : TopologicalAddGroup E] [inst_4 : ContinuousSMul ‚Ñù E] {s : Set E},\n  Convex ‚Ñù s ‚Üí ‚àÄ {x : E}, x ‚àà interior s ‚Üí ‚àÄ (t : ‚Ñù), 1 < t ‚Üí closure s ‚äÜ ‚áë(AffineMap.homothety x t) '' interior s","name":"Convex.closure_subset_image_homothety_interior_of_one_lt","isProp":true,"docString":"If we dilate the interior of a convex set about a point in its interior by a scale `t > 1`,\nthe result includes the closure of the original set.\n\nTODO Generalise this from convex sets to sets that are balanced / star-shaped about `x`. ","distance":1.95660413481437789329220322542823851108551025390625}],["`IsSpecial'` is an alternative of `IsSpecial`. ",{"type":"PNat.XgcdType ‚Üí Prop","name":"PNat.XgcdType.IsSpecial'","isProp":false,"docString":"`IsSpecial'` is an alternative of `IsSpecial`. ","distance":1.9574155611301906620980162188061513006687164306640625}],["`Ideal.spanNorm R (I : Ideal S)` is the ideal generated by mapping `Algebra.norm R` over `I`.\n\nSee also `Ideal.relNorm`.\n",{"type":"(R : Type u_1) ‚Üí\n  [inst : CommRing R] ‚Üí {S : Type u_2} ‚Üí [inst_1 : CommRing S] ‚Üí [inst_2 : Algebra R S] ‚Üí Ideal S ‚Üí Ideal R","name":"Ideal.spanNorm","isProp":false,"docString":"`Ideal.spanNorm R (I : Ideal S)` is the ideal generated by mapping `Algebra.norm R` over `I`.\n\nSee also `Ideal.relNorm`.\n","distance":1.957888453028212349948944392963312566280364990234375}],["A variant of `ProjRestrict` with domain of the form `œÄ C K` ",{"type":"{I : Type u} ‚Üí\n  (C : Set (I ‚Üí Bool)) ‚Üí\n    {J K : I ‚Üí Prop} ‚Üí\n      [inst : (i : I) ‚Üí Decidable (J i)] ‚Üí\n        [inst_1 : (i : I) ‚Üí Decidable (K i)] ‚Üí\n          (‚àÄ (i : I), J i ‚Üí K i) ‚Üí ‚Üë(Profinite.NobelingProof.œÄ C K) ‚Üí ‚Üë(Profinite.NobelingProof.œÄ C J)","name":"Profinite.NobelingProof.ProjRestricts","isProp":false,"docString":"A variant of `ProjRestrict` with domain of the form `œÄ C K` ","distance":1.957902760553393850528891562134958803653717041015625}],["The category of types has all colimits.\n\nSee <https://stacks.math.columbia.edu/tag/002U>.\n",{"type":"CategoryTheory.Limits.HasColimitsOfSize.{w', v, max u v, max (u + 1) (v + 1)} TypeMax","name":"CategoryTheory.Limits.Types.hasColimitsOfSize","isProp":true,"docString":"The category of types has all colimits.\n\nSee <https://stacks.math.columbia.edu/tag/002U>.\n","distance":1.9582402009775183859829894572612829506397247314453125}],["`sqrt z` is the square root of an integer `z`. If `z` is positive, it returns the largest\ninteger `r` such that `r * r ‚â§ n`. If it is negative, it returns `0`. For example, `sqrt (-1) = 0`,\n`sqrt 1 = 1`, `sqrt 2 = 1` ",{"type":"‚Ñ§ ‚Üí ‚Ñ§","name":"Int.sqrt","isProp":false,"docString":"`sqrt z` is the square root of an integer `z`. If `z` is positive, it returns the largest\ninteger `r` such that `r * r ‚â§ n`. If it is negative, it returns `0`. For example, `sqrt (-1) = 0`,\n`sqrt 1 = 1`, `sqrt 2 = 1` ","distance":1.9590186197464338757612267727381549775600433349609375}]]