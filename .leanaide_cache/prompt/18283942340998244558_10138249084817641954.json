[["Any infinite set of naturals is denumerable. ",{"type":"(s : Set ℕ) → [inst : DecidablePred fun x => x ∈ s] → [inst : Infinite ↑s] → Denumerable ↑s","name":"Nat.Subtype.denumerable","isProp":false,"docString":"Any infinite set of naturals is denumerable. ","distance":0.218624694591099899554365038056857883930206298828125}],[" Every natural number can be expressed as an even number (the sum of two identical numbers) or an odd number (2 times an integer plus 1).",{"type":"∀ (n : ℕ), Even n ∨ Odd n","name":"Nat.even_or_odd","isProp":true,"docString":" Every natural number can be expressed as an even number (the sum of two identical numbers) or an odd number (2 times an integer plus 1).","distance":0.27326576844743122318703854034538380801677703857421875}],["This theorem states that for every natural number `n`, the number is either even or odd. A natural number `n` is defined as even if it can be expressed as the sum of two identical numbers, and as odd if it can be expressed as `2*k + 1` for some number `k`. Thus, the theorem asserts that any natural number fits one of these two definitions.",{"type":"∀ (n : ℕ), Even n ∨ Odd n","name":"Nat.even_or_odd","isProp":true,"docString":"This theorem states that for every natural number `n`, the number is either even or odd. A natural number `n` is defined as even if it can be expressed as the sum of two identical numbers, and as odd if it can be expressed as `2*k + 1` for some number `k`. Thus, the theorem asserts that any natural number fits one of these two definitions.","distance":0.28733749156989085715707687995745800435543060302734375}],[" A natural number is odd if and only if it is not even, or equivalently, a natural number is odd if and only if it can be expressed as 2 times an integer plus one, while an even number can be expressed as the sum of two integers.",{"value":null,"type":"∀ {n : ℕ}, Odd n ↔ ¬Even n","statement":"theorem Nat.odd_iff_not_even : ∀ {n : ℕ}, Odd n ↔ ¬Even n := by sorry","name":"Nat.odd_iff_not_even","isProp":true,"description":"This theorem states that for every natural number `n`, `n` being odd is equivalent to `n` not being even. In other words, a natural number is odd if and only if it is not even. Here, a number is considered odd if it can be expressed as `2*k + 1` for some `k`, and a number is considered even if it can be written as `r + r` for some `r`.","concise-description":" A natural number is odd if and only if it is not even, or equivalently, a natural number is odd if and only if it can be expressed as 2 times an integer plus one, while an even number can be expressed as the sum of two integers."}],[" A natural number `n` is equivalent to being odd, as defined in Lean 4, if and only if `n` modulo 2 equals 1, which is equivalent to `n` being expressible as `2*k + 1` for some natural number `k`.",{"value":null,"type":"∀ {n : ℕ}, Odd n ↔ n % 2 = 1","statement":"theorem Nat.odd_iff : ∀ {n : ℕ}, Odd n ↔ n % 2 = 1 := by sorry","name":"Nat.odd_iff","isProp":true,"description":"This theorem establishes an equivalence for a natural number `n` to be considered odd in two different ways. According to the theorem, a natural number `n` is odd if and only if `n` modulo 2 equals 1. This is equivalent to the definition of oddness in semirings, where an element `a` of a semiring is considered odd if there exists a `k` such that `a` is equal to `2*k + 1`.\n","concise-description":" A natural number `n` is equivalent to being odd, as defined in Lean 4, if and only if `n` modulo 2 equals 1, which is equivalent to `n` being expressible as `2*k + 1` for some natural number `k`."}],["Every nonzero natural number has a unique prime factorization ",{"type":"Set.InjOn Nat.factorization {x | x ≠ 0}","name":"Nat.factorization_inj","isProp":true,"docString":"Every nonzero natural number has a unique prime factorization ","distance":0.2472170290291228200718620655607082881033420562744140625}],[" For every natural number `n`, the oddness of `n` and `n+1` are opposite.",{"type":"∀ (n : ℕ), n.succ.bodd = !n.bodd","name":"Nat.bodd_succ","isProp":true,"docString":" For every natural number `n`, the oddness of `n` and `n+1` are opposite.","distance":0.27353655698058709777598096479778178036212921142578125}],["The theorem `Nat.Prime.odd_of_ne_two` states that for every natural number `p`, if `p` is a prime number and `p` is not equal to 2, then `p` is an odd number. In other words, any prime number other than 2 is odd. This follows from the definition of odd numbers in a semiring, where a number is considered odd if it can be expressed as `2*k + 1` for some integer `k`, and the definition of prime numbers, where a prime is a natural number greater than 1 that has no divisors other than 1 and itself.",{"type":"∀ {p : ℕ}, p.Prime → p ≠ 2 → Odd p","name":"Nat.Prime.odd_of_ne_two","isProp":true,"docString":"The theorem `Nat.Prime.odd_of_ne_two` states that for every natural number `p`, if `p` is a prime number and `p` is not equal to 2, then `p` is an odd number. In other words, any prime number other than 2 is odd. This follows from the definition of odd numbers in a semiring, where a number is considered odd if it can be expressed as `2*k + 1` for some integer `k`, and the definition of prime numbers, where a prime is a natural number greater than 1 that has no divisors other than 1 and itself.","distance":0.29062248762882181285505112100508995354175567626953125}],[" If an integer `n` is odd, then its absolute value `|n|` is also odd.",{"value":null,"type":"∀ {n : ℤ}, Odd n → Odd n.natAbs","statement":"theorem Odd.natAbs : ∀ {n : ℤ}, Odd n → Odd n.natAbs := by sorry","name":"Odd.natAbs","isProp":true,"docString":"**Alias** of the reverse direction of `Int.natAbs_odd`.","description":"This theorem states that for any integer `n`, if `n` is odd, then the absolute value of `n` is also odd. In other words, if there exists an integer `k` such that `n = 2*k + 1`, then there also exists an integer `k'` such that the absolute value of `n = |n| = 2*k' + 1`. This is an alias of the reverse direction of the theorem `Int.natAbs_odd` in Lean 4.","concise-description":" If an integer `n` is odd, then its absolute value `|n|` is also odd."}],["A sum of numbers is infinite iff one of them is infinite ",{"type":"∀ {ι : Type u_1} {M : Type u_4} [inst : AddCommMonoid M] {s : Finset ι} {f : ι → WithTop M},\n  (Finset.sum s fun i => f i) = ⊤ ↔ ∃ i ∈ s, f i = ⊤","name":"WithTop.sum_eq_top_iff","isProp":true,"docString":"A sum of numbers is infinite iff one of them is infinite ","distance":0.25429916536861363329791174692218191921710968017578125}],[" The set of prime natural numbers is infinite.",{"type":"{p | p.Prime}.Infinite","name":"Nat.infinite_setOf_prime","isProp":true,"docString":" The set of prime natural numbers is infinite.","distance":0.273838918675756215481698063740623183548450469970703125}],["This theorem states that a natural number is odd if and only if its remainder when divided by 4 is either 1 or 3. In other words, it characterizes odd numbers in terms of their residues modulo 4.",{"type":"∀ {n : ℕ}, n % 2 = 1 ↔ n % 4 = 1 ∨ n % 4 = 3","name":"Nat.odd_mod_four_iff","isProp":true,"docString":"This theorem states that a natural number is odd if and only if its remainder when divided by 4 is either 1 or 3. In other words, it characterizes odd numbers in terms of their residues modulo 4.","distance":0.29727650234106872684236577697447501122951507568359375}],[" A natural number is odd if and only if its residue modulo 4 is 1 or 3.",{"value":null,"type":"∀ {n : ℕ}, n % 2 = 1 ↔ n % 4 = 1 ∨ n % 4 = 3","statement":"theorem Nat.odd_mod_four_iff : ∀ {n : ℕ}, n % 2 = 1 ↔ n % 4 = 1 ∨ n % 4 = 3 := by sorry","name":"Nat.odd_mod_four_iff","isProp":true,"docString":"A natural number is odd iff it has residue `1` or `3` mod `4`","description":"This theorem states that a natural number is odd if and only if its remainder when divided by 4 is either 1 or 3. In other words, it characterizes odd numbers in terms of their residues modulo 4.","concise-description":" A natural number is odd if and only if its residue modulo 4 is 1 or 3."}],["Infinitely many natural numbers are equal to `d` mod `n`. ",{"type":"∀ {n : ℕ}, n ≠ 0 → ∀ (d : ℕ), ∃ᶠ (m : ℕ) in Filter.atTop, m ≡ d [MOD n]","name":"Nat.frequently_modEq","isProp":true,"docString":"Infinitely many natural numbers are equal to `d` mod `n`. ","distance":0.26541085950514842206615639952360652387142181396484375}],[" For any natural numbers n and even a, n is odd if and only if the remainder of n divided by a is odd.",{"type":"∀ {n a : ℕ}, Even a → (Odd (n % a) ↔ Odd n)","name":"Odd.mod_even_iff","isProp":true,"docString":" For any natural numbers n and even a, n is odd if and only if the remainder of n divided by a is odd.","distance":0.28414428807396097109716492923325859010219573974609375}],["This theorem states that for all natural numbers `n`, the product of `n` and `n - 1` is an even number. In mathematical terms, this theorem can be written as: \"∀ n ∈ ℕ, n*(n - 1) is even.\" Here, a number is considered even if it can be expressed as twice another number, in this case, n*(n - 1) = 2*r for some `r`.",{"type":"∀ (n : ℕ), Even (n * (n - 1))","name":"Nat.even_mul_self_pred","isProp":true,"docString":"This theorem states that for all natural numbers `n`, the product of `n` and `n - 1` is an even number. In mathematical terms, this theorem can be written as: \"∀ n ∈ ℕ, n*(n - 1) is even.\" Here, a number is considered even if it can be expressed as twice another number, in this case, n*(n - 1) = 2*r for some `r`.","distance":0.2982015452461503901560035956208594143390655517578125}],["The sequence of natural numbers some 0, some 1, ... ",{"type":"Stream'.Seq ℕ","name":"Stream'.Seq.nats","isProp":false,"docString":"The sequence of natural numbers some 0, some 1, ... ","distance":0.267691043063938594048778440992464311420917510986328125}],["The infinite monadic lazy list of natural numbers.",{"type":"{m : Type → Type} → [inst : Monad m] → MLList m ℕ","name":"MLList.range","isProp":false,"docString":"The infinite monadic lazy list of natural numbers.","distance":0.2686937906086497296342940899194218218326568603515625}],["A natural number is odd iff it has residue `1` or `3` mod `4`",{"type":"∀ {n : ℕ}, n % 2 = 1 ↔ n % 4 = 1 ∨ n % 4 = 3","name":"Nat.odd_mod_four_iff","isProp":true,"docString":"A natural number is odd iff it has residue `1` or `3` mod `4`","distance":0.27044903687085775079168570300680585205554962158203125}],["Type of natural numbers with infinity (`⊤`) ",{"type":"Type","name":"PartENat","isProp":false,"docString":"Type of natural numbers with infinity (`⊤`) ","distance":0.2727181727471206240664969300269149243831634521484375}]]