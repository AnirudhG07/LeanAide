[["If `m` and `n` are natural numbers, then the natural number `m^n` is even\nif and only if `m` is even and `n` is positive. ",{"type":"∀ {m n : ℕ}, Even (m ^ n) ↔ Even m ∧ n ≠ 0","name":"Nat.even_pow","isProp":true,"docString":"If `m` and `n` are natural numbers, then the natural number `m^n` is even\nif and only if `m` is even and `n` is positive. ","distance":0.83202598037440711475909438377129845321178436279296875}],[" A natural number `n` is odd if and only if it cannot be expressed as the sum of two equal natural numbers. Equivalently, it is odd if and only if it is of the form `2*k + 1` for some natural number `k`.",{"type":"∀ {α : Sort u_1} {a b : α}, (a = b) = (b = a)","name":"Mathlib.Data.Nat.Parity._auxLemma.4","isProp":true,"docString":" A natural number `n` is odd if and only if it cannot be expressed as the sum of two equal natural numbers. Equivalently, it is odd if and only if it is of the form `2*k + 1` for some natural number `k`.","distance":0.7437377257972237476479904216830618679523468017578125}],["This theorem states that for every natural number `n`, `n` is even if and only if `n` is not odd. Here, a number is defined as being even if it can be expressed as the sum of two identical numbers, and as being odd if it can be represented as `2*k + 1` for some natural number `k`. In other words, a natural number cannot be both even and odd simultaneously.",{"type":"∀ {n : ℕ}, Even n ↔ ¬Odd n","name":"Nat.even_iff_not_odd","isProp":true,"docString":"This theorem states that for every natural number `n`, `n` is even if and only if `n` is not odd. Here, a number is defined as being even if it can be expressed as the sum of two identical numbers, and as being odd if it can be represented as `2*k + 1` for some natural number `k`. In other words, a natural number cannot be both even and odd simultaneously.","distance":0.78743256521303972572667362328502349555492401123046875}],["If `a` is even, then `n` is odd iff `n % a` is odd. ",{"type":"∀ {n a : ℕ}, Even a → (Odd (n % a) ↔ Odd n)","name":"Odd.mod_even_iff","isProp":true,"docString":"If `a` is even, then `n` is odd iff `n % a` is odd. ","distance":0.83284317823562636906586931218043901026248931884765625}],[" A natural number is odd if and only if it is not even, or equivalently, a natural number is odd if and only if it can be expressed as 2 times an integer plus one, while an even number can be expressed as the sum of two integers.",{"type":"∀ {n : ℕ}, Odd n ↔ ¬Even n","name":"Nat.odd_iff_not_even","isProp":true,"docString":" A natural number is odd if and only if it is not even, or equivalently, a natural number is odd if and only if it can be expressed as 2 times an integer plus one, while an even number can be expressed as the sum of two integers.","distance":0.75861846634771012976017345863510854542255401611328125}],["This theorem states that for every natural number `n`, `n` being odd is equivalent to `n` not being even. In other words, a natural number is odd if and only if it is not even. Here, a number is considered odd if it can be expressed as `2*k + 1` for some `k`, and a number is considered even if it can be written as `r + r` for some `r`.",{"type":"∀ {n : ℕ}, Odd n ↔ ¬Even n","name":"Nat.odd_iff_not_even","isProp":true,"docString":"This theorem states that for every natural number `n`, `n` being odd is equivalent to `n` not being even. In other words, a natural number is odd if and only if it is not even. Here, a number is considered odd if it can be expressed as `2*k + 1` for some `k`, and a number is considered even if it can be written as `r + r` for some `r`.","distance":0.79102378414702201325781061314046382904052734375}],["Strong recursion principle on even and odd numbers: if for all `i : ℕ` we can prove `P (2 * i)`\nfrom `P j` for all `j < 2 * i` and we can prove `P (2 * i + 1)` from `P j` for all `j < 2 * i + 1`,\nthen we have `P n` for all `n : ℕ`. ",{"type":"{P : ℕ → Sort u_1} →\n  ((n : ℕ) → ((k : ℕ) → k < 2 * n → P k) → P (2 * n)) →\n    ((n : ℕ) → ((k : ℕ) → k < 2 * n + 1 → P k) → P (2 * n + 1)) → (n : ℕ) → P n","name":"Nat.evenOddStrongRec","isProp":false,"docString":"Strong recursion principle on even and odd numbers: if for all `i : ℕ` we can prove `P (2 * i)`\nfrom `P j` for all `j < 2 * i` and we can prove `P (2 * i + 1)` from `P j` for all `j < 2 * i + 1`,\nthen we have `P n` for all `n : ℕ`. ","distance":0.86171969286070815297051694869878701865673065185546875}],["In `Fin n`, all elements are odd for odd `n`,\notherwise an element is odd iff its `Fin.val` value is odd. ",{"type":"∀ {n : ℕ} [inst : NeZero n] {k : Fin n}, Odd k ↔ Odd n ∨ Odd ↑k","name":"Fin.odd_iff","isProp":true,"docString":"In `Fin n`, all elements are odd for odd `n`,\notherwise an element is odd iff its `Fin.val` value is odd. ","distance":0.88047519203761936967822521182824857532978057861328125}],["If `n` is odd and `a` is even, then `n % a` is odd. ",{"type":"∀ {n a : ℕ}, Odd n → Even a → Odd (n % a)","name":"Odd.mod_even","isProp":true,"docString":"If `n` is odd and `a` is even, then `n % a` is odd. ","distance":0.88280805122293937170496747057768516242504119873046875}],["There exists infinitely many deficient numbers ",{"type":"{n | n.Deficient}.Infinite","name":"Nat.infinite_deficient","isProp":true,"docString":"There exists infinitely many deficient numbers ","distance":0.88593276802163234417974990719812922179698944091796875}],["**Hermite Theorem**. Let `N` be an integer. There are only finitely many number fields\n(in some fixed extension of `ℚ`) of discriminant bounded by `N`. ",{"type":"∀ (A : Type u_2) [inst : Field A] [inst_1 : CharZero A] (N : ℕ), {K | |NumberField.discr ↥↑K| ≤ ↑N}.Finite","name":"NumberField.finite_of_discr_bdd","isProp":true,"docString":"**Hermite Theorem**. Let `N` be an integer. There are only finitely many number fields\n(in some fixed extension of `ℚ`) of discriminant bounded by `N`. ","distance":0.89716946247963236249489682450075633823871612548828125}],["There are exactly `⌊N/n⌋` positive multiples of `n` that are `≤ N`.\nSee `Nat.card_multiples` for a \"shifted-by-one\" version. ",{"type":"∀ (N n : ℕ), (Finset.filter (fun k => k ≠ 0 ∧ n ∣ k) (Finset.range N.succ)).card = N / n","name":"Nat.card_multiples'","isProp":true,"docString":"There are exactly `⌊N/n⌋` positive multiples of `n` that are `≤ N`.\nSee `Nat.card_multiples` for a \"shifted-by-one\" version. ","distance":0.90511218398084014591375989766675047576427459716796875}],["**Bertrand's Postulate**: For any positive natural number, there is a prime which is greater than\nit, but no more than twice as large.\n",{"type":"∀ (n : ℕ), n ≠ 0 → ∃ p, Nat.Prime p ∧ n < p ∧ p ≤ 2 * n","name":"Nat.exists_prime_lt_and_le_two_mul","isProp":true,"docString":"**Bertrand's Postulate**: For any positive natural number, there is a prime which is greater than\nit, but no more than twice as large.\n","distance":0.90720734923756385370552379754371941089630126953125}],["If all the elements of a finset of naturals are less than `n`, then the sum of their powers of\n`m ≥ 2` is less than `m ^ n`. ",{"type":"∀ {m n : ℕ} {s : Finset ℕ}, 2 ≤ m → (∀ k ∈ s, k < n) → ∑ k ∈ s, m ^ k < m ^ n","name":"Nat.geomSum_lt","isProp":true,"docString":"If all the elements of a finset of naturals are less than `n`, then the sum of their powers of\n`m ≥ 2` is less than `m ^ n`. ","distance":0.910743705884863974375775796943344175815582275390625}],["The inequality which contradicts Bertrand's postulate, for large enough `n`.\n",{"type":"∀ {n : ℕ}, 512 ≤ n → n * (2 * n) ^ (2 * n).sqrt * 4 ^ (2 * n / 3) ≤ 4 ^ n","name":"bertrand_main_inequality","isProp":true,"docString":"The inequality which contradicts Bertrand's postulate, for large enough `n`.\n","distance":0.911354242738827036163229422527365386486053466796875}],["If `a` is even, then `n` is even iff `n % a` is even. ",{"type":"∀ {n a : ℕ}, Even a → (Even (n % a) ↔ Even n)","name":"Even.mod_even_iff","isProp":true,"docString":"If `a` is even, then `n` is even iff `n % a` is even. ","distance":0.91204344724050201431708728705416433513164520263671875}],["Any nonzero natural number is the product of an odd part `m` and a power of\ntwo `2 ^ k`. ",{"type":"∀ {n : ℕ}, n ≠ 0 → ∃ k m, Odd m ∧ n = 2 ^ k * m","name":"Nat.exists_eq_two_pow_mul_odd","isProp":true,"docString":"Any nonzero natural number is the product of an odd part `m` and a power of\ntwo `2 ^ k`. ","distance":0.913000674606603279670480333152227103710174560546875}],["`n : ℕ` is a _weird_ number if and only if it is abundant but not pseudoperfect. ",{"type":"ℕ → Prop","name":"Nat.Weird","isProp":false,"docString":"`n : ℕ` is a _weird_ number if and only if it is abundant but not pseudoperfect. ","distance":0.9174612445741419097799962401040829718112945556640625}],["For any element `x` of `M ⊗[R] N`, there exists a finite subset `{ (m_i, n_i) }`\nof `M × N` such that each `n_i` is distinct (we represent it as an element of `N →₀ M`),\nsuch that `x` is equal to the sum of `m_i ⊗ₜ[R] n_i`. ",{"type":"∀ {R : Type u_1} {M : Type u_2} {N : Type u_3} [inst : CommSemiring R] [inst_1 : AddCommMonoid M]\n  [inst_2 : AddCommMonoid N] [inst_3 : Module R M] [inst_4 : Module R N] (x : TensorProduct R M N),\n  ∃ S, x = S.sum fun n m => m ⊗ₜ[R] n","name":"TensorProduct.exists_finsupp_right","isProp":true,"docString":"For any element `x` of `M ⊗[R] N`, there exists a finite subset `{ (m_i, n_i) }`\nof `M × N` such that each `n_i` is distinct (we represent it as an element of `N →₀ M`),\nsuch that `x` is equal to the sum of `m_i ⊗ₜ[R] n_i`. ","distance":0.91974654818807677347791695865453220903873443603515625}],["If `s` is an infinite set of natural numbers and `k > 0`, then `s` contains two elements `m < n`\nthat are equal mod `k`. ",{"type":"∀ {s : Set ℕ}, s.Infinite → ∀ {k : ℕ}, 0 < k → ∃ m ∈ s, ∃ n ∈ s, m < n ∧ m ≡ n [MOD k]","name":"Nat.exists_lt_modEq_of_infinite","isProp":true,"docString":"If `s` is an infinite set of natural numbers and `k > 0`, then `s` contains two elements `m < n`\nthat are equal mod `k`. ","distance":0.92260407852848214105279112118296325206756591796875}],["For any element `x` of `M ⊗[R] N`, there exists a finite subset `{ (m_i, n_i) }`\nof `M × N` such that each `m_i` is distinct (we represent it as an element of `M →₀ N`),\nsuch that `x` is equal to the sum of `m_i ⊗ₜ[R] n_i`. ",{"type":"∀ {R : Type u_1} {M : Type u_2} {N : Type u_3} [inst : CommSemiring R] [inst_1 : AddCommMonoid M]\n  [inst_2 : AddCommMonoid N] [inst_3 : Module R M] [inst_4 : Module R N] (x : TensorProduct R M N),\n  ∃ S, x = S.sum fun m n => m ⊗ₜ[R] n","name":"TensorProduct.exists_finsupp_left","isProp":true,"docString":"For any element `x` of `M ⊗[R] N`, there exists a finite subset `{ (m_i, n_i) }`\nof `M × N` such that each `m_i` is distinct (we represent it as an element of `M →₀ N`),\nsuch that `x` is equal to the sum of `m_i ⊗ₜ[R] n_i`. ","distance":0.92488509836902554894777495064772665500640869140625}],["A natural number is odd iff it has residue `1` or `3` mod `4`",{"type":"∀ {n : ℕ}, n % 2 = 1 ↔ n % 4 = 1 ∨ n % 4 = 3","name":"Nat.odd_mod_four_iff","isProp":true,"docString":"A natural number is odd iff it has residue `1` or `3` mod `4`","distance":0.9343726079095537873087096158997155725955963134765625}],["For any element `x` of `M ⊗[R] N`, there exists a finite subset `{ (m_i, n_i) }`\nof `M × N`, such that `x` is equal to the sum of `m_i ⊗ₜ[R] n_i`. ",{"type":"∀ {R : Type u_1} {M : Type u_2} {N : Type u_3} [inst : CommSemiring R] [inst_1 : AddCommMonoid M]\n  [inst_2 : AddCommMonoid N] [inst_3 : Module R M] [inst_4 : Module R N] (x : TensorProduct R M N),\n  ∃ S, x = ∑ i ∈ S, i.1 ⊗ₜ[R] i.2","name":"TensorProduct.exists_finset","isProp":true,"docString":"For any element `x` of `M ⊗[R] N`, there exists a finite subset `{ (m_i, n_i) }`\nof `M × N`, such that `x` is equal to the sum of `m_i ⊗ₜ[R] n_i`. ","distance":0.9440315513897610255611425600363872945308685302734375}],["To prove Fermat's Last Theorem, it suffices to prove it for odd prime exponents.\n",{"type":"(∀ (p : ℕ), Nat.Prime p → Odd p → FermatLastTheoremFor p) → FermatLastTheorem","name":"FermatLastTheorem.of_odd_primes","isProp":true,"docString":"To prove Fermat's Last Theorem, it suffices to prove it for odd prime exponents.\n","distance":0.94617182023211388042227554251439869403839111328125}]]