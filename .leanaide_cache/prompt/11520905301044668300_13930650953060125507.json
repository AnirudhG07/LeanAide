[["The category of abelian groups is abelian. ",{"type":"CategoryTheory.Abelian AddCommGrp","name":"AddCommGrp.instAbelian","isProp":false,"docString":"The category of abelian groups is abelian. ","distance":0.430449116560627842442698920422117225825786590576171875}],[" If a property holds for every coset representative of an additive subgroup of an abelian group, then it holds for all elements in the quotient group.",{"type":"∀ {α : Type u_1} [inst : AddGroup α] {s : AddSubgroup α} {C : α ⧸ s → Prop} (x : α ⧸ s), (∀ (z : α), C ↑z) → C x","name":"QuotientAddGroup.induction_on","isProp":true,"docString":" If a property holds for every coset representative of an additive subgroup of an abelian group, then it holds for all elements in the quotient group.","distance":0.7845009886268743404258430018671788275241851806640625}],["The theorem `Abelianization.hom_ext` states that for any group `G` and any monoid `A`, if two monoid morphisms `φ` and `ψ` from the abelianization of `G` to `A` are such that their compositions with the canonical projection from `G` to its abelianization are equal, then the two morphisms `φ` and `ψ` themselves are equal. In other words, it provides a criterion for the equality of morphisms from the abelianization of a group to a monoid in terms of their compositions with the canonical projection.",{"type":"∀ {G : Type u} [inst : Group G] {A : Type v} [inst_1 : Monoid A] (φ ψ : Abelianization G →* A),\n  φ.comp Abelianization.of = ψ.comp Abelianization.of → φ = ψ","name":"Abelianization.hom_ext","isProp":true,"docString":"The theorem `Abelianization.hom_ext` states that for any group `G` and any monoid `A`, if two monoid morphisms `φ` and `ψ` from the abelianization of `G` to `A` are such that their compositions with the canonical projection from `G` to its abelianization are equal, then the two morphisms `φ` and `ψ` themselves are equal. In other words, it provides a criterion for the equality of morphisms from the abelianization of a group to a monoid in terms of their compositions with the canonical projection.","distance":0.84051893675247180137688474133028648793697357177734375}],["An Abelian group is equivalent to its own abelianization. ",{"type":"{H : Type u_1} → [inst : CommGroup H] → H ≃* Abelianization H","name":"Abelianization.equivOfComm","isProp":false,"docString":"An Abelian group is equivalent to its own abelianization. ","distance":0.47389555942529704157806236253236420452594757080078125}],[" Every finitely generated abelian group is isomorphic to the direct product of a free abelian group and a finite direct sum of cyclic groups of prime power order.",{"type":"∀ (G : Type u) [inst : AddCommGroup G] [hG : AddGroup.FG G],\n  ∃ n ι x p, ∃ (_ : ∀ (i : ι), (p i).Prime), ∃ e, Nonempty (G ≃+ (Fin n →₀ ℤ) × DirectSum ι fun i => ZMod (p i ^ e i))","name":"AddCommGroup.equiv_free_prod_directSum_zmod","isProp":true,"docString":" Every finitely generated abelian group is isomorphic to the direct product of a free abelian group and a finite direct sum of cyclic groups of prime power order.","distance":0.7849914871744247957252582637011073529720306396484375}],["This theorem states that, for any abelian group (G), the torsion submonoid of G is equal to the torsion subgroup of G when viewed as a submonoid. In other words, the collection of elements of G with finite order, when considered under the operations of the group (which includes inversion), forms a subgroup that coincides with the submonoid formed by considering only the monoid operations (without inversion).",{"type":"∀ (G : Type u_1) [inst : CommGroup G], CommMonoid.torsion G = (CommGroup.torsion G).toSubmonoid","name":"CommGroup.torsion_eq_torsion_submonoid","isProp":true,"docString":"This theorem states that, for any abelian group (G), the torsion submonoid of G is equal to the torsion subgroup of G when viewed as a submonoid. In other words, the collection of elements of G with finite order, when considered under the operations of the group (which includes inversion), forms a subgroup that coincides with the submonoid formed by considering only the monoid operations (without inversion).","distance":0.882885249653708736872204099199734628200531005859375}],["Any group of exponent two is abelian. ",{"type":"{G : Type u} → [inst : Group G] → Monoid.exponent G = 2 → CommGroup G","name":"instCommGroupOfExponentTwo","isProp":false,"docString":"Any group of exponent two is abelian. ","distance":0.48267367260360238834238089111750014126300811767578125}],["Abelian groups are nilpotent ",{"type":"∀ {G : Type u_2} [inst : CommGroup G], Group.IsNilpotent G","name":"CommGroup.isNilpotent","isProp":true,"docString":"Abelian groups are nilpotent ","distance":0.493995184771084450137124122193199582397937774658203125}],["Groups with nilpotency class at most one are abelian ",{"type":"{G : Type u_1} → [inst : Group G] → [inst_1 : Group.IsNilpotent G] → Group.nilpotencyClass G ≤ 1 → CommGroup G","name":"commGroupOfNilpotencyClass","isProp":false,"docString":"Groups with nilpotency class at most one are abelian ","distance":0.569072320520445540381615501246415078639984130859375}],["The free abelian group on a type. ",{"type":"Type u → Type u","name":"FreeAbelianGroup","isProp":false,"docString":"The free abelian group on a type. ","distance":0.60323791382365865576531405167770572006702423095703125}],["Abelian groups have nilpotency class at most one ",{"type":"∀ {G : Type u_2} [inst : CommGroup G], Group.nilpotencyClass G ≤ 1","name":"CommGroup.nilpotencyClass_le_one","isProp":true,"docString":"Abelian groups have nilpotency class at most one ","distance":0.61931384394739052989820038419566117227077484130859375}],["Equivalent groups have equivalent abelianizations ",{"type":"{G : Type u} → [inst : Group G] → {H : Type v} → [inst_1 : Group H] → G ≃* H → Abelianization G ≃* Abelianization H","name":"MulEquiv.abelianizationCongr","isProp":false,"docString":"Equivalent groups have equivalent abelianizations ","distance":0.62932926676818456979134452922153286635875701904296875}],["In the category of abelian groups, every monomorphism is normal. ",{"type":"{X Y : AddCommGrp} → (f : X ⟶ Y) → CategoryTheory.Mono f → CategoryTheory.NormalMono f","name":"AddCommGrp.normalMono","isProp":false,"docString":"In the category of abelian groups, every monomorphism is normal. ","distance":0.62951747998242446602290556256775744259357452392578125}],["In the category of abelian groups, every epimorphism is normal. ",{"type":"{X Y : AddCommGrp} → (f : X ⟶ Y) → CategoryTheory.Epi f → CategoryTheory.NormalEpi f","name":"AddCommGrp.normalEpi","isProp":false,"docString":"In the category of abelian groups, every epimorphism is normal. ","distance":0.6379127933580674980618141489685513079166412353515625}],["Any additive group of exponent two is abelian.",{"type":"{G : Type u} → [inst : AddGroup G] → AddMonoid.exponent G = 2 → AddCommGroup G","name":"instAddCommGroupOfExponentTwo","isProp":false,"docString":"Any additive group of exponent two is abelian.","distance":0.6543662662437841337492727689095772802829742431640625}],["The free condensed abelian group on a finite set. ",{"type":"(R : Type (u + 1)) → [inst : Ring R] → CategoryTheory.Functor FintypeCat (CondensedMod R)","name":"Condensed.finFree","isProp":false,"docString":"The free condensed abelian group on a finite set. ","distance":0.69360779196104316302040615482837893068790435791015625}],["Every abelian category is, in particular, `NonPreadditiveAbelian`. ",{"type":"{C : Type u} →\n  [inst : CategoryTheory.Category.{v, u} C] →\n    [inst_1 : CategoryTheory.Abelian C] → CategoryTheory.NonPreadditiveAbelian C","name":"CategoryTheory.Abelian.nonPreadditiveAbelian","isProp":false,"docString":"Every abelian category is, in particular, `NonPreadditiveAbelian`. ","distance":0.7059328089225107571991202348726801574230194091796875}],["The free-forgetful adjunction for abelian groups.\n",{"type":"AddCommGrp.free ⊣ CategoryTheory.forget AddCommGrp","name":"AddCommGrp.adj","isProp":false,"docString":"The free-forgetful adjunction for abelian groups.\n","distance":0.71696074389498465340153643410303629934787750244140625}],["Isomorphic types have isomorphic free abelian groups. ",{"type":"{α : Type u_1} → {β : Type u_2} → α ≃ β → FreeAbelianGroup α ≃+ FreeAbelianGroup β","name":"FreeAbelianGroup.equivOfEquiv","isProp":false,"docString":"Isomorphic types have isomorphic free abelian groups. ","distance":0.7187244129985332907750716913142241537570953369140625}],["The abelianization of G is the quotient of G by its commutator subgroup. ",{"type":"(G : Type u) → [inst : Group G] → Type u","name":"Abelianization","isProp":false,"docString":"The abelianization of G is the quotient of G by its commutator subgroup. ","distance":0.71947009750124146787442214190377853810787200927734375}],["An abelian Lie algebra with trivial radical is trivial. ",{"type":"∀ (R : Type u_1) (L : Type u_2) [inst : CommRing R] [inst_1 : LieRing L] [inst_2 : LieAlgebra R L]\n  [inst : LieAlgebra.HasTrivialRadical R L] [h : IsLieAbelian L], Subsingleton L","name":"LieAlgebra.subsingleton_of_hasTrivialRadical_lie_abelian","isProp":true,"docString":"An abelian Lie algebra with trivial radical is trivial. ","distance":0.720960176416205467120335015351884067058563232421875}],["The free abelian group on a type with one term is isomorphic to `ℤ`. ",{"type":"(T : Type u_1) → [inst : Unique T] → FreeAbelianGroup T ≃+ ℤ","name":"FreeAbelianGroup.punitEquiv","isProp":false,"docString":"The free abelian group on a type with one term is isomorphic to `ℤ`. ","distance":0.72365238505827089721123002163949422538280487060546875}],["The abelianization functor `Group ⥤ CommGroup` sending a group `G` to its abelianization `Gᵃᵇ`.\n",{"type":"CategoryTheory.Functor Grp CommGrp","name":"Grp.abelianize","isProp":false,"docString":"The abelianization functor `Group ⥤ CommGroup` sending a group `G` to its abelianization `Gᵃᵇ`.\n","distance":0.7324375113207626242228798219002783298492431640625}],["The abelianization-forgetful adjuction from `Group` to `CommGroup`. ",{"type":"Grp.abelianize ⊣ CategoryTheory.forget₂ CommGrp Grp","name":"Grp.abelianizeAdj","isProp":false,"docString":"The abelianization-forgetful adjuction from `Group` to `CommGroup`. ","distance":0.74349219452088899373620733967982232570648193359375}]]