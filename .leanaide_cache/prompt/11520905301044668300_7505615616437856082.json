[["The action of the original normed_field on `RestrictScalars 𝕜 𝕜' E`.\nThis is not an instance as it would be contrary to the purpose of `RestrictScalars`.\n",{"type":"{𝕜 : Type u_8} →\n  {𝕜' : Type u_9} →\n    {E : Type u_10} →\n      [inst : NormedField 𝕜'] →\n        [inst_1 : SeminormedAddCommGroup E] → [I : NormedSpace 𝕜' E] → NormedSpace 𝕜' (RestrictScalars 𝕜 𝕜' E)","name":"Module.RestrictScalars.normedSpaceOrig","isProp":false,"docString":"The action of the original normed_field on `RestrictScalars 𝕜 𝕜' E`.\nThis is not an instance as it would be contrary to the purpose of `RestrictScalars`.\n","distance":1.9409691151306456280423162752413190901279449462890625}],[" For all natural numbers `n`, converting `n` to another type and then back to a natural number results in the original natural number `n`.",{"type":"∀ (n : ℕ), ↑n = ↑n","name":"Nat.cast_withBot","isProp":true,"docString":" For all natural numbers `n`, converting `n` to another type and then back to a natural number results in the original natural number `n`.","distance":1.9707120488604672470245304793934337794780731201171875}],["This theorem, `RatFunc.denom_zero`, states that for any type `K`, which is a field, the denominator of the zero rational function (`RatFunc 0`) is equal to `1`. In other words, in any field, the denominator of the rational function representing zero is normalized to be the monic polynomial `1`.",{"type":"∀ {K : Type u} [inst : Field K], RatFunc.denom 0 = 1","name":"RatFunc.denom_zero","isProp":true,"docString":"This theorem, `RatFunc.denom_zero`, states that for any type `K`, which is a field, the denominator of the zero rational function (`RatFunc 0`) is equal to `1`. In other words, in any field, the denominator of the rational function representing zero is normalized to be the monic polynomial `1`.","distance":1.965753471106925776012985807028599083423614501953125}],["Embedding of a subtype into the ambient type as an `OrderEmbedding`. ",{"type":"{α : Type u_2} → [inst : Preorder α] → (p : α → Prop) → Subtype p ↪o α","name":"OrderEmbedding.subtype","isProp":false,"docString":"Embedding of a subtype into the ambient type as an `OrderEmbedding`. ","distance":1.9535862264899230833492538295104168355464935302734375}],[" For complex numbers `u` with positive real part and natural number `n`, the Beta function `β(u, n+1)` equals `fact(n) / prod(i in range (n+1), u + i)`.",{"type":"∀ {u : ℂ}, 0 < u.re → ∀ (n : ℕ), u.betaIntegral (↑n + 1) = ↑n.factorial / (Finset.range (n + 1)).prod fun j => u + ↑j","name":"Complex.betaIntegral_eval_nat_add_one_right","isProp":true,"docString":" For complex numbers `u` with positive real part and natural number `n`, the Beta function `β(u, n+1)` equals `fact(n) / prod(i in range (n+1), u + i)`.","distance":1.9821132574761957112485788456979207694530487060546875}],["This is the Infinite Pigeonhole Principle. Given two types `β` and `α`, and a function `f` from `β` to `α`, if the cardinality of `β` is greater than or equal to `ℵ₀` (the smallest infinite cardinal, equivalent to the cardinality of natural numbers), and the cardinality of `α` is less than the cofinality of the ordinal corresponding to the cardinality of `β`, then there exists an element `a` of `α` such that the cardinality of the preimage of `a` under `f` is equal to the cardinality of `β`. Essentially, if we have infinitely many \"pigeons\" and less \"holes\", at least one hole must contain infinitely many pigeons.",{"type":"∀ {β α : Type u} (f : β → α),\n  Cardinal.aleph0 ≤ Cardinal.mk β →\n    Cardinal.mk α < (Cardinal.mk β).ord.cof → ∃ a, Cardinal.mk ↑(f ⁻¹' {a}) = Cardinal.mk β","name":"Ordinal.infinite_pigeonhole","isProp":true,"docString":"This is the Infinite Pigeonhole Principle. Given two types `β` and `α`, and a function `f` from `β` to `α`, if the cardinality of `β` is greater than or equal to `ℵ₀` (the smallest infinite cardinal, equivalent to the cardinality of natural numbers), and the cardinality of `α` is less than the cofinality of the ordinal corresponding to the cardinality of `β`, then there exists an element `a` of `α` such that the cardinality of the preimage of `a` under `f` is equal to the cardinality of `β`. Essentially, if we have infinitely many \"pigeons\" and less \"holes\", at least one hole must contain infinitely many pigeons.","distance":1.9754561713510996323606150326668284833431243896484375}],["The representative of the cardinal of a type is equivalent to the original type. ",{"type":"{α : Type v} → Quotient.out (Cardinal.mk α) ≃ α","name":"Cardinal.outMkEquiv","isProp":false,"docString":"The representative of the cardinal of a type is equivalent to the original type. ","distance":1.9568453657753239749439444494782947003841400146484375}],["If we dilate a convex set about a point in its interior by a scale `t > 1`, the interior of\nthe result includes the closure of the original set.\n\nTODO Generalise this from convex sets to sets that are balanced / star-shaped about `x`. ",{"type":"∀ {E : Type u_3} [inst : AddCommGroup E] [inst_1 : Module ℝ E] [inst_2 : TopologicalSpace E]\n  [inst_3 : TopologicalAddGroup E] [inst_4 : ContinuousSMul ℝ E] {s : Set E},\n  Convex ℝ s → ∀ {x : E}, x ∈ interior s → ∀ (t : ℝ), 1 < t → closure s ⊆ interior (⇑(AffineMap.homothety x t) '' s)","name":"Convex.closure_subset_interior_image_homothety_of_one_lt","isProp":true,"docString":"If we dilate a convex set about a point in its interior by a scale `t > 1`, the interior of\nthe result includes the closure of the original set.\n\nTODO Generalise this from convex sets to sets that are balanced / star-shaped about `x`. ","distance":1.958104826872615777944020010181702673435211181640625}],["Converts a `ZNum` to a `PosNum`, mapping all out of range values to `1`. ",{"type":"ZNum → PosNum","name":"PosNum.ofZNum","isProp":false,"docString":"Converts a `ZNum` to a `PosNum`, mapping all out of range values to `1`. ","distance":1.9584082087062795185516961282701231539249420166015625}],["A \"proxy type\" equivalent to `Affine.Simplex.PointsWithCircumcenterIndex` that is constructed from `Unit`, `PLift`, `Sigma`, `Empty`, and `Sum`. See `Affine.Simplex.PointsWithCircumcenterIndex.proxyTypeEquiv` for the equivalence. (Generated by the `proxy_equiv%` elaborator.)",{"type":"ℕ → Type","name":"Affine.Simplex.PointsWithCircumcenterIndex.proxyType","isProp":false,"docString":"A \"proxy type\" equivalent to `Affine.Simplex.PointsWithCircumcenterIndex` that is constructed from `Unit`, `PLift`, `Sigma`, `Empty`, and `Sum`. See `Affine.Simplex.PointsWithCircumcenterIndex.proxyTypeEquiv` for the equivalence. (Generated by the `proxy_equiv%` elaborator.)","distance":1.9589317476317071875513420309289358556270599365234375}],["This is a special case of a more general instance that we define in a later file. ",{"type":"∀ {R : Type u} (A : Type v) [inst : CommSemiring R] [inst_1 : Semiring A] [inst_2 : Algebra R A],\n  Subsingleton (R →ₐ[R] A)","name":"Algebra.subsingleton_id","isProp":true,"docString":"This is a special case of a more general instance that we define in a later file. ","distance":1.95931503310229260250707739032804965972900390625}],["Restrict the codomain of a principal segment ",{"type":"{α : Type u_1} →\n  {β : Type u_2} →\n    {r : α → α → Prop} →\n      {s : β → β → Prop} →\n        (p : Set β) → (f : r ≺i s) → (∀ (a : α), f.toRelEmbedding a ∈ p) → f.top ∈ p → r ≺i Subrel s p","name":"PrincipalSeg.codRestrict","isProp":false,"docString":"Restrict the codomain of a principal segment ","distance":1.9596796517771633006077536265365779399871826171875}],["`IsSpecial'` is an alternative of `IsSpecial`. ",{"type":"PNat.XgcdType → Prop","name":"PNat.XgcdType.IsSpecial'","isProp":false,"docString":"`IsSpecial'` is an alternative of `IsSpecial`. ","distance":1.959793901200658439165636082179844379425048828125}],["If we dilate the interior of a convex set about a point in its interior by a scale `t > 1`,\nthe result includes the closure of the original set.\n\nTODO Generalise this from convex sets to sets that are balanced / star-shaped about `x`. ",{"type":"∀ {E : Type u_3} [inst : AddCommGroup E] [inst_1 : Module ℝ E] [inst_2 : TopologicalSpace E]\n  [inst_3 : TopologicalAddGroup E] [inst_4 : ContinuousSMul ℝ E] {s : Set E},\n  Convex ℝ s → ∀ {x : E}, x ∈ interior s → ∀ (t : ℝ), 1 < t → closure s ⊆ ⇑(AffineMap.homothety x t) '' interior s","name":"Convex.closure_subset_image_homothety_interior_of_one_lt","isProp":true,"docString":"If we dilate the interior of a convex set about a point in its interior by a scale `t > 1`,\nthe result includes the closure of the original set.\n\nTODO Generalise this from convex sets to sets that are balanced / star-shaped about `x`. ","distance":1.9606725820652075586991713862516917288303375244140625}],["A \"proxy type\" equivalent to `Symbol` that is constructed from `Unit`, `PLift`, `Sigma`, `Empty`, and `Sum`. See `Symbol.proxyTypeEquiv` for the equivalence. (Generated by the `proxy_equiv%` elaborator.)",{"type":"Type u_1 → Type u_2 → Type (max u_1 u_2)","name":"Symbol.proxyType","isProp":false,"docString":"A \"proxy type\" equivalent to `Symbol` that is constructed from `Unit`, `PLift`, `Sigma`, `Empty`, and `Sum`. See `Symbol.proxyTypeEquiv` for the equivalence. (Generated by the `proxy_equiv%` elaborator.)","distance":1.9608302129730492691095378177124075591564178466796875}],["`sqrt z` is the square root of an integer `z`. If `z` is positive, it returns the largest\ninteger `r` such that `r * r ≤ n`. If it is negative, it returns `0`. For example, `sqrt (-1) = 0`,\n`sqrt 1 = 1`, `sqrt 2 = 1` ",{"type":"ℤ → ℤ","name":"Int.sqrt","isProp":false,"docString":"`sqrt z` is the square root of an integer `z`. If `z` is positive, it returns the largest\ninteger `r` such that `r * r ≤ n`. If it is negative, it returns `0`. For example, `sqrt (-1) = 0`,\n`sqrt 1 = 1`, `sqrt 2 = 1` ","distance":1.9612170952479914820543172027100808918476104736328125}],["Reverse of `Set.codRestrict_restrict`. ",{"type":"∀ {α : Type u_1} {β : Type u_2} {s : Set α} {t : Set β} {f : α → β} (h : Set.MapsTo f s t),\n  Set.MapsTo.restrict f s t h = Set.codRestrict (Set.restrict s f) t (_ : ∀ (x : ↑s), f ↑x ∈ t)","name":"Set.MapsTo.restrict_eq_codRestrict","isProp":true,"docString":"Reverse of `Set.codRestrict_restrict`. ","distance":1.9612335185402363091355937285698018968105316162109375}],["This is the `norm_num` plug-in that evaluates Legendre symbols. ",{"type":"Mathlib.Meta.NormNum.NormNumExt","name":"Tactic.NormNum.evalLegendreSym","isProp":false,"docString":"This is the `norm_num` plug-in that evaluates Legendre symbols. ","distance":1.9625485550992516348145500160171650350093841552734375}],["Restrict the codomain of an initial segment ",{"type":"{α : Type u_1} →\n  {β : Type u_2} →\n    {r : α → α → Prop} → {s : β → β → Prop} → (p : Set β) → (f : r ≼i s) → (∀ (a : α), f a ∈ p) → r ≼i Subrel s p","name":"InitialSeg.codRestrict","isProp":false,"docString":"Restrict the codomain of an initial segment ","distance":1.9628473349727115770946284101228229701519012451171875}],["This is the `norm_num` plug-in that evaluates Jacobi symbols on natural numbers. ",{"type":"Mathlib.Meta.NormNum.NormNumExt","name":"Tactic.NormNum.evalJacobiSymNat","isProp":false,"docString":"This is the `norm_num` plug-in that evaluates Jacobi symbols on natural numbers. ","distance":1.9638712043435651022349475169903598725795745849609375}],["`WithInitial.star` is initial. ",{"type":"{C : Type u} →\n  [inst : CategoryTheory.Category.{v, u} C] → CategoryTheory.Limits.IsInitial CategoryTheory.WithInitial.star","name":"CategoryTheory.WithInitial.starInitial","isProp":false,"docString":"`WithInitial.star` is initial. ","distance":1.96514641235035103505879305885173380374908447265625}],["Restrict the domain of a relation to a subtype. ",{"type":"{α : Type u_1} → {β : Type u_2} → Rel α β → (s : Set α) → Rel { x // x ∈ s } β","name":"Rel.restrictDomain","isProp":false,"docString":"Restrict the domain of a relation to a subtype. ","distance":1.9652590550996844598330426379106938838958740234375}],["A variant of `ProjRestrict` with domain of the form `π C K` ",{"type":"{I : Type u} →\n  (C : Set (I → Bool)) →\n    {J K : I → Prop} →\n      [inst : (i : I) → Decidable (J i)] →\n        [inst_1 : (i : I) → Decidable (K i)] →\n          (∀ (i : I), J i → K i) → ↑(Profinite.NobelingProof.π C K) → ↑(Profinite.NobelingProof.π C J)","name":"Profinite.NobelingProof.ProjRestricts","isProp":false,"docString":"A variant of `ProjRestrict` with domain of the form `π C K` ","distance":1.965553465404957567130850293324328958988189697265625}],["The class number of a principal ideal domain is `1`. ",{"type":"∀ {R : Type u_1} [inst : CommRing R] [inst_1 : IsDomain R] [inst_2 : IsPrincipalIdealRing R],\n  Fintype.card (ClassGroup R) = 1","name":"card_classGroup_eq_one","isProp":true,"docString":"The class number of a principal ideal domain is `1`. ","distance":1.9667731871101843399429753844742663204669952392578125}]]