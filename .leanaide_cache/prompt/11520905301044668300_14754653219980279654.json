[["If `s` is an infinite set of natural numbers and `k > 0`, then `s` contains two elements `m < n`\nthat are equal mod `k`. ",{"type":"∀ {s : Set ℕ}, s.Infinite → ∀ {k : ℕ}, 0 < k → ∃ m ∈ s, ∃ n ∈ s, m < n ∧ m ≡ n [MOD k]","name":"Nat.exists_lt_modEq_of_infinite","isProp":true,"docString":"If `s` is an infinite set of natural numbers and `k > 0`, then `s` contains two elements `m < n`\nthat are equal mod `k`. ","distance":0.74998303620925932388985302168293856084346771240234375}],[" For any natural number `n` with `n ≥ 2`, we have `n > 1`.",{"type":"∀ {n : ℕ} [inst : n.AtLeastTwo], 1 < n","name":"Nat.AtLeastTwo.one_lt","isProp":true,"docString":" For any natural number `n` with `n ≥ 2`, we have `n > 1`.","distance":0.638952092710582064682967029511928558349609375}],["This theorem states that for all integers `n`, `n` is odd if and only if `n` is not even. Here, an integer `n` is considered odd if there exists an integer `k` such that `n` equals `2*k + 1` and `n` is considered even if there exists an `r` such that `n` equals `r + r`. The theorem establishes the logical equivalence between these two conditions, meaning that `n` cannot be both odd and even at the same time.",{"type":"∀ {n : ℤ}, Odd n ↔ ¬Even n","name":"Int.odd_iff_not_even","isProp":true,"docString":"This theorem states that for all integers `n`, `n` is odd if and only if `n` is not even. Here, an integer `n` is considered odd if there exists an integer `k` such that `n` equals `2*k + 1` and `n` is considered even if there exists an `r` such that `n` equals `r + r`. The theorem establishes the logical equivalence between these two conditions, meaning that `n` cannot be both odd and even at the same time.","distance":0.74748322083964768847152981834369711577892303466796875}],["The `n`th prime is greater or equal to `n + 2`. ",{"type":"∀ (n : ℕ), n + 2 ≤ Nat.nth Nat.Prime n","name":"Nat.add_two_le_nth_prime","isProp":true,"docString":"The `n`th prime is greater or equal to `n + 2`. ","distance":0.82264932562839965246581641622469760477542877197265625}],[" An integer `n` is odd if and only if it is not even. Equivalently, `n` is odd if and only if it can be written in the form `2*k + 1` for some integer `k`, and it is even if and only if it can be written in the form `r + r` for some integer `r`.",{"type":"∀ {n : ℤ}, Odd n ↔ ¬Even n","name":"Int.odd_iff_not_even","isProp":true,"docString":" An integer `n` is odd if and only if it is not even. Equivalently, `n` is odd if and only if it can be written in the form `2*k + 1` for some integer `k`, and it is even if and only if it can be written in the form `r + r` for some integer `r`.","distance":0.6733974594519367418143929171492345631122589111328125}],["This theorem states that for every integer `n`, `n` is either even or odd. In the context of the defined terms, an integer is even if it can be expressed as twice some integer, i.e., `n = 2*r` for some integer `r`. On the other hand, an integer is odd if it can be expressed in the form `n = 2*k + 1` for some integer `k`. This theorem is a reflection of the fundamental dichotomy of integers into even and odd numbers.",{"type":"∀ (n : ℤ), Even n ∨ Odd n","name":"Int.even_or_odd","isProp":true,"docString":"This theorem states that for every integer `n`, `n` is either even or odd. In the context of the defined terms, an integer is even if it can be expressed as twice some integer, i.e., `n = 2*r` for some integer `r`. On the other hand, an integer is odd if it can be expressed in the form `n = 2*k + 1` for some integer `k`. This theorem is a reflection of the fundamental dichotomy of integers into even and odd numbers.","distance":0.7518710843048601599747371437842957675457000732421875}],["If `a` is even, then `n` is even iff `n % a` is even. ",{"type":"∀ {n a : ℕ}, Even a → (Even (n % a) ↔ Even n)","name":"Even.mod_even_iff","isProp":true,"docString":"If `a` is even, then `n` is even iff `n % a` is even. ","distance":0.83448788510791527262000499831628985702991485595703125}],["If `f n > 1` for some `n` then `f n > 1` for all `n ≥ 2` ",{"type":"∀ {f : MulRingNorm ℚ}, (¬∀ (n : ℕ), f ↑n ≤ 1) → ∀ {n₀ : ℕ}, 1 < n₀ → 1 < f ↑n₀","name":"Rat.MulRingNorm.one_lt_of_not_bounded","isProp":true,"docString":"If `f n > 1` for some `n` then `f n > 1` for all `n ≥ 2` ","distance":0.84098357735184692263175065818359144032001495361328125}],["If `n` is even and `a` is even, then `n % a` is even. ",{"type":"∀ {n a : ℕ}, Even n → Even a → Even (n % a)","name":"Even.mod_even","isProp":true,"docString":"If `n` is even and `a` is even, then `n % a` is even. ","distance":0.84543583112109754740259859318030066788196563720703125}],["If `n > 0` then `m` is not divisible by `n` iff it is between `n * k` and `n * (k + 1)`\nfor some `k`. ",{"type":"∀ {n : ℤ} (m : ℤ), 0 < n → ((∃ k, n * k < m ∧ m < n * (k + 1)) ↔ ¬n ∣ m)","name":"Int.exists_lt_and_lt_iff_not_dvd","isProp":true,"docString":"If `n > 0` then `m` is not divisible by `n` iff it is between `n * k` and `n * (k + 1)`\nfor some `k`. ","distance":0.85467582531288222025267486969823949038982391357421875}],["If `m` and `n` are natural numbers, then the natural number `m^n` is even\nif and only if `m` is even and `n` is positive. ",{"type":"∀ {m n : ℕ}, Even (m ^ n) ↔ Even m ∧ n ≠ 0","name":"Nat.even_pow","isProp":true,"docString":"If `m` and `n` are natural numbers, then the natural number `m^n` is even\nif and only if `m` is even and `n` is positive. ","distance":0.85495769129600673874591620915452949702739715576171875}],["If `a` is even, then `n` is odd iff `n % a` is odd. ",{"type":"∀ {n a : ℕ}, Even a → (Odd (n % a) ↔ Odd n)","name":"Odd.mod_even_iff","isProp":true,"docString":"If `a` is even, then `n` is odd iff `n % a` is odd. ","distance":0.859367331138654488853489965549670159816741943359375}],["Equivalence between the set of natural numbers which are `≥ k` and `ℕ`, given by `n → n - k`. ",{"type":"(k : ℕ) → { n // n ∉ Multiset.range k } ≃ ℕ","name":"notMemRangeEquiv","isProp":false,"docString":"Equivalence between the set of natural numbers which are `≥ k` and `ℕ`, given by `n → n - k`. ","distance":0.85940474523094423364710792156984098255634307861328125}],["`n` is a prime power if there is a prime `p` and a positive natural `k` such that `n` can be\nwritten as `p^k`. ",{"type":"{R : Type u_1} → [inst : CommMonoidWithZero R] → R → Prop","name":"IsPrimePow","isProp":false,"docString":"`n` is a prime power if there is a prime `p` and a positive natural `k` such that `n` can be\nwritten as `p^k`. ","distance":0.85960597910973579605098393585649318993091583251953125}],["If `n : ℕ+` is different from `1`, then it is the successor of some `k : ℕ+`. ",{"type":"∀ {n : ℕ+}, n ≠ 1 → ∃ k, n = k + 1","name":"PNat.exists_eq_succ_of_ne_one","isProp":true,"docString":"If `n : ℕ+` is different from `1`, then it is the successor of some `k : ℕ+`. ","distance":0.86962021164617120394524363291566260159015655517578125}],["There are exactly `⌊N/n⌋` positive multiples of `n` that are `≤ N`.\nSee `Nat.card_multiples` for a \"shifted-by-one\" version. ",{"type":"∀ (N n : ℕ), (Finset.filter (fun k => k ≠ 0 ∧ n ∣ k) (Finset.range N.succ)).card = N / n","name":"Nat.card_multiples'","isProp":true,"docString":"There are exactly `⌊N/n⌋` positive multiples of `n` that are `≤ N`.\nSee `Nat.card_multiples` for a \"shifted-by-one\" version. ","distance":0.87111245114091928609667547789285890758037567138671875}],["the predicate of objects that are `≥ n` for `n : ℤ`. ",{"type":"{C : Type u_1} →\n  [inst : CategoryTheory.Category.{u_2, u_1} C] →\n    [inst_1 : CategoryTheory.Preadditive C] →\n      [inst_2 : CategoryTheory.Limits.HasZeroObject C] →\n        [inst_3 : CategoryTheory.HasShift C ℤ] →\n          [inst_4 : ∀ (n : ℤ), (CategoryTheory.shiftFunctor C n).Additive] →\n            [inst_5 : CategoryTheory.Pretriangulated C] → CategoryTheory.Triangulated.TStructure C → ℤ → C → Prop","name":"CategoryTheory.Triangulated.TStructure.GE","isProp":false,"docString":"the predicate of objects that are `≥ n` for `n : ℤ`. ","distance":0.881112117667324223901914592715911567211151123046875}],["For any two elements `x`, `y` such that `1 < y`, there exists a natural number `n`\nsuch that `x ≤ y ^ n`. ",{"type":"∀ {α : Type u_2} {inst : OrderedCommMonoid α} [self : MulArchimedean α] (x : α) {y : α}, 1 < y → ∃ n, x ≤ y ^ n","name":"MulArchimedean.arch","isProp":true,"docString":"For any two elements `x`, `y` such that `1 < y`, there exists a natural number `n`\nsuch that `x ≤ y ^ n`. ","distance":0.88898712903921561778730620062560774385929107666015625}],["Strong recursion principle on even and odd numbers: if for all `i : ℕ` we can prove `P (2 * i)`\nfrom `P j` for all `j < 2 * i` and we can prove `P (2 * i + 1)` from `P j` for all `j < 2 * i + 1`,\nthen we have `P n` for all `n : ℕ`. ",{"type":"{P : ℕ → Sort u_1} →\n  ((n : ℕ) → ((k : ℕ) → k < 2 * n → P k) → P (2 * n)) →\n    ((n : ℕ) → ((k : ℕ) → k < 2 * n + 1 → P k) → P (2 * n + 1)) → (n : ℕ) → P n","name":"Nat.evenOddStrongRec","isProp":false,"docString":"Strong recursion principle on even and odd numbers: if for all `i : ℕ` we can prove `P (2 * i)`\nfrom `P j` for all `j < 2 * i` and we can prove `P (2 * i + 1)` from `P j` for all `j < 2 * i + 1`,\nthen we have `P n` for all `n : ℕ`. ","distance":0.891563915911831816885069201816804707050323486328125}],["If `n` is odd and `a` is even, then `n % a` is odd. ",{"type":"∀ {n a : ℕ}, Odd n → Even a → Odd (n % a)","name":"Odd.mod_even","isProp":true,"docString":"If `n` is odd and `a` is even, then `n % a` is odd. ","distance":0.89376632986967707861225562737672589719295501708984375}],["For any positive `k : ℕ` there exists an arbitrarily large prime `p` such that\n`p ≡ 1 [MOD k]`. ",{"type":"∀ {k : ℕ} (n : ℕ), k ≠ 0 → ∃ p, Nat.Prime p ∧ n < p ∧ p ≡ 1 [MOD k]","name":"Nat.exists_prime_gt_modEq_one","isProp":true,"docString":"For any positive `k : ℕ` there exists an arbitrarily large prime `p` such that\n`p ≡ 1 [MOD k]`. ","distance":0.89632034640351510024203207649406976997852325439453125}],["If `n` is a nonzero natural number and `p ≠ 1`, then there are natural numbers `e`\nand `n'` such that `n'` is not divisible by `p` and `n = p^e * n'`. ",{"type":"∀ {n : ℕ}, n ≠ 0 → ∀ (p : ℕ), p ≠ 1 → ∃ e n', ¬p ∣ n' ∧ n = p ^ e * n'","name":"Nat.exists_eq_pow_mul_and_not_dvd","isProp":true,"docString":"If `n` is a nonzero natural number and `p ≠ 1`, then there are natural numbers `e`\nand `n'` such that `n'` is not divisible by `p` and `n = p^e * n'`. ","distance":0.91040123864629241001722448345390148460865020751953125}],["`n : ℕ` is _abundant_ if the sum of the proper divisors of `n` is greater than `n`. ",{"type":"ℕ → Prop","name":"Nat.Abundant","isProp":false,"docString":"`n : ℕ` is _abundant_ if the sum of the proper divisors of `n` is greater than `n`. ","distance":0.91054731471156646893660990826901979744434356689453125}],["The product of two natural numbers is greater than 1 if and only if\nat least one of them is greater than 1 and both are positive. ",{"type":"∀ {m n : ℕ}, 1 < m * n ↔ 0 < m ∧ 0 < n ∧ (1 < m ∨ 1 < n)","name":"Nat.one_lt_mul_iff","isProp":true,"docString":"The product of two natural numbers is greater than 1 if and only if\nat least one of them is greater than 1 and both are positive. ","distance":0.91128268302526294064591638743877410888671875}]]