[[" If `P` is a decidable natural number predicate that is monotonically included in another decidable natural number predicate `Q`, then the maximum natural number `i ≤ m` such that `P i` holds is less than or equal to the maximum natural number `i ≤ n` such that `Q i` holds.",{"value":null,"type":"∀ {m : ℕ} {P Q : ℕ → Prop} [inst : DecidablePred P] {n : ℕ} [inst_1 : DecidablePred Q],\n  (∀ (n : ℕ), P n → Q n) → m ≤ n → Nat.findGreatest P m ≤ Nat.findGreatest Q n","statement":"theorem Nat.findGreatest_mono :\n    ∀ {m : ℕ} {P Q : ℕ → Prop} [inst : DecidablePred P] {n : ℕ} [inst_1 : DecidablePred Q],\n      (∀ (n : ℕ), P n → Q n) → m ≤ n → Nat.findGreatest P m ≤ Nat.findGreatest Q n :=\n  by sorry","name":"Nat.findGreatest_mono","isProp":true,"description":"The theorem `Nat.findGreatest_mono` states that, given two natural number predicates `P` and `Q` and natural numbers `m` and `n`, if every natural number `n` that satisfies `P` also satisfies `Q`, and `m` is less than or equal to `n`, then the largest `i ≤ m` for which `P i` holds is less than or equal to the largest `i ≤ n` for which `Q i` holds. This is, if we have two properties of natural numbers such that property `Q` is stronger or equivalent to property `P` (every number that has property `P` also has property `Q`) and we are comparing numbers up to `m` for `P` and `n` for `Q` where `m ≤ n`, then the largest number that has property `P` is less than or equal to the largest number that has property `Q`. This theorem requires decidability of the predicates `P` and `Q`.","concise-description":" If `P` is a decidable natural number predicate that is monotonically included in another decidable natural number predicate `Q`, then the maximum natural number `i ≤ m` such that `P i` holds is less than or equal to the maximum natural number `i ≤ n` such that `Q i` holds."}]]