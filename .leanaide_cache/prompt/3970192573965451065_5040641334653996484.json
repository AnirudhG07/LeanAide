[["A decision procedure for equality of natural numbers.\n\nThis definition is overridden in the compiler to efficiently\nevaluate using the \"bignum\" representation (see `Nat`). The definition provided\nhere is the logical model.\n",{"type":"(n m : ℕ) → Decidable (n = m)","name":"Nat.decEq","isProp":false,"docString":"A decision procedure for equality of natural numbers.\n\nThis definition is overridden in the compiler to efficiently\nevaluate using the \"bignum\" representation (see `Nat`). The definition provided\nhere is the logical model.\n","distance":1.9907865508791682263023403720580972731113433837890625}],[" The greatest common divisor of 0 and any natural number `y` equals `y`.",{"type":"∀ (y : ℕ), Nat.gcd 0 y = y","name":"Nat.gcd_zero_left","isProp":true,"docString":" The greatest common divisor of 0 and any natural number `y` equals `y`.","distance":2.035166162158537961346382871852256357669830322265625}],["The theorem `Nat.Prime.ne_one` states that for every natural number `p`, if `p` is a prime number, then `p` cannot be equal to 1. In other words, no prime number can be 1. This is consistent with the definition of a prime number as a natural number at least 2 whose only divisors are itself and 1.",{"type":"∀ {p : ℕ}, p.Prime → p ≠ 1","name":"Nat.Prime.ne_one","isProp":true,"docString":"The theorem `Nat.Prime.ne_one` states that for every natural number `p`, if `p` is a prime number, then `p` cannot be equal to 1. In other words, no prime number can be 1. This is consistent with the definition of a prime number as a natural number at least 2 whose only divisors are itself and 1.","distance":2.033448233005158645170240561128593981266021728515625}],["Strong recursor for `Nat`\n",{"type":"{motive : ℕ → Sort u_1} → ((n : ℕ) → ((m : ℕ) → m < n → motive m) → motive n) → (t : ℕ) → motive t","name":"Nat.strongRec","isProp":false,"docString":"Strong recursor for `Nat`\n","distance":1.9965252121904122351025989701156504452228546142578125}],[" The theorem `System.Platform.numBits_eq` asserts that `System.Platform.numBits` is equal to either 32 or 64.",{"type":"System.Platform.numBits = 32 ∨ System.Platform.numBits = 64","name":"System.Platform.numBits_eq","isProp":true,"docString":" The theorem `System.Platform.numBits_eq` asserts that `System.Platform.numBits` is equal to either 32 or 64.","distance":2.0396822246423997881947798305191099643707275390625}],["The theorem `System.Platform.numBits_eq` states that the word size of the current platform, as defined by `System.Platform.numBits`, is either 32 or 64. That is, it asserts that the platform is either a 32-bit or a 64-bit system.",{"type":"System.Platform.numBits = 32 ∨ System.Platform.numBits = 64","name":"System.Platform.numBits_eq","isProp":true,"docString":"The theorem `System.Platform.numBits_eq` states that the word size of the current platform, as defined by `System.Platform.numBits`, is either 32 or 64. That is, it asserts that the platform is either a 32-bit or a 64-bit system.","distance":2.036332489314777394184829972800798714160919189453125}],["Simple diagonal recursor for `Nat`\n",{"type":"{motive : ℕ → ℕ → Sort u_1} →\n  ((n : ℕ) → motive 0 n) →\n    ((m : ℕ) → motive m 0) → ((m n : ℕ) → motive m n → motive (m + 1) (n + 1)) → (m n : ℕ) → motive m n","name":"Nat.recDiagAux","isProp":false,"docString":"Simple diagonal recursor for `Nat`\n","distance":1.9968514991530412761022716949810273945331573486328125}],[" The theorem asserts that the function `padicValNat` calculating the highest power of a prime `p` dividing a natural number `n` is equal to `Nat.maxPowDiv`.",{"type":"padicValNat = Nat.maxPowDiv","name":"padicValNat.padicValNat_eq_maxPowDiv","isProp":true,"docString":" The theorem asserts that the function `padicValNat` calculating the highest power of a prime `p` dividing a natural number `n` is equal to `Nat.maxPowDiv`.","distance":2.0441590264775566510024873423390090465545654296875}],["The theorem `Nat.prime_two` asserts that the number 2 is a prime number. In the context of natural numbers, a prime number is defined as a natural number greater than or equal to 2 whose only divisors are itself and 1. Therefore, this theorem is confirming that 2, which is divisible only by itself and 1, satisfies this property and is therefore a prime number.",{"type":"Nat.Prime 2","name":"Nat.prime_two","isProp":true,"docString":"The theorem `Nat.prime_two` asserts that the number 2 is a prime number. In the context of natural numbers, a prime number is defined as a natural number greater than or equal to 2 whose only divisors are itself and 1. Therefore, this theorem is confirming that 2, which is divisible only by itself and 1, satisfies this property and is therefore a prime number.","distance":2.04811375893883873544609741657041013240814208984375}],["Save an object to disk.\nIf you need to write multiple objects from within a single declaration,\nyou will need to provide a unique `key` for each.\n",{"type":"{α : Type} → System.FilePath → α → autoParam Lean.Name _auto✝ → IO Unit","name":"pickle","isProp":false,"docString":"Save an object to disk.\nIf you need to write multiple objects from within a single declaration,\nyou will need to provide a unique `key` for each.\n","distance":1.9985946206105749123338455319753848016262054443359375}],[" The greatest common divisor of a natural number `n` and zero is equal to `n`. In Lean, this is expressed as `Nat.gcd_zero_right n`.",{"type":"∀ (n : ℕ), n.gcd 0 = n","name":"Nat.gcd_zero_right","isProp":true,"docString":" The greatest common divisor of a natural number `n` and zero is equal to `n`. In Lean, this is expressed as `Nat.gcd_zero_right n`.","distance":2.0463778288420684248194447718560695648193359375}],["This theorem, `Nat.gcd_one_right`, states that for any natural number `n`, the greatest common divisor (GCD) of `n` and `1` is `1`. In other words, the greatest common divisor of any natural number and `1` is always `1` itself. This aligns with the general mathematical understanding that `1` is a divisor of every natural number.",{"type":"∀ (n : ℕ), n.gcd 1 = 1","name":"Nat.gcd_one_right","isProp":true,"docString":"This theorem, `Nat.gcd_one_right`, states that for any natural number `n`, the greatest common divisor (GCD) of `n` and `1` is `1`. In other words, the greatest common divisor of any natural number and `1` is always `1` itself. This aligns with the general mathematical understanding that `1` is a divisor of every natural number.","distance":2.052634589916572327439325817977078258991241455078125}],["Diagonal recursor for `Nat`\n",{"type":"{motive : ℕ → ℕ → Sort u_1} →\n  motive 0 0 →\n    ((n : ℕ) → motive 0 n → motive 0 (n + 1)) →\n      ((m : ℕ) → motive m 0 → motive (m + 1) 0) →\n        ((m n : ℕ) → motive m n → motive (m + 1) (n + 1)) → (m n : ℕ) → motive m n","name":"Nat.recDiag","isProp":false,"docString":"Diagonal recursor for `Nat`\n","distance":1.9997968233278020644405614802963100373744964599609375}],["The power operation on natural numbers.\n\nThis definition is overridden in both the kernel and the compiler to efficiently\nevaluate using the \"bignum\" representation (see `Nat`). The definition provided\nhere is the logical model.\n",{"type":"ℕ → ℕ → ℕ","name":"Nat.pow","isProp":false,"docString":"The power operation on natural numbers.\n\nThis definition is overridden in both the kernel and the compiler to efficiently\nevaluate using the \"bignum\" representation (see `Nat`). The definition provided\nhere is the logical model.\n","distance":2.013313997433192614749941640184260904788970947265625}],["Tail-recursive version of `Nat.any`. ",{"type":"(ℕ → Bool) → ℕ → Bool","name":"Nat.anyTR","isProp":false,"docString":"Tail-recursive version of `Nat.any`. ","distance":2.0152167420319155866081928252242505550384521484375}],["A shorthand for tracing the types of a list of proof terms\nwhen the `trace.linarith` option is set to true.\n",{"type":"{α : Type} → [inst : Lean.ToMessageData α] → α → List Lean.Expr → Lean.MetaM Unit","name":"Linarith.linarithTraceProofs","isProp":false,"docString":"A shorthand for tracing the types of a list of proof terms\nwhen the `trace.linarith` option is set to true.\n","distance":2.021032744566000349806245139916427433490753173828125}]]