[["`x` and `y` are relatively prime if every common divisor is a unit. ",{"type":"{α : Type u_1} → [inst : Monoid α] → α → α → Prop","name":"IsRelPrime","isProp":false,"docString":"`x` and `y` are relatively prime if every common divisor is a unit. ","distance":0.71892134312351296809850964564247988164424896240234375}],[" For any monoid `α` and irreducible elements `x` and `y` in `α`, `y` divides `x` if and only if `y` is a unit or `x` is associates with `y`.",{"type":"∀ {α : Type u_1} [inst : Monoid α] {x y : α}, Irreducible x → (y ∣ x ↔ IsUnit y ∨ Associated x y)","name":"Irreducible.dvd_iff","isProp":true,"docString":" For any monoid `α` and irreducible elements `x` and `y` in `α`, `y` divides `x` if and only if `y` is a unit or `x` is associates with `y`.","distance":0.68475868449989041319980742628104053437709808349609375}],["This theorem states that for any three natural numbers `k`, `x`, and `y`, where `k` is greater than zero, `x` is less than or equal to the integer division of `y` by `k` if and only if the product of `x` and `k` is less than or equal to `y`. In other words, for `k` > 0, `x` ≤ `y`/`k` is equivalent to `x`*`k` ≤ `y`.",{"type":"∀ {k x y : ℕ}, 0 < k → (x ≤ y / k ↔ x * k ≤ y)","name":"Nat.le_div_iff_mul_le","isProp":true,"docString":"This theorem states that for any three natural numbers `k`, `x`, and `y`, where `k` is greater than zero, `x` is less than or equal to the integer division of `y` by `k` if and only if the product of `x` and `k` is less than or equal to `y`. In other words, for `k` > 0, `x` ≤ `y`/`k` is equivalent to `x`*`k` ≤ `y`.","distance":0.67314184146026700972242906573228538036346435546875}],["If `1 < x`, then `x^k` divides `x^l` if and only if `k` is at most `l`. ",{"type":"∀ {x k l : ℕ}, 1 < x → (x ^ k ∣ x ^ l ↔ k ≤ l)","name":"Nat.pow_dvd_pow_iff_le_right","isProp":true,"docString":"If `1 < x`, then `x^k` divides `x^l` if and only if `k` is at most `l`. ","distance":0.72764498798100973875335739649017341434955596923828125}],[" For natural numbers `k`, `x`, and `y` with `k` > 0, `x` leqs `y` divided by `k` is equivalent to `x` times `k` leqs `y`.",{"type":"∀ {k x y : ℕ}, 0 < k → (x ≤ y / k ↔ x * k ≤ y)","name":"Nat.le_div_iff_mul_le","isProp":true,"docString":" For natural numbers `k`, `x`, and `y` with `k` > 0, `x` leqs `y` divided by `k` is equivalent to `x` times `k` leqs `y`.","distance":0.6874249116339712362133695933152921497821807861328125}],["This theorem expresses how division is calculated for two natural numbers `x` and `y`. If `y` is positive and less than or equal to `x`, then the quotient of `x / y` is computed by subtracting `y` from `x`, performing the division of the result by `y`, and then adding one. If `y` is not positive or is greater than `x`, then the quotient of `x / y` is simply zero. In essence, this theorem captures the core behavior of integer division in mathematics.",{"type":"∀ (x y : ℕ), x / y = if 0 < y ∧ y ≤ x then (x - y) / y + 1 else 0","name":"Nat.div_eq","isProp":true,"docString":"This theorem expresses how division is calculated for two natural numbers `x` and `y`. If `y` is positive and less than or equal to `x`, then the quotient of `x / y` is computed by subtracting `y` from `x`, performing the division of the result by `y`, and then adding one. If `y` is not positive or is greater than `x`, then the quotient of `x / y` is simply zero. In essence, this theorem captures the core behavior of integer division in mathematics.","distance":0.6926708970019974653808958464651368558406829833984375}],["Let `(x : \u0000\u0000 K)`. Then we have that `λ` divides one amongst `x`, `x - 1` and `x + 1`. ",{"type":"∀ {K : Type u_1} [inst : Field K] {ζ : K} (hζ : IsPrimitiveRoot ζ ↑3) (x : NumberField.RingOfIntegers K)\n  [inst_1 : NumberField K] [inst_2 : IsCyclotomicExtension {3} ℚ K],\n  hζ.toInteger - 1 ∣ x ∨ hζ.toInteger - 1 ∣ x - 1 ∨ hζ.toInteger - 1 ∣ x + 1","name":"IsCyclotomicExtension.Rat.Three.lambda_dvd_or_dvd_sub_one_or_dvd_add_one","isProp":true,"docString":"Let `(x : \u0000\u0000 K)`. Then we have that `λ` divides one amongst `x`, `x - 1` and `x + 1`. ","distance":0.7759120246576980406416623736731708049774169921875}],["An element `y` in a monoid is radical if for any element `x`, `y` divides `x` whenever it\ndivides a power of `x`. ",{"type":"{R : Type u_1} → [inst : Dvd R] → [inst : Pow R ℕ] → R → Prop","name":"IsRadical","isProp":false,"docString":"An element `y` in a monoid is radical if for any element `x`, `y` divides `x` whenever it\ndivides a power of `x`. ","distance":0.79569307304930159130407218981417827308177947998046875}],["The proposition that `x` and `y` are coprime, defined to be the existence of `a` and `b` such\nthat `a * x + b * y = 1`. Note that elements with no common divisors are not necessarily coprime,\ne.g., the multivariate polynomials `x₁` and `x₂` are not coprime. ",{"type":"{R : Type u} → [inst : CommSemiring R] → R → R → Prop","name":"IsCoprime","isProp":false,"docString":"The proposition that `x` and `y` are coprime, defined to be the existence of `a` and `b` such\nthat `a * x + b * y = 1`. Note that elements with no common divisors are not necessarily coprime,\ne.g., the multivariate polynomials `x₁` and `x₂` are not coprime. ","distance":0.80047796251751968110710322434897534549236297607421875}],["`divMod x y = (y / x, y % x)`. ",{"type":"PosNum → PosNum → Num × Num","name":"PosNum.divMod","isProp":false,"docString":"`divMod x y = (y / x, y % x)`. ","distance":0.80867857125427267117601104473578743636608123779296875}],["If `y` is a nonzero element of a unique factorization monoid with finitely\nmany units (e.g. `ℤ`, `Ideal (ring_of_integers K)`), it has finitely many divisors. ",{"type":"{M : Type u_2} →\n  [inst : CancelCommMonoidWithZero M] →\n    [inst_1 : UniqueFactorizationMonoid M] → [inst_2 : Fintype Mˣ] → (y : M) → y ≠ 0 → Fintype { x // x ∣ y }","name":"UniqueFactorizationMonoid.fintypeSubtypeDvd","isProp":false,"docString":"If `y` is a nonzero element of a unique factorization monoid with finitely\nmany units (e.g. `ℤ`, `Ideal (ring_of_integers K)`), it has finitely many divisors. ","distance":0.81838271365130932366582783288322389125823974609375}],["Divisibility of integers. `a ∣ b` (typed as `\\|`) says that\nthere is some `c` such that `b = a * c`.\n",{"type":"Dvd ℤ","name":"Int.instDvd","isProp":false,"docString":"Divisibility of integers. `a ∣ b` (typed as `\\|`) says that\nthere is some `c` such that `b = a * c`.\n","distance":0.81860566449600657978891149468836374580860137939453125}],["The unsigned division of `x` by `2^k` equals shifting `x` right by `k`,\nwhen `k` is less than the bitwidth `w`.\n",{"type":"∀ {w : ℕ} {x : BitVec w} {k : ℕ}, k < w → x / BitVec.twoPow w k = x >>> k","name":"BitVec.udiv_twoPow_eq_of_lt","isProp":true,"docString":"The unsigned division of `x` by `2^k` equals shifting `x` right by `k`,\nwhen `k` is less than the bitwidth `w`.\n","distance":0.82085126305478894881417772921849973499774932861328125}],["`basisDivisor x y` is the unique linear or constant polynomial such that\nwhen evaluated at `x` it gives `1` and `y` it gives `0` (where when `x = y` it is identically `0`).\nSuch polynomials are the building blocks for the Lagrange interpolants. ",{"type":"{F : Type u_1} → [inst : Field F] → F → F → Polynomial F","name":"Lagrange.basisDivisor","isProp":false,"docString":"`basisDivisor x y` is the unique linear or constant polynomial such that\nwhen evaluated at `x` it gives `1` and `y` it gives `0` (where when `x = y` it is identically `0`).\nSuch polynomials are the building blocks for the Lagrange interpolants. ","distance":0.82424250767064666245431681090849451720714569091796875}],["If `x` and `y` are both separable elements, then `x - y` is also a separable element. ",{"type":"∀ {F : Type u} {E : Type v} [inst : Field F] [inst_1 : Field E] [inst_2 : Algebra F E] {x y : E},\n  IsSeparable F x → IsSeparable F y → IsSeparable F (x - y)","name":"Field.isSeparable_sub","isProp":true,"docString":"If `x` and `y` are both separable elements, then `x - y` is also a separable element. ","distance":0.82768206648761599719676951281144283711910247802734375}],["If `λ` divides `x - 1`, then `λ ^ 4` divides `x ^ 3 - 1`. ",{"type":"∀ {K : Type u_1} [inst : Field K] {ζ : K} (hζ : IsPrimitiveRoot ζ ↑3) [inst_1 : NumberField K]\n  [inst_2 : IsCyclotomicExtension {3} ℚ K] {x : NumberField.RingOfIntegers K},\n  hζ.toInteger - 1 ∣ x - 1 → (hζ.toInteger - 1) ^ 4 ∣ x ^ 3 - 1","name":"IsCyclotomicExtension.Rat.Three.lambda_pow_four_dvd_cube_sub_one_of_dvd_sub_one","isProp":true,"docString":"If `λ` divides `x - 1`, then `λ ^ 4` divides `x ^ 3 - 1`. ","distance":0.8293229396169234934887981580686755478382110595703125}],["Division `y ↦ x / y` as an `IsometryEquiv`. ",{"type":"{G : Type v} →\n  [inst : Group G] →\n    [inst_1 : PseudoEMetricSpace G] → [inst_2 : IsometricSMul G G] → [inst : IsometricSMul Gᵐᵒᵖ G] → G → G ≃ᵢ G","name":"IsometryEquiv.divLeft","isProp":false,"docString":"Division `y ↦ x / y` as an `IsometryEquiv`. ","distance":0.8318109443878920483683714337530545890331268310546875}],["If `λ` divides `x + 1`, then `λ ^ 4` divides `x ^ 3 + 1`. ",{"type":"∀ {K : Type u_1} [inst : Field K] {ζ : K} (hζ : IsPrimitiveRoot ζ ↑3) [inst_1 : NumberField K]\n  [inst_2 : IsCyclotomicExtension {3} ℚ K] {x : NumberField.RingOfIntegers K},\n  hζ.toInteger - 1 ∣ x + 1 → (hζ.toInteger - 1) ^ 4 ∣ x ^ 3 + 1","name":"IsCyclotomicExtension.Rat.Three.lambda_pow_four_dvd_cube_add_one_of_dvd_add_one","isProp":true,"docString":"If `λ` divides `x + 1`, then `λ ^ 4` divides `x ^ 3 + 1`. ","distance":0.83888327808716767197694252899964340031147003173828125}],["In a monoid, an element `a` divides an element `b` iff all associates of `a` divide `b`. ",{"type":"∀ {α : Type u_1} [inst : Monoid α] {a b : α} {u : αˣ}, a * ↑u ∣ b ↔ a ∣ b","name":"Units.mul_right_dvd","isProp":true,"docString":"In a monoid, an element `a` divides an element `b` iff all associates of `a` divide `b`. ","distance":0.84657662837723945958856575089157558977603912353515625}],["`x ⇨ y` is equal to `y ⊔ xᶜ` ",{"type":"∀ {α : Type u} [self : CompleteAtomicBooleanAlgebra α] (x y : α), x ⇨ y = y ⊔ xᶜ","name":"CompleteAtomicBooleanAlgebra.himp_eq","isProp":true,"docString":"`x ⇨ y` is equal to `y ⊔ xᶜ` ","distance":0.84836834926691206959503688267432153224945068359375}],["If `x` and `y` are both separable elements, then `x * y` is also a separable element. ",{"type":"∀ {F : Type u} {E : Type v} [inst : Field F] [inst_1 : Field E] [inst_2 : Algebra F E] {x y : E},\n  IsSeparable F x → IsSeparable F y → IsSeparable F (x * y)","name":"Field.isSeparable_mul","isProp":true,"docString":"If `x` and `y` are both separable elements, then `x * y` is also a separable element. ","distance":0.8524844671255757955208309795125387609004974365234375}],["Division `y ↦ y / x` as an `IsometryEquiv`. ",{"type":"{G : Type v} → [inst : Group G] → [inst_1 : PseudoEMetricSpace G] → [inst : IsometricSMul Gᵐᵒᵖ G] → G → G ≃ᵢ G","name":"IsometryEquiv.divRight","isProp":false,"docString":"Division `y ↦ y / x` as an `IsometryEquiv`. ","distance":0.85265987585685409921865129945217631757259368896484375}],["An element `a` divides the difference `a - b` if and only if `a` divides `b`. ",{"type":"∀ {α : Type u_1} [inst : Ring α] {a b : α}, a ∣ a - b ↔ a ∣ b","name":"dvd_sub_self_left","isProp":true,"docString":"An element `a` divides the difference `a - b` if and only if `a` divides `b`. ","distance":0.86359289886215850895467838199692778289318084716796875}],["If an integer with larger absolute value divides an integer, it is zero. ",{"type":"∀ {m n : ℤ}, m ∣ n → n.natAbs < m.natAbs → n = 0","name":"Int.eq_zero_of_dvd_of_natAbs_lt_natAbs","isProp":true,"docString":"If an integer with larger absolute value divides an integer, it is zero. ","distance":0.868104260770854008200103635317645967006683349609375}]]