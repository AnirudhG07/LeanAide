[["Count the number of naturals `k < n` satisfying `p k`. ",{"type":"(p : ℕ → Prop) → [inst : DecidablePred p] → ℕ → ℕ","name":"Nat.count","isProp":false,"docString":"Count the number of naturals `k < n` satisfying `p k`. ","distance":0.255137402849802352733377119875513017177581787109375}],[" For any natural numbers `n` and `k`, `(n! * (n + 1)! * ... * (n + k - 1)!) = (n + k)!`.",{"type":"∀ (n k : ℕ), n.factorial * (n + 1).ascFactorial k = (n + k).factorial","name":"Nat.factorial_mul_ascFactorial","isProp":true,"docString":" For any natural numbers `n` and `k`, `(n! * (n + 1)! * ... * (n + k - 1)!) = (n + k)!`.","distance":0.2316331857701997287701800587456091307103633880615234375}],["This theorem states that for any natural numbers `n` and `k`, the product of `n` and the ascending factorial of `n+1` and `k` equals the product of `n+k` and the ascending factorial of `n` and `k`. Here, the ascending factorial `Nat.ascFactorial n k` is defined as the product `n * (n + 1) * ... * (n + k - 1)`.",{"type":"∀ (n k : ℕ), n * n.succ.ascFactorial k = (n + k) * n.ascFactorial k","name":"Nat.succ_ascFactorial","isProp":true,"docString":"This theorem states that for any natural numbers `n` and `k`, the product of `n` and the ascending factorial of `n+1` and `k` equals the product of `n+k` and the ascending factorial of `n` and `k`. Here, the ascending factorial `Nat.ascFactorial n k` is defined as the product `n * (n + 1) * ... * (n + k - 1)`.","distance":0.253534161970133731234255947128986008465290069580078125}],[" The number of ways to choose 2 elements from a set of size `n` is equal to the `n`-th triangular number `n * (n - 1) / 2`.",{"value":null,"type":"∀ (n : ℕ), n.choose 2 = n * (n - 1) / 2","statement":"theorem Nat.choose_two_right : ∀ (n : ℕ), n.choose 2 = n * (n - 1) / 2 := by sorry","name":"Nat.choose_two_right","isProp":true,"docString":"`choose n 2` is the `n`-th triangle number. ","description":"This theorem states that choosing 2 elements from a set of size `n` is equivalent to the `n`-th triangle number, which is calculated as `n * (n - 1) / 2`. In other words, the number of ways to pick two items from `n` without regard to order is the same as the `n`-th triangular number.","concise-description":" The number of ways to choose 2 elements from a set of size `n` is equal to the `n`-th triangular number `n * (n - 1) / 2`."}],["`choose n 2` is the `n`-th triangle number. ",{"type":"∀ (n : ℕ), Nat.choose n 2 = n * (n - 1) / 2","name":"Nat.choose_two_right","isProp":true,"docString":"`choose n 2` is the `n`-th triangle number. ","distance":0.26715484693008573202632760512642562389373779296875}],[" For any natural numbers n and k with k <= n, the product of the factorial of (n-k) and the descending factorial of n by k is equal to the factorial of n.",{"type":"∀ {n k : ℕ}, k ≤ n → (n - k).factorial * n.descFactorial k = n.factorial","name":"Nat.factorial_mul_descFactorial","isProp":true,"docString":" For any natural numbers n and k with k <= n, the product of the factorial of (n-k) and the descending factorial of n by k is equal to the factorial of n.","distance":0.233063775102940462513601005412056110799312591552734375}],["This theorem states that for all natural numbers `n`, the product of `n` and `n - 1` is an even number. In mathematical terms, this theorem can be written as: \"∀ n ∈ ℕ, n*(n - 1) is even.\" Here, a number is considered even if it can be expressed as twice another number, in this case, n*(n - 1) = 2*r for some `r`.",{"type":"∀ (n : ℕ), Even (n * (n - 1))","name":"Nat.even_mul_self_pred","isProp":true,"docString":"This theorem states that for all natural numbers `n`, the product of `n` and `n - 1` is an even number. In mathematical terms, this theorem can be written as: \"∀ n ∈ ℕ, n*(n - 1) is even.\" Here, a number is considered even if it can be expressed as twice another number, in this case, n*(n - 1) = 2*r for some `r`.","distance":0.260207093291773883247941512308898381888866424560546875}],[" For any natural number `n` and `k`, the prime factorization of `n` raised to the power of `k` is `k` times the prime factorization of `n`. Equivalently, the power of each prime `p` in the prime factorization of `n^k` is `k` times its power in the prime factorization of `n`.",{"value":null,"type":"∀ (n k : ℕ), (n ^ k).factorization = k • n.factorization","statement":"theorem Nat.factorization_pow : ∀ (n k : ℕ), (n ^ k).factorization = k • n.factorization := by sorry","name":"Nat.factorization_pow","isProp":true,"docString":"For any `p`, the power of `p` in `n^k` is `k` times the power in `n` ","description":"This theorem states that for any natural numbers `n` and `k`, the prime factorization of `n` raised to the power of `k` is the same as `k` times the prime factorization of `n`. In other words, the multiplicity of each prime factor `p` in `n^k` is `k` times the multiplicity of `p` in `n`. This is equivalent to the mathematical statement that for any prime `p`, the power of `p` in the prime factorization of `n^k` is `k` times the power of `p` in the prime factorization of `n`.","concise-description":" For any natural number `n` and `k`, the prime factorization of `n` raised to the power of `k` is `k` times the prime factorization of `n`. Equivalently, the power of each prime `p` in the prime factorization of `n^k` is `k` times its power in the prime factorization of `n`."}],["`n` is a prime power if there is a prime `p` and a positive natural `k` such that `n` can be\nwritten as `p^k`. ",{"type":"{R : Type u_1} → [inst : CommMonoidWithZero R] → R → Prop","name":"IsPrimePow","isProp":false,"docString":"`n` is a prime power if there is a prime `p` and a positive natural `k` such that `n` can be\nwritten as `p^k`. ","distance":0.273679861650921230076249912599450908601284027099609375}],[" For any natural numbers `n` and `k` with `n > 0`, the product of `(n - 1)!` and `k` ascending factorials of `n` is equal to `(n + k - 1)!`.",{"type":"∀ (n k : ℕ), 0 < n → (n - 1).factorial * n.ascFactorial k = (n + k - 1).factorial","name":"Nat.factorial_mul_ascFactorial'","isProp":true,"docString":" For any natural numbers `n` and `k` with `n > 0`, the product of `(n - 1)!` and `k` ascending factorials of `n` is equal to `(n + k - 1)!`.","distance":0.2387646958210230818675512409754446707665920257568359375}],["This theorem states that for every natural number `n`, the number is either even or odd. A natural number `n` is defined as even if it can be expressed as the sum of two identical numbers, and as odd if it can be expressed as `2*k + 1` for some number `k`. Thus, the theorem asserts that any natural number fits one of these two definitions.",{"type":"∀ (n : ℕ), Even n ∨ Odd n","name":"Nat.even_or_odd","isProp":true,"docString":"This theorem states that for every natural number `n`, the number is either even or odd. A natural number `n` is defined as even if it can be expressed as the sum of two identical numbers, and as odd if it can be expressed as `2*k + 1` for some number `k`. Thus, the theorem asserts that any natural number fits one of these two definitions.","distance":0.26184366820167992440104853812954388558864593505859375}],["The `n`th central binomial coefficient is the product of its prime factors, which are\nat most `2n`. ",{"type":"∀ (n : ℕ),\n  (Finset.prod (Finset.range (2 * n + 1)) fun p => p ^ (Nat.factorization (Nat.centralBinom n)) p) = Nat.centralBinom n","name":"Nat.prod_pow_factorization_centralBinom","isProp":true,"docString":"The `n`th central binomial coefficient is the product of its prime factors, which are\nat most `2n`. ","distance":0.2783708579787980141873049433343112468719482421875}],[" For any natural numbers `n` and `k`, the ascending factorial `(n + 1)!` equals the quotient of `n + k` factorial `!(n + k)` by `n!`.",{"type":"∀ (n k : ℕ), (n + 1).ascFactorial k = (n + k).factorial / n.factorial","name":"Nat.ascFactorial_eq_div","isProp":true,"docString":" For any natural numbers `n` and `k`, the ascending factorial `(n + 1)!` equals the quotient of `n + k` factorial `!(n + k)` by `n!`.","distance":0.2490709587165025051813671552736195735633373260498046875}],["This theorem states that for any positive natural number `n` that is not equal to `1`, there exists another positive natural number `k` such that `n` is the successor of `k`. In other words, if a positive natural number is not `1`, then it can be expressed as `k + 1` for some positive natural number `k`.",{"type":"∀ {n : ℕ+}, n ≠ 1 → ∃ k, n = k + 1","name":"PNat.exists_eq_succ_of_ne_one","isProp":true,"docString":"This theorem states that for any positive natural number `n` that is not equal to `1`, there exists another positive natural number `k` such that `n` is the successor of `k`. In other words, if a positive natural number is not `1`, then it can be expressed as `k + 1` for some positive natural number `k`.","distance":0.26329662449169999316467283279052935540676116943359375}],["`choose n k` is the number of `k`-element subsets in an `n`-element set. Also known as binomial\ncoefficients. ",{"type":"ℕ → ℕ → ℕ","name":"Nat.choose","isProp":false,"docString":"`choose n k` is the number of `k`-element subsets in an `n`-element set. Also known as binomial\ncoefficients. ","distance":0.27914330310946711133368580703972838819026947021484375}],["A `k`-smooth number can be written as a square times a product of distinct primes `< k`. ",{"type":"∀ {n k : ℕ}, n ∈ Nat.smoothNumbers k → ∃ s ∈ Finset.powerset (Nat.primesBelow k), ∃ m, n = m ^ 2 * Finset.prod s id","name":"Nat.eq_prod_primes_mul_sq_of_mem_smoothNumbers","isProp":true,"docString":"A `k`-smooth number can be written as a square times a product of distinct primes `< k`. ","distance":0.281759508487456289405059806085773743689060211181640625}],["`σ k n` is the sum of the `k`th powers of the divisors of `n` ",{"type":"Lean.ParserDescr","name":"Nat.ArithmeticFunction.termσ","isProp":false,"docString":"`σ k n` is the sum of the `k`th powers of the divisors of `n` ","distance":0.28891608381579059194876890614978037774562835693359375}],["If `n : ℕ+` is different from `1`, then it is the successor of some `k : ℕ+`. ",{"type":"∀ {n : ℕ+}, n ≠ 1 → ∃ k, n = k + 1","name":"PNat.exists_eq_succ_of_ne_one","isProp":true,"docString":"If `n : ℕ+` is different from `1`, then it is the successor of some `k : ℕ+`. ","distance":0.292360896231202260775461354569415561854839324951171875}]]