[["Any infinite set of naturals is denumerable. ",{"type":"(s : Set ℕ) → [inst : DecidablePred fun x => x ∈ s] → [inst : Infinite ↑s] → Denumerable ↑s","name":"Nat.Subtype.denumerable","isProp":false,"docString":"Any infinite set of naturals is denumerable. ","distance":0.211373145464027079043489720788784325122833251953125}],[" Every natural number can be expressed as an even number (the sum of two identical numbers) or an odd number (2 times an integer plus 1).",{"type":"∀ (n : ℕ), Even n ∨ Odd n","name":"Nat.even_or_odd","isProp":true,"docString":" Every natural number can be expressed as an even number (the sum of two identical numbers) or an odd number (2 times an integer plus 1).","distance":0.2635211345740657851166588443447835743427276611328125}],["This theorem states that for every natural number `n`, the number is either even or odd. A natural number `n` is defined as even if it can be expressed as the sum of two identical numbers, and as odd if it can be expressed as `2*k + 1` for some number `k`. Thus, the theorem asserts that any natural number fits one of these two definitions.",{"type":"∀ (n : ℕ), Even n ∨ Odd n","name":"Nat.even_or_odd","isProp":true,"docString":"This theorem states that for every natural number `n`, the number is either even or odd. A natural number `n` is defined as even if it can be expressed as the sum of two identical numbers, and as odd if it can be expressed as `2*k + 1` for some number `k`. Thus, the theorem asserts that any natural number fits one of these two definitions.","distance":0.283123194659148647023272360456758178770542144775390625}],[" A natural number is odd if and only if it is not even, or equivalently, a natural number is odd if and only if it can be expressed as 2 times an integer plus one, while an even number can be expressed as the sum of two integers.",{"value":null,"type":"∀ {n : ℕ}, Odd n ↔ ¬Even n","statement":"theorem Nat.odd_iff_not_even : ∀ {n : ℕ}, Odd n ↔ ¬Even n := by sorry","name":"Nat.odd_iff_not_even","isProp":true,"description":"This theorem states that for every natural number `n`, `n` being odd is equivalent to `n` not being even. In other words, a natural number is odd if and only if it is not even. Here, a number is considered odd if it can be expressed as `2*k + 1` for some `k`, and a number is considered even if it can be written as `r + r` for some `r`.","concise-description":" A natural number is odd if and only if it is not even, or equivalently, a natural number is odd if and only if it can be expressed as 2 times an integer plus one, while an even number can be expressed as the sum of two integers."}],[" A natural number `n` is equivalent to being odd, as defined in Lean 4, if and only if `n` modulo 2 equals 1, which is equivalent to `n` being expressible as `2*k + 1` for some natural number `k`.",{"value":null,"type":"∀ {n : ℕ}, Odd n ↔ n % 2 = 1","statement":"theorem Nat.odd_iff : ∀ {n : ℕ}, Odd n ↔ n % 2 = 1 := by sorry","name":"Nat.odd_iff","isProp":true,"description":"This theorem establishes an equivalence for a natural number `n` to be considered odd in two different ways. According to the theorem, a natural number `n` is odd if and only if `n` modulo 2 equals 1. This is equivalent to the definition of oddness in semirings, where an element `a` of a semiring is considered odd if there exists a `k` such that `a` is equal to `2*k + 1`.\n","concise-description":" A natural number `n` is equivalent to being odd, as defined in Lean 4, if and only if `n` modulo 2 equals 1, which is equivalent to `n` being expressible as `2*k + 1` for some natural number `k`."}],["Every nonzero natural number has a unique prime factorization ",{"type":"Set.InjOn Nat.factorization {x | x ≠ 0}","name":"Nat.factorization_inj","isProp":true,"docString":"Every nonzero natural number has a unique prime factorization ","distance":0.238759119600129354754614041667082346975803375244140625}],[" The set of prime natural numbers is infinite.",{"type":"{p | p.Prime}.Infinite","name":"Nat.infinite_setOf_prime","isProp":true,"docString":" The set of prime natural numbers is infinite.","distance":0.263549020157005153830453991758986376225948333740234375}],["This theorem states that a natural number is odd if and only if its remainder when divided by 4 is either 1 or 3. In other words, it characterizes odd numbers in terms of their residues modulo 4.",{"type":"∀ {n : ℕ}, n % 2 = 1 ↔ n % 4 = 1 ∨ n % 4 = 3","name":"Nat.odd_mod_four_iff","isProp":true,"docString":"This theorem states that a natural number is odd if and only if its remainder when divided by 4 is either 1 or 3. In other words, it characterizes odd numbers in terms of their residues modulo 4.","distance":0.286093290954278212101513645393424667418003082275390625}],[" A natural number is odd if and only if its residue modulo 4 is 1 or 3.",{"value":null,"type":"∀ {n : ℕ}, n % 2 = 1 ↔ n % 4 = 1 ∨ n % 4 = 3","statement":"theorem Nat.odd_mod_four_iff : ∀ {n : ℕ}, n % 2 = 1 ↔ n % 4 = 1 ∨ n % 4 = 3 := by sorry","name":"Nat.odd_mod_four_iff","isProp":true,"docString":"A natural number is odd iff it has residue `1` or `3` mod `4`","description":"This theorem states that a natural number is odd if and only if its remainder when divided by 4 is either 1 or 3. In other words, it characterizes odd numbers in terms of their residues modulo 4.","concise-description":" A natural number is odd if and only if its residue modulo 4 is 1 or 3."}],["Infinitely many natural numbers are equal to `d` mod `n`. ",{"type":"∀ {n : ℕ}, n ≠ 0 → ∀ (d : ℕ), ∃ᶠ (m : ℕ) in Filter.atTop, m ≡ d [MOD n]","name":"Nat.frequently_modEq","isProp":true,"docString":"Infinitely many natural numbers are equal to `d` mod `n`. ","distance":0.25054454526254910096128014629357494413852691650390625}],[" For every natural number `n`, the oddness of `n` and `n+1` are opposite.",{"type":"∀ (n : ℕ), n.succ.bodd = !n.bodd","name":"Nat.bodd_succ","isProp":true,"docString":" For every natural number `n`, the oddness of `n` and `n+1` are opposite.","distance":0.2640973862216993151008637141785584390163421630859375}],["This theorem states that for all natural numbers `n`, `n` is odd if and only if it is not even. In the context of a semiring, a number `n` is odd if there exists another number `k` such that `n` equals `2*k + 1`. On the other hand, a number `n` is even if there exists a number `r` such that `n` equals `r + r`. Therefore, this theorem establishes the mutually exclusive and exhaustive nature of odd and even numbers in the set of natural numbers.",{"type":"∀ {α : Sort u_1} {a b : α}, (a = b) = (b = a)","name":"Mathlib.Data.Nat.Parity._auxLemma.4","isProp":true,"docString":"This theorem states that for all natural numbers `n`, `n` is odd if and only if it is not even. In the context of a semiring, a number `n` is odd if there exists another number `k` such that `n` equals `2*k + 1`. On the other hand, a number `n` is even if there exists a number `r` such that `n` equals `r + r`. Therefore, this theorem establishes the mutually exclusive and exhaustive nature of odd and even numbers in the set of natural numbers.","distance":0.292426638735534261126502997285570017993450164794921875}],[" For any odd natural number `n` greater than 1, the `n`th Bernoulli number is zero.",{"value":null,"type":"∀ {n : ℕ}, Odd n → 1 < n → bernoulli' n = 0","statement":"theorem bernoulli'_odd_eq_zero : ∀ {n : ℕ}, Odd n → 1 < n → bernoulli' n = 0 := by sorry","name":"bernoulli'_odd_eq_zero","isProp":true,"docString":"Odd Bernoulli numbers (greater than 1) are zero. ","description":"This theorem states that for any natural number `n`, if `n` is an odd number and `n` is greater than 1, then the `n`th Bernoulli number equals zero. In other words, all odd Bernoulli numbers, with the exception of the first one, are zero.","concise-description":" For any odd natural number `n` greater than 1, the `n`th Bernoulli number is zero."}],["A natural number is odd iff it has residue `1` or `3` mod `4`",{"type":"∀ {n : ℕ}, n % 2 = 1 ↔ n % 4 = 1 ∨ n % 4 = 3","name":"Nat.odd_mod_four_iff","isProp":true,"docString":"A natural number is odd iff it has residue `1` or `3` mod `4`","distance":0.256811668528133196787166525609791278839111328125}],[" A natural number is odd if and only if it is not even, or equivalently, a natural number is odd if and only if it can be expressed as 2 times an integer plus one, while an even number can be expressed as the sum of two integers.",{"type":"∀ {n : ℕ}, Odd n ↔ ¬Even n","name":"Nat.odd_iff_not_even","isProp":true,"docString":" A natural number is odd if and only if it is not even, or equivalently, a natural number is odd if and only if it can be expressed as 2 times an integer plus one, while an even number can be expressed as the sum of two integers.","distance":0.27395721980474097012603351686266250908374786376953125}],["This theorem states that for every natural number `n`, `n` being odd is equivalent to `n` not being even. In other words, a natural number is odd if and only if it is not even. Here, a number is considered odd if it can be expressed as `2*k + 1` for some `k`, and a number is considered even if it can be written as `r + r` for some `r`.",{"type":"∀ {n : ℕ}, Odd n ↔ ¬Even n","name":"Nat.odd_iff_not_even","isProp":true,"docString":"This theorem states that for every natural number `n`, `n` being odd is equivalent to `n` not being even. In other words, a natural number is odd if and only if it is not even. Here, a number is considered odd if it can be expressed as `2*k + 1` for some `k`, and a number is considered even if it can be written as `r + r` for some `r`.","distance":0.292846519126972903990235863602720201015472412109375}],["A sum of numbers is infinite iff one of them is infinite ",{"type":"∀ {ι : Type u_1} {M : Type u_4} [inst : AddCommMonoid M] {s : Finset ι} {f : ι → WithTop M},\n  (Finset.sum s fun i => f i) = ⊤ ↔ ∃ i ∈ s, f i = ⊤","name":"WithTop.sum_eq_top_iff","isProp":true,"docString":"A sum of numbers is infinite iff one of them is infinite ","distance":0.25715134497409974922987885292968712747097015380859375}],["The sequence of natural numbers some 0, some 1, ... ",{"type":"Stream'.Seq ℕ","name":"Stream'.Seq.nats","isProp":false,"docString":"The sequence of natural numbers some 0, some 1, ... ","distance":0.265536298787902413920392064028419554233551025390625}],["There is an infinite base ",{"type":"∀ {α : Type u_1} {M : Matroid α} [self : Matroid.InfiniteRk M], ∃ B, M.Base B ∧ Set.Infinite B","name":"Matroid.InfiniteRk.exists_infinite_base","isProp":true,"docString":"There is an infinite base ","distance":0.267043692242197205910514412607881240546703338623046875}],["Type of natural numbers with infinity (`⊤`) ",{"type":"Type","name":"PartENat","isProp":false,"docString":"Type of natural numbers with infinity (`⊤`) ","distance":0.267710394474760915439759401124319992959499359130859375}]]