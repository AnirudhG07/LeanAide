[["Any infinite set of naturals is denumerable. ",{"type":"(s : Set ℕ) → [inst : DecidablePred fun x => x ∈ s] → [inst : Infinite ↑s] → Denumerable ↑s","name":"Nat.Subtype.denumerable","isProp":false,"docString":"Any infinite set of naturals is denumerable. ","distance":0.20783336964745136032917116608587093651294708251953125}],[" The set of prime natural numbers is infinite.",{"type":"{p | p.Prime}.Infinite","name":"Nat.infinite_setOf_prime","isProp":true,"docString":" The set of prime natural numbers is infinite.","distance":0.25766640837245191608673167138476856052875518798828125}],["This theorem states that for every natural number `n`, the number is either even or odd. A natural number `n` is defined as even if it can be expressed as the sum of two identical numbers, and as odd if it can be expressed as `2*k + 1` for some number `k`. Thus, the theorem asserts that any natural number fits one of these two definitions.",{"type":"∀ (n : ℕ), Even n ∨ Odd n","name":"Nat.even_or_odd","isProp":true,"docString":"This theorem states that for every natural number `n`, the number is either even or odd. A natural number `n` is defined as even if it can be expressed as the sum of two identical numbers, and as odd if it can be expressed as `2*k + 1` for some number `k`. Thus, the theorem asserts that any natural number fits one of these two definitions.","distance":0.281786880155174113138372149478527717292308807373046875}],[" A natural number is odd if and only if it is not even, or equivalently, a natural number is odd if and only if it can be expressed as 2 times an integer plus one, while an even number can be expressed as the sum of two integers.",{"value":null,"type":"∀ {n : ℕ}, Odd n ↔ ¬Even n","statement":"theorem Nat.odd_iff_not_even : ∀ {n : ℕ}, Odd n ↔ ¬Even n := by sorry","name":"Nat.odd_iff_not_even","isProp":true,"description":"This theorem states that for every natural number `n`, `n` being odd is equivalent to `n` not being even. In other words, a natural number is odd if and only if it is not even. Here, a number is considered odd if it can be expressed as `2*k + 1` for some `k`, and a number is considered even if it can be written as `r + r` for some `r`.","concise-description":" A natural number is odd if and only if it is not even, or equivalently, a natural number is odd if and only if it can be expressed as 2 times an integer plus one, while an even number can be expressed as the sum of two integers."}],[" A natural number `n` is equivalent to being odd, as defined in Lean 4, if and only if `n` modulo 2 equals 1, which is equivalent to `n` being expressible as `2*k + 1` for some natural number `k`.",{"value":null,"type":"∀ {n : ℕ}, Odd n ↔ n % 2 = 1","statement":"theorem Nat.odd_iff : ∀ {n : ℕ}, Odd n ↔ n % 2 = 1 := by sorry","name":"Nat.odd_iff","isProp":true,"description":"This theorem establishes an equivalence for a natural number `n` to be considered odd in two different ways. According to the theorem, a natural number `n` is odd if and only if `n` modulo 2 equals 1. This is equivalent to the definition of oddness in semirings, where an element `a` of a semiring is considered odd if there exists a `k` such that `a` is equal to `2*k + 1`.\n","concise-description":" A natural number `n` is equivalent to being odd, as defined in Lean 4, if and only if `n` modulo 2 equals 1, which is equivalent to `n` being expressible as `2*k + 1` for some natural number `k`."}],["Every nonzero natural number has a unique prime factorization ",{"type":"Set.InjOn Nat.factorization {x | x ≠ 0}","name":"Nat.factorization_inj","isProp":true,"docString":"Every nonzero natural number has a unique prime factorization ","distance":0.2353456282250026010416377175715751945972442626953125}],[" Every natural number can be expressed as an even number (the sum of two identical numbers) or an odd number (2 times an integer plus 1).",{"type":"∀ (n : ℕ), Even n ∨ Odd n","name":"Nat.even_or_odd","isProp":true,"docString":" Every natural number can be expressed as an even number (the sum of two identical numbers) or an odd number (2 times an integer plus 1).","distance":0.25934362091596996346964942858903668820858001708984375}],["This theorem states that a natural number is odd if and only if its remainder when divided by 4 is either 1 or 3. In other words, it characterizes odd numbers in terms of their residues modulo 4.",{"type":"∀ {n : ℕ}, n % 2 = 1 ↔ n % 4 = 1 ∨ n % 4 = 3","name":"Nat.odd_mod_four_iff","isProp":true,"docString":"This theorem states that a natural number is odd if and only if its remainder when divided by 4 is either 1 or 3. In other words, it characterizes odd numbers in terms of their residues modulo 4.","distance":0.291966849241898085409729901584796607494354248046875}],[" A natural number is odd if and only if its residue modulo 4 is 1 or 3.",{"value":null,"type":"∀ {n : ℕ}, n % 2 = 1 ↔ n % 4 = 1 ∨ n % 4 = 3","statement":"theorem Nat.odd_mod_four_iff : ∀ {n : ℕ}, n % 2 = 1 ↔ n % 4 = 1 ∨ n % 4 = 3 := by sorry","name":"Nat.odd_mod_four_iff","isProp":true,"docString":"A natural number is odd iff it has residue `1` or `3` mod `4`","description":"This theorem states that a natural number is odd if and only if its remainder when divided by 4 is either 1 or 3. In other words, it characterizes odd numbers in terms of their residues modulo 4.","concise-description":" A natural number is odd if and only if its residue modulo 4 is 1 or 3."}],["The sequence of natural numbers some 0, some 1, ... ",{"type":"Stream'.Seq ℕ","name":"Stream'.Seq.nats","isProp":false,"docString":"The sequence of natural numbers some 0, some 1, ... ","distance":0.247881703983134749069705549118225462734699249267578125}],[" For every natural number `n`, the oddness of `n` and `n+1` are opposite.",{"type":"∀ (n : ℕ), n.succ.bodd = !n.bodd","name":"Nat.bodd_succ","isProp":true,"docString":" For every natural number `n`, the oddness of `n` and `n+1` are opposite.","distance":0.265333706122912571512273416374227963387966156005859375}],["This theorem states that for any natural number `n`, if `n` is an odd number and `n` is greater than 1, then the `n`th Bernoulli number equals zero. In other words, all odd Bernoulli numbers, with the exception of the first one, are zero.",{"type":"∀ {n : ℕ}, Odd n → 1 < n → bernoulli' n = 0","name":"bernoulli'_odd_eq_zero","isProp":true,"docString":"This theorem states that for any natural number `n`, if `n` is an odd number and `n` is greater than 1, then the `n`th Bernoulli number equals zero. In other words, all odd Bernoulli numbers, with the exception of the first one, are zero.","distance":0.294906429580390982980730996132479049265384674072265625}],["A sum of numbers is infinite iff one of them is infinite ",{"type":"∀ {ι : Type u_1} {M : Type u_4} [inst : AddCommMonoid M] {s : Finset ι} {f : ι → WithTop M},\n  (Finset.sum s fun i => f i) = ⊤ ↔ ∃ i ∈ s, f i = ⊤","name":"WithTop.sum_eq_top_iff","isProp":true,"docString":"A sum of numbers is infinite iff one of them is infinite ","distance":0.25186725849818214495456913937232457101345062255859375}],[" A natural number is odd if and only if it is not even, or equivalently, a natural number is odd if and only if it can be expressed as 2 times an integer plus one, while an even number can be expressed as the sum of two integers.",{"type":"∀ {n : ℕ}, Odd n ↔ ¬Even n","name":"Nat.odd_iff_not_even","isProp":true,"docString":" A natural number is odd if and only if it is not even, or equivalently, a natural number is odd if and only if it can be expressed as 2 times an integer plus one, while an even number can be expressed as the sum of two integers.","distance":0.276143507927502918075646221041097305715084075927734375}],["This theorem states that for every natural number `n`, `n` being odd is equivalent to `n` not being even. In other words, a natural number is odd if and only if it is not even. Here, a number is considered odd if it can be expressed as `2*k + 1` for some `k`, and a number is considered even if it can be written as `r + r` for some `r`.",{"type":"∀ {n : ℕ}, Odd n ↔ ¬Even n","name":"Nat.odd_iff_not_even","isProp":true,"docString":"This theorem states that for every natural number `n`, `n` being odd is equivalent to `n` not being even. In other words, a natural number is odd if and only if it is not even. Here, a number is considered odd if it can be expressed as `2*k + 1` for some `k`, and a number is considered even if it can be written as `r + r` for some `r`.","distance":0.298291109398468090585510026357951574027538299560546875}],["Infinitely many natural numbers are equal to `d` mod `n`. ",{"type":"∀ {n : ℕ}, n ≠ 0 → ∀ (d : ℕ), ∃ᶠ (m : ℕ) in Filter.atTop, m ≡ d [MOD n]","name":"Nat.frequently_modEq","isProp":true,"docString":"Infinitely many natural numbers are equal to `d` mod `n`. ","distance":0.25661475206189809927792566668358631432056427001953125}],["The infinite monadic lazy list of natural numbers.",{"type":"{m : Type → Type} → [inst : Monad m] → MLList m ℕ","name":"MLList.range","isProp":false,"docString":"The infinite monadic lazy list of natural numbers.","distance":0.25828665409151063681036930574919097125530242919921875}],["There is an infinite base ",{"type":"∀ {α : Type u_1} {M : Matroid α} [self : Matroid.InfiniteRk M], ∃ B, M.Base B ∧ Set.Infinite B","name":"Matroid.InfiniteRk.exists_infinite_base","isProp":true,"docString":"There is an infinite base ","distance":0.260572811493208877919869337347336113452911376953125}],["Type of natural numbers with infinity (`⊤`) ",{"type":"Type","name":"PartENat","isProp":false,"docString":"Type of natural numbers with infinity (`⊤`) ","distance":0.2616843447425463153876989963464438915252685546875}]]