[["If `n` is even and `a` is even, then `n % a` is even. ",{"type":"∀ {n a : ℕ}, Even n → Even a → Even (n % a)","name":"Even.mod_even","isProp":true,"docString":"If `n` is even and `a` is even, then `n % a` is even. ","distance":0.78252864610082661922518809660687111318111419677734375}],[" For any non-zero natural number `n`, `n` is a divisor of itself.",{"type":"∀ (n : ℕ), n ≠ 0 → n ∈ n.divisors","name":"Nat.mem_divisors_self","isProp":true,"docString":" For any non-zero natural number `n`, `n` is a divisor of itself.","distance":0.694334423904448438946701571694575250148773193359375}],["This theorem states that for any integer `n`, `n` is even if and only if `n` modulo 2 equals 0. In other words, an integer `n` satisfies the property `Even`--meaning there exists some other integer `r` such that `n = r + r`--if and only if the remainder when `n` is divided by 2 is 0. This is a formalization of the usual mathematical definition of even numbers in the integers.",{"type":"∀ {n : ℤ}, Even n ↔ n % 2 = 0","name":"Int.even_iff","isProp":true,"docString":"This theorem states that for any integer `n`, `n` is even if and only if `n` modulo 2 equals 0. In other words, an integer `n` satisfies the property `Even`--meaning there exists some other integer `r` such that `n = r + r`--if and only if the remainder when `n` is divided by 2 is 0. This is a formalization of the usual mathematical definition of even numbers in the integers.","distance":0.72067038749778677964030748626100830733776092529296875}],["If `a` is even, then `n` is even iff `n % a` is even. ",{"type":"∀ {n a : ℕ}, Even a → (Even (n % a) ↔ Even n)","name":"Even.mod_even_iff","isProp":true,"docString":"If `a` is even, then `n` is even iff `n % a` is even. ","distance":0.7897847961267532301832261509844101965427398681640625}],[" An integer `n` is even if and only if `n` modulo 2 equals 0.",{"type":"∀ {n : ℤ}, Even n ↔ n % 2 = 0","name":"Int.even_iff","isProp":true,"docString":" An integer `n` is even if and only if `n` modulo 2 equals 0.","distance":0.6962647130133705619670081432559527456760406494140625}],["This theorem states that for every natural number `n`, `n` is even if and only if `n` is not odd. Here, a number is defined as being even if it can be expressed as the sum of two identical numbers, and as being odd if it can be represented as `2*k + 1` for some natural number `k`. In other words, a natural number cannot be both even and odd simultaneously.",{"type":"∀ {n : ℕ}, Even n ↔ ¬Odd n","name":"Nat.even_iff_not_odd","isProp":true,"docString":"This theorem states that for every natural number `n`, `n` is even if and only if `n` is not odd. Here, a number is defined as being even if it can be expressed as the sum of two identical numbers, and as being odd if it can be represented as `2*k + 1` for some natural number `k`. In other words, a natural number cannot be both even and odd simultaneously.","distance":0.76046570094590804078649171060533262789249420166015625}],["If `a` is even, then `n` is odd iff `n % a` is odd. ",{"type":"∀ {n a : ℕ}, Even a → (Odd (n % a) ↔ Odd n)","name":"Odd.mod_even_iff","isProp":true,"docString":"If `a` is even, then `n` is odd iff `n % a` is odd. ","distance":0.79539079426584879950468121023732237517833709716796875}],["If `n` is odd and `a` is even, then `n % a` is odd. ",{"type":"∀ {n a : ℕ}, Odd n → Even a → Odd (n % a)","name":"Odd.mod_even","isProp":true,"docString":"If `n` is odd and `a` is even, then `n % a` is odd. ","distance":0.811242925611644682959422425483353435993194580078125}],["If `n` is a nonzero natural number and `p ≠ 1`, then there are natural numbers `e`\nand `n'` such that `n'` is not divisible by `p` and `n = p^e * n'`. ",{"type":"∀ {n : ℕ}, n ≠ 0 → ∀ (p : ℕ), p ≠ 1 → ∃ e n', ¬p ∣ n' ∧ n = p ^ e * n'","name":"Nat.exists_eq_pow_mul_and_not_dvd","isProp":true,"docString":"If `n` is a nonzero natural number and `p ≠ 1`, then there are natural numbers `e`\nand `n'` such that `n'` is not divisible by `p` and `n = p^e * n'`. ","distance":0.82783136497868470282668340587406419217586517333984375}],["`n : ℕ` is perfect if and only the sum of the proper divisors of `n` is `n` and `n`\nis positive. ",{"type":"ℕ → Prop","name":"Nat.Perfect","isProp":false,"docString":"`n : ℕ` is perfect if and only the sum of the proper divisors of `n` is `n` and `n`\nis positive. ","distance":0.87011322516394062898115180360036902129650115966796875}],["`boddDiv2 n` returns a 2-tuple of type `(Bool, Nat)` where the `Bool` value indicates whether\n`n` is odd or not and the `Nat` value returns `⌊n/2⌋` ",{"type":"ℕ → Bool × ℕ","name":"Nat.boddDiv2","isProp":false,"docString":"`boddDiv2 n` returns a 2-tuple of type `(Bool, Nat)` where the `Bool` value indicates whether\n`n` is odd or not and the `Nat` value returns `⌊n/2⌋` ","distance":0.87032633744360843319753939795191399753093719482421875}],["Strong recursion principle on even and odd numbers: if for all `i : ℕ` we can prove `P (2 * i)`\nfrom `P j` for all `j < 2 * i` and we can prove `P (2 * i + 1)` from `P j` for all `j < 2 * i + 1`,\nthen we have `P n` for all `n : ℕ`. ",{"type":"{P : ℕ → Sort u_1} →\n  ((n : ℕ) → ((k : ℕ) → k < 2 * n → P k) → P (2 * n)) →\n    ((n : ℕ) → ((k : ℕ) → k < 2 * n + 1 → P k) → P (2 * n + 1)) → (n : ℕ) → P n","name":"Nat.evenOddStrongRec","isProp":false,"docString":"Strong recursion principle on even and odd numbers: if for all `i : ℕ` we can prove `P (2 * i)`\nfrom `P j` for all `j < 2 * i` and we can prove `P (2 * i + 1)` from `P j` for all `j < 2 * i + 1`,\nthen we have `P n` for all `n : ℕ`. ","distance":0.87585004894203299929955619518295861780643463134765625}],["`n : ℕ` is _abundant_ if the sum of the proper divisors of `n` is greater than `n`. ",{"type":"ℕ → Prop","name":"Nat.Abundant","isProp":false,"docString":"`n : ℕ` is _abundant_ if the sum of the proper divisors of `n` is greater than `n`. ","distance":0.87640094214521990778621329809539020061492919921875}],["`n : ℕ` is _deficient_ if the sum of the proper divisors of `n` is less than `n`. ",{"type":"ℕ → Prop","name":"Nat.Deficient","isProp":false,"docString":"`n : ℕ` is _deficient_ if the sum of the proper divisors of `n` is less than `n`. ","distance":0.87828003158935252780992186671937815845012664794921875}],["If for all `n ≠ 0 ∈ ℤ`, `n • A = A`, then `A` is divisible.\n",{"type":"(A : Type u_1) → [inst : AddCommGroup A] → (∀ {n : ℤ}, n ≠ 0 → n • ⊤ = ⊤) → DivisibleBy A ℤ","name":"AddCommGroup.divisibleByIntOfSMulTopEqTop","isProp":false,"docString":"If for all `n ≠ 0 ∈ ℤ`, `n • A = A`, then `A` is divisible.\n","distance":0.88443714961520314421505872815032489597797393798828125}],["In `Fin n`, all elements are even for odd `n`,\notherwise an element is even iff its `Fin.val` value is even. ",{"type":"∀ {n : ℕ} {k : Fin n}, Even k ↔ Odd n ∨ Even ↑k","name":"Fin.even_iff","isProp":true,"docString":"In `Fin n`, all elements are even for odd `n`,\notherwise an element is even iff its `Fin.val` value is even. ","distance":0.88573070363033734597735247007221914827823638916015625}],["`div2 n = ⌊n/2⌋` the greatest integer smaller than `n/2`",{"type":"ℕ → ℕ","name":"Nat.div2","isProp":false,"docString":"`div2 n = ⌊n/2⌋` the greatest integer smaller than `n/2`","distance":0.8865141915866312505301038981997407972812652587890625}],["Two natural numbers are equal if and only if they have the same divisors. ",{"type":"∀ {m n : ℕ}, (∀ (a : ℕ), a ∣ m ↔ a ∣ n) ↔ m = n","name":"Nat.dvd_left_iff_eq","isProp":true,"docString":"Two natural numbers are equal if and only if they have the same divisors. ","distance":0.88788704646745630899573598071583546698093414306640625}],["A (positive) natural number `n` is a sum of two squares if and only if the exponent of\nevery prime `q` such that `q % 4 = 3` in the prime factorization of `n` is even.\n(The assumption `0 < n` is not present, since for `n = 0`, both sides are satisfied;\nthe right hand side holds, since `padicValNat q 0 = 0` by definition.) ",{"type":"∀ {n : ℕ}, (∃ x y, n = x ^ 2 + y ^ 2) ↔ ∀ {q : ℕ}, Nat.Prime q → q % 4 = 3 → Even (padicValNat q n)","name":"Nat.eq_sq_add_sq_iff","isProp":true,"docString":"A (positive) natural number `n` is a sum of two squares if and only if the exponent of\nevery prime `q` such that `q % 4 = 3` in the prime factorization of `n` is even.\n(The assumption `0 < n` is not present, since for `n = 0`, both sides are satisfied;\nthe right hand side holds, since `padicValNat q 0 = 0` by definition.) ","distance":0.89153046834728788549995215362287126481533050537109375}],["If `m` and `n` are natural numbers, then the natural number `m^n` is even\nif and only if `m` is even and `n` is positive. ",{"type":"∀ {m n : ℕ}, Even (m ^ n) ↔ Even m ∧ n ≠ 0","name":"Nat.even_pow","isProp":true,"docString":"If `m` and `n` are natural numbers, then the natural number `m^n` is even\nif and only if `m` is even and `n` is positive. ","distance":0.89275804842193207111478159276884980499744415283203125}],["In `Fin n`, all elements are odd for odd `n`,\notherwise an element is odd iff its `Fin.val` value is odd. ",{"type":"∀ {n : ℕ} [inst : NeZero n] {k : Fin n}, Odd k ↔ Odd n ∨ Odd ↑k","name":"Fin.odd_iff","isProp":true,"docString":"In `Fin n`, all elements are odd for odd `n`,\notherwise an element is odd iff its `Fin.val` value is odd. ","distance":0.8929012767204060896375494849053211510181427001953125}],["There are exactly `⌊N/n⌋` positive multiples of `n` that are `≤ N`.\nSee `Nat.card_multiples` for a \"shifted-by-one\" version. ",{"type":"∀ (N n : ℕ), (Finset.filter (fun k => k ≠ 0 ∧ n ∣ k) (Finset.range N.succ)).card = N / n","name":"Nat.card_multiples'","isProp":true,"docString":"There are exactly `⌊N/n⌋` positive multiples of `n` that are `≤ N`.\nSee `Nat.card_multiples` for a \"shifted-by-one\" version. ","distance":0.90541183287432025483809638899401761591434478759765625}],["If a prime `p` divides `n` such that `-1` is a square modulo `n`, then `p % 4 ≠ 3`. ",{"type":"∀ {p n : ℕ}, Nat.Prime p → p ∣ n → IsSquare (-1) → p % 4 ≠ 3","name":"Nat.Prime.mod_four_ne_three_of_dvd_isSquare_neg_one","isProp":true,"docString":"If a prime `p` divides `n` such that `-1` is a square modulo `n`, then `p % 4 ≠ 3`. ","distance":0.91108694362697917323856700022588483989238739013671875}],["We have that `hζ.toInteger - 1` does not divide `2`. ",{"type":"∀ {p : ℕ+} {k : ℕ} {K : Type u} [inst : Field K] {ζ : K} [hp : Fact (Nat.Prime ↑p)] [inst_1 : CharZero K]\n  [inst_2 : IsCyclotomicExtension {p ^ (k + 1)} ℚ K] (hζ : IsPrimitiveRoot ζ ↑(p ^ (k + 1))),\n  p ≠ 2 → ¬hζ.toInteger - 1 ∣ 2","name":"IsPrimitiveRoot.toInteger_sub_one_not_dvd_two","isProp":true,"docString":"We have that `hζ.toInteger - 1` does not divide `2`. ","distance":0.9133688036628158091190243794699199497699737548828125}]]