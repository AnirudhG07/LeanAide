[["The set of `k`-rough numbers `≤ N` can be written as the union of the sets of multiples `≤ N`\nof primes `k ≤ p ≤ N`. ",{"type":"∀ (N k : ℕ),\n  N.roughNumbersUpTo k =\n    (N.succ.primesBelow \\ k.primesBelow).biUnion fun p => Finset.filter (fun m => m ≠ 0 ∧ p ∣ m) (Finset.range N.succ)","name":"Nat.roughNumbersUpTo_eq_biUnion","isProp":true,"docString":"The set of `k`-rough numbers `≤ N` can be written as the union of the sets of multiples `≤ N`\nof primes `k ≤ p ≤ N`. ","distance":0.8743917600276394086478148892638273537158966064453125}],[" The number of `k`-rough numbers less than or equal to `N` is bounded by the sum of the integer divisors of `N` in the interval `[k, N]`.",{"type":"∀ (N k : ℕ), (N.roughNumbersUpTo k).card ≤ (N.succ.primesBelow \\ k.primesBelow).sum fun p => N / p","name":"Nat.roughNumbersUpTo_card_le","isProp":true,"docString":" The number of `k`-rough numbers less than or equal to `N` is bounded by the sum of the integer divisors of `N` in the interval `[k, N]`.","distance":0.79760292042860692074413009322597645223140716552734375}],["This theorem states that for every pair of natural numbers `n` and `k`, if `n` is greater than zero and `k` is greater than one, then the integer division of `n` by `k` is less than `n`. In other words, dividing a positive natural number by another natural number greater than one results in a number which is less than the original number.",{"type":"∀ {n k : ℕ}, 0 < n → 1 < k → n / k < n","name":"Nat.div_lt_self","isProp":true,"docString":"This theorem states that for every pair of natural numbers `n` and `k`, if `n` is greater than zero and `k` is greater than one, then the integer division of `n` by `k` is less than `n`. In other words, dividing a positive natural number by another natural number greater than one results in a number which is less than the original number.","distance":0.817126366725280828262611976242624223232269287109375}],["There are exactly `⌊N/n⌋` positive multiples of `n` that are `≤ N`.\nSee `Nat.card_multiples` for a \"shifted-by-one\" version. ",{"type":"∀ (N n : ℕ), (Finset.filter (fun k => k ≠ 0 ∧ n ∣ k) (Finset.range N.succ)).card = N / n","name":"Nat.card_multiples'","isProp":true,"docString":"There are exactly `⌊N/n⌋` positive multiples of `n` that are `≤ N`.\nSee `Nat.card_multiples` for a \"shifted-by-one\" version. ","distance":0.88133295626207175388344694511033594608306884765625}],[" The number of positive multiples of `n` less than or equal to `N` is equal to the integer part of `N` divided by `n`.",{"type":"∀ (N n : ℕ), (Finset.filter (fun k => k ≠ 0 ∧ n ∣ k) (Finset.range N.succ)).card = N / n","name":"Nat.card_multiples'","isProp":true,"docString":" The number of positive multiples of `n` less than or equal to `N` is equal to the integer part of `N` divided by `n`.","distance":0.860138472462761427550503867678344249725341796875}],["This theorem states that for any two natural numbers `n` and `k`, the result of integer division of `n` by `k` is always less than or equal to `n`. This is always true regardless of the values of `n` and `k` because integer division rounds down, so `n / k` is always going to be less than `n` unless `k` is 1.",{"type":"∀ (n k : ℕ), n / k ≤ n","name":"Nat.div_le_self","isProp":true,"docString":"This theorem states that for any two natural numbers `n` and `k`, the result of integer division of `n` by `k` is always less than or equal to `n`. This is always true regardless of the values of `n` and `k` because integer division rounds down, so `n / k` is always going to be less than `n` unless `k` is 1.","distance":0.82630175619497070460539589475956745445728302001953125}],["If `n > 0` then `m` is not divisible by `n` iff it is between `n * k` and `n * (k + 1)`\nfor some `k`. ",{"type":"∀ {n : ℤ} (m : ℤ), 0 < n → ((∃ k, n * k < m ∧ m < n * (k + 1)) ↔ ¬n ∣ m)","name":"Int.exists_lt_and_lt_iff_not_dvd","isProp":true,"docString":"If `n > 0` then `m` is not divisible by `n` iff it is between `n * k` and `n * (k + 1)`\nfor some `k`. ","distance":0.89818794548275981970419934441451914608478546142578125}],["`n` is not divisible by `a` iff it is between `a * k` and `a * (k + 1)` for some `k`. ",{"type":"∀ (n : ℕ) {a : ℕ}, 0 < a → ((∃ k, a * k < n ∧ n < a * (k + 1)) ↔ ¬a ∣ n)","name":"Nat.not_dvd_iff_between_consec_multiples","isProp":true,"docString":"`n` is not divisible by `a` iff it is between `a * k` and `a * (k + 1)` for some `k`. ","distance":0.90717783569923160502668224580702371895313262939453125}],["**Hermite Theorem**. Let `N` be an integer. There are only finitely many number fields\n(in some fixed extension of `ℚ`) of discriminant bounded by `N`. ",{"type":"∀ (A : Type u_2) [inst : Field A] [inst_1 : CharZero A] (N : ℕ), {K | |NumberField.discr ↥↑K| ≤ ↑N}.Finite","name":"NumberField.finite_of_discr_bdd","isProp":true,"docString":"**Hermite Theorem**. Let `N` be an integer. There are only finitely many number fields\n(in some fixed extension of `ℚ`) of discriminant bounded by `N`. ","distance":0.9075331661922489967508909103344194591045379638671875}],["If `s` is an infinite set of natural numbers and `k > 0`, then `s` contains two elements `m < n`\nthat are equal mod `k`. ",{"type":"∀ {s : Set ℕ}, s.Infinite → ∀ {k : ℕ}, 0 < k → ∃ m ∈ s, ∃ n ∈ s, m < n ∧ m ≡ n [MOD k]","name":"Nat.exists_lt_modEq_of_infinite","isProp":true,"docString":"If `s` is an infinite set of natural numbers and `k > 0`, then `s` contains two elements `m < n`\nthat are equal mod `k`. ","distance":0.91648117229124614890878319783951155841350555419921875}],["`n` is a prime power if there is a prime `p` and a positive natural `k` such that `n` can be\nwritten as `p^k`. ",{"type":"{R : Type u_1} → [inst : CommMonoidWithZero R] → R → Prop","name":"IsPrimePow","isProp":false,"docString":"`n` is a prime power if there is a prime `p` and a positive natural `k` such that `n` can be\nwritten as `p^k`. ","distance":0.9216960978278141425334979430772364139556884765625}],["If `μ` is a primitive `n`th root of unity in `R` and `k < n`, then `n` is divisible\nby `(μ-1)^k` in `ℤ[μ] ⊆ R`. ",{"type":"∀ {R : Type u_1} [inst : CommRing R] [inst_1 : IsDomain R] {k n : ℕ},\n  k < n → ∀ {μ : R}, IsPrimitiveRoot μ n → ∃ z ∈ Algebra.adjoin ℤ {μ}, ↑n = z * (μ - 1) ^ k","name":"IsPrimitiveRoot.self_sub_one_pow_dvd_order","isProp":true,"docString":"If `μ` is a primitive `n`th root of unity in `R` and `k < n`, then `n` is divisible\nby `(μ-1)^k` in `ℤ[μ] ⊆ R`. ","distance":0.9229255433646204043185434784390963613986968994140625}],["`mod_div m k = (m % k, m / k)`.\nWe define `m % k` and `m / k` in the same way as for `ℕ`\nexcept that when `m = n * k` we take `m % k = k` and\n`m / k = n - 1`.  This ensures that `m % k` is always positive\nand `m = (m % k) + k * (m / k)` in all cases.  Later we\ndefine a function `div_exact` which gives the usual `m / k`\nin the case where `k` divides `m`.\n",{"type":"ℕ+ → ℕ+ → ℕ+ × ℕ","name":"PNat.modDiv","isProp":false,"docString":"`mod_div m k = (m % k, m / k)`.\nWe define `m % k` and `m / k` in the same way as for `ℕ`\nexcept that when `m = n * k` we take `m % k = k` and\n`m / k = n - 1`.  This ensures that `m % k` is always positive\nand `m = (m % k) + k * (m / k)` in all cases.  Later we\ndefine a function `div_exact` which gives the usual `m / k`\nin the case where `k` divides `m`.\n","distance":0.94827022263592797290954194977530278265476226806640625}],["If `n` is a nonzero natural number and `p ≠ 1`, then there are natural numbers `e`\nand `n'` such that `n'` is not divisible by `p` and `n = p^e * n'`. ",{"type":"∀ {n : ℕ}, n ≠ 0 → ∀ (p : ℕ), p ≠ 1 → ∃ e n', ¬p ∣ n' ∧ n = p ^ e * n'","name":"Nat.exists_eq_pow_mul_and_not_dvd","isProp":true,"docString":"If `n` is a nonzero natural number and `p ≠ 1`, then there are natural numbers `e`\nand `n'` such that `n'` is not divisible by `p` and `n = p^e * n'`. ","distance":0.95154309722439478491651243530213832855224609375}],["A (positive) natural number `n` is a sum of two squares if and only if the exponent of\nevery prime `q` such that `q % 4 = 3` in the prime factorization of `n` is even.\n(The assumption `0 < n` is not present, since for `n = 0`, both sides are satisfied;\nthe right hand side holds, since `padicValNat q 0 = 0` by definition.) ",{"type":"∀ {n : ℕ}, (∃ x y, n = x ^ 2 + y ^ 2) ↔ ∀ {q : ℕ}, Nat.Prime q → q % 4 = 3 → Even (padicValNat q n)","name":"Nat.eq_sq_add_sq_iff","isProp":true,"docString":"A (positive) natural number `n` is a sum of two squares if and only if the exponent of\nevery prime `q` such that `q % 4 = 3` in the prime factorization of `n` is even.\n(The assumption `0 < n` is not present, since for `n = 0`, both sides are satisfied;\nthe right hand side holds, since `padicValNat q 0 = 0` by definition.) ","distance":0.95837061192157457778506568502052687108516693115234375}],["If `n` is a squarefree natural number, then `-1` is a square modulo `n` if and only if\n`n` is not divisible by a prime `q` such that `q % 4 = 3`. ",{"type":"∀ {n : ℕ}, Squarefree n → (IsSquare (-1) ↔ ∀ {q : ℕ}, Nat.Prime q → q ∣ n → q % 4 ≠ 3)","name":"ZMod.isSquare_neg_one_iff","isProp":true,"docString":"If `n` is a squarefree natural number, then `-1` is a square modulo `n` if and only if\n`n` is not divisible by a prime `q` such that `q % 4 = 3`. ","distance":0.96272552270359901260832202751771546900272369384765625}],["For `d ∣ n`, the totient of `n/d` equals the number of values `k < n` such that `gcd n k = d` ",{"type":"∀ {n d : ℕ}, d ∣ n → (n / d).totient = (Finset.filter (fun k => n.gcd k = d) (Finset.range n)).card","name":"Nat.totient_div_of_dvd","isProp":true,"docString":"For `d ∣ n`, the totient of `n/d` equals the number of values `k < n` such that `gcd n k = d` ","distance":0.96916352077695433475668096434674225747585296630859375}],["The integers modulo `n : ℕ`. ",{"type":"ℕ → Type","name":"ZMod","isProp":false,"docString":"The integers modulo `n : ℕ`. ","distance":0.9699661123024119202540305195725522935390472412109375}],["We define `m % k` and `m / k` in the same way as for `ℕ`\nexcept that when `m = n * k` we take `m % k = k` and\n`m / k = n - 1`.  This ensures that `m % k` is always positive\nand `m = (m % k) + k * (m / k)` in all cases.  Later we\ndefine a function `div_exact` which gives the usual `m / k`\nin the case where `k` divides `m`.\n",{"type":"ℕ+ → ℕ → ℕ → ℕ+ × ℕ","name":"PNat.modDivAux","isProp":false,"docString":"We define `m % k` and `m / k` in the same way as for `ℕ`\nexcept that when `m = n * k` we take `m % k = k` and\n`m / k = n - 1`.  This ensures that `m % k` is always positive\nand `m = (m % k) + k * (m / k)` in all cases.  Later we\ndefine a function `div_exact` which gives the usual `m / k`\nin the case where `k` divides `m`.\n","distance":0.97309170499011365951247398697887547314167022705078125}],["For `p ≠ 1`, the `p`-adic valuation of a natural `n ≠ 0` is the largest natural number `k` such\nthat `p^k` divides `n`. If `n = 0` or `p = 1`, then `padicValNat p q` defaults to `0`. ",{"type":"ℕ → ℕ → ℕ","name":"padicValNat","isProp":false,"docString":"For `p ≠ 1`, the `p`-adic valuation of a natural `n ≠ 0` is the largest natural number `k` such\nthat `p^k` divides `n`. If `n = 0` or `p = 1`, then `padicValNat p q` defaults to `0`. ","distance":0.97321777324330316361056247842498123645782470703125}],["A polynomial over the integers is divisible by `n : ℕ`\nif and only if it is zero over `ZMod n`. ",{"type":"∀ {σ : Type u_1} (n : ℕ) (φ : MvPolynomial σ ℤ),\n  MvPolynomial.C ↑n ∣ φ ↔ (MvPolynomial.map (Int.castRingHom (ZMod n))) φ = 0","name":"MvPolynomial.C_dvd_iff_zmod","isProp":true,"docString":"A polynomial over the integers is divisible by `n : ℕ`\nif and only if it is zero over `ZMod n`. ","distance":0.97366464422315190940793172558187507092952728271484375}],["If `n` is a squarefree natural number, then `-1` is a square modulo `n` if and only if\n`n` has no divisor `q` that is `≡ 3 mod 4`. ",{"type":"∀ {n : ℕ}, Squarefree n → (IsSquare (-1) ↔ ∀ {q : ℕ}, q ∣ n → q % 4 ≠ 3)","name":"ZMod.isSquare_neg_one_iff'","isProp":true,"docString":"If `n` is a squarefree natural number, then `-1` is a square modulo `n` if and only if\n`n` has no divisor `q` that is `≡ 3 mod 4`. ","distance":0.9752598316496194907898598103201948106288909912109375}],["`m` is not divisible by `n` if it is between `n * k` and `n * (k + 1)` for some `k`. ",{"type":"∀ {m n k : ℕ}, n * k < m → m < n * (k + 1) → ¬n ∣ m","name":"Nat.not_dvd_of_between_consec_multiples","isProp":true,"docString":"`m` is not divisible by `n` if it is between `n * k` and `n * (k + 1)` for some `k`. ","distance":0.98057897821063721988110728489118628203868865966796875}],["Multiplication modulo `n` ",{"type":"{n : ℕ} → Fin n → Fin n → Fin n","name":"Fin.mul","isProp":false,"docString":"Multiplication modulo `n` ","distance":0.98101898745877480489951949493843130767345428466796875}]]