[["If `n > 0` then `m` is not divisible by `n` iff it is between `n * k` and `n * (k + 1)`\nfor some `k`. ",{"type":"∀ {n : ℤ} (m : ℤ), 0 < n → ((∃ k, n * k < m ∧ m < n * (k + 1)) ↔ ¬n ∣ m)","name":"Int.exists_lt_and_lt_iff_not_dvd","isProp":true,"docString":"If `n > 0` then `m` is not divisible by `n` iff it is between `n * k` and `n * (k + 1)`\nfor some `k`. ","distance":0.8901052451556716871294838711037300527095794677734375}],[" For integers `m` and positive integer `n`, `m` is not divisible by `n` if and only if there exists an integer `k` such that `n * k < m < n * (k + 1)`.",{"type":"∀ (m : ℤ) {n : ℤ}, 0 < n → ((∃ k, n * k < m ∧ m < n * (k + 1)) ↔ ¬n ∣ m)","name":"Int.exists_lt_and_lt_iff_not_dvd","isProp":true,"docString":" For integers `m` and positive integer `n`, `m` is not divisible by `n` if and only if there exists an integer `k` such that `n * k < m < n * (k + 1)`.","distance":0.84651038372511389074048793190740980207920074462890625}],["This theorem states that for any two natural numbers `n` and `k`, the result of integer division of `n` by `k` is always less than or equal to `n`. This is always true regardless of the values of `n` and `k` because integer division rounds down, so `n / k` is always going to be less than `n` unless `k` is 1.",{"type":"∀ (n k : ℕ), n / k ≤ n","name":"Nat.div_le_self","isProp":true,"docString":"This theorem states that for any two natural numbers `n` and `k`, the result of integer division of `n` by `k` is always less than or equal to `n`. This is always true regardless of the values of `n` and `k` because integer division rounds down, so `n / k` is always going to be less than `n` unless `k` is 1.","distance":0.8232288954136854908227860505576245486736297607421875}],["`n` is not divisible by `a` iff it is between `a * k` and `a * (k + 1)` for some `k`. ",{"type":"∀ (n : ℕ) {a : ℕ}, 0 < a → ((∃ k, a * k < n ∧ n < a * (k + 1)) ↔ ¬a ∣ n)","name":"Nat.not_dvd_iff_between_consec_multiples","isProp":true,"docString":"`n` is not divisible by `a` iff it is between `a * k` and `a * (k + 1)` for some `k`. ","distance":0.91514157206055835036551115990732796490192413330078125}],[" The least common multiple of natural numbers m and n divides k if and only if both m and n divide k. (Equivalently, m and n have product d such that k is divisible by d if and only if m and n are divisors of k.)",{"type":"∀ {m n k : ℕ}, m.lcm n ∣ k ↔ m ∣ k ∧ n ∣ k","name":"Nat.lcm_dvd_iff","isProp":true,"docString":" The least common multiple of natural numbers m and n divides k if and only if both m and n divide k. (Equivalently, m and n have product d such that k is divisible by d if and only if m and n are divisors of k.)","distance":0.87157094896520581617238576654926873743534088134765625}],["This theorem states that for every pair of natural numbers `n` and `k`, if `n` is greater than zero and `k` is greater than one, then the integer division of `n` by `k` is less than `n`. In other words, dividing a positive natural number by another natural number greater than one results in a number which is less than the original number.",{"type":"∀ {n k : ℕ}, 0 < n → 1 < k → n / k < n","name":"Nat.div_lt_self","isProp":true,"docString":"This theorem states that for every pair of natural numbers `n` and `k`, if `n` is greater than zero and `k` is greater than one, then the integer division of `n` by `k` is less than `n`. In other words, dividing a positive natural number by another natural number greater than one results in a number which is less than the original number.","distance":0.837376844956423838084447197616100311279296875}],["There are exactly `⌊N/n⌋` positive multiples of `n` that are `≤ N`.\nSee `Nat.card_multiples` for a \"shifted-by-one\" version. ",{"type":"∀ (N n : ℕ), (Finset.filter (fun k => k ≠ 0 ∧ n ∣ k) (Finset.range N.succ)).card = N / n","name":"Nat.card_multiples'","isProp":true,"docString":"There are exactly `⌊N/n⌋` positive multiples of `n` that are `≤ N`.\nSee `Nat.card_multiples` for a \"shifted-by-one\" version. ","distance":0.917297848782030467162940112757496535778045654296875}],["If a small natural number is divisible by a larger natural number,\nthe small number is zero. ",{"type":"∀ {a b : ℕ}, a ∣ b → b < a → b = 0","name":"Nat.eq_zero_of_dvd_of_lt","isProp":true,"docString":"If a small natural number is divisible by a larger natural number,\nthe small number is zero. ","distance":0.92122939963090944015533523270278237760066986083984375}],["A polynomial over the integers is divisible by `n : ℕ`\nif and only if it is zero over `ZMod n`. ",{"type":"∀ {σ : Type u_1} (n : ℕ) (φ : MvPolynomial σ ℤ),\n  MvPolynomial.C ↑n ∣ φ ↔ (MvPolynomial.map (Int.castRingHom (ZMod n))) φ = 0","name":"MvPolynomial.C_dvd_iff_zmod","isProp":true,"docString":"A polynomial over the integers is divisible by `n : ℕ`\nif and only if it is zero over `ZMod n`. ","distance":0.93985081759017763403107892372645437717437744140625}],["**Hermite Theorem**. Let `N` be an integer. There are only finitely many number fields\n(in some fixed extension of `ℚ`) of discriminant bounded by `N`. ",{"type":"∀ (A : Type u_2) [inst : Field A] [inst_1 : CharZero A] (N : ℕ), {K | |NumberField.discr ↥↑K| ≤ ↑N}.Finite","name":"NumberField.finite_of_discr_bdd","isProp":true,"docString":"**Hermite Theorem**. Let `N` be an integer. There are only finitely many number fields\n(in some fixed extension of `ℚ`) of discriminant bounded by `N`. ","distance":0.94202951360085673826461061253212392330169677734375}],["If for all `n ≠ 0 ∈ ℤ`, `n • A = A`, then `A` is divisible.\n",{"type":"(A : Type u_1) → [inst : AddCommGroup A] → (∀ {n : ℤ}, n ≠ 0 → n • ⊤ = ⊤) → DivisibleBy A ℤ","name":"AddCommGroup.divisibleByIntOfSMulTopEqTop","isProp":false,"docString":"If for all `n ≠ 0 ∈ ℤ`, `n • A = A`, then `A` is divisible.\n","distance":0.949810753628578918750235970946960151195526123046875}],["If an integer with larger absolute value divides an integer, it is zero. ",{"type":"∀ {m n : ℤ}, m ∣ n → n.natAbs < m.natAbs → n = 0","name":"Int.eq_zero_of_dvd_of_natAbs_lt_natAbs","isProp":true,"docString":"If an integer with larger absolute value divides an integer, it is zero. ","distance":0.977394766156013172775374187040142714977264404296875}],["If `μ` is a primitive `n`th root of unity in `R` and `k < n`, then `n` is divisible\nby `(μ-1)^k` in `ℤ[μ] ⊆ R`. ",{"type":"∀ {R : Type u_1} [inst : CommRing R] [inst_1 : IsDomain R] {k n : ℕ},\n  k < n → ∀ {μ : R}, IsPrimitiveRoot μ n → ∃ z ∈ Algebra.adjoin ℤ {μ}, ↑n = z * (μ - 1) ^ k","name":"IsPrimitiveRoot.self_sub_one_pow_dvd_order","isProp":true,"docString":"If `μ` is a primitive `n`th root of unity in `R` and `k < n`, then `n` is divisible\nby `(μ-1)^k` in `ℤ[μ] ⊆ R`. ","distance":0.98133643166095219090294676789199002087116241455078125}],["`m` is not divisible by `n` if it is between `n * k` and `n * (k + 1)` for some `k`. ",{"type":"∀ {m n k : ℕ}, n * k < m → m < n * (k + 1) → ¬n ∣ m","name":"Nat.not_dvd_of_between_consec_multiples","isProp":true,"docString":"`m` is not divisible by `n` if it is between `n * k` and `n * (k + 1)` for some `k`. ","distance":0.98582027311762787658011575331329368054866790771484375}],["`mod_div m k = (m % k, m / k)`.\nWe define `m % k` and `m / k` in the same way as for `ℕ`\nexcept that when `m = n * k` we take `m % k = k` and\n`m / k = n - 1`.  This ensures that `m % k` is always positive\nand `m = (m % k) + k * (m / k)` in all cases.  Later we\ndefine a function `div_exact` which gives the usual `m / k`\nin the case where `k` divides `m`.\n",{"type":"ℕ+ → ℕ+ → ℕ+ × ℕ","name":"PNat.modDiv","isProp":false,"docString":"`mod_div m k = (m % k, m / k)`.\nWe define `m % k` and `m / k` in the same way as for `ℕ`\nexcept that when `m = n * k` we take `m % k = k` and\n`m / k = n - 1`.  This ensures that `m % k` is always positive\nand `m = (m % k) + k * (m / k)` in all cases.  Later we\ndefine a function `div_exact` which gives the usual `m / k`\nin the case where `k` divides `m`.\n","distance":0.987052043025645531315603875555098056793212890625}],["`n : ℕ` is _deficient_ if the sum of the proper divisors of `n` is less than `n`. ",{"type":"ℕ → Prop","name":"Nat.Deficient","isProp":false,"docString":"`n : ℕ` is _deficient_ if the sum of the proper divisors of `n` is less than `n`. ","distance":0.99004581425279114537119085071026347577571868896484375}],["The integers modulo `n : ℕ`. ",{"type":"ℕ → Type","name":"ZMod","isProp":false,"docString":"The integers modulo `n : ℕ`. ","distance":0.9957090405657218479262837718124501407146453857421875}],["The set of `k`-rough numbers `≤ N` can be written as the union of the sets of multiples `≤ N`\nof primes `k ≤ p ≤ N`. ",{"type":"∀ (N k : ℕ),\n  N.roughNumbersUpTo k =\n    (N.succ.primesBelow \\ k.primesBelow).biUnion fun p => Finset.filter (fun m => m ≠ 0 ∧ p ∣ m) (Finset.range N.succ)","name":"Nat.roughNumbersUpTo_eq_biUnion","isProp":true,"docString":"The set of `k`-rough numbers `≤ N` can be written as the union of the sets of multiples `≤ N`\nof primes `k ≤ p ≤ N`. ","distance":0.99818121897030731570765738069894723594188690185546875}],["If `s` is an infinite set of natural numbers and `k > 0`, then `s` contains two elements `m < n`\nthat are equal mod `k`. ",{"type":"∀ {s : Set ℕ}, s.Infinite → ∀ {k : ℕ}, 0 < k → ∃ m ∈ s, ∃ n ∈ s, m < n ∧ m ≡ n [MOD k]","name":"Nat.exists_lt_modEq_of_infinite","isProp":true,"docString":"If `s` is an infinite set of natural numbers and `k > 0`, then `s` contains two elements `m < n`\nthat are equal mod `k`. ","distance":1.000557730874708450841126250452362000942230224609375}],["We define `m % k` and `m / k` in the same way as for `ℕ`\nexcept that when `m = n * k` we take `m % k = k` and\n`m / k = n - 1`.  This ensures that `m % k` is always positive\nand `m = (m % k) + k * (m / k)` in all cases.  Later we\ndefine a function `div_exact` which gives the usual `m / k`\nin the case where `k` divides `m`.\n",{"type":"ℕ+ → ℕ → ℕ → ℕ+ × ℕ","name":"PNat.modDivAux","isProp":false,"docString":"We define `m % k` and `m / k` in the same way as for `ℕ`\nexcept that when `m = n * k` we take `m % k = k` and\n`m / k = n - 1`.  This ensures that `m % k` is always positive\nand `m = (m % k) + k * (m / k)` in all cases.  Later we\ndefine a function `div_exact` which gives the usual `m / k`\nin the case where `k` divides `m`.\n","distance":1.003143425681680245276083951466716825962066650390625}],["We define `m % k` in the same way as for `ℕ`\nexcept that when `m = n * k` we take `m % k = k` This ensures that `m % k` is always positive.\n",{"type":"ℕ+ → ℕ+ → ℕ+","name":"PNat.mod","isProp":false,"docString":"We define `m % k` in the same way as for `ℕ`\nexcept that when `m = n * k` we take `m % k = k` This ensures that `m % k` is always positive.\n","distance":1.0043463112965458350345215876586735248565673828125}],["If `m` and `n` are equal mod `k`, `m - n` is zero mod `k`. ",{"type":"∀ {m n k : ℕ}, m % k = n % k → (m - n) % k = 0","name":"Nat.sub_mod_eq_zero_of_mod_eq","isProp":true,"docString":"If `m` and `n` are equal mod `k`, `m - n` is zero mod `k`. ","distance":1.010848689633082830852117695030756294727325439453125}],["The proposition that a sequence indexed by integers is a divisibility sequence. ",{"type":"{R : Type u} → [inst : CommRing R] → (ℤ → R) → Prop","name":"IsDivSequence","isProp":false,"docString":"The proposition that a sequence indexed by integers is a divisibility sequence. ","distance":1.01559950943136012568857040605507791042327880859375}],["Over `Fin (n + 1)`, the multisets of size `k + 1` containing `0` are equivalent to those of size\n`k`, as demonstrated by respectively erasing or appending `0`. ",{"type":"{n k : ℕ} → { s // 0 ∈ s } ≃ Sym (Fin n.succ) k","name":"Sym.e1","isProp":false,"docString":"Over `Fin (n + 1)`, the multisets of size `k + 1` containing `0` are equivalent to those of size\n`k`, as demonstrated by respectively erasing or appending `0`. ","distance":1.02005214393475807099775920505635440349578857421875}]]