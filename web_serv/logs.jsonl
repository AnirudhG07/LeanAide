{"query": {"n": 5, "model_name": "all-mpnet-base-v2", "filename": "data/safe_prompts.json", "field": "doc_string", "doc_string": "Every prime number is either `2` or odd"}, "choices": [{"name": "nat.prime.mod_two_eq_one_iff_ne_two", "statement": "theorem nat.prime.mod_two_eq_one_iff_ne_two {p : ℕ} [fact (nat.prime p)] : p % 2 = 1 ↔ p ≠ 2", "theorem": "{p : ℕ} [fact (nat.prime p)] : p % 2 = 1 ↔ p ≠ 2", "args": "{p : ℕ} [fact (nat.prime p)]", "doc_string": "A prime `p` satisfies `p % 2 = 1` if and only if `p ≠ 2`.", "type": "p % 2 = 1 ↔ p ≠ 2"}, {"name": "nat.odd_mod_four_iff", "statement": "theorem nat.odd_mod_four_iff {n : ℕ} : n % 2 = 1 ↔ n % 4 = 1 ∨ n % 4 = 3", "theorem": "{n : ℕ} : n % 2 = 1 ↔ n % 4 = 1 ∨ n % 4 = 3", "args": "{n : ℕ}", "doc_string": "A natural number is odd iff it has residue `1` or `3` mod `4`", "type": "n % 2 = 1 ↔ n % 4 = 1 ∨ n % 4 = 3"}, {"name": "nat.factorization_eq_zero_iff", "statement": "theorem nat.factorization_eq_zero_iff (n : ℕ) : n.factorization = 0 ↔ n = 0 ∨ n = 1", "theorem": "(n : ℕ) : n.factorization = 0 ↔ n = 0 ∨ n = 1", "args": "(n : ℕ)", "doc_string": "The only numbers with empty prime factorization are `0` and `1`", "type": "n.factorization = 0 ↔ n = 0 ∨ n = 1"}, {"name": "nat.even_pow", "statement": "theorem nat.even_pow {m n : ℕ} : even (m ^ n) ↔ even m ∧ n ≠ 0", "theorem": "{m n : ℕ} : even (m ^ n) ↔ even m ∧ n ≠ 0", "args": "{m n : ℕ}", "doc_string": " If `m` and `n` are natural numbers, then the natural number `m^n` is even if and only if `m` is even and `n` is positive.", "type": "even (m ^ n) ↔ even m ∧ n ≠ 0"}, {"name": "nat.factorization_inj", "statement": "theorem nat.factorization_inj  : set.inj_on nat.factorization {x : ℕ | x ≠ 0}", "theorem": " : set.inj_on nat.factorization {x : ℕ | x ≠ 0}", "args": "", "doc_string": "Every nonzero natural number has a unique prime factorization", "type": "set.inj_on nat.factorization {x : ℕ | x ≠ 0}"}]}
{"query": {"n": 5, "model_name": "all-mpnet-base-v2", "filename": "data/safe_prompts.json", "field": "doc_string", "doc_string": "There are infinitely many odd numbers"}, "choices": [{"name": "nat.even_pow", "statement": "theorem nat.even_pow {m n : ℕ} : even (m ^ n) ↔ even m ∧ n ≠ 0", "theorem": "{m n : ℕ} : even (m ^ n) ↔ even m ∧ n ≠ 0", "args": "{m n : ℕ}", "doc_string": " If `m` and `n` are natural numbers, then the natural number `m^n` is even if and only if `m` is even and `n` is positive.", "type": "even (m ^ n) ↔ even m ∧ n ≠ 0"}, {"name": "irrational_sqrt_two", "statement": "theorem irrational_sqrt_two  : irrational (real.sqrt 2)", "theorem": " : irrational (real.sqrt 2)", "args": "", "doc_string": "**Irrationality of the Square Root of 2**", "type": "irrational (real.sqrt 2)"}, {"name": "nat.odd_mod_four_iff", "statement": "theorem nat.odd_mod_four_iff {n : ℕ} : n % 2 = 1 ↔ n % 4 = 1 ∨ n % 4 = 3", "theorem": "{n : ℕ} : n % 2 = 1 ↔ n % 4 = 1 ∨ n % 4 = 3", "args": "{n : ℕ}", "doc_string": "A natural number is odd iff it has residue `1` or `3` mod `4`", "type": "n % 2 = 1 ↔ n % 4 = 1 ∨ n % 4 = 3"}, {"name": "cardinal.cantor", "statement": "theorem cardinal.cantor (a : cardinal) : a < 2 ^ a", "theorem": "(a : cardinal) : a < 2 ^ a", "args": "(a : cardinal)", "doc_string": "**Cantor's theorem**", "type": "a < 2 ^ a"}, {"name": "gold_irrational", "statement": "theorem gold_irrational  : irrational golden_ratio", "theorem": " : irrational golden_ratio", "args": "", "doc_string": "The golden ratio is irrational.", "type": "irrational golden_ratio"}]}
