{
  "title": "Mathematical Document Wrapper",
  "description": "JSON schema for a structured mathematical document.",
  "type": "object",
  "properties": {
    "document": {
      "type": "array",
      "description": "The root of the mathematical document, containing a sequence of environments.",
      "items": {
        "anyOf": [
          {
            "$ref": "#/$defs/Title"
          },
          {
            "$ref": "#/$defs/Abstract"
          },
          {
            "$ref": "#/$defs/Metadata"
          },
          {
            "$ref": "#/$defs/Section"
          },
          {
            "$ref": "#/$defs/Theorem"
          },
          {
            "$ref": "#/$defs/Definition"
          },
          {
            "$ref": "#/$defs/Remark"
          },
          {
            "$ref": "#/$defs/LogicalStepSequence"
          },
          {
            "$ref": "#/$defs/Paragraph"
          },
          {
            "$ref": "#/$defs/Proof"
          },
          {
            "$ref": "#/$defs/Figure"
          },
          {
            "$ref": "#/$defs/Table"
          },
          {
            "$ref": "#/$defs/Bibliography"
          }
        ]
      }
    }
  },
  "required": [
    "document"
  ],
  "additionalProperties": false,
  "$defs": {
    "Title": {
      "type": "object",
      "description": "The title of the document.",
      "properties": {
        "title": {
          "type": "string",
          "description": "The title text."
        }
      },
      "required": [
        "title"
      ],
      "additionalProperties": false
    },
    "Abstract": {
      "type": "object",
      "description": "The abstract of the document.",
      "properties": {
        "abstract": {
          "type": "string",
          "description": "The abstract text."
        }
      },
      "required": [
        "abstract"
      ],
      "additionalProperties": false
    },
    "Section": {
      "type": "object",
      "description": "A section of the document.",
      "properties": {
        "content": {
          "type": "array",
          "description": "The content of the section.",
          "items": {
            "anyOf": [
              {
                "$ref": "#/$defs/Section"
              },
              {
                "$ref": "#/$defs/Theorem"
              },
              {
                "$ref": "#/$defs/Definition"
              },
              {
                "$ref": "#/$defs/Remark"
              },
              {
                "$ref": "#/$defs/LogicalStepSequence"
              },
              {
                "$ref": "#/$defs/Paragraph"
              },
              {
                "$ref": "#/$defs/Proof"
              },
              {
                "$ref": "#/$defs/Figure"
              },
              {
                "$ref": "#/$defs/Table"
              }
            ]
          }
        },
        "label": {
          "type": "string",
          "description": "Section identifier."
        },
        "level": {
          "type": "integer",
          "description": "The section level such as `1` for a section, `2` for a subsection."
        },
        "header": {
          "type": "string",
          "description": "The section header."
        }
      },
      "required": [
        "label",
        "header",
        "content"
      ],
      "additionalProperties": false
    },
    "Theorem": {
      "type": "object",
      "description": "A mathematical theorem, lemma, proposition, corollary, or claim.",
      "properties": {
        "claim": { "type": "string", "description": "The statement." },
        "label": { "type": "string", "description": "Unique identifier/label for referencing (e.g., 'thm:main', 'lem:pumping')." }, 
        "header": {
          "type": "string",
          "description": "The type of theorem-like environment. Must be one of the predefined values.",
          "enum": [
            "Theorem",
            "Lemma",
            "Proposition",
            "Corollary",
            "Claim"
          ]
        },
        "citations": {
          "type": "array",
          "description": "(OPTIONAL) Explicit list of citations relevant to this statement.",
          "items": { "$ref": "#/$defs/Citation" }
        },
        "internal_references": {
          "type": "array",
          "description": "(OPTIONAL) Explicit list of internal references mentioned in the statement.",
          "items": { "$ref": "#/$defs/InternalReference" }
        }
      },
      "required": ["label", "header", "claim"], 
      "additionalProperties": false
    },    
    "Definition": {
      "type": "object",
      "description": "A mathematical definition.",
      "properties": {
        "definition": {
          "type": "string",
          "description": "Definition content."
        },
        "label": {
          "type": "string",
          "description": "Definition identifier."
        },
        "header": {
          "type": "string",
          "description": "The definition type.",
          "enum": [
            "Definition",
            "Notation",
            "Terminology",
            "Convention"
          ]
        },
        "citations": {
          "type": "array",
          "description": "(OPTIONAL) Explicit list of citations relevant to this theorem statement.",
          "items": {
            "$ref": "#/$defs/Citation"
          }
        },
        "internal_references": {
          "type": "array",
          "description": "(OPTIONAL) Explicit list of internal references mentioned in the theorem statement.",
          "items": {
            "$ref": "#/$defs/InternalReference"
          }
        }
      },
      "required": [
        "label",
        "header",
        "definition"
      ],
      "additionalProperties": false
    },
    "Remark": {
      "type": "object",
      "description": "A remark or note.",
      "properties": {
        "remark": {
          "type": "string",
          "description": "Remark content."
        },
        "label": {
          "type": "string",
          "description": "Remark identifier."
        },
        "header": {
          "type": "string",
          "description": "Remark type.",
          "enum": [
            "Remark",
            "Example",
            "Note",
            "Observation",
            "Warning"
          ]
        },
        "citations": {
          "type": "array",
          "description": "(OPTIONAL) Explicit list of citations relevant to this statement.",
          "items": { "$ref": "#/$defs/Citation" }
        },
        "internal_references": {
          "type": "array",
          "description": "(OPTIONAL) Explicit list of internal references mentioned in the statement.",
          "items": { "$ref": "#/$defs/InternalReference" }
        }
      },
      "required": [
        "label",
        "header",
        "remark"
      ],
      "additionalProperties": false
    },
    "LogicalStepSequence": {
      "type": "array",
      "description": "A sequence of structured logical steps, typically used within a proof or derivation, consisting of statements like 'let', 'assert', 'assume', etc.",
      "items": {
        "anyOf": [
          {
            "$ref": "#/$defs/let_statement"
          },
          {
            "$ref": "#/$defs/assert_statement"
          },
          {
            "$ref": "#/$defs/assume_statement"
          },
          {
            "$ref": "#/$defs/some_statement"
          },
          {
            "$ref": "#/$defs/cases_statement"
          },
          {
            "$ref": "#/$defs/induction_statement"
          },
          {
            "$ref": "#/$defs/calculate_statement"
          },
          {
            "$ref": "#/$defs/contradiction_statement"
          },
          {
            "$ref": "#/$defs/conclude_statement"
          }
        ]
      }
    },
    "Proof": {
      "type": "object",
      "description": "A proof environment.",
      "properties": {
        "claim_label": {
          "type": "string",
          "description": "Theorem label being proved."
        },
        "proof_steps": {
          "type": "array",
          "description": "Steps in the proof.",
          "items": {
            "anyOf": [
              {
                "$ref": "#/$defs/Remark"
              },
              {
                "$ref": "#/$defs/LogicalStepSequence"
              },
              {
                "$ref": "#/$defs/Paragraph"
              },
              {
                "$ref": "#/$defs/Figure"
              },
              {
                "$ref": "#/$defs/Table"
              }
            ]
          }
        }
      },
      "required": [
        "claim_label",
        "proof_steps"
      ],
      "additionalProperties": false
    },
    "let_statement": {
      "type": "object",
      "description": "A statement introducing a new variable with given value, type and/or property.",
      "properties": {
        "variable": {
          "type": "string",
          "description": "The variable being defined (use `<anonymous>` if there is no name such as in `We have a group structure on S`)"
        },
        "value": {
          "type": "string",
          "description": "(OPTIONAL) The value of the variable being defined"
        },
        "kind": {
          "type": "string",
          "description": "(OPTIONAL) The type of the variable, such as `real number`, `function from S to T`, `element of G` etc."
        },
        "properties": {
          "type": "string",
          "description": "(OPTIONAL) Specific properties of the variable beyond the type"
        }
      },
      "required": [
        "variable"
      ]
    },
    "some_statement": {
      "type": "object",
      "description": "A statement introducing a new variable and saying that **some** value of this variable is as required (i.e., an existence statement). This is possibly with given type and/or property. This corresponds to statements like 'for some integer `n` ...' or 'There exists an integer `n` ....'",
      "properties": {
        "variable": {
          "type": "string",
          "description": "The variable being defined (use `<anonymous>` if there is no name such as in `We have a group structure on S`)"
        },
        "kind": {
          "type": "string",
          "description": "(OPTIONAL) The type of the variable, such as `real number`, `function from S to T`, `element of G` etc."
        },
        "properties": {
          "type": "string",
          "description": "(OPTIONAL) Specific properties of the variable beyond the type"
        }
      },
      "required": [
        "variable"
      ],
      "additionalProperties": false
    },
    "assume_statement": {
      "type": "object",
      "description": "A mathematical assumption being made. Use 'let_statement' or 'some_statement' if introducing variables.",
      "properties": {
        "assumption": {
          "type": "string",
          "description": "The assumption text."
        },
        "label" : {
          "type": "string",
          "description": "(OPTIONAL) The label of the assumption, if any."
        },
        "citations": {
          "type": "array",
          "description": "(OPTIONAL) Citations supporting or related to the assumption.",
          "items": {
            "$ref": "#/$defs/Citation"
          }
        },
        "internal_references": {
          "type": "array",
          "description": "(OPTIONAL) Internal references related to the assumption.",
          "items": {
            "$ref": "#/$defs/InternalReference"
          }
        }
      },
      "required": [
        "assumption"
      ],
      "additionalProperties": false
    },
    "assert_statement": {
      "type": "object",
      "description": "A mathematical statement whose proof is a straightforward consequence of given and known results following some method.",
      "properties": {
        "claim": {
          "type": "string",
          "description": "The mathematical claim being asserted, NOT INCLUDING proofs, justifications or results used. The claim should be purely a logical statement which is the *consequence* obtained."
        },
        "proof_method": {
          "type": "string",
          "description": "(OPTIONAL) The method used to prove the claim. This could be a direct proof, proof by contradiction, proof by induction, etc. this should be a single phrase or a fairly simple sentence; if a longer justification is needed break the step into smaller steps. If the method is deduction from a result, use `citations`or `internal_references`."
        },
        "label": {
          "type": "string",
          "description": "The label of the statement, if any."
        },
        "citations": {
          "type": "array",
          "description": "(OPTIONAL) Explicit list of citations relevant to this theorem statement.",
          "items": {
            "$ref": "#/$defs/Citation"
          }
        },
        "internal_references": {
          "type": "array",
          "description": "(OPTIONAL) Explicit list of internal references mentioned in the theorem statement.",
          "items": {
            "$ref": "#/$defs/InternalReference"
          }
        },
        "calculate": {
          "$ref": "#/$defs/calculate_choice",
          "description": "(OPTIONAL) An equation, inequality, short calculation etc."
        }
      },
      "required": [
        "claim"
      ],
      "additionalProperties": false
    },
    "calculate_choice": {
      "type": "object",
      "description": "An equation, inequality, short calculation etc.",
      "minProperties": 1,
      "maxProperties": 1,
      "properties": {
        "inline_calculation": {
          "type": "string",
          "description": "A simple calculation or computation written as a single line."
        },
        "calculation_sequence": {
          "type": "array",
          "description": "A list of elements of type `calculation_step`.",
          "items": {
            "$ref": "#/$defs/calculation_step"
          }
        }
      }
    },
    "calculation_step": {
      "type": "string",
      "description": "A step, typically an equality or inequality, in a calculation or computation."
    },
    "cases_statement": {
      "type": "object",
      "description": "A proof by cases or proof by induction, with a list of cases.",
      "properties": {
        "split_kind": {
          "type": "string",
          "description": "one of 'implication_direction' (for two sides of an 'iff' implication), 'match' (for pattern matching), 'condition' (if based on a condition being true or false) and 'groups' (for more complex cases).",
          "enum": [
            "implication_direction",
            "match",
            "condition",
            "groups"
          ]
        },
        "on": {
          "type": "string",
          "description": "The variable or expression on which the cases are being done. Write 'implication direction' for an 'iff' statement."
        },
        "proof_cases": {
          "type": "array",
          "description": "A list of elements of type `case`.",
          "items": {
            "$ref": "#/$defs/case"
          }
        },
        "exhaustiveness": {
          "$ref": "#/$defs/Proof",
          "description": "(OPTIONAL) Proof that the cases are exhaustive."
        }
      },
      "required": [
        "split_kind",
        "on",
        "proof_cases"
      ]
    },
    "case": {
      "type": "object",
      "description": "A case in a proof by cases or proof by induction.",
      "properties": {
        "condition": {
          "type": "string",
          "description": "The case condition or pattern; for induction one of 'base' or 'induction-step'; for a side of an 'iff' statement write the claim being proved (i.e., the statement `P => Q` or `Q => P`)."
        },
        "proof": {
          "type": "array",
          "description": "Steps proving this case.",
          "items": {
            "anyOf": [
              {
                "$ref": "#/$defs/LogicalStepSequence"
              },
              {
                "$ref": "#/$defs/Paragraph"
              },
              {
                "$ref": "#/$defs/Proof"
              },
              {
                "$ref": "#/$defs/Figure"
              },
              {
                "$ref": "#/$defs/Table"
              },
              {
                "$ref": "#/$defs/Remark"
              }
            ]
          }
        }
      },
      "required": [
        "condition",
        "proof"
      ]
    },
    "induction_statement": {
      "type": "object",
      "description": "A proof by induction, with a base case and an induction step.",
      "properties": {
        "on": {
          "type": "string",
          "description": "The variable or expression on which induction is being done."
        },
        "proof_cases": {
          "type": "array",
          "description": "A list of elements of type `case`.",
          "items": {
            "$ref": "#/$defs/case"
          }
        }
      },
      "required": [
        "on",
        "proof_cases"
      ]
    },
    "contradiction_statement": {
      "type": "object",
      "description": "A proof by contradiction, with an assumption and a proof of the contradiction.",
      "properties": {
        "assumption": {
          "type": "string",
          "description": "The assumption being made to be contradicted."
        },
        "proof": {
          "$ref": "#/$defs/Proof",
          "description": "The proof of the contradiction given the assumption."
        }
      },
      "required": [
        "assumption",
        "proof"
      ]
    },
    "calculate_statement": {
      "$ref": "#/$defs/calculate_choice",
      "description": "An equation, inequality, short calculation etc."
    },
    "conclude_statement": {
      "type": "object",
      "description": "Conclude a claim obtained from the steps so far. This is typically the final statement of a proof giving the conclusion of the theorem.",
      "properties": {
        "claim": {
          "type": "string",
          "description": "The conclusion of the proof."
        }
      },
      "required": [
        "claim"
      ]
    },
    "Metadata": {
      "type": "object",
      "description": "Metadata about the document, such as authors, keywords, and classification.",
      "properties": {
        "authors": {
          "type": "array",
          "description": "List of authors.",
          "items": {
            "$ref": "#/$defs/Author"
          }
        },
        "keywords": {
          "type": "array",
          "description": "List of keywords describing the document.",
          "items": {
            "type": "string"
          }
        },
        "msc_codes": {
          "type": "array",
          "description": "Mathematics Subject Classification codes.",
          "items": {
            "type": "string"
          }
        },
        "publication_date": {
          "type": "string",
          "description": "Date of publication or creation (ISO 8601 format recommended).",
          "format": "date"
        },
        "source": {
          "type": "string",
          "description": "Publication source, e.g., Journal label, volume, pages, conference proceedings."
        }
      },
      "required": [
        "authors"
      ],
      "additionalProperties": false
    },
    "Author": {
      "type": "object",
      "description": "An author of the document.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Full label of the author."
        },
        "affiliation": {
          "type": "string",
          "description": "(OPTIONAL) Author's affiliation."
        }
      },
      "required": [
        "label"
      ],
      "additionalProperties": false
    },
    "Paragraph": {
      "type": "object",
      "description": "A block of plain text, potentially containing inline references.",
      "properties": {
        "text": {
          "type": "string",
          "description": "The main text content of the paragraph. Inline citations (e.g., [1], [Knuth74]) and internal references (e.g., see Section 2, Theorem 3) might be embedded within this string or explicitly listed in 'citations'/'internal_references'."
        },
        "citations": {
          "type": "array",
          "description": "(OPTIONAL) Explicit list of citations mentioned in this paragraph.",
          "items": {
            "$ref": "#/$defs/Citation"
          }
        },
        "internal_references": {
          "type": "array",
          "description": "(OPTIONAL) Explicit list of internal references mentioned in this paragraph.",
          "items": {
            "$ref": "#/$defs/InternalReference"
          }
        }
      },
      "required": [
        "text"
      ],
      "additionalProperties": false
    },
    "Figure": {
      "type": "object",
      "description": "A figure or image.",
      "properties": {
        "label": {
          "type": "string",
          "description": "Unique identifier/label for referencing (e.g., 'fig:flowchart')."
        },
        "source": {
          "type": "string",
          "description": "URL or path to the image file."
        },
        "caption": {
          "type": "string",
          "description": "(OPTIONAL) Caption describing the figure."
        },
        "alt_text": {
          "type": "string",
          "description": "(OPTIONAL) Alternative text for accessibility."
        }
      },
      "required": [
        "label",
        "source"
      ],
      "additionalProperties": false
    },
    "Table": {
      "type": "object",
      "description": "A data table.",
      "properties": {
        "label": {
          "type": "string",
          "description": "Unique identifier/label for referencing (e.g., 'tab:results')."
        },
        "caption": {
          "type": "string",
          "description": "(OPTIONAL) Caption describing the table."
        },
        "content": {
          "type": "array",
          "description": "Table data, represented as an array of rows, where each row is an array of cell strings.",
          "items": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "header_row": {
          "type": "boolean",
          "description": "(OPTIONAL) Indicates if the first row in 'content' is a header row. Default: false",
          "default": false
        }
      },
      "required": [
        "label",
        "content"
      ],
      "additionalProperties": false
    },
    "Bibliography": {
      "type": "object",
      "description": "The bibliography or list of references section.",
      "properties": {
        "header": {
          "type": "string",
          "description": "The section header (e.g., 'References', 'Bibliography')."
        },
        "entries": {
          "type": "array",
          "description": "List of bibliography entries.",
          "items": {
            "$ref": "#/$defs/BibliographyEntry"
          }
        }
      },
      "required": [
        "header",
        "entries"
      ],
      "additionalProperties": false
    },
    "BibliographyEntry": {
      "type": "object",
      "description": "A single entry in the bibliography.",
      "properties": {
        "key": {
          "type": "string",
          "description": "Unique key used for citations (e.g., 'Knuth1974', '[1]')."
        },
        "formatted_entry": {
          "type": "string",
          "description": "The full bibliographic reference, formatted as text (e.g., APA, BibTeX style)."
        }
      },
      "required": [
        "key",
        "formatted_entry"
      ],
      "additionalProperties": false
    },
    "Citation": {
      "type": "object",
      "description": "An inline citation pointing to one or more bibliography entries.",
      "properties": {
        "cite_keys": {
          "type": "array",
          "description": "An array of bibliography keys being cited.",
          "items": {
            "type": "string"
          },
          "minItems": 1
        }
      },
      "required": [
        "cite_keys"
      ],
      "additionalProperties": false
    },
    "InternalReference": {
      "type": "object",
      "description": "An inline reference to another labeled part of the document (e.g., Section, Theorem, Figure).",
      "properties": {
        "target_identifier": {
          "type": "string",
          "description": "The unique 'label' of the document element being referenced (e.g., 'sec:intro', 'thm:main', 'fig:diagram')."
        }
      },
      "required": [
        "target_identifier"
      ],
      "additionalProperties": false
    }
  }
}