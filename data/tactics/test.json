[{"tactic": "dsimp\n\n only  [  Nat.add_zero  ] ",
  "goals_before": "a : ℕ\n⊢ a + 0 = a",
  "goals_after": "",
  "depth": 0},
 {"tactic": "intro n\n  ",
  "goals_before": "⊢ ∀ (n : ℕ), n = n ∧ n = n",
  "goals_after": "n : ℕ\n⊢ n = n ∧ n = n",
  "depth": 0},
 {"tactic": "constructor\n  ",
  "goals_before": "n : ℕ\n⊢ n = n ∧ n = n",
  "goals_after": "case left\nn : ℕ\n⊢ n = n\n\ncase right\nn : ℕ\n⊢ n = n",
  "depth": 0},
 {"tactic": " · rfl\n  ",
  "goals_before": "case left\nn : ℕ\n⊢ n = n\n\ncase right\nn : ℕ\n⊢ n = n",
  "goals_after": "case right\nn : ℕ\n⊢ n = n",
  "depth": 0},
 {"tactic": "rfl\n  ",
  "goals_before": "case left\nn : ℕ\n⊢ n = n",
  "goals_after": "",
  "depth": 1},
 {"tactic": " · rfl\n\n",
  "goals_before": "case right\nn : ℕ\n⊢ n = n",
  "goals_after": "",
  "depth": 0},
 {"tactic": "rfl\n\n",
  "goals_before": "case right\nn : ℕ\n⊢ n = n",
  "goals_after": "",
  "depth": 1},
 {"tactic": " rw  [ ← Nat.zero_add a ] ",
  "goals_before": "a : ℕ\n⊢ a = a + 0",
  "goals_after": "a : ℕ\n⊢ 0 + a = 0 + a + 0",
  "depth": 0},
 {"tactic": " rw  [ ← Nat.add_zero a ] ",
  "goals_before": "a : ℕ\n⊢ 0 + a = 0 + a + 0",
  "goals_after": "a : ℕ\n⊢ 0 + (a + 0) = 0 + (a + 0) + 0",
  "depth": 0},
 {"tactic": " rw  [ Nat.add_zero ] ",
  "goals_before": "a : ℕ\n⊢ 0 + (a + 0) = 0 + (a + 0) + 0",
  "goals_after": "a : ℕ\n⊢ 0 + a = 0 + a + 0",
  "depth": 0},
 {"tactic": " rw  [ Nat.zero_add ] ",
  "goals_before": "a : ℕ\n⊢ 0 + a = 0 + a + 0",
  "goals_after": "a : ℕ\n⊢ a = a + 0",
  "depth": 0},
 {"tactic": " rw  [ Nat.add_zero ] ",
  "goals_before": "a : ℕ\n⊢ a = a + 0",
  "goals_after": "",
  "depth": 0},
 {"tactic": "dsimp\n\n only  [  Nat.add_zero  ] ",
  "goals_before": "a : ℕ\n⊢ a + 0 = a",
  "goals_after": "",
  "depth": 0}][{"tactic": "intro n\n  ",
  "goals_before": "⊢ ∀ (n : ℕ), n = n ∧ n = n",
  "goals_after": "n : ℕ\n⊢ n = n ∧ n = n",
  "depth": 0},
 {"tactic": "constructor\n  ",
  "goals_before": "n : ℕ\n⊢ n = n ∧ n = n",
  "goals_after": "case left\nn : ℕ\n⊢ n = n\n\ncase right\nn : ℕ\n⊢ n = n",
  "depth": 0},
 {"tactic": " · rfl\n  ",
  "goals_before": "case left\nn : ℕ\n⊢ n = n\n\ncase right\nn : ℕ\n⊢ n = n",
  "goals_after": "case right\nn : ℕ\n⊢ n = n",
  "depth": 0},
 {"tactic": "rfl\n  ",
  "goals_before": "case left\nn : ℕ\n⊢ n = n",
  "goals_after": "",
  "depth": 1},
 {"tactic": " · rfl\n\n",
  "goals_before": "case right\nn : ℕ\n⊢ n = n",
  "goals_after": "",
  "depth": 0},
 {"tactic": "rfl\n\n",
  "goals_before": "case right\nn : ℕ\n⊢ n = n",
  "goals_after": "",
  "depth": 1}][{"tactic": " rw  [ ← Nat.zero_add a ] ",
  "goals_before": "a : ℕ\n⊢ a = a + 0",
  "goals_after": "a : ℕ\n⊢ 0 + a = 0 + a + 0",
  "depth": 0},
 {"tactic": " rw  [ ← Nat.add_zero a ] ",
  "goals_before": "a : ℕ\n⊢ 0 + a = 0 + a + 0",
  "goals_after": "a : ℕ\n⊢ 0 + (a + 0) = 0 + (a + 0) + 0",
  "depth": 0},
 {"tactic": " rw  [ Nat.add_zero ] ",
  "goals_before": "a : ℕ\n⊢ 0 + (a + 0) = 0 + (a + 0) + 0",
  "goals_after": "a : ℕ\n⊢ 0 + a = 0 + a + 0",
  "depth": 0},
 {"tactic": " rw  [ Nat.zero_add ] ",
  "goals_before": "a : ℕ\n⊢ 0 + a = 0 + a + 0",
  "goals_after": "a : ℕ\n⊢ a = a + 0",
  "depth": 0},
 {"tactic": " rw  [ Nat.add_zero ] ",
  "goals_before": "a : ℕ\n⊢ a = a + 0",
  "goals_after": "",
  "depth": 0}]