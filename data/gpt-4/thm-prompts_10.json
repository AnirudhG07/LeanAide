[
  {
    "stmt": "If every proper closed set of a topological space is compact, then the space itself is compact.",
    "prompts": "[{\"theorem\":\n  \"\u2200 {\u03b1 : Type u} [inst : TopologicalSpace \u03b1] [inst_1 : Finite \u03b1], CompactSpace \u03b1\",\n  \"isProp\": true,\n  \"docString\": \"Finite topological spaces are compact. \"},\n {\"theorem\":\n  \"\u2200 {\u03b1 : Type u} [inst : TopologicalSpace \u03b1] [inst_1 : LocallyCompactSpace \u03b1] {K : Set \u03b1},\\n  IsCompact K \u2192 \u2203 K', IsCompact K' \u2227 K \u2286 interior K'\",\n  \"isProp\": true,\n  \"docString\":\n  \"In a locally compact space, every compact set is contained in the interior of a compact set. \"},\n {\"theorem\": \"\u2200 (self : CompHaus), CompactSpace \u2191self.toTop\",\n  \"isProp\": true,\n  \"docString\": \"The underlying topological space is compact.\"},\n {\"theorem\":\n  \"\u2200 {X : Type u_1} [inst : TopologicalSpace X], CompactSpace (OnePoint X)\",\n  \"isProp\": true,\n  \"docString\":\n  \"For any topological space `X`, its one point compactification is a compact space. \"},\n {\"theorem\":\n  \"\u2200 {\u03b1 : Type u_1} [inst : TopologicalSpace \u03b1] [inst_1 : TopologicalSpace.NoetherianSpace \u03b1] (s : Set \u03b1), IsCompact s\",\n  \"isProp\": true,\n  \"docString\": \"In a Noetherian space, all sets are compact. \"},\n {\"theorem\":\n  \"\u2200 {\u03b1 : Type u} [inst : TopologicalSpace \u03b1] {s t : Set \u03b1}, IsCompact t \u2192 IsClosed s \u2192 IsCompact (s \u2229 t)\",\n  \"isProp\": true,\n  \"docString\":\n  \"The intersection of a closed set and a compact set is a compact set. \"},\n {\"theorem\":\n  \"\u2200 (H : Type u) (M : Type u_1) [inst : TopologicalSpace H] [inst_1 : TopologicalSpace M] [inst_2 : ChartedSpace H M]\\n  [inst : LocallyCompactSpace H], LocallyCompactSpace M\",\n  \"isProp\": true,\n  \"docString\":\n  \"If a topological space admits an atlas with locally compact charts, then the space itself\\nis locally compact. \"},\n {\"theorem\":\n  \"\u2200 {\u03b1 : Type u} [inst : TopologicalSpace \u03b1] [inst_1 : T2Space \u03b1] {s : Set \u03b1}, IsCompact s \u2192 IsClosed s\",\n  \"isProp\": true,\n  \"docString\": \"In a `T2Space`, every compact set is closed. \"},\n {\"theorem\":\n  \"\u2200 {\u03b1 : Type u} [inst : TopologicalSpace \u03b1] [inst_1 : LocallyCompactSpace \u03b1] [inst_2 : T2Space \u03b1] {K : Set \u03b1},\\n  IsCompact K \u2192 \u2203 V, IsOpen V \u2227 K \u2286 V \u2227 IsCompact (closure V)\",\n  \"isProp\": true,\n  \"docString\":\n  \"In a locally compact T\u2082 space, every compact set has an open neighborhood with compact closure.\\n\"},\n {\"theorem\":\n  \"\u2200 {\u03b1 : Type u} [inst : EMetricSpace \u03b1] [inst_1 : CompactSpace \u03b1], CompactSpace (TopologicalSpace.Closeds \u03b1)\",\n  \"isProp\": true,\n  \"docString\": \"In a compact space, the type of closed subsets is compact. \"}]\n"
  },
  {
    "stmt": "Every prime that is `1` greater than a multiple of `4` can be expressed as the sum of two squares.",
    "prompts": "[{\"theorem\":\n  \"\u2200 {a b x y u v : \u2115}, a = x ^ 2 + y ^ 2 \u2192 b = u ^ 2 + v ^ 2 \u2192 \u2203 r s, a * b = r ^ 2 + s ^ 2\",\n  \"isProp\": true,\n  \"docString\":\n  \"The set of natural numbers that are sums of two squares is closed under multiplication. \"},\n {\"theorem\": \"\u2200 {n : \u2115}, IsSquare (-1) \u2192 \u2203 x y, n = x ^ 2 + y ^ 2\",\n  \"isProp\": true,\n  \"docString\":\n  \"If `-1` is a square modulo the natural number `n`, then `n` is a sum of two squares. \"},\n {\"theorem\":\n  \"\u2200 {p : \u2115} [inst : Fact (Nat.Prime p)], p % 4 \u2260 3 \u2192 \u2203 a b, a ^ 2 + b ^ 2 = p\",\n  \"isProp\": true,\n  \"docString\":\n  \"**Fermat's theorem on the sum of two squares**. Every prime not congruent to 3 mod 4 is the sum\\nof two squares. Also known as **Fermat's Christmas theorem**. \"},\n {\"theorem\": \"\u2200 (n : \u2115), \u2203 a b c d, a ^ 2 + b ^ 2 + c ^ 2 + d ^ 2 = n\",\n  \"isProp\": true,\n  \"docString\": \"**Four squares theorem** \"},\n {\"theorem\": \"\u2200 (p : \u2115) [inst : Fact (Nat.Prime p)], Prime \u2191p \u2194 p % 4 = 3\",\n  \"isProp\": true,\n  \"docString\":\n  \"A prime natural number is prime in `\u2124[i]` if and only if it is `3` mod `4` \"},\n {\"theorem\":\n  \"\u2200 {p q : \u2115} [inst : Fact (Nat.Prime p)] [inst_1 : Fact (Nat.Prime q)],\\n  p % 4 = 1 \u2192 q \u2260 2 \u2192 legendreSym q \u2191p = legendreSym p \u2191q\",\n  \"isProp\": true,\n  \"docString\":\n  \"The Law of Quadratic Reciprocity: if `p` and `q` are odd primes and `p % 4 = 1`,\\nthen `(q / p) = (p / q)`. \"},\n {\"theorem\":\n  \"\u2200 (a b c d x y z w : \u2115),\\n  Int.natAbs (\u2191a * \u2191x - \u2191b * \u2191y - \u2191c * \u2191z - \u2191d * \u2191w) ^ 2 + Int.natAbs (\u2191a * \u2191y + \u2191b * \u2191x + \u2191c * \u2191w - \u2191d * \u2191z) ^ 2 +\\n        Int.natAbs (\u2191a * \u2191z - \u2191b * \u2191w + \u2191c * \u2191x + \u2191d * \u2191y) ^ 2 +\\n      Int.natAbs (\u2191a * \u2191w + \u2191b * \u2191z - \u2191c * \u2191y + \u2191d * \u2191x) ^ 2 =\\n    (a ^ 2 + b ^ 2 + c ^ 2 + d ^ 2) * (x ^ 2 + y ^ 2 + z ^ 2 + w ^ 2)\",\n  \"isProp\": true,\n  \"docString\":\n  \"**Euler's four-square identity**, a version for natural numbers. \"},\n {\"theorem\":\n  \"\u2200 {F : Type u_1} [inst : Field F] [inst_1 : Finite F], ringChar F = 2 \u2192 \u2200 (a : F), IsSquare a\",\n  \"isProp\": true,\n  \"docString\":\n  \"In a finite field of characteristic `2`, all elements are squares. \"},\n {\"theorem\": \"Set.InjOn Nat.factorization {x | x \u2260 0}\",\n  \"isProp\": true,\n  \"docString\":\n  \"Every nonzero natural number has a unique prime factorization \"},\n {\"theorem\":\n  \"\u2200 {p : \u2115} [inst : Fact (Nat.Prime p)], p \u2260 2 \u2192 (IsSquare 2 \u2194 p % 8 = 1 \u2228 p % 8 = 7)\",\n  \"isProp\": true,\n  \"docString\":\n  \"`2` is a square modulo an odd prime `p` iff `p` is congruent to `1` or `7` mod `8`. \"}]\n"
  },
  {
    "stmt": "The product of two numbers, each of which is the sum of four squares, is itself a sum of four squares.",
    "prompts": "[{\"theorem\":\n  \"\u2200 {a b x y u v : \u2115}, a = x ^ 2 + y ^ 2 \u2192 b = u ^ 2 + v ^ 2 \u2192 \u2203 r s, a * b = r ^ 2 + s ^ 2\",\n  \"isProp\": true,\n  \"docString\":\n  \"The set of natural numbers that are sums of two squares is closed under multiplication. \"},\n {\"theorem\":\n  \"\u2200 {\u03b1 : Type u} [inst : LinearOrderedRing \u03b1] {x y : \u03b1}, x * x + y * y = 0 \u2194 x = 0 \u2227 y = 0\",\n  \"isProp\": true,\n  \"docString\": \"The sum of two squares is zero iff both elements are zero. \"},\n {\"theorem\":\n  \"\u2200 (a b c d x y z w : \u2115),\\n  Int.natAbs (\u2191a * \u2191x - \u2191b * \u2191y - \u2191c * \u2191z - \u2191d * \u2191w) ^ 2 + Int.natAbs (\u2191a * \u2191y + \u2191b * \u2191x + \u2191c * \u2191w - \u2191d * \u2191z) ^ 2 +\\n        Int.natAbs (\u2191a * \u2191z - \u2191b * \u2191w + \u2191c * \u2191x + \u2191d * \u2191y) ^ 2 +\\n      Int.natAbs (\u2191a * \u2191w + \u2191b * \u2191z - \u2191c * \u2191y + \u2191d * \u2191x) ^ 2 =\\n    (a ^ 2 + b ^ 2 + c ^ 2 + d ^ 2) * (x ^ 2 + y ^ 2 + z ^ 2 + w ^ 2)\",\n  \"isProp\": true,\n  \"docString\":\n  \"**Euler's four-square identity**, a version for natural numbers. \"},\n {\"theorem\":\n  \"\u2200 {R : Type u_1} [inst : CommRing R] (a b c d x y z w : R),\\n  (a * x - b * y - c * z - d * w) ^ 2 + (a * y + b * x + c * w - d * z) ^ 2 + (a * z - b * w + c * x + d * y) ^ 2 +\\n      (a * w + b * z - c * y + d * x) ^ 2 =\\n    (a ^ 2 + b ^ 2 + c ^ 2 + d ^ 2) * (x ^ 2 + y ^ 2 + z ^ 2 + w ^ 2)\",\n  \"isProp\": true,\n  \"docString\": \"**Euler's four-square identity**. \"},\n {\"theorem\": \"\u2200 (n : \u2115), \u2203 a b c d, a ^ 2 + b ^ 2 + c ^ 2 + d ^ 2 = n\",\n  \"isProp\": true,\n  \"docString\": \"**Four squares theorem** \"},\n {\"theorem\": \"\u2200 {n : \u2115}, IsSquare (-1) \u2192 \u2203 x y, n = x ^ 2 + y ^ 2\",\n  \"isProp\": true,\n  \"docString\":\n  \"If `-1` is a square modulo the natural number `n`, then `n` is a sum of two squares. \"},\n {\"theorem\":\n  \"\u2200 (R : Type u_1) [inst : CommRing R] (m k : \u2115),\\n  2 * Polynomial.Chebyshev.T R m * Polynomial.Chebyshev.T R (m + k) =\\n    Polynomial.Chebyshev.T R (2 * m + k) + Polynomial.Chebyshev.T R k\",\n  \"isProp\": true,\n  \"docString\":\n  \"The product of two Chebyshev polynomials is the sum of two other Chebyshev polynomials. \"},\n {\"theorem\":\n  \"\u2200 {R : Type u} [inst : Semiring R] {p q : Polynomial R},\\n  p * q =\\n    Finset.sum (Polynomial.support p) fun i =>\\n      Polynomial.sum q fun j a => \u2191(Polynomial.monomial (i + j)) (Polynomial.coeff p i * a)\",\n  \"isProp\": true,\n  \"docString\": \"Expressing the product of two polynomials as a double sum. \"},\n {\"theorem\": \"\u2200 {m n : \u2115}, (\u2200 (a : \u2115), m \u2223 a \u2194 n \u2223 a) \u2194 m = n\",\n  \"isProp\": true,\n  \"docString\":\n  \"Two natural numbers are equal if and only if they have the same multiples. \"},\n {\"theorem\":\n  \"\u2200 {F : Type u_1} [inst : NormedAddCommGroup F] [inst_1 : InnerProductSpace \u211d F] {x y : F},\\n  \u2016x + y\u2016 = Real.sqrt (\u2016x\u2016 * \u2016x\u2016 + \u2016y\u2016 * \u2016y\u2016) \u2194 inner x y = 0\",\n  \"isProp\": true,\n  \"docString\":\n  \"Pythagorean theorem, if-and-if vector inner product form using square roots. \"}]\n"
  },
  {
    "stmt": "A ring with all elements idempotent is commutative.",
    "prompts": "[{\"theorem\": \"\u2200 {\u03b1 : Type u_1} [self : BooleanRing \u03b1] (a : \u03b1), a * a = a\",\n  \"isProp\": true,\n  \"docString\": \"Multiplication in a boolean ring is idempotent. \"},\n {\"theorem\":\n  \"\u2200 {R : Type u_1} {S : Type u_2} [inst : Mul R] [inst_1 : Mul S] [inst_2 : Add R] [inst_3 : Add S] (e : R \u2243+* S)\\n  (x y : R), \u2191e (x * y) = \u2191e x * \u2191e y\",\n  \"isProp\": true,\n  \"docString\": \"A ring isomorphism preserves multiplication. \"},\n {\"theorem\":\n  \"\u2200 {R : Type u_1} {S : Type u_2} [inst : Mul R] [inst_1 : Mul S] [inst_2 : Add R] [inst_3 : Add S] (e : R \u2243+* S)\\n  (x y : R), \u2191e (x + y) = \u2191e x + \u2191e y\",\n  \"isProp\": true,\n  \"docString\": \"A ring isomorphism preserves addition. \"},\n {\"theorem\": \"\u2200 {S : Type u_1} [inst : Mul S] (a : S), Commute a a\",\n  \"isProp\": true,\n  \"docString\": \"Any element commutes with itself. \"},\n {\"theorem\": \"\u2200 {S : Type u_1} [inst : Add S] (a : S), AddCommute a a\",\n  \"isProp\": true,\n  \"docString\": \"Any element commutes with itself.\"},\n {\"theorem\":\n  \"\u2200 {R : Type u_2} {S : Type u_1} [inst : NonAssocSemiring R] [inst_1 : NonAssocSemiring S] (f : R \u2243+* S), \u2191f 1 = 1\",\n  \"isProp\": true,\n  \"docString\": \"A ring isomorphism sends one to one. \"},\n {\"theorem\":\n  \"\u2200 {R : Type u_2} {S : Type u_1} [inst : NonUnitalNonAssocSemiring R] [inst_1 : NonUnitalNonAssocSemiring S]\\n  (f : R \u2243+* S), \u2191f 0 = 0\",\n  \"isProp\": true,\n  \"docString\": \"A ring isomorphism sends zero to zero. \"},\n {\"theorem\":\n  \"\u2200 {\u03b1 : Type u_1} (r : \u03b1 \u2192 \u03b1 \u2192 Prop), EqvGen.Setoid (Setoid.Rel (EqvGen.Setoid r)) = EqvGen.Setoid r\",\n  \"isProp\": true,\n  \"docString\": \"Equivalence closure is idempotent. \"},\n {\"theorem\":\n  \"\u2200 {\u03b1 : Type u_1} [self : StrictOrderedCommRing \u03b1] (a b : \u03b1), a * b = b * a\",\n  \"isProp\": true,\n  \"docString\": \"Multiplication is commutative in a commutative semigroup. \"},\n {\"theorem\":\n  \"\u2200 {F : Type u_1} {R : outParam (Type u_2)} {S : outParam (Type u_3)} [inst : Mul R] [inst_1 : Add R] [inst_2 : Mul S]\\n  [inst_3 : Add S] [self : RingEquivClass F R S] (f : F) (a b : R), \u2191f (a + b) = \u2191f a + \u2191f b\",\n  \"isProp\": true,\n  \"docString\":\n  \"By definition, a ring isomorphism preserves the additive structure. \"}]\n"
  },
  {
    "stmt": "There are infinitely many pairs of primes that differ exactly by `2`.",
    "prompts": "[{\"theorem\":\n  \"\u2200 {F : Type u_1} [inst : Field F] [inst_1 : Finite F], ringChar F = 2 \u2192 \u2200 (a : F), IsSquare a\",\n  \"isProp\": true,\n  \"docString\":\n  \"In a finite field of characteristic `2`, all elements are squares. \"},\n {\"theorem\": \"\u2200 {p : \u2115} [inst : Fact (Nat.Prime p)], p % 2 = 1 \u2194 p \u2260 2\",\n  \"isProp\": true,\n  \"docString\": \"A prime `p` satisfies `p % 2 = 1` if and only if `p \u2260 2`. \"},\n {\"theorem\": \"Set.InjOn Nat.factorization {x | x \u2260 0}\",\n  \"isProp\": true,\n  \"docString\":\n  \"Every nonzero natural number has a unique prime factorization \"},\n {\"theorem\":\n  \"\u2200 {a b x y u v : \u2115}, a = x ^ 2 + y ^ 2 \u2192 b = u ^ 2 + v ^ 2 \u2192 \u2203 r s, a * b = r ^ 2 + s ^ 2\",\n  \"isProp\": true,\n  \"docString\":\n  \"The set of natural numbers that are sums of two squares is closed under multiplication. \"},\n {\"theorem\":\n  \"\u2200 {\u03b1 : Type u_1} [inst : LinearOrderedField \u03b1] {a : \u03b1}, 2 \u2264 a \u2192 (1 - 1 / a)\u207b\u00b9 \u2264 2\",\n  \"isProp\": true,\n  \"docString\": \"An inequality involving `2`. \"},\n {\"theorem\":\n  \"\u2200 {p : \u2115} [inst : Fact (Nat.Prime p)], p \u2260 2 \u2192 (IsSquare 2 \u2194 p % 8 = 1 \u2228 p % 8 = 7)\",\n  \"isProp\": true,\n  \"docString\":\n  \"`2` is a square modulo an odd prime `p` iff `p` is congruent to `1` or `7` mod `8`. \"},\n {\"theorem\": \"\u2200 {m n : \u2115}, (\u2200 (a : \u2115), a \u2223 m \u2194 a \u2223 n) \u2194 m = n\",\n  \"isProp\": true,\n  \"docString\":\n  \"Two natural numbers are equal if and only if they have the same divisors. \"},\n {\"theorem\": \"\u2200 {m n : \u2115}, (\u2200 (a : \u2115), m \u2223 a \u2194 n \u2223 a) \u2194 m = n\",\n  \"isProp\": true,\n  \"docString\":\n  \"Two natural numbers are equal if and only if they have the same multiples. \"},\n {\"theorem\": \"\u2200 (p : \u2115) [inst : Fact (Nat.Prime p)], Prime \u2191p \u2194 p % 4 = 3\",\n  \"isProp\": true,\n  \"docString\":\n  \"A prime natural number is prime in `\u2124[i]` if and only if it is `3` mod `4` \"},\n {\"theorem\": \"\u2200 {m n : \u2115}, Odd n \u2192 m \u2223 n \u2192 m \u2260 2\",\n  \"isProp\": true,\n  \"docString\": \"`2` is not a factor of an odd natural number. \"}]\n"
  },
  {
    "stmt": "Every finite division ring is a field.",
    "prompts": "[{\"theorem\":\n  \"\u2200 {\u03b1 : Type u_1} [inst : Fintype \u03b1] [inst_1 : Field \u03b1], IsPrimePow (Fintype.card \u03b1)\",\n  \"isProp\": true,\n  \"docString\": \"A finite field has prime power cardinality. \"},\n {\"theorem\":\n  \"\u2200 {K : Type u_2} {L : Type u_1} [inst : Field K] [inst_1 : Field L] [inst_2 : Algebra K L] (S : IntermediateField K L)\\n  {x y : L}, x \u2208 S \u2192 y \u2208 S \u2192 x / y \u2208 S\",\n  \"isProp\": true,\n  \"docString\": \"An intermediate field is closed under division. \"},\n {\"theorem\": \"\u2200 (K : Type u) [inst : Field K], ValuationRing K\",\n  \"isProp\": true,\n  \"docString\": \"A field is a valuation ring. \"},\n {\"theorem\":\n  \"\u2200 (S : Set \u2115+) (K : Type w) (L : Type z) [inst : Field K] [inst_1 : Field L] [inst_2 : Algebra K L] [h : NumberField K]\\n  [inst_3 : Finite \u2191S] [inst : IsCyclotomicExtension S K L], NumberField L\",\n  \"isProp\": true,\n  \"docString\":\n  \"A cyclotomic finite extension of a number field is a number field. \"},\n {\"theorem\":\n  \"\u2200 {K : Type u} [inst : Field K] (s : Subfield K) {x y : K}, x \u2208 s \u2192 y \u2208 s \u2192 x / y \u2208 s\",\n  \"isProp\": true,\n  \"docString\": \"A subfield is closed under division. \"},\n {\"theorem\":\n  \"\u2200 {R : Type u_1} [inst : CommRing R] [inst_1 : IsDomain R] (S : Subgroup R\u02e3) [inst_2 : Finite { x // x \u2208 S }],\\n  IsCyclic { x // x \u2208 S }\",\n  \"isProp\": true,\n  \"docString\":\n  \"A finite subgroup of the units of an integral domain is cyclic. \"},\n {\"theorem\":\n  \"\u2200 (\u03b1 : Type u_1) [inst : LinearOrderedField \u03b1] [inst_1 : FloorRing \u03b1], Archimedean \u03b1\",\n  \"isProp\": true,\n  \"docString\": \"A linear ordered field that is a floor ring is archimedean. \"},\n {\"theorem\":\n  \"\u2200 {K : Type u} {V : Type v} [inst : DivisionRing K] [inst_1 : AddCommGroup V] [inst_2 : Module K V],\\n  IsNoetherian K V \u2194 Module.Finite K V\",\n  \"isProp\": true,\n  \"docString\":\n  \"A module over a division ring is noetherian if and only if it is finitely generated. \"},\n {\"theorem\":\n  \"\u2200 {R : Type u_2} {G : Type u_1} [inst : CommRing R] [inst_1 : IsDomain R] [inst_2 : Group G] [inst_3 : Finite G]\\n  (f : G \u2192* R), Function.Injective \u2191f \u2192 IsCyclic G\",\n  \"isProp\": true,\n  \"docString\":\n  \"A finite subgroup of the unit group of an integral domain is cyclic. \"},\n {\"theorem\":\n  \"\u2200 (K : Type u_1) (L : Type u_2) [inst : Field K] [inst_1 : Field L] [inst_2 : Algebra K L]\\n  [inst_3 : FiniteDimensional K L], Algebra.IsAlgebraic K L\",\n  \"isProp\": true,\n  \"docString\": \"A field extension is algebraic if it is finite. \"}]\n"
  },
  {
    "stmt": "If each of two types can be mapped injectively into the other, then there is a bijection between them.",
    "prompts": "[{\"theorem\":\n  \"\u2200 {R : Type u} [inst : CommSemiring R] {M\u2081 : Type v} {M\u2082 : Type v'} [inst_1 : AddCommMonoid M\u2081] [inst_2 : Module R M\u2081]\\n  [inst_3 : AddCommMonoid M\u2082] [inst_4 : Module R M\u2082] {f : M\u2081 \u2192\u2097[R] M\u2082},\\n  Function.Surjective \u2191f \u2192 Function.Injective \u2191(LinearMap.dualMap f)\",\n  \"isProp\": true,\n  \"docString\": \"If a linear map is surjective, then its dual is injective. \"},\n {\"theorem\":\n  \"\u2200 {\ud835\udd5c : Type u_1} [inst : NontriviallyNormedField \ud835\udd5c] {E : Type u_2} [inst_1 : NormedAddCommGroup E]\\n  [inst_2 : NormedSpace \ud835\udd5c E] {F : Type u_3} [inst_3 : NormedAddCommGroup F] [inst_4 : NormedSpace \ud835\udd5c F]\\n  [inst_5 : CompleteSpace F] [inst_6 : CompleteSpace E] (e : E \u2243\u2097[\ud835\udd5c] F),\\n  Continuous \u2191e \u2192 Continuous \u2191(LinearEquiv.symm e)\",\n  \"isProp\": true,\n  \"docString\":\n  \"If a bounded linear map is a bijection, then its inverse is also a bounded linear map. \"},\n {\"theorem\":\n  \"\u2200 {R : Type u_1} {R\u2082 : Type u_2} {M : Type u_3} {M\u2082 : Type u_4} [inst : Semiring R] [inst_1 : Semiring R\u2082]\\n  [inst_2 : AddCommMonoid M] [inst_3 : AddCommMonoid M\u2082] [inst_4 : Module R M] [inst_5 : Module R\u2082 M\u2082] {\u03c4\u2081\u2082 : R \u2192+* R\u2082}\\n  {f : M \u2192\u209b\u2097[\u03c4\u2081\u2082] M\u2082},\\n  (\u2200 (u v : { x // x \u2208 LinearMap.ker f } \u2192\u2097[R] M), LinearMap.comp f u = LinearMap.comp f v \u2192 u = v) \u2192\\n    LinearMap.ker f = \u22a5\",\n  \"isProp\": true,\n  \"docString\": \"A monomorphism is injective. \"},\n {\"theorem\":\n  \"\u2200 {X Y : Type u} (f : X \u27f6 Y), CategoryTheory.IsIso f \u2194 Function.Bijective f\",\n  \"isProp\": true,\n  \"docString\":\n  \"A morphism in `Type u` is an isomorphism if and only if it is bijective. \"},\n {\"theorem\":\n  \"\u2200 {M : Type u_1} [inst : Mul M] {c d : Con M}, c.toSetoid = d.toSetoid \u2192 c = d\",\n  \"isProp\": true,\n  \"docString\":\n  \"The map sending a congruence relation to its underlying equivalence relation is injective. \"},\n {\"theorem\":\n  \"\u2200 {K : Type u} {V : Type v} [inst : DivisionRing K] [inst_1 : AddCommGroup V] [inst_2 : Module K V]\\n  [inst_3 : FiniteDimensional K V] {f : V \u2192\u2097[K] V}, Function.Injective \u2191f \u2192 Function.Surjective \u2191f\",\n  \"isProp\": true,\n  \"docString\":\n  \"On a finite-dimensional space, an injective linear map is surjective. \"},\n {\"theorem\":\n  \"\u2200 {C : Type u} [inst : CategoryTheory.Category C] [inst_1 : CategoryTheory.ConcreteCategory C] {X Y : C} (f : X \u27f6 Y),\\n  Function.Injective \u2191f \u2192 CategoryTheory.Mono f\",\n  \"isProp\": true,\n  \"docString\":\n  \"In any concrete category, injective morphisms are monomorphisms. \"},\n {\"theorem\":\n  \"\u2200 {K : Type u} {V : Type v} [inst : DivisionRing K] [inst_1 : AddCommGroup V] [inst_2 : Module K V]\\n  [inst_3 : FiniteDimensional K V] {f : V \u2192\u2097[K] V}, Function.Injective \u2191f \u2194 Function.Surjective \u2191f\",\n  \"isProp\": true,\n  \"docString\":\n  \"On a finite-dimensional space, a linear map is injective if and only if it is surjective. \"},\n {\"theorem\":\n  \"\u2200 {M : Type u_1} [inst : Mul M] {c d : Con M}, Setoid.r = Setoid.r \u2192 c = d\",\n  \"isProp\": true,\n  \"docString\":\n  \"The map sending a congruence relation to its underlying binary relation is injective. \"},\n {\"theorem\":\n  \"\u2200 {R : Type u_1} [inst : Semiring R] {M : Type u_3} [inst_1 : AddCommMonoid M] [inst_2 : Module R M] {N : Type u_4}\\n  [inst_3 : AddCommMonoid N] [inst_4 : Module R N] {\u03b9 : Type u_5} {M\u2082 : Type u_2} [inst_5 : AddCommMonoid M\u2082]\\n  [inst_6 : Module R M\u2082] (f : M\u2082 \u2192\u2097[R] M),\\n  Function.Surjective \u2191f \u2192 Function.Injective fun g => AlternatingMap.compLinearMap g f\",\n  \"isProp\": true,\n  \"docString\": \"Composing with a surjective linear map is injective. \"}]\n"
  },
  {
    "stmt": "A finite graph in which every pair of vertices have precisely one common neighbour contains a vertex that is adjacent to all other vertices.",
    "prompts": "[{\"theorem\":\n  \"\u2200 {V : Type} (G : SimpleGraph V) [inst : SimpleGraph.LocallyFinite G] [inst : Fact (SimpleGraph.Preconnected G)]\\n  [inst : Infinite V], Set.Nonempty (SimpleGraph.end G)\",\n  \"isProp\": true,\n  \"docString\":\n  \"A locally finite preconnected infinite graph has at least one end. \"},\n {\"theorem\":\n  \"\u2200 {V : Type u} (G : SimpleGraph V) [inst : Fintype V] [inst_1 : DecidableRel G.Adj] (v : V),\\n  SimpleGraph.minDegree G \u2264 SimpleGraph.degree G v\",\n  \"isProp\": true,\n  \"docString\":\n  \"The minimum degree in the graph is at most the degree of any particular vertex. \"},\n {\"theorem\":\n  \"\u2200 {\u03b1 : Type u_1} [inst : TopologicalSpace \u03b1] [self : LocallyCompactSpace \u03b1] (x : \u03b1) (n : Set \u03b1),\\n  n \u2208 nhds x \u2192 \u2203 s, s \u2208 nhds x \u2227 s \u2286 n \u2227 IsCompact s\",\n  \"isProp\": true,\n  \"docString\":\n  \"In a locally compact space,\\nevery neighbourhood of every point contains a compact neighbourhood of that same point. \"},\n {\"theorem\":\n  \"\u2200 {R : Type u_2} {A : Type u_1} [inst : CommRing R] [inst_1 : CommRing A] [inst_2 : Algebra R A] (s : Set A),\\n  AlgebraicIndependent R Subtype.val \u2192 \u2200 (t : Finset \u2191s), AlgebraicIndependent R Subtype.val\",\n  \"isProp\": true,\n  \"docString\":\n  \"Every finite subset of an algebraically independent set is algebraically independent. \"},\n {\"theorem\":\n  \"\u2200 {V : Type u} (G : SimpleGraph V) [inst : Infinite V] (K : Finset V), Nonempty (SimpleGraph.ComponentCompl G \u2191K)\",\n  \"isProp\": true,\n  \"docString\":\n  \"In an infinite graph, the set of components out of a finite set is nonempty. \"},\n {\"theorem\":\n  \"\u2200 {\u03b1 : Type u_1} (G : SimpleGraph \u03b1) {s : Set \u03b1}, SimpleGraph.IsClique G s \u2194 SimpleGraph.induce s G = \u22a4\",\n  \"isProp\": true,\n  \"docString\":\n  \"A clique is a set of vertices whose induced graph is complete. \"},\n {\"theorem\":\n  \"\u2200 {\u03b1 : Type u_1} [inst : TopologicalSpace \u03b1] [inst_1 : T1Space \u03b1] (x : \u03b1) {s : Set \u03b1},\\n  s \u2208 nhds x \u2192 Set.Finite s \u2192 IsOpen {x}\",\n  \"isProp\": true,\n  \"docString\": \"A point with a finite neighborhood has to be isolated. \"},\n {\"theorem\":\n  \"\u2200 {V : Type u} (G : SimpleGraph V) [inst : Fintype V] [inst_1 : DecidableRel G.Adj] (v : V),\\n  SimpleGraph.degree G v \u2264 SimpleGraph.maxDegree G\",\n  \"isProp\": true,\n  \"docString\":\n  \"The maximum degree in the graph is at least the degree of any particular vertex. \"},\n {\"theorem\":\n  \"\u2200 {R : Type u_2} {M : Type u_1} [inst : Semiring R] [inst_1 : AddCommMonoid M] [inst_2 : Module R M] (s : Set M),\\n  LinearIndependent R Subtype.val \u2192 \u2200 (t : Finset \u2191s), LinearIndependent R Subtype.val\",\n  \"isProp\": true,\n  \"docString\":\n  \"Every finite subset of a linearly independent set is linearly independent. \"},\n {\"theorem\":\n  \"\u2200 {V : Type u} (G : SimpleGraph V) {v w : V},\\n  SimpleGraph.Adj G v w \u2194 v \u2260 w \u2227 \u2203 e, e \u2208 SimpleGraph.edgeSet G \u2227 v \u2208 e \u2227 w \u2208 e\",\n  \"isProp\": true,\n  \"docString\":\n  \"Two vertices are adjacent iff there is an edge between them. The\\ncondition `v \u2260 w` ensures they are different endpoints of the edge,\\nwhich is necessary since when `v = w` the existential\\n`\u2203 (e \u2208 G.edgeSet), v \u2208 e \u2227 w \u2208 e` is satisfied by every edge\\nincident to `v`. \"}]\n"
  },
  {
    "stmt": "The number of partitions with odd parts is equal to the number of partitions with distinct parts.",
    "prompts": "[{\"theorem\":\n  \"\u2200 {\u03b1 : Type u_1} [inst : Fintype \u03b1] {P : Finpartition Finset.univ} {hP : Finpartition.IsEquipartition P}\\n  {G : SimpleGraph \u03b1} {\u03b5 : \u211d},\\n  Finset.card P.parts * 16 ^ Finset.card P.parts \u2264 Fintype.card \u03b1 \u2192\\n    \u00acFinpartition.IsUniform P G \u03b5 \u2192\\n      Finset.card (SzemerediRegularity.increment hP G \u03b5).parts = SzemerediRegularity.stepBound (Finset.card P.parts)\",\n  \"isProp\": true,\n  \"docString\":\n  \"The increment partition has a prescribed (very big) size in terms of the original partition. \"},\n {\"theorem\":\n  \"\u2200 {\u03b1 : Type u_1} [inst : Lattice \u03b1] [inst_1 : OrderBot \u03b1] {a : \u03b1} (self : Finpartition a), Finset.SupIndep self.parts id\",\n  \"isProp\": true,\n  \"docString\": \"The partition is supremum-independent \"},\n {\"theorem\":\n  \"\u2200 {\u03b1 : Type u_1} (f : Finpartition Set.univ), Setoid.IsPartition \u2191f.parts\",\n  \"isProp\": true,\n  \"docString\": \"A finpartition gives rise to a setoid partition \"},\n {\"theorem\": \"\u2200 {\u03b1 : Type u_1} {r : Setoid \u03b1} (a : \u03b1), \u2203! b x, a \u2208 b\",\n  \"isProp\": true,\n  \"docString\": \"Equivalence classes partition the type. \"},\n {\"theorem\":\n  \"\u2200 {\u03b1 : Type u_1} [inst : Fintype \u03b1] {P : Finpartition Finset.univ} {G : SimpleGraph \u03b1} {\u03b5 : \u211d} [inst_1 : Nonempty \u03b1]\\n  (hP : Finpartition.IsEquipartition P),\\n  7 \u2264 Finset.card P.parts \u2192\\n    100 < 4 ^ Finset.card P.parts * \u03b5 ^ 5 \u2192\\n      Finset.card P.parts * 16 ^ Finset.card P.parts \u2264 Fintype.card \u03b1 \u2192\\n        \u00acFinpartition.IsUniform P G \u03b5 \u2192\\n          \u03b5 \u2264 1 \u2192\\n            \u2191(Finpartition.energy P G) + \u03b5 ^ 5 / 4 \u2264 \u2191(Finpartition.energy (SzemerediRegularity.increment hP G \u03b5) G)\",\n  \"isProp\": true,\n  \"docString\":\n  \"The increment partition has energy greater than the original one by a known fixed amount. \"},\n {\"theorem\":\n  \"\u2200 {\ud835\udd5c : Type u\ud835\udd5c} {G : Type uG} {E : Type uE} {E' : Type uE'} {F : Type uF} [inst : NormedAddCommGroup E]\\n  [inst_1 : NormedAddCommGroup E'] [inst_2 : NormedAddCommGroup F] {f : G \u2192 E} {g : G \u2192 E'} {x : G}\\n  [inst_3 : NontriviallyNormedField \ud835\udd5c] [inst_4 : NormedSpace \ud835\udd5c E] [inst_5 : NormedSpace \ud835\udd5c E'] [inst_6 : NormedSpace \ud835\udd5c F]\\n  (L : E \u2192L[\ud835\udd5c] E' \u2192L[\ud835\udd5c] F) [inst_7 : MeasurableSpace G] {\u03bc : MeasureTheory.Measure G} [inst_8 : NormedSpace \u211d F]\\n  [inst_9 : AddCommGroup G] [inst_10 : MeasureTheory.Measure.IsAddLeftInvariant \u03bc]\\n  [inst_11 : MeasureTheory.Measure.IsNegInvariant \u03bc] [inst_12 : MeasurableNeg G] [inst_13 : MeasurableAdd G],\\n  (\u2200\u1d50 (x : G) \u2202\u03bc, f (-x) = f x) \u2192 (\u2200\u1d50 (x : G) \u2202\u03bc, g (-x) = g x) \u2192 convolution f g L (-x) = convolution f g L x\",\n  \"isProp\": true,\n  \"docString\": \"The convolution of two even functions is also even. \"},\n {\"theorem\":\n  \"\u2200 {\u03b2 : Type u} {\u03b1 : Type v} {s : Finset \u03b1} {f : \u03b1 \u2192 \u03b2} [inst : AddCommMonoid \u03b2] (R : Setoid \u03b1)\\n  [inst_1 : DecidableRel Setoid.r],\\n  (Finset.sum s fun x => f x) =\\n    Finset.sum (Finset.image Quotient.mk'' s) fun xbar =>\\n      Finset.sum (Finset.filter (fun x => Quotient.mk R x = xbar) s) fun y => f y\",\n  \"isProp\": true,\n  \"docString\":\n  \"A sum can be partitioned into a sum of sums, each equivalent under a setoid.\"},\n {\"theorem\":\n  \"\u2200 {\u03b9 : Type u_1} {\u03b1 : Type u_2} {s : \u03b9 \u2192 Set \u03b1} (hs : IndexedPartition s) (x : IndexedPartition.Quotient hs),\\n  IndexedPartition.index hs (Quotient.out' x) = IndexedPartition.index hs (\u2191(IndexedPartition.out hs) x)\",\n  \"isProp\": true,\n  \"docString\":\n  \"The indices of `Quotient.out'` and `IndexedPartition.out` are equal. \"},\n {\"theorem\":\n  \"\u2200 {\u03b2 : Type u} {\u03b1 : Type v} {s : Finset \u03b1} {f : \u03b1 \u2192 \u03b2} [inst : AddCommMonoid \u03b2] (R : Setoid \u03b1)\\n  [inst_1 : DecidableRel Setoid.r],\\n  (\u2200 (x : \u03b1), x \u2208 s \u2192 (Finset.sum (Finset.filter (fun y => y \u2248 x) s) fun a => f a) = 0) \u2192\\n    (Finset.sum s fun x => f x) = 0\",\n  \"isProp\": true,\n  \"docString\":\n  \"If we can partition a sum into subsets that cancel out, then the whole sum cancels.\"},\n {\"theorem\": \"\u2200 {m n : \u2115}, (\u2200 (a : \u2115), a \u2223 m \u2194 a \u2223 n) \u2194 m = n\",\n  \"isProp\": true,\n  \"docString\":\n  \"Two natural numbers are equal if and only if they have the same divisors. \"}]\n"
  },
  {
    "stmt": "Every non-empty poset in which every chain has an upper bound contains a maximal element.",
    "prompts": "[{\"theorem\":\n  \"\u2200 {\u03b1 : Type u_1} {r : \u03b1 \u2192 \u03b1 \u2192 Prop} [inst : Nonempty \u03b1],\\n  (\u2200 (c : Set \u03b1), IsChain r c \u2192 Set.Nonempty c \u2192 \u2203 ub, \u2200 (a : \u03b1), a \u2208 c \u2192 r a ub) \u2192\\n    (\u2200 {a b c : \u03b1}, r a b \u2192 r b c \u2192 r a c) \u2192 \u2203 m, \u2200 (a : \u03b1), r m a \u2192 r a m\",\n  \"isProp\": true,\n  \"docString\":\n  \"A variant of Zorn's lemma. If every nonempty chain of a nonempty type has an upper bound, then\\nthere is a maximal element.\\n\"},\n {\"theorem\":\n  \"\u2200 {\u03b1 : Type u_1} {r : \u03b1 \u2192 \u03b1 \u2192 Prop},\\n  (\u2200 (c : Set \u03b1), IsChain r c \u2192 \u2203 ub, \u2200 (a : \u03b1), a \u2208 c \u2192 r a ub) \u2192\\n    (\u2200 {a b c : \u03b1}, r a b \u2192 r b c \u2192 r a c) \u2192 \u2203 m, \u2200 (a : \u03b1), r m a \u2192 r a m\",\n  \"isProp\": true,\n  \"docString\":\n  \"**Zorn's lemma**\\n\\nIf every chain has an upper bound, then there exists a maximal element. \"},\n {\"theorem\":\n  \"\u2200 {\u03b1 : Type u_1} {r : \u03b1 \u2192 \u03b1 \u2192 Prop} {c : Set \u03b1}, IsChain r c \u2192 \u2203 M, IsMaxChain r M \u2227 c \u2286 M\",\n  \"isProp\": true,\n  \"docString\":\n  \"Every chain is contained in a maximal chain. This generalizes Hausdorff's maximality principle.\\n\"},\n {\"theorem\":\n  \"\u2200 {R : Type u} [inst : CommRing R] (c : Set (Ideal R)),\\n  c \u2286 nonPrincipals R \u2192\\n    IsChain (fun x x_1 => x \u2264 x_1) c \u2192\\n      \u2200 {K : Ideal R}, K \u2208 c \u2192 \u2203 I, I \u2208 nonPrincipals R \u2227 \u2200 (J : Ideal R), J \u2208 c \u2192 J \u2264 I\",\n  \"isProp\": true,\n  \"docString\":\n  \"Any chain in the set of non-principal ideals has an upper bound which is non-principal.\\n(Namely, the union of the chain is such an upper bound.)\\n\"},\n {\"theorem\":\n  \"\u2200 {\u03b1 : Type u_1} [self : CompleteBooleanAlgebra \u03b1] (s : Set \u03b1) (a : \u03b1), (\u2200 (b : \u03b1), b \u2208 s \u2192 b \u2264 a) \u2192 sSup s \u2264 a\",\n  \"isProp\": true,\n  \"docString\": \"Any upper bound is more than the set supremum. \"},\n {\"theorem\":\n  \"\u2200 {\u03b1 : Type u} [inst : Preorder \u03b1] [inst_1 : OrderTop \u03b1] (s : Set \u03b1), BddAbove s\",\n  \"isProp\": true,\n  \"docString\": \"When there is a global maximum, every set is bounded above. \"},\n {\"theorem\":\n  \"\u2200 {\u03b1 : Type u} {\u03b2 : Type v} [inst : SemilatticeSup \u03b1] [inst_1 : Nonempty \u03b1] {I : Set \u03b2} {S : \u03b2 \u2192 Set \u03b1},\\n  Set.Finite I \u2192 (BddAbove (\u22c3 (i : \u03b2) (_ : i \u2208 I), S i) \u2194 \u2200 (i : \u03b2), i \u2208 I \u2192 BddAbove (S i))\",\n  \"isProp\": true,\n  \"docString\":\n  \"A finite union of sets which are all bounded above is still bounded above.\"},\n {\"theorem\":\n  \"\u2200 {\u03b1 : Type u} [inst : SemilatticeSup \u03b1] [inst_1 : Nonempty \u03b1] {s : Set \u03b1}, Set.Finite s \u2192 BddAbove s\",\n  \"isProp\": true,\n  \"docString\": \"A finite set is bounded above.\"},\n {\"theorem\":\n  \"\u2200 {\u03b3 : Type w} [inst : SemilatticeSup \u03b3] {s t : Set \u03b3}, BddAbove (s \u222a t) \u2194 BddAbove s \u2227 BddAbove t\",\n  \"isProp\": true,\n  \"docString\":\n  \"The union of two sets is bounded above if and only if each of the sets is. \"},\n {\"theorem\":\n  \"\u2200 {\u03b1 : Type u_1} [inst : TopologicalSpace \u03b1] {C : Set \u03b1} [inst_1 : TopologicalSpace.SecondCountableTopology \u03b1],\\n  IsClosed C \u2192 \u00acSet.Countable C \u2192 \u2203 D, Perfect D \u2227 Set.Nonempty D \u2227 D \u2286 C\",\n  \"isProp\": true,\n  \"docString\":\n  \"Any uncountable closed set in a second countable space contains a nonempty perfect subset.\"}]\n"
  },
  {
    "stmt": "A group whose automorphism group is cyclic is Abelian.",
    "prompts": "[{\"theorem\":\n  \"\u2200 {\u03b1 : Type u} [inst : Group \u03b1] [inst_1 : Fintype \u03b1] {p : \u2115} [hp : Fact (Nat.Prime p)], Fintype.card \u03b1 = p \u2192 IsCyclic \u03b1\",\n  \"isProp\": true,\n  \"docString\": \"A finite group of prime order is cyclic. \"},\n {\"theorem\":\n  \"\u2200 {R : Type u_2} {G : Type u_1} [inst : CommRing R] [inst_1 : IsDomain R] [inst_2 : Group G] [inst_3 : Finite G]\\n  (f : G \u2192* R), Function.Injective \u2191f \u2192 IsCyclic G\",\n  \"isProp\": true,\n  \"docString\":\n  \"A finite subgroup of the unit group of an integral domain is cyclic. \"},\n {\"theorem\":\n  \"\u2200 {\u03b1 : Type u} [inst : AddGroup \u03b1] [inst_1 : Fintype \u03b1] {p : \u2115} [hp : Fact (Nat.Prime p)],\\n  Fintype.card \u03b1 = p \u2192 IsAddCyclic \u03b1\",\n  \"isProp\": true,\n  \"docString\": \"A finite group of prime order is cyclic.\"},\n {\"theorem\":\n  \"\u2200 {R : Type u_1} [inst : CommRing R] [inst_1 : IsDomain R] (S : Subgroup R\u02e3) [inst_2 : Finite { x // x \u2208 S }],\\n  IsCyclic { x // x \u2208 S }\",\n  \"isProp\": true,\n  \"docString\":\n  \"A finite subgroup of the units of an integral domain is cyclic. \"},\n {\"theorem\": \"\u2200 {G : Type u_1} [inst : CommGroup G], Group.IsNilpotent G\",\n  \"isProp\": true,\n  \"docString\": \"Abelian groups are nilpotent \"},\n {\"theorem\": \"\u2200 (H : AddSubgroup \u2124), \u2203 a, H = AddSubgroup.closure {a}\",\n  \"isProp\": true,\n  \"docString\": \"Every subgroup of `\u2124` is cyclic. \"},\n {\"theorem\":\n  \"\u2200 {\u03b1 : Type u} {\u03b2 : Type v} [inst : Group \u03b1] [inst_1 : Group \u03b2] {f : \u03b1 \u2192 \u03b2}, IsGroupHom f \u2192 IsMonoidHom f\",\n  \"isProp\": true,\n  \"docString\": \"A group homomorphism is a monoid homomorphism. \"},\n {\"theorem\":\n  \"\u2200 {\u03b1 : Type u_1} {\u03b2 : Type u_2} [inst : Group \u03b1] [inst_1 : CommGroup \u03b2] {f g : \u03b1 \u2192 \u03b2},\\n  IsGroupHom f \u2192 IsGroupHom g \u2192 IsGroupHom fun a => f a * g a\",\n  \"isProp\": true,\n  \"docString\":\n  \"The product of group homomorphisms is a group homomorphism if the target is commutative. \"},\n {\"theorem\":\n  \"\u2200 {G : Type u_1} [inst : Group G] [inst_1 : Finite G], Monoid.IsTorsion G\",\n  \"isProp\": true,\n  \"docString\": \"Finite groups are torsion groups. \"},\n {\"theorem\":\n  \"\u2200 {G : Type u_1} [inst : Group G], Monoid.IsTorsion G \u2192 \u2200 (H : Subgroup G), Monoid.IsTorsion { x // x \u2208 H }\",\n  \"isProp\": true,\n  \"docString\": \"Subgroups of torsion groups are torsion groups. \"}]\n"
  },
  {
    "stmt": "A uniformly continuous function of a uniformly continuous function is uniformly continuous.",
    "prompts": "[{\"theorem\":\n  \"\u2200 {\u03b1 : Type u} {\u03b2 : Type v} {\u03b9 : Type x} [inst : UniformSpace \u03b2] {F : \u03b9 \u2192 \u03b1 \u2192 \u03b2} {f : \u03b1 \u2192 \u03b2} {p : Filter \u03b9}\\n  [inst_1 : TopologicalSpace \u03b1],\\n  TendstoUniformly F f p \u2192 (\u2200\u1da0 (n : \u03b9) in p, Continuous (F n)) \u2192 \u2200 [inst_2 : Filter.NeBot p], Continuous f\",\n  \"isProp\": true,\n  \"docString\": \"A uniform limit of continuous functions is continuous. \"},\n {\"theorem\":\n  \"\u2200 {\u03b9 : Type u_1} {\u03b1 : Type u_2} {\u03b2 : Type u_3} [inst : UniformSpace \u03b1] [inst_1 : UniformSpace \u03b2] {F : \u03b9 \u2192 \u03b2 \u2192 \u03b1},\\n  UniformEquicontinuous F \u2192 \u2200 (i : \u03b9), UniformContinuous (F i)\",\n  \"isProp\": true,\n  \"docString\":\n  \"Each function of a uniformly equicontinuous family is uniformly continuous. \"},\n {\"theorem\":\n  \"\u2200 {\u03b1 : Type u} {\u03b2 : Type v} [inst : UniformSpace \u03b2] {f : \u03b1 \u2192 \u03b2} [inst_1 : TopologicalSpace \u03b1],\\n  (\u2200 (u : Set (\u03b2 \u00d7 \u03b2)), u \u2208 uniformity \u03b2 \u2192 \u2203 F, Continuous F \u2227 \u2200 (y : \u03b1), (f y, F y) \u2208 u) \u2192 Continuous f\",\n  \"isProp\": true,\n  \"docString\":\n  \"A function which can be uniformly approximated by continuous functions is continuous. \"},\n {\"theorem\":\n  \"\u2200 {\u03b1 : Type u} {\u03b2 : Type v} {\u03b9 : Type x} [inst : UniformSpace \u03b2] {F : \u03b9 \u2192 \u03b1 \u2192 \u03b2} {f : \u03b1 \u2192 \u03b2} {p : Filter \u03b9}\\n  [inst_1 : TopologicalSpace \u03b1],\\n  TendstoLocallyUniformly F f p \u2192 (\u2200\u1da0 (n : \u03b9) in p, Continuous (F n)) \u2192 \u2200 [inst_2 : Filter.NeBot p], Continuous f\",\n  \"isProp\": true,\n  \"docString\":\n  \"A locally uniform limit of continuous functions is continuous. \"},\n {\"theorem\":\n  \"\u2200 {\u03b1 : Type u} {\u03b2 : Type v} [inst : UniformSpace \u03b2] {f : \u03b1 \u2192 \u03b2} [inst_1 : TopologicalSpace \u03b1],\\n  (\u2200 (x : \u03b1) (u : Set (\u03b2 \u00d7 \u03b2)),\\n      u \u2208 uniformity \u03b2 \u2192 \u2203 t, t \u2208 nhds x \u2227 \u2203 F, ContinuousAt F x \u2227 \u2200 (y : \u03b1), y \u2208 t \u2192 (f y, F y) \u2208 u) \u2192\\n    Continuous f\",\n  \"isProp\": true,\n  \"docString\":\n  \"A function which can be locally uniformly approximated by continuous functions is continuous. \"},\n {\"theorem\":\n  \"\u2200 {\u03b1 : Type u_2} {\u03b2 : Type u_1} {\u03b9 : Type u_3} {m : MeasurableSpace \u03b1} (\u03bc : MeasureTheory.Measure \u03b1)\\n  [inst : NormedAddCommGroup \u03b2] {p : ENNReal} {g : \u03b1 \u2192 \u03b2},\\n  1 \u2264 p \u2192 p \u2260 \u22a4 \u2192 MeasureTheory.Mem\u2112p g p \u2192 MeasureTheory.UnifIntegrable (fun x => g) p \u03bc\",\n  \"isProp\": true,\n  \"docString\": \"A constant function is uniformly integrable. \"},\n {\"theorem\":\n  \"\u2200 {\u03b1 : Type u_1} {\u03b2 : Type u_2} [inst : UniformSpace \u03b1] [inst_1 : UniformSpace \u03b2] (self : \u03b1 \u2243\u1d64 \u03b2),\\n  UniformContinuous self.toFun\",\n  \"isProp\": true,\n  \"docString\": \"Uniform continuity of the function \"},\n {\"theorem\":\n  \"\u2200 {\u03b1 : Type u} {\u03b2 : Type v} [inst : UniformSpace \u03b2] {f : \u03b1 \u2192 \u03b2} {s : Set \u03b1} [inst_1 : TopologicalSpace \u03b1],\\n  (\u2200 (u : Set (\u03b2 \u00d7 \u03b2)), u \u2208 uniformity \u03b2 \u2192 \u2203 F, ContinuousOn F s \u2227 \u2200 (y : \u03b1), y \u2208 s \u2192 (f y, F y) \u2208 u) \u2192 ContinuousOn f s\",\n  \"isProp\": true,\n  \"docString\":\n  \"A function which can be uniformly approximated by functions which are continuous on a set\\nis continuous on this set. \"},\n {\"theorem\":\n  \"\u2200 {\u03b1 : Type u_3} {\u03b2 : Type u_2} [inst : UniformSpace \u03b1] [inst_1 : UniformSpace \u03b2] {\u03b9 : Type u_1} {F : \u03b9 \u2192 \u03b2 \u2192 \u03b1}\\n  [inst_2 : CompactSpace \u03b2], Equicontinuous F \u2192 UniformEquicontinuous F\",\n  \"isProp\": true,\n  \"docString\":\n  \"An equicontinuous family of functions defined on a compact uniform space is automatically\\nuniformly equicontinuous. \"},\n {\"theorem\":\n  \"\u2200 {\u03b1 : Type u} {\u03b2 : Type v} [inst : UniformSpace \u03b2] {f : \u03b1 \u2192 \u03b2} {s : Set \u03b1} [inst_1 : TopologicalSpace \u03b1],\\n  (\u2200 (x : \u03b1),\\n      x \u2208 s \u2192\\n        \u2200 (u : Set (\u03b2 \u00d7 \u03b2)),\\n          u \u2208 uniformity \u03b2 \u2192\\n            \u2203 t, t \u2208 nhdsWithin x s \u2227 \u2203 F, ContinuousWithinAt F s x \u2227 \u2200 (y : \u03b1), y \u2208 t \u2192 (f y, F y) \u2208 u) \u2192\\n    ContinuousOn f s\",\n  \"isProp\": true,\n  \"docString\":\n  \"A function which can be locally uniformly approximated by functions which are continuous\\non a set is continuous on this set. \"}]\n"
  },
  {
    "stmt": "A uniformly continuous function of a uniformly continuous function is uniformly continuous.",
    "prompts": "[{\"theorem\":\n  \"\u2200 {\u03b1 : Type u} {\u03b2 : Type v} {\u03b9 : Type x} [inst : UniformSpace \u03b2] {F : \u03b9 \u2192 \u03b1 \u2192 \u03b2} {f : \u03b1 \u2192 \u03b2} {p : Filter \u03b9}\\n  [inst_1 : TopologicalSpace \u03b1],\\n  TendstoUniformly F f p \u2192 (\u2200\u1da0 (n : \u03b9) in p, Continuous (F n)) \u2192 \u2200 [inst_2 : Filter.NeBot p], Continuous f\",\n  \"isProp\": true,\n  \"docString\": \"A uniform limit of continuous functions is continuous. \"},\n {\"theorem\":\n  \"\u2200 {\u03b9 : Type u_1} {\u03b1 : Type u_2} {\u03b2 : Type u_3} [inst : UniformSpace \u03b1] [inst_1 : UniformSpace \u03b2] {F : \u03b9 \u2192 \u03b2 \u2192 \u03b1},\\n  UniformEquicontinuous F \u2192 \u2200 (i : \u03b9), UniformContinuous (F i)\",\n  \"isProp\": true,\n  \"docString\":\n  \"Each function of a uniformly equicontinuous family is uniformly continuous. \"},\n {\"theorem\":\n  \"\u2200 {\u03b1 : Type u} {\u03b2 : Type v} [inst : UniformSpace \u03b2] {f : \u03b1 \u2192 \u03b2} [inst_1 : TopologicalSpace \u03b1],\\n  (\u2200 (u : Set (\u03b2 \u00d7 \u03b2)), u \u2208 uniformity \u03b2 \u2192 \u2203 F, Continuous F \u2227 \u2200 (y : \u03b1), (f y, F y) \u2208 u) \u2192 Continuous f\",\n  \"isProp\": true,\n  \"docString\":\n  \"A function which can be uniformly approximated by continuous functions is continuous. \"},\n {\"theorem\":\n  \"\u2200 {\u03b1 : Type u} {\u03b2 : Type v} {\u03b9 : Type x} [inst : UniformSpace \u03b2] {F : \u03b9 \u2192 \u03b1 \u2192 \u03b2} {f : \u03b1 \u2192 \u03b2} {p : Filter \u03b9}\\n  [inst_1 : TopologicalSpace \u03b1],\\n  TendstoLocallyUniformly F f p \u2192 (\u2200\u1da0 (n : \u03b9) in p, Continuous (F n)) \u2192 \u2200 [inst_2 : Filter.NeBot p], Continuous f\",\n  \"isProp\": true,\n  \"docString\":\n  \"A locally uniform limit of continuous functions is continuous. \"},\n {\"theorem\":\n  \"\u2200 {\u03b1 : Type u} {\u03b2 : Type v} [inst : UniformSpace \u03b2] {f : \u03b1 \u2192 \u03b2} [inst_1 : TopologicalSpace \u03b1],\\n  (\u2200 (x : \u03b1) (u : Set (\u03b2 \u00d7 \u03b2)),\\n      u \u2208 uniformity \u03b2 \u2192 \u2203 t, t \u2208 nhds x \u2227 \u2203 F, ContinuousAt F x \u2227 \u2200 (y : \u03b1), y \u2208 t \u2192 (f y, F y) \u2208 u) \u2192\\n    Continuous f\",\n  \"isProp\": true,\n  \"docString\":\n  \"A function which can be locally uniformly approximated by continuous functions is continuous. \"},\n {\"theorem\":\n  \"\u2200 {\u03b1 : Type u_2} {\u03b2 : Type u_1} {\u03b9 : Type u_3} {m : MeasurableSpace \u03b1} (\u03bc : MeasureTheory.Measure \u03b1)\\n  [inst : NormedAddCommGroup \u03b2] {p : ENNReal} {g : \u03b1 \u2192 \u03b2},\\n  1 \u2264 p \u2192 p \u2260 \u22a4 \u2192 MeasureTheory.Mem\u2112p g p \u2192 MeasureTheory.UnifIntegrable (fun x => g) p \u03bc\",\n  \"isProp\": true,\n  \"docString\": \"A constant function is uniformly integrable. \"},\n {\"theorem\":\n  \"\u2200 {\u03b1 : Type u_1} {\u03b2 : Type u_2} [inst : UniformSpace \u03b1] [inst_1 : UniformSpace \u03b2] (self : \u03b1 \u2243\u1d64 \u03b2),\\n  UniformContinuous self.toFun\",\n  \"isProp\": true,\n  \"docString\": \"Uniform continuity of the function \"},\n {\"theorem\":\n  \"\u2200 {\u03b1 : Type u} {\u03b2 : Type v} [inst : UniformSpace \u03b2] {f : \u03b1 \u2192 \u03b2} {s : Set \u03b1} [inst_1 : TopologicalSpace \u03b1],\\n  (\u2200 (u : Set (\u03b2 \u00d7 \u03b2)), u \u2208 uniformity \u03b2 \u2192 \u2203 F, ContinuousOn F s \u2227 \u2200 (y : \u03b1), y \u2208 s \u2192 (f y, F y) \u2208 u) \u2192 ContinuousOn f s\",\n  \"isProp\": true,\n  \"docString\":\n  \"A function which can be uniformly approximated by functions which are continuous on a set\\nis continuous on this set. \"},\n {\"theorem\":\n  \"\u2200 {\u03b1 : Type u_3} {\u03b2 : Type u_2} [inst : UniformSpace \u03b1] [inst_1 : UniformSpace \u03b2] {\u03b9 : Type u_1} {F : \u03b9 \u2192 \u03b2 \u2192 \u03b1}\\n  [inst_2 : CompactSpace \u03b2], Equicontinuous F \u2192 UniformEquicontinuous F\",\n  \"isProp\": true,\n  \"docString\":\n  \"An equicontinuous family of functions defined on a compact uniform space is automatically\\nuniformly equicontinuous. \"},\n {\"theorem\":\n  \"\u2200 {\u03b1 : Type u} {\u03b2 : Type v} [inst : UniformSpace \u03b2] {f : \u03b1 \u2192 \u03b2} {s : Set \u03b1} [inst_1 : TopologicalSpace \u03b1],\\n  (\u2200 (x : \u03b1),\\n      x \u2208 s \u2192\\n        \u2200 (u : Set (\u03b2 \u00d7 \u03b2)),\\n          u \u2208 uniformity \u03b2 \u2192\\n            \u2203 t, t \u2208 nhdsWithin x s \u2227 \u2203 F, ContinuousWithinAt F s x \u2227 \u2200 (y : \u03b1), y \u2208 t \u2192 (f y, F y) \u2208 u) \u2192\\n    ContinuousOn f s\",\n  \"isProp\": true,\n  \"docString\":\n  \"A function which can be locally uniformly approximated by functions which are continuous\\non a set is continuous on this set. \"}]\n"
  },
  {
    "stmt": "A topological space is normal if and only if any two disjoint closed subsets can be separated by a continuous function.",
    "prompts": "[{\"theorem\":\n  \"\u2200 {\u03b1 : Type u} [t : TopologicalSpace \u03b1] [inst : DiscreteTopology \u03b1], TopologicalSpace.SeparableSpace \u03b1 \u2194 Countable \u03b1\",\n  \"isProp\": true,\n  \"docString\":\n  \"A topological space with discrete topology is separable iff it is countable. \"},\n {\"theorem\":\n  \"\u2200 (\u03b1 : Type u_1) [inst : TopologicalSpace \u03b1] [inst_1 : DiscreteTopology \u03b1], LocallyConnectedSpace \u03b1\",\n  \"isProp\": true,\n  \"docString\": \"A space with discrete topology is a locally connected space. \"},\n {\"theorem\":\n  \"\u2200 {\u03b1 : Type u} [inst : TopologicalSpace \u03b1] [inst_1 : Finite \u03b1], CompactSpace \u03b1\",\n  \"isProp\": true,\n  \"docString\": \"Finite topological spaces are compact. \"},\n {\"theorem\":\n  \"\u2200 {\u03b1 : Type u} [inst : TopologicalSpace \u03b1] [self : NormalSpace \u03b1] (s t : Set \u03b1),\\n  IsClosed s \u2192 IsClosed t \u2192 Disjoint s t \u2192 SeparatedNhds s t\",\n  \"isProp\": true,\n  \"docString\":\n  \"Two disjoint sets in a normal space admit disjoint neighbourhoods. \"},\n {\"theorem\":\n  \"\u2200 {\u03b1 : Type u_1} {\u03b2 : Type u_2} [inst : TopologicalSpace \u03b1] [inst_1 : TopologicalSpace \u03b2] {f : \u03b1 \u2192 \u03b2},\\n  IsSpectralMap f \u2192 \u2200 \u2983s : Set \u03b2\u2984, IsOpen s \u2192 IsCompact s \u2192 IsCompact (f \u207b\u00b9' s)\",\n  \"isProp\": true,\n  \"docString\":\n  \"A function between topological spaces is spectral if it is continuous and the preimage of\\nevery compact open set is compact open. \"},\n {\"theorem\":\n  \"\u2200 {\u03b1 : Type u_1} {\u03b2 : Type u_2} {t\u2081 t\u2082 : TopologicalSpace \u03b1} {t\u2083 : TopologicalSpace \u03b2},\\n  t\u2082 \u2264 t\u2081 \u2192 \u2200 {s : Set \u03b1} {f : \u03b1 \u2192 \u03b2}, ContinuousOn f s \u2192 ContinuousOn f s\",\n  \"isProp\": true,\n  \"docString\":\n  \"If a function is continuous on a set for some topologies, then it is\\ncontinuous on the same set with respect to any finer topology on the source space. \"},\n {\"theorem\":\n  \"\u2200 {\u03b1 : Type u_1} {\u03b2 : Type u_2} {t\u2081 : TopologicalSpace \u03b1} {t\u2082 t\u2083 : TopologicalSpace \u03b2},\\n  t\u2082 \u2264 t\u2083 \u2192 \u2200 {s : Set \u03b1} {f : \u03b1 \u2192 \u03b2}, ContinuousOn f s \u2192 ContinuousOn f s\",\n  \"isProp\": true,\n  \"docString\":\n  \"If a function is continuous on a set for some topologies, then it is\\ncontinuous on the same set with respect to any coarser topology on the target space. \"},\n {\"theorem\":\n  \"\u2200 {\u03b1 : Type u} [inst : TopologicalSpace \u03b1] [self : T2Space \u03b1] (x y : \u03b1),\\n  x \u2260 y \u2192 \u2203 u v, IsOpen u \u2227 IsOpen v \u2227 x \u2208 u \u2227 y \u2208 v \u2227 Disjoint u v\",\n  \"isProp\": true,\n  \"docString\":\n  \"Every two points in a Hausdorff space admit disjoint open neighbourhoods. \"},\n {\"theorem\":\n  \"\u2200 {\u03b1 : Type u} [t : TopologicalSpace \u03b1] {\u03b2 : Type u_1} [inst : TopologicalSpace \u03b2]\\n  [inst_1 : TopologicalSpace.SeparableSpace \u03b1] [inst_2 : TopologicalSpace.SeparableSpace \u03b2],\\n  TopologicalSpace.SeparableSpace (\u03b1 \u00d7 \u03b2)\",\n  \"isProp\": true,\n  \"docString\": \"The product of two separable spaces is a separable space. \"},\n {\"theorem\": \"\u2200 {X Y : CompHaus} (f : X \u27f6 Y), IsClosedMap \u2191f\",\n  \"isProp\": true,\n  \"docString\":\n  \"Any continuous function on compact Hausdorff spaces is a closed map. \"}]\n"
  },
  {
    "stmt": "If a function from the unit interval to itself has a point of period three, then it has points of all positive periods.",
    "prompts": "[{\"theorem\":\n  \"\u2200 {\u03b1 : Type u_1} (f : \u03b1 \u2192 \u03b1) (x : \u03b1), Function.IsPeriodicPt f 0 x\",\n  \"isProp\": true,\n  \"docString\": \"Any point is a periodic point of period `0`. \"},\n {\"theorem\":\n  \"\u2200 {\u03b1 : Type u_1} {f : \u03b1 \u2192 \u03b1} {x : \u03b1}, Function.IsFixedPt f x \u2192 \u2200 (n : \u2115), Function.IsPeriodicPt f n x\",\n  \"isProp\": true,\n  \"docString\":\n  \"A fixed point of `f` is a periodic point of `f` of any prescribed period. \"},\n {\"theorem\": \"\u2200 {\u03b1 : Type u_1} (n : \u2115) (x : \u03b1), Function.IsPeriodicPt id n x\",\n  \"isProp\": true,\n  \"docString\": \"For the identity map, all points are periodic. \"},\n {\"theorem\":\n  \"\u2200 {k : Type u_2} {V : Type u_3} {P : Type u_1} [inst : DivisionRing k] [inst_1 : AddCommGroup V] [inst_2 : Module k V]\\n  [inst_3 : AddTorsor V P] {p\u2081 p\u2082 p\u2083 p\u2084 p\u2085 : P},\\n  p\u2081 \u2208 affineSpan k {p\u2084, p\u2085} \u2192 p\u2082 \u2208 affineSpan k {p\u2084, p\u2085} \u2192 p\u2083 \u2208 affineSpan k {p\u2084, p\u2085} \u2192 Collinear k {p\u2081, p\u2082, p\u2083}\",\n  \"isProp\": true,\n  \"docString\":\n  \"If three points lie in the affine span of two points, the first three points are collinear. \"},\n {\"theorem\":\n  \"\u2200 {V : Type u_2} {P : Type u_1} [inst : NormedAddCommGroup V] [inst_1 : InnerProductSpace \u211d V] [inst_2 : MetricSpace P]\\n  [inst_3 : NormedAddTorsor V P] {s : Set P},\\n  EuclideanGeometry.Cospherical s \u2192\\n    \u2200 {p\u2081 p\u2082 p\u2083 : P}, p\u2081 \u2208 s \u2192 p\u2082 \u2208 s \u2192 p\u2083 \u2208 s \u2192 p\u2081 \u2260 p\u2082 \u2192 p\u2081 \u2260 p\u2083 \u2192 p\u2082 \u2260 p\u2083 \u2192 AffineIndependent \u211d ![p\u2081, p\u2082, p\u2083]\",\n  \"isProp\": true,\n  \"docString\":\n  \"Any three points in a cospherical set are affinely independent. \"},\n {\"theorem\":\n  \"\u2200 {\u03b1 : Type u_1} {\u03b2 : Type u_2} {f : \u03b1 \u2192 \u03b2} {c : \u03b1} [inst : LinearOrderedAddCommGroup \u03b1] [inst_1 : Archimedean \u03b1],\\n  Function.Periodic f c \u2192 0 < c \u2192 \u2200 (x : \u03b1), \u2203 y, y \u2208 Set.Ico 0 c \u2227 f x = f y\",\n  \"isProp\": true,\n  \"docString\":\n  \"If a function `f` is `periodic` with positive period `c`, then for all `x` there exists some\\n`y \u2208 Ico 0 c` such that `f x = f y`. \"},\n {\"theorem\":\n  \"\u2200 {\u03b1 : Type u_1} {\u03b2 : Type u_2} {f : \u03b1 \u2192 \u03b2} {c : \u03b1} [inst : LinearOrderedAddCommGroup \u03b1] [inst_1 : Archimedean \u03b1],\\n  Function.Periodic f c \u2192 0 < c \u2192 \u2200 (x a : \u03b1), \u2203 y, y \u2208 Set.Ico a (a + c) \u2227 f x = f y\",\n  \"isProp\": true,\n  \"docString\":\n  \"If a function `f` is `periodic` with positive period `c`, then for all `x` there exists some\\n`y \u2208 Ico a (a + c)` such that `f x = f y`. \"},\n {\"theorem\":\n  \"\u2200 {\u03b1 : Type u} [inst : TopologicalSpace \u03b1] {f : \u211d \u2192 \u03b1} {c : \u211d},\\n  Function.Periodic f c \u2192 c \u2260 0 \u2192 Continuous f \u2192 IsCompact (Set.range f)\",\n  \"isProp\": true,\n  \"docString\": \"A continuous, periodic function has compact range. \"},\n {\"theorem\":\n  \"\u2200 (k : Type u_1) {V : Type u_2} {P : Type u_3} [inst : DivisionRing k] [inst_1 : AddCommGroup V] [inst_2 : Module k V]\\n  [inst_3 : AddTorsor V P] (p\u2081 p\u2082 p\u2083 : P), Coplanar k {p\u2081, p\u2082, p\u2083}\",\n  \"isProp\": true,\n  \"docString\": \"Three points are coplanar. \"},\n {\"theorem\":\n  \"\u2200 {V : Type u_1} {P : Type u_2} [inst : NormedAddCommGroup V] [inst_1 : InnerProductSpace \u211d V] [inst_2 : MetricSpace P]\\n  [inst_3 : NormedAddTorsor V P] {p\u2081 p\u2082 p\u2083 : P},\\n  \u00acCollinear \u211d {p\u2081, p\u2082, p\u2083} \u2192 0 < Real.sin (EuclideanGeometry.angle p\u2081 p\u2082 p\u2083)\",\n  \"isProp\": true,\n  \"docString\":\n  \"If three points are not collinear, the sine of the angle between them is positive. \"}]\n"
  },
  {
    "stmt": "A terminal object in a category is unique up to unique isomorphism.",
    "prompts": "[{\"theorem\":\n  \"\u2200 {C : Type u\u2081} [inst : CategoryTheory.Category C] (X : C) [h : (Y : C) \u2192 Unique (Y \u27f6 X)],\\n  CategoryTheory.Limits.HasTerminal C\",\n  \"isProp\": true,\n  \"docString\":\n  \"We can more explicitly show that a category has a terminal object by specifying the object,\\nand showing there is a unique morphism to it from any other object. \"},\n {\"theorem\":\n  \"\u2200 {C : Type u\u2081} [inst : CategoryTheory.Category C] {X Y : C},\\n  CategoryTheory.Limits.IsTerminal X \u2192 \u2200 (f g : Y \u27f6 X), f = g\",\n  \"isProp\": true,\n  \"docString\": \"Any two morphisms to a terminal object are equal. \"},\n {\"theorem\":\n  \"\u2200 {C : Type u\u2081} [inst : CategoryTheory.Category C] [inst_1 : CategoryTheory.Limits.HasFiniteProducts C]\\n  [inst_2 : CategoryTheory.CartesianClosed C], CategoryTheory.ExponentialIdeal (CategoryTheory.subterminalInclusion C)\",\n  \"isProp\": true,\n  \"docString\":\n  \"The subcategory of subterminal objects is an exponential ideal. \"},\n {\"theorem\":\n  \"\u2200 {C : Type u\u2081} [inst : CategoryTheory.Category C] {X Y : C},\\n  CategoryTheory.Limits.IsTerminal X \u2192 \u2200 (f : X \u27f6 Y), CategoryTheory.Mono f\",\n  \"isProp\": true,\n  \"docString\": \"Any morphism from a terminal object is mono. \"},\n {\"theorem\":\n  \"\u2200 {C : Type u\u2081} [inst : CategoryTheory.Category C] (X : C) [h : (Y : C) \u2192 Unique (X \u27f6 Y)],\\n  CategoryTheory.Limits.HasInitial C\",\n  \"isProp\": true,\n  \"docString\":\n  \"We can more explicitly show that a category has an initial object by specifying the object,\\nand showing there is a unique morphism from it to any other object. \"},\n {\"theorem\":\n  \"\u2200 {C : Type u} [inst : CategoryTheory.Category C] (I : C),\\n  (\u2200 (A : C) (f : I \u27f6 A), CategoryTheory.IsIso f) \u2192 CategoryTheory.Limits.HasStrictTerminalObjects C\",\n  \"isProp\": true,\n  \"docString\":\n  \"If `C` has an object such that every morphism *from* it is an isomorphism, then `C`\\nhas strict terminal objects. \"},\n {\"theorem\":\n  \"\u2200 {C : Type u} [inst : CategoryTheory.Category C] [inst_1 : CategoryTheory.Limits.HasZeroMorphisms C]\\n  [inst_2 : CategoryTheory.Limits.HasTerminal C], CategoryTheory.Limits.HasZeroObject C\",\n  \"isProp\": true,\n  \"docString\":\n  \"If there are zero morphisms, any terminal object is a zero object. \"},\n {\"theorem\":\n  \"\u2200 (C : Type u) [inst : CategoryTheory.Category C] [inst_1 : CategoryTheory.Limits.HasZeroMorphisms C]\\n  [inst_2 : CategoryTheory.Limits.HasFiniteBiproducts C], CategoryTheory.Limits.HasZeroObject C\",\n  \"isProp\": true,\n  \"docString\": \"A category with finite biproducts has a zero object. \"},\n {\"theorem\":\n  \"\u2200 (D : Type u_1) [inst : CategoryTheory.Category D] [inst_1 : CategoryTheory.Abelian D],\\n  CategoryTheory.IsIdempotentComplete D\",\n  \"isProp\": true,\n  \"docString\": \"An abelian category is idempotent complete. \"},\n {\"theorem\":\n  \"\u2200 {C : Type u\u2081} [inst : CategoryTheory.Category C] {X Y : C},\\n  CategoryTheory.Limits.IsTerminal X \u2192 \u2200 (f : X \u27f6 Y), CategoryTheory.IsSplitMono f\",\n  \"isProp\": true,\n  \"docString\": \"Any morphism from a terminal object is split mono. \"}]\n"
  },
  {
    "stmt": "The complement of the union of two sets is the intersection of their complements.",
    "prompts": "[{\"theorem\":\n  \"\u2200 {\u03b1 : Type u} [inst : TopologicalSpace \u03b1] {s : Set \u03b1} [self : IsClosed s], IsOpen s\u1d9c\",\n  \"isProp\": true,\n  \"docString\": \"The complement of a closed set is an open set. \"},\n {\"theorem\":\n  \"\u2200 {\u03b1 : Type u} [inst : TopologicalSpace \u03b1] (s : Set \u03b1), frontier s\u1d9c = frontier s\",\n  \"isProp\": true,\n  \"docString\":\n  \"The complement of a set has the same frontier as the original set. \"},\n {\"theorem\":\n  \"\u2200 {\u03b1 : Type u} [inst : TopologicalSpace \u03b1] {s t : Set \u03b1}, IsCompact s \u2192 IsClosed t \u2192 IsCompact (s \u2229 t)\",\n  \"isProp\": true,\n  \"docString\":\n  \"The intersection of a compact set and a closed set is a compact set. \"},\n {\"theorem\":\n  \"\u2200 {\u03b1 : Type u} [inst : PseudoMetricSpace \u03b1] {s t : Set \u03b1}, Metric.Bounded s \u2192 Metric.Bounded t \u2192 Metric.Bounded (s \u222a t)\",\n  \"isProp\": true,\n  \"docString\": \"The union of two bounded sets is bounded. \"},\n {\"theorem\":\n  \"\u2200 {\u03b1 : Type u} [inst : PseudoMetricSpace \u03b1] {s t : Set \u03b1}, Metric.Bounded (s \u222a t) \u2194 Metric.Bounded s \u2227 Metric.Bounded t\",\n  \"isProp\": true,\n  \"docString\":\n  \"The union of two sets is bounded iff each of the sets is bounded. \"},\n {\"theorem\":\n  \"\u2200 {\u03b1 : Type u_1} {E : Type u_2} {m0 : MeasurableSpace \u03b1} {p : ENNReal} {\u03bc : MeasureTheory.Measure \u03b1}\\n  [inst : NormedAddCommGroup E] {s t : Set \u03b1} (hs : MeasurableSet s) (ht : MeasurableSet t) (h\u03bcs : \u2191\u2191\u03bc s \u2260 \u22a4)\\n  (h\u03bct : \u2191\u2191\u03bc t \u2260 \u22a4),\\n  s \u2229 t = \u2205 \u2192\\n    \u2200 (c : E),\\n      MeasureTheory.indicatorConstLp p (_ : MeasurableSet (s \u222a t)) (_ : \u2191\u2191\u03bc (s \u222a t) \u2260 \u22a4) c =\\n        MeasureTheory.indicatorConstLp p hs h\u03bcs c + MeasureTheory.indicatorConstLp p ht h\u03bct c\",\n  \"isProp\": true,\n  \"docString\":\n  \"The indicator of a disjoint union of two sets is the sum of the indicators of the sets. \"},\n {\"theorem\":\n  \"\u2200 {\u03b1 : Type u} [inst : TopologicalSpace \u03b1] {s t : Set \u03b1}, IsCompact t \u2192 IsClosed s \u2192 IsCompact (s \u2229 t)\",\n  \"isProp\": true,\n  \"docString\":\n  \"The intersection of a closed set and a compact set is a compact set. \"},\n {\"theorem\":\n  \"\u2200 {\u03b1 : Type u_1} (self : Filter \u03b1) {x y : Set \u03b1}, x \u2208 self.sets \u2192 y \u2208 self.sets \u2192 x \u2229 y \u2208 self.sets\",\n  \"isProp\": true,\n  \"docString\":\n  \"If two sets belong to a filter, then their intersection belongs to the filter as well. \"},\n {\"theorem\":\n  \"\u2200 {\u03b1 : Type u_1} [inst : TopologicalSpace \u03b1] {C U : Set \u03b1}, Preperfect C \u2192 IsOpen U \u2192 Preperfect (U \u2229 C)\",\n  \"isProp\": true,\n  \"docString\":\n  \"The intersection of a preperfect set and an open set is preperfect. \"},\n {\"theorem\":\n  \"\u2200 {\u03b1 : Type u} (S T : Set \u03b1), Cardinal.mk \u2191(S \u222a T) \u2264 Cardinal.mk \u2191S + Cardinal.mk \u2191T\",\n  \"isProp\": true,\n  \"docString\":\n  \"The cardinality of a union is at most the sum of the cardinalities\\nof the two sets. \"}]\n"
  },
  {
    "stmt": "The sum of the cubes of two positive integers is never equal to the cube of a third integer.",
    "prompts": "[{\"theorem\":\n  \"\u2200 {\u03b1 : Type u} [inst : LinearOrderedRing \u03b1] {x y : \u03b1}, x * x + y * y = 0 \u2194 x = 0 \u2227 y = 0\",\n  \"isProp\": true,\n  \"docString\": \"The sum of two squares is zero iff both elements are zero. \"},\n {\"theorem\": \"\u2200 {n m : \u2115}, m * m < n \u2192 n < (m + 1) * (m + 1) \u2192 \u00ac\u2203 t, t * t = n\",\n  \"isProp\": true,\n  \"docString\": \"There are no perfect squares strictly between m\u00b2 and (m+1)\u00b2 \"},\n {\"theorem\":\n  \"\u2200 {V : Type u_1} {P : Type u_2} [inst : NormedAddCommGroup V] [inst_1 : InnerProductSpace \u211d V] [inst_2 : MetricSpace P]\\n  [inst_3 : NormedAddTorsor V P] [hd2 : Fact (FiniteDimensional.finrank \u211d V = 2)] [inst_4 : Module.Oriented \u211d V (Fin 2)]\\n  {p\u2081 p\u2082 p\u2083 : P}, Real.Angle.sign (EuclideanGeometry.oangle p\u2081 p\u2082 p\u2083) = 1 \u2192 p\u2081 \u2260 p\u2083\",\n  \"isProp\": true,\n  \"docString\":\n  \"If the sign of the angle between three points is positive, the first and third points are not\\nequal. \"},\n {\"theorem\":\n  \"\u2200 {V : Type u_1} {P : Type u_2} [inst : NormedAddCommGroup V] [inst_1 : InnerProductSpace \u211d V] [inst_2 : MetricSpace P]\\n  [inst_3 : NormedAddTorsor V P] [hd2 : Fact (FiniteDimensional.finrank \u211d V = 2)] [inst_4 : Module.Oriented \u211d V (Fin 2)]\\n  {p\u2081 p\u2082 p\u2083 : P}, Real.Angle.sign (EuclideanGeometry.oangle p\u2081 p\u2082 p\u2083) = 1 \u2192 p\u2081 \u2260 p\u2082\",\n  \"isProp\": true,\n  \"docString\":\n  \"If the sign of the angle between three points is positive, the first two points are not\\nequal. \"},\n {\"theorem\":\n  \"\u2200 {a b x y u v : \u2115}, a = x ^ 2 + y ^ 2 \u2192 b = u ^ 2 + v ^ 2 \u2192 \u2203 r s, a * b = r ^ 2 + s ^ 2\",\n  \"isProp\": true,\n  \"docString\":\n  \"The set of natural numbers that are sums of two squares is closed under multiplication. \"},\n {\"theorem\":\n  \"\u2200 {d : \u2124} {a : Pell.Solution\u2081 d}, Pell.IsFundamental a \u2192 \u2200 {n n' : \u2124}, a ^ n \u2260 -a ^ n'\",\n  \"isProp\": true,\n  \"docString\":\n  \"A power of a fundamental solution is never equal to the negative of a power of this\\nfundamental solution. \"},\n {\"theorem\":\n  \"\u2200 {V : Type u_1} {P : Type u_2} [inst : NormedAddCommGroup V] [inst_1 : InnerProductSpace \u211d V] [inst_2 : MetricSpace P]\\n  [inst_3 : NormedAddTorsor V P] [hd2 : Fact (FiniteDimensional.finrank \u211d V = 2)] [inst_4 : Module.Oriented \u211d V (Fin 2)]\\n  {p\u2081 p\u2082 p\u2083 : P}, EuclideanGeometry.oangle p\u2081 p\u2082 p\u2083 = \u2191(Real.pi / 2) \u2192 p\u2081 \u2260 p\u2083\",\n  \"isProp\": true,\n  \"docString\":\n  \"If the angle between three points is `\u03c0 / 2`, the first and third points are not equal. \"},\n {\"theorem\":\n  \"\u2200 {V : Type u_1} {P : Type u_2} [inst : NormedAddCommGroup V] [inst_1 : InnerProductSpace \u211d V] [inst_2 : MetricSpace P]\\n  [inst_3 : NormedAddTorsor V P] [hd2 : Fact (FiniteDimensional.finrank \u211d V = 2)] [inst_4 : Module.Oriented \u211d V (Fin 2)]\\n  {p\u2081 p\u2082 p\u2083 : P}, EuclideanGeometry.oangle p\u2081 p\u2082 p\u2083 \u2260 0 \u2192 p\u2081 \u2260 p\u2083\",\n  \"isProp\": true,\n  \"docString\":\n  \"If the angle between three points is nonzero, the first and third points are not equal. \"},\n {\"theorem\":\n  \"\u2200 {V : Type u_1} {P : Type u_2} [inst : NormedAddCommGroup V] [inst_1 : InnerProductSpace \u211d V] [inst_2 : MetricSpace P]\\n  [inst_3 : NormedAddTorsor V P] [hd2 : Fact (FiniteDimensional.finrank \u211d V = 2)] [inst_4 : Module.Oriented \u211d V (Fin 2)]\\n  {p\u2081 p\u2082 p\u2083 : P}, EuclideanGeometry.oangle p\u2081 p\u2082 p\u2083 = \u2191Real.pi \u2192 p\u2081 \u2260 p\u2082\",\n  \"isProp\": true,\n  \"docString\":\n  \"If the angle between three points is `\u03c0`, the first two points are not equal. \"},\n {\"theorem\":\n  \"\u2200 {V : Type u_1} {P : Type u_2} [inst : NormedAddCommGroup V] [inst_1 : InnerProductSpace \u211d V] [inst_2 : MetricSpace P]\\n  [inst_3 : NormedAddTorsor V P] [hd2 : Fact (FiniteDimensional.finrank \u211d V = 2)] [inst_4 : Module.Oriented \u211d V (Fin 2)]\\n  {p\u2081 p\u2082 p\u2083 : P}, EuclideanGeometry.oangle p\u2081 p\u2082 p\u2083 = \u2191Real.pi \u2192 p\u2081 \u2260 p\u2083\",\n  \"isProp\": true,\n  \"docString\":\n  \"If the angle between three points is `\u03c0`, the first and third points are not equal. \"}]\n"
  },
  {
    "stmt": "If every element of a group `G` has order `2`, then every pair of elements of `G` commutes.",
    "prompts": "[{\"theorem\": \"\u2200 {S : Type u_1} [inst : Add S] (a : S), AddCommute a a\",\n  \"isProp\": true,\n  \"docString\": \"Any element commutes with itself.\"},\n {\"theorem\": \"\u2200 {S : Type u_1} [inst : Mul S] (a : S), Commute a a\",\n  \"isProp\": true,\n  \"docString\": \"Any element commutes with itself. \"},\n {\"theorem\":\n  \"\u2200 {G : Type u_1} [inst : AddGroup G] (H\u2081 H\u2082 : AddSubgroup G),\\n  AddSubgroup.Normal H\u2081 \u2192 AddSubgroup.Normal H\u2082 \u2192 Disjoint H\u2081 H\u2082 \u2192 \u2200 (x y : G), x \u2208 H\u2081 \u2192 y \u2208 H\u2082 \u2192 AddCommute x y\",\n  \"isProp\": true,\n  \"docString\": \"Elements of disjoint, normal subgroups commute.\"},\n {\"theorem\":\n  \"\u2200 {G : Type u_1} [inst : Group G] (H\u2081 H\u2082 : Subgroup G),\\n  Subgroup.Normal H\u2081 \u2192 Subgroup.Normal H\u2082 \u2192 Disjoint H\u2081 H\u2082 \u2192 \u2200 (x y : G), x \u2208 H\u2081 \u2192 y \u2208 H\u2082 \u2192 Commute x y\",\n  \"isProp\": true,\n  \"docString\": \"Elements of disjoint, normal subgroups commute. \"},\n {\"theorem\":\n  \"\u2200 {S : Type u_1} [inst : Add S] {a b : S}, AddCommute a b \u2192 AddCommute b a\",\n  \"isProp\": true,\n  \"docString\": \"If `a` commutes with `b`, then `b` commutes with `a`.\"},\n {\"theorem\":\n  \"\u2200 {S : Type u_1} [inst : Mul S] {a b : S}, Commute a b \u2192 Commute b a\",\n  \"isProp\": true,\n  \"docString\": \"If `a` commutes with `b`, then `b` commutes with `a`. \"},\n {\"theorem\":\n  \"\u2200 {G : Type u_1} [inst : Monoid G] {x y : G}, Commute x y \u2192 IsOfFinOrder x \u2192 IsOfFinOrder y \u2192 IsOfFinOrder (x * y)\",\n  \"isProp\": true,\n  \"docString\":\n  \"Commuting elements of finite order are closed under multiplication. \"},\n {\"theorem\":\n  \"\u2200 {S : Type u_1} [inst : AddSemigroup S] {a b c : S}, AddCommute a c \u2192 AddCommute b c \u2192 AddCommute (a + b) c\",\n  \"isProp\": true,\n  \"docString\":\n  \"If both `a` and `b` commute with `c`, then their product commutes with `c`.\"},\n {\"theorem\":\n  \"\u2200 {S : Type u_1} [inst : Semigroup S] {a b c : S}, Commute a c \u2192 Commute b c \u2192 Commute (a * b) c\",\n  \"isProp\": true,\n  \"docString\":\n  \"If both `a` and `b` commute with `c`, then their product commutes with `c`. \"},\n {\"theorem\":\n  \"\u2200 {S : Type u_1} [inst : Semigroup S] {a b c : S}, Commute a b \u2192 Commute a c \u2192 Commute a (b * c)\",\n  \"isProp\": true,\n  \"docString\":\n  \"If `a` commutes with both `b` and `c`, then it commutes with their product. \"}]\n"
  },
  {
    "stmt": "The product of two consecutive natural numbers is even.",
    "prompts": "[{\"theorem\": \"\u2200 {m n : \u2115}, (\u2200 (a : \u2115), m \u2223 a \u2194 n \u2223 a) \u2194 m = n\",\n  \"isProp\": true,\n  \"docString\":\n  \"Two natural numbers are equal if and only if they have the same multiples. \"},\n {\"theorem\":\n  \"\u2200 {\ud835\udd5c : Type u\ud835\udd5c} {G : Type uG} {E : Type uE} {E' : Type uE'} {F : Type uF} [inst : NormedAddCommGroup E]\\n  [inst_1 : NormedAddCommGroup E'] [inst_2 : NormedAddCommGroup F] {f : G \u2192 E} {g : G \u2192 E'} {x : G}\\n  [inst_3 : NontriviallyNormedField \ud835\udd5c] [inst_4 : NormedSpace \ud835\udd5c E] [inst_5 : NormedSpace \ud835\udd5c E'] [inst_6 : NormedSpace \ud835\udd5c F]\\n  (L : E \u2192L[\ud835\udd5c] E' \u2192L[\ud835\udd5c] F) [inst_7 : MeasurableSpace G] {\u03bc : MeasureTheory.Measure G} [inst_8 : NormedSpace \u211d F]\\n  [inst_9 : AddCommGroup G] [inst_10 : MeasureTheory.Measure.IsAddLeftInvariant \u03bc]\\n  [inst_11 : MeasureTheory.Measure.IsNegInvariant \u03bc] [inst_12 : MeasurableNeg G] [inst_13 : MeasurableAdd G],\\n  (\u2200\u1d50 (x : G) \u2202\u03bc, f (-x) = f x) \u2192 (\u2200\u1d50 (x : G) \u2202\u03bc, g (-x) = g x) \u2192 convolution f g L (-x) = convolution f g L x\",\n  \"isProp\": true,\n  \"docString\": \"The convolution of two even functions is also even. \"},\n {\"theorem\":\n  \"\u2200 {a b x y u v : \u2115}, a = x ^ 2 + y ^ 2 \u2192 b = u ^ 2 + v ^ 2 \u2192 \u2203 r s, a * b = r ^ 2 + s ^ 2\",\n  \"isProp\": true,\n  \"docString\":\n  \"The set of natural numbers that are sums of two squares is closed under multiplication. \"},\n {\"theorem\": \"\u2200 {m n : \u2115}, (\u2200 (a : \u2115), a \u2223 m \u2194 a \u2223 n) \u2194 m = n\",\n  \"isProp\": true,\n  \"docString\":\n  \"Two natural numbers are equal if and only if they have the same divisors. \"},\n {\"theorem\":\n  \"\u2200 {\u03b1 : Type u_1} [inst : LinearOrderedRing \u03b1] [inst_1 : Archimedean \u03b1] {x y : \u03b1},\\n  1 \u2264 x \u2192 1 < y \u2192 \u2203 n, y ^ n \u2264 x \u2227 x < y ^ (n + 1)\",\n  \"isProp\": true,\n  \"docString\":\n  \"Every x greater than or equal to 1 is between two successive\\nnatural-number powers of every y greater than one. \"},\n {\"theorem\":\n  \"\u2200 {\u03b1 : Type u} [self : StrictOrderedRing \u03b1] (a b : \u03b1), 0 < a \u2192 0 < b \u2192 0 < a * b\",\n  \"isProp\": true,\n  \"docString\": \"The product of two positive elements is positive. \"},\n {\"theorem\":\n  \"\u2200 {R : Type u_1} [inst : StrictOrderedSemiring R] (l : List R), (\u2200 (a : R), a \u2208 l \u2192 0 < a) \u2192 0 < List.prod l\",\n  \"isProp\": true,\n  \"docString\":\n  \"The product of a list of positive natural numbers is positive,\\nand likewise for any nontrivial ordered semiring. \"},\n {\"theorem\": \"\u2200 {m n : \u2115}, Even (m ^ n) \u2194 Even m \u2227 n \u2260 0\",\n  \"isProp\": true,\n  \"docString\":\n  \"If `m` and `n` are natural numbers, then the natural number `m^n` is even\\nif and only if `m` is even and `n` is positive. \"},\n {\"theorem\": \"\u2200 {m n : \u2115}, Odd n \u2192 m \u2223 n \u2192 m \u2260 2\",\n  \"isProp\": true,\n  \"docString\": \"`2` is not a factor of an odd natural number. \"},\n {\"theorem\":\n  \"\u2200 {\u03b9 : Type u_2} {R : Type u_1} [inst : CommMonoidWithZero R] [inst_1 : NoZeroDivisors R] [inst_2 : Nontrivial R]\\n  [inst_3 : DecidableEq R] [inst_4 : LT R] {s : Finset \u03b9} {f : \u03b9 \u2192 WithTop R},\\n  (\u2200 (i : \u03b9), i \u2208 s \u2192 f i \u2260 \u22a4) \u2192 (Finset.prod s fun i => f i) < \u22a4\",\n  \"isProp\": true,\n  \"docString\": \"A product of finite numbers is still finite \"}]\n"
  },
  {
    "stmt": "Every index 2 subgroup of a group is normal.",
    "prompts": "[{\"theorem\":\n  \"\u2200 {G : Type u_1} [inst : Group G] {H : Subgroup G} [self : Subgroup.FiniteIndex H], Subgroup.index H \u2260 0\",\n  \"isProp\": true,\n  \"docString\": \"The subgroup has finite index \"},\n {\"theorem\":\n  \"\u2200 {G : Type u_1} [inst : TopologicalSpace G] [inst_1 : Group G] [inst_2 : TopologicalGroup G] (N : Subgroup G)\\n  [inst_3 : Subgroup.Normal N], Subgroup.Normal (Subgroup.topologicalClosure N)\",\n  \"isProp\": true,\n  \"docString\": \"The topological closure of a normal subgroup is normal.\"},\n {\"theorem\":\n  \"\u2200 {G : Type u_1} [inst : Group G] (H : Subgroup G), NormalizerCondition G \u2192 IsCoatom H \u2192 Subgroup.Normal H\",\n  \"isProp\": true,\n  \"docString\":\n  \"In a group that satisfies the normalizer condition, every maximal subgroup is normal \"},\n {\"theorem\":\n  \"\u2200 {G : Type u_1} [inst : Group G] (H\u2081 H\u2082 : Subgroup G),\\n  Subgroup.Normal H\u2081 \u2192 Subgroup.Normal H\u2082 \u2192 Disjoint H\u2081 H\u2082 \u2192 \u2200 (x y : G), x \u2208 H\u2081 \u2192 y \u2208 H\u2082 \u2192 Commute x y\",\n  \"isProp\": true,\n  \"docString\": \"Elements of disjoint, normal subgroups commute. \"},\n {\"theorem\":\n  \"\u2200 {G : Type u_1} [inst : TopologicalSpace G] [inst_1 : AddGroup G] [inst_2 : TopologicalAddGroup G] (N : AddSubgroup G)\\n  [inst_3 : AddSubgroup.Normal N], AddSubgroup.Normal (AddSubgroup.topologicalClosure N)\",\n  \"isProp\": true,\n  \"docString\":\n  \"The topological closure of a normal additive subgroup is normal.\"},\n {\"theorem\":\n  \"\u2200 {G : Type u_1} [inst : AddGroup G] (H\u2081 H\u2082 : AddSubgroup G),\\n  AddSubgroup.Normal H\u2081 \u2192 AddSubgroup.Normal H\u2082 \u2192 Disjoint H\u2081 H\u2082 \u2192 \u2200 (x y : G), x \u2208 H\u2081 \u2192 y \u2208 H\u2082 \u2192 AddCommute x y\",\n  \"isProp\": true,\n  \"docString\": \"Elements of disjoint, normal subgroups commute.\"},\n {\"theorem\":\n  \"\u2200 {G : Type u_1} [inst : Group G] {H : Subgroup G}, Subgroup.index H = 2 \u2194 \u2203 a, \u2200 (b : G), Xor' (b * a \u2208 H) (b \u2208 H)\",\n  \"isProp\": true,\n  \"docString\":\n  \"A subgroup has index two if and only if there exists `a` such that for all `b`, exactly one\\nof `b * a` and `b` belong to `H`. \"},\n {\"theorem\":\n  \"\u2200 {G : Type u_1} {s : Set G} [inst : Group G], IsNormalSubgroup (Group.normalClosure s)\",\n  \"isProp\": true,\n  \"docString\": \"The normal closure of s is a normal subgroup. \"},\n {\"theorem\":\n  \"\u2200 {G : Type u_1} [inst : Group G] (s : Set G), IsSubgroup (Group.normalClosure s)\",\n  \"isProp\": true,\n  \"docString\": \"The normal closure of a set is a subgroup. \"},\n {\"theorem\":\n  \"\u2200 {G : Type u_1} [inst : Group G] [self : IsSimpleGroup G] (H : Subgroup G), Subgroup.Normal H \u2192 H = \u22a5 \u2228 H = \u22a4\",\n  \"isProp\": true,\n  \"docString\": \"Any normal subgroup is either `\u22a5` or `\u22a4` \"}]\n"
  },
  {
    "stmt": "Every free group is torsion free.",
    "prompts": "[{\"theorem\":\n  \"\u2200 {G : Type u_1} [inst : Group G], Monoid.IsTorsionFree G \u2192 \u2200 (H : Subgroup G), Monoid.IsTorsionFree { x // x \u2208 H }\",\n  \"isProp\": true,\n  \"docString\": \"Subgroups of torsion-free groups are torsion-free. \"},\n {\"theorem\":\n  \"\u2200 {\u03b7 : Type u_1} {Gs : \u03b7 \u2192 Type u_2} [inst : (i : \u03b7) \u2192 Group (Gs i)],\\n  (\u2200 (i : \u03b7), Monoid.IsTorsionFree (Gs i)) \u2192 Monoid.IsTorsionFree ((i : \u03b7) \u2192 Gs i)\",\n  \"isProp\": true,\n  \"docString\": \"Direct products of torsion free groups are torsion free. \"},\n {\"theorem\":\n  \"\u2200 {\u03b7 : Type u_1} {Gs : \u03b7 \u2192 Type u_2} [inst : (i : \u03b7) \u2192 AddGroup (Gs i)],\\n  (\u2200 (i : \u03b7), AddMonoid.IsTorsionFree (Gs i)) \u2192 AddMonoid.IsTorsionFree ((i : \u03b7) \u2192 Gs i)\",\n  \"isProp\": true,\n  \"docString\":\n  \"Direct products of additive torsion free groups are torsion free.\"},\n {\"theorem\":\n  \"\u2200 {G : Type u_1} [inst : AddGroup G],\\n  AddMonoid.IsTorsionFree G \u2192 \u2200 (H : AddSubgroup G), AddMonoid.IsTorsionFree { x // x \u2208 H }\",\n  \"isProp\": true,\n  \"docString\":\n  \"Subgroups of additive torsion-free groups are additively torsion-free.\"},\n {\"theorem\":\n  \"\u2200 {G : Type u_1} [inst : Group G] [hN : Nontrivial G], Monoid.IsTorsionFree G \u2192 \u00acMonoid.IsTorsion G\",\n  \"isProp\": true,\n  \"docString\": \"A nontrivial torsion-free group is not torsion. \"},\n {\"theorem\":\n  \"\u2200 (G : Type u_1) [inst : CommGroup G], Monoid.IsTorsionFree (G \u29f8 CommGroup.torsion G)\",\n  \"isProp\": true,\n  \"docString\":\n  \"Quotienting a group by its torsion subgroup yields a torsion free group. \"},\n {\"theorem\":\n  \"\u2200 {G : Type u_1} [inst : Group G] [inst_1 : Finite G], Monoid.IsTorsion G\",\n  \"isProp\": true,\n  \"docString\": \"Finite groups are torsion groups. \"},\n {\"theorem\":\n  \"\u2200 {G : Type u_1} {H : Type u_2} [inst : Group G] {N : Subgroup G} [inst_1 : Group H] {f : G \u2192* H},\\n  N = MonoidHom.ker f \u2192 Monoid.IsTorsion H \u2192 Monoid.IsTorsion { x // x \u2208 N } \u2192 Monoid.IsTorsion G\",\n  \"isProp\": true,\n  \"docString\": \"Torsion groups are closed under extensions. \"},\n {\"theorem\":\n  \"\u2200 {G : Type u_1} [inst : Group G], Monoid.IsTorsion G \u2192 \u2200 (H : Subgroup G), Monoid.IsTorsion { x // x \u2208 H }\",\n  \"isProp\": true,\n  \"docString\": \"Subgroups of torsion groups are torsion groups. \"},\n {\"theorem\":\n  \"\u2200 {G : Type u_1} [inst : Group G] [hN : Nontrivial G], Monoid.IsTorsion G \u2192 \u00acMonoid.IsTorsionFree G\",\n  \"isProp\": true,\n  \"docString\": \"A nontrivial torsion group is not torsion-free. \"}]\n"
  },
  {
    "stmt": "Every natural number greater than `1` is divisible by a prime number.",
    "prompts": "[{\"theorem\": \"Set.InjOn Nat.factorization {x | x \u2260 0}\",\n  \"isProp\": true,\n  \"docString\":\n  \"Every nonzero natural number has a unique prime factorization \"},\n {\"theorem\": \"\u2200 {a b : \u2115}, a \u2223 b \u2192 b < a \u2192 b = 0\",\n  \"isProp\": true,\n  \"docString\":\n  \"If a small natural number is divisible by a larger natural number,\\nthe small number is zero. \"},\n {\"theorem\": \"\u2200 {m n : \u2115}, (\u2200 (a : \u2115), a \u2223 m \u2194 a \u2223 n) \u2194 m = n\",\n  \"isProp\": true,\n  \"docString\":\n  \"Two natural numbers are equal if and only if they have the same divisors. \"},\n {\"theorem\": \"\u2200 (p : \u2115) [inst : Fact (Nat.Prime p)], Prime \u2191p \u2194 p % 4 = 3\",\n  \"isProp\": true,\n  \"docString\":\n  \"A prime natural number is prime in `\u2124[i]` if and only if it is `3` mod `4` \"},\n {\"theorem\":\n  \"\u2200 {\u03b1 : Type u_1} [inst : CancelCommMonoidWithZero \u03b1] [dec_irr : (p : Associates \u03b1) \u2192 Decidable (Irreducible p)]\\n  [inst_1 : UniqueFactorizationMonoid \u03b1] [dec : DecidableEq \u03b1] [dec' : DecidableEq (Associates \u03b1)] {a p : Associates \u03b1},\\n  Irreducible p \u2192\\n    \u2200 [inst_2 : (n : \u2115) \u2192 Decidable (a \u2223 p ^ n)] {n : \u2115} (h : a \u2223 p ^ n),\\n      a = p ^ Nat.find (_ : \u2203 n, (fun n => a \u2223 p ^ n) n)\",\n  \"isProp\": true,\n  \"docString\": \"The only divisors of prime powers are prime powers. \"},\n {\"theorem\":\n  \"\u2200 {n : \u2115}, n \u2260 0 \u2192 \u2200 (d : \u2115), \u2203\u1da0 (m : \u2115) in Filter.atTop, m \u2261 d [MOD n]\",\n  \"isProp\": true,\n  \"docString\": \"Infinitely many natural numbers are equal to `d` mod `n`. \"},\n {\"theorem\":\n  \"\u2200 (n p : \u2115), Finset.card (Finset.filter (fun e => p \u2223 e + 1) (Finset.range n)) = n / p\",\n  \"isProp\": true,\n  \"docString\": \"Exactly `n / p` naturals in `[1, n]` are multiples of `p`. \"},\n {\"theorem\": \"\u2200 {m n : \u2115}, (\u2200 (a : \u2115), m \u2223 a \u2194 n \u2223 a) \u2194 m = n\",\n  \"isProp\": true,\n  \"docString\":\n  \"Two natural numbers are equal if and only if they have the same multiples. \"},\n {\"theorem\": \"\u2200 {m n : \u2115}, m \u2223 m + n \u2194 m \u2223 n\",\n  \"isProp\": true,\n  \"docString\":\n  \"A natural number `m` divides the sum `m + n` if and only if `m` divides `n`.\"},\n {\"theorem\": \"\u2200 (n : \u2115), Nat.factorization n = 0 \u2194 n = 0 \u2228 n = 1\",\n  \"isProp\": true,\n  \"docString\":\n  \"The only numbers with empty prime factorization are `0` and `1` \"}]\n"
  },
  {
    "stmt": "A finite torsion-free group is trivial",
    "prompts": "[{\"theorem\":\n  \"\u2200 {G : Type u_1} [inst : Group G] [inst_1 : Finite G], Monoid.IsTorsion G\",\n  \"isProp\": true,\n  \"docString\": \"Finite groups are torsion groups. \"},\n {\"theorem\":\n  \"\u2200 {G : Type u_1} [inst : Group G], Monoid.IsTorsionFree G \u2192 \u2200 (H : Subgroup G), Monoid.IsTorsionFree { x // x \u2208 H }\",\n  \"isProp\": true,\n  \"docString\": \"Subgroups of torsion-free groups are torsion-free. \"},\n {\"theorem\":\n  \"\u2200 (G : Type u_1) [inst : CommGroup G], Monoid.IsTorsionFree (G \u29f8 CommGroup.torsion G)\",\n  \"isProp\": true,\n  \"docString\":\n  \"Quotienting a group by its torsion subgroup yields a torsion free group. \"},\n {\"theorem\":\n  \"\u2200 {G : Type u_1} [inst : Group G] [hN : Nontrivial G], Monoid.IsTorsionFree G \u2192 \u00acMonoid.IsTorsion G\",\n  \"isProp\": true,\n  \"docString\": \"A nontrivial torsion-free group is not torsion. \"},\n {\"theorem\":\n  \"\u2200 {\u03b7 : Type u_1} {Gs : \u03b7 \u2192 Type u_2} [inst : (i : \u03b7) \u2192 Group (Gs i)],\\n  (\u2200 (i : \u03b7), Monoid.IsTorsionFree (Gs i)) \u2192 Monoid.IsTorsionFree ((i : \u03b7) \u2192 Gs i)\",\n  \"isProp\": true,\n  \"docString\": \"Direct products of torsion free groups are torsion free. \"},\n {\"theorem\":\n  \"\u2200 (G : Type u_1) [inst : AddCommGroup G], AddMonoid.IsTorsionFree (G \u29f8 AddCommGroup.torsion G)\",\n  \"isProp\": true,\n  \"docString\":\n  \"Quotienting a group by its additive torsion subgroup yields an additive torsion free group.\"},\n {\"theorem\":\n  \"\u2200 {G : Type u_1} [inst : AddGroup G],\\n  AddMonoid.IsTorsionFree G \u2192 \u2200 (H : AddSubgroup G), AddMonoid.IsTorsionFree { x // x \u2208 H }\",\n  \"isProp\": true,\n  \"docString\":\n  \"Subgroups of additive torsion-free groups are additively torsion-free.\"},\n {\"theorem\":\n  \"\u2200 {G : Type u_1} {H : Type u_2} [inst : Group G] {N : Subgroup G} [inst_1 : Group H] {f : G \u2192* H},\\n  N = MonoidHom.ker f \u2192 Monoid.IsTorsion H \u2192 Monoid.IsTorsion { x // x \u2208 N } \u2192 Monoid.IsTorsion G\",\n  \"isProp\": true,\n  \"docString\": \"Torsion groups are closed under extensions. \"},\n {\"theorem\":\n  \"\u2200 {G : Type u_1} [inst : AddGroup G] [hN : Nontrivial G], AddMonoid.IsTorsionFree G \u2192 \u00acAddMonoid.IsTorsion G\",\n  \"isProp\": true,\n  \"docString\": \"A nontrivial torsion-free additive group is not torsion.\"},\n {\"theorem\":\n  \"\u2200 {G : Type u_1} [inst : Group G], Monoid.IsTorsion G \u2192 \u2200 (H : Subgroup G), Monoid.IsTorsion { x // x \u2208 H }\",\n  \"isProp\": true,\n  \"docString\": \"Subgroups of torsion groups are torsion groups. \"}]\n"
  },
  {
    "stmt": "Every finite division ring is a field.",
    "prompts": "[{\"theorem\":\n  \"\u2200 {\u03b1 : Type u_1} [inst : Fintype \u03b1] [inst_1 : Field \u03b1], IsPrimePow (Fintype.card \u03b1)\",\n  \"isProp\": true,\n  \"docString\": \"A finite field has prime power cardinality. \"},\n {\"theorem\":\n  \"\u2200 {K : Type u_2} {L : Type u_1} [inst : Field K] [inst_1 : Field L] [inst_2 : Algebra K L] (S : IntermediateField K L)\\n  {x y : L}, x \u2208 S \u2192 y \u2208 S \u2192 x / y \u2208 S\",\n  \"isProp\": true,\n  \"docString\": \"An intermediate field is closed under division. \"},\n {\"theorem\": \"\u2200 (K : Type u) [inst : Field K], ValuationRing K\",\n  \"isProp\": true,\n  \"docString\": \"A field is a valuation ring. \"},\n {\"theorem\":\n  \"\u2200 (S : Set \u2115+) (K : Type w) (L : Type z) [inst : Field K] [inst_1 : Field L] [inst_2 : Algebra K L] [h : NumberField K]\\n  [inst_3 : Finite \u2191S] [inst : IsCyclotomicExtension S K L], NumberField L\",\n  \"isProp\": true,\n  \"docString\":\n  \"A cyclotomic finite extension of a number field is a number field. \"},\n {\"theorem\":\n  \"\u2200 {K : Type u} [inst : Field K] (s : Subfield K) {x y : K}, x \u2208 s \u2192 y \u2208 s \u2192 x / y \u2208 s\",\n  \"isProp\": true,\n  \"docString\": \"A subfield is closed under division. \"},\n {\"theorem\":\n  \"\u2200 {R : Type u_1} [inst : CommRing R] [inst_1 : IsDomain R] (S : Subgroup R\u02e3) [inst_2 : Finite { x // x \u2208 S }],\\n  IsCyclic { x // x \u2208 S }\",\n  \"isProp\": true,\n  \"docString\":\n  \"A finite subgroup of the units of an integral domain is cyclic. \"},\n {\"theorem\":\n  \"\u2200 (\u03b1 : Type u_1) [inst : LinearOrderedField \u03b1] [inst_1 : FloorRing \u03b1], Archimedean \u03b1\",\n  \"isProp\": true,\n  \"docString\": \"A linear ordered field that is a floor ring is archimedean. \"},\n {\"theorem\":\n  \"\u2200 {K : Type u} {V : Type v} [inst : DivisionRing K] [inst_1 : AddCommGroup V] [inst_2 : Module K V],\\n  IsNoetherian K V \u2194 Module.Finite K V\",\n  \"isProp\": true,\n  \"docString\":\n  \"A module over a division ring is noetherian if and only if it is finitely generated. \"},\n {\"theorem\":\n  \"\u2200 {R : Type u_2} {G : Type u_1} [inst : CommRing R] [inst_1 : IsDomain R] [inst_2 : Group G] [inst_3 : Finite G]\\n  (f : G \u2192* R), Function.Injective \u2191f \u2192 IsCyclic G\",\n  \"isProp\": true,\n  \"docString\":\n  \"A finite subgroup of the unit group of an integral domain is cyclic. \"},\n {\"theorem\":\n  \"\u2200 (K : Type u_1) (L : Type u_2) [inst : Field K] [inst_1 : Field L] [inst_2 : Algebra K L]\\n  [inst_3 : FiniteDimensional K L], Algebra.IsAlgebraic K L\",\n  \"isProp\": true,\n  \"docString\": \"A field extension is algebraic if it is finite. \"}]\n"
  },
  {
    "stmt": "Every finite topological space is compact.",
    "prompts": "[{\"theorem\":\n  \"\u2200 {\u03b1 : Type u} [inst : TopologicalSpace \u03b1] [inst_1 : Finite \u03b1], CompactSpace \u03b1\",\n  \"isProp\": true,\n  \"docString\": \"Finite topological spaces are compact. \"},\n {\"theorem\": \"\u2200 (self : CompHaus), CompactSpace \u2191self.toTop\",\n  \"isProp\": true,\n  \"docString\": \"The underlying topological space is compact.\"},\n {\"theorem\":\n  \"\u2200 {\u03b1 : Type u} [inst : TopologicalSpace \u03b1] [inst_1 : CompactSpace \u03b1] [inst : DiscreteTopology \u03b1], Finite \u03b1\",\n  \"isProp\": true,\n  \"docString\": \"A compact discrete space is finite. \"},\n {\"theorem\":\n  \"\u2200 {X : Type u_1} [inst : TopologicalSpace X], CompactSpace (OnePoint X)\",\n  \"isProp\": true,\n  \"docString\":\n  \"For any topological space `X`, its one point compactification is a compact space. \"},\n {\"theorem\":\n  \"\u2200 {\u03b1 : Type u_1} [inst : TopologicalSpace \u03b1] [inst_1 : TopologicalSpace.NoetherianSpace \u03b1] (s : Set \u03b1), IsCompact s\",\n  \"isProp\": true,\n  \"docString\": \"In a Noetherian space, all sets are compact. \"},\n {\"theorem\":\n  \"\u2200 {\u03b1 : Type u} [inst : TopologicalSpace \u03b1] [inst_1 : LocallyCompactSpace \u03b1] {K : Set \u03b1},\\n  IsCompact K \u2192 \u2203 K', IsCompact K' \u2227 K \u2286 interior K'\",\n  \"isProp\": true,\n  \"docString\":\n  \"In a locally compact space, every compact set is contained in the interior of a compact set. \"},\n {\"theorem\":\n  \"\u2200 {X : Type u_1} [inst : TopologicalSpace X] (S : DiscreteQuotient X) [inst_1 : CompactSpace X],\\n  Finite (Quotient S.toSetoid)\",\n  \"isProp\": true,\n  \"docString\":\n  \"If `X` is a compact space, then any discrete quotient of `X` is finite. \"},\n {\"theorem\":\n  \"\u2200 {\u03b1 : Type u} {\u03b2 : Type v} [inst : TopologicalSpace \u03b1] [inst_1 : TopologicalSpace \u03b2] [inst_2 : CompactSpace \u03b1]\\n  [inst_3 : CompactSpace \u03b2], CompactSpace (\u03b1 \u00d7 \u03b2)\",\n  \"isProp\": true,\n  \"docString\": \"The product of two compact spaces is compact. \"},\n {\"theorem\":\n  \"\u2200 {\u03b1 : Type u} [inst : TopologicalSpace \u03b1] [inst_1 : LocallyCompactSpace \u03b1] (x : \u03b1), \u2203 K, IsCompact K \u2227 K \u2208 nhds x\",\n  \"isProp\": true,\n  \"docString\":\n  \"In a locally compact space every point has a compact neighborhood. \"},\n {\"theorem\":\n  \"\u2200 {X : Type v} [inst : TopologicalSpace X] [self : ParacompactSpace X] (\u03b1 : Type v) (s : \u03b1 \u2192 Set X),\\n  (\u2200 (a : \u03b1), IsOpen (s a)) \u2192 \u22c3 (a : \u03b1), s a = Set.univ \u2192 \u2203 \u03b2 t x x, LocallyFinite t \u2227 \u2200 (b : \u03b2), \u2203 a, t b \u2286 s a\",\n  \"isProp\": true,\n  \"docString\":\n  \"Every open cover of a paracompact space assumes a locally finite refinement. \"}]\n"
  },
  {
    "stmt": "Every surjective homomorphism from a finitely generated free group to itself is injective.",
    "prompts": "[{\"theorem\":\n  \"\u2200 {V : Type u} {W : Type v} {G' : SimpleGraph W} (f : \u22a4 \u2192g G'), Function.Injective \u2191f\",\n  \"isProp\": true,\n  \"docString\": \"Every graph homomorphism from a complete graph is injective. \"},\n {\"theorem\":\n  \"\u2200 {\u03b1 : Type u} {\u03b2 : Type v} [inst : Group \u03b1] [inst_1 : Group \u03b2] {f : \u03b1 \u2192 \u03b2},\\n  IsGroupHom f \u2192 (Function.Injective f \u2194 \u2200 (a : \u03b1), f a = 1 \u2192 a = 1)\",\n  \"isProp\": true,\n  \"docString\": \"A group homomorphism is injective iff its kernel is trivial. \"},\n {\"theorem\":\n  \"\u2200 {R : Type u_1} {M : Type u_2} [inst : Ring R] [inst_1 : AddCommGroup M] [inst_2 : Module R M]\\n  [inst_3 : IsNoetherian R M] (f : M \u2192\u2097[R] M), Function.Surjective \u2191f \u2192 Function.Injective \u2191f\",\n  \"isProp\": true,\n  \"docString\":\n  \"Any surjective endomorphism of a Noetherian module is injective. \"},\n {\"theorem\":\n  \"\u2200 {R : Type u_1} {M : Type u_2} [inst : Ring R] [inst_1 : AddCommGroup M] [inst_2 : Module R M]\\n  [inst_3 : IsArtinian R M] (f : M \u2192\u2097[R] M), Function.Injective \u2191f \u2192 Function.Surjective \u2191f\",\n  \"isProp\": true,\n  \"docString\":\n  \"Any injective endomorphism of an Artinian module is surjective. \"},\n {\"theorem\":\n  \"\u2200 {\u03b1 : Type u} {\u03b2 : Type v} [inst : AddGroup \u03b1] [inst_1 : AddGroup \u03b2] {f : \u03b1 \u2192 \u03b2},\\n  IsAddGroupHom f \u2192 (Function.Injective f \u2194 \u2200 (a : \u03b1), f a = 0 \u2192 a = 0)\",\n  \"isProp\": true,\n  \"docString\":\n  \"An additive group homomorphism is injective if its kernel is trivial.\"},\n {\"theorem\":\n  \"\u2200 {K : Type u} {V : Type v} [inst : DivisionRing K] [inst_1 : AddCommGroup V] [inst_2 : Module K V]\\n  [inst_3 : FiniteDimensional K V] {f : V \u2192\u2097[K] V}, Function.Injective \u2191f \u2192 Function.Surjective \u2191f\",\n  \"isProp\": true,\n  \"docString\":\n  \"On a finite-dimensional space, an injective linear map is surjective. \"},\n {\"theorem\":\n  \"\u2200 {\u03b9 : Type u_1} {K : Type u_2} {R : Type u_3} [inst : Field K] [inst_1 : Finite K] [inst_2 : CommRing R]\\n  [inst_3 : Finite \u03b9] [inst_4 : Algebra K R],\\n  Algebra.IsAlgebraic K R \u2192\\n    \u2200 (ps : \u03b9 \u2192 MvPolynomial \u03b9 R),\\n      (Function.Injective fun v i => \u2191(MvPolynomial.eval v) (ps i)) \u2192\\n        Function.Surjective fun v i => \u2191(MvPolynomial.eval v) (ps i)\",\n  \"isProp\": true,\n  \"docString\":\n  \"Any injective polynomial map over an algebraic extension of a finite field is surjective. \"},\n {\"theorem\":\n  \"\u2200 {R : Type u_1} {M : Type u_2} [inst : Ring R] [inst_1 : AddCommGroup M] [inst_2 : Module R M]\\n  [inst_3 : IsArtinian R M] (f : M \u2192\u2097[R] M), Function.Injective \u2191f \u2192 Function.Bijective \u2191f\",\n  \"isProp\": true,\n  \"docString\":\n  \"Any injective endomorphism of an Artinian module is bijective. \"},\n {\"theorem\":\n  \"\u2200 {R : Type u_1} {M : Type u_2} [inst : Ring R] [inst_1 : AddCommGroup M] [inst_2 : Module R M]\\n  [inst_3 : IsNoetherian R M] (f : M \u2192\u2097[R] M), Function.Surjective \u2191f \u2192 Function.Bijective \u2191f\",\n  \"isProp\": true,\n  \"docString\":\n  \"Any surjective endomorphism of a Noetherian module is bijective. \"},\n {\"theorem\":\n  \"\u2200 {G : Type u_1} {H : Type u_2} {F : Type u_3} [inst : Group G] [inst_1 : DivisionMonoid H]\\n  [inst_2 : MonoidHomClass F G H] (f : F) (a : G), \u2191f a\u207b\u00b9 = (\u2191f a)\u207b\u00b9\",\n  \"isProp\": true,\n  \"docString\": \"Group homomorphisms preserve inverse. \"}]\n"
  },
  {
    "stmt": "Every positive even integer can be written as the sum of two primes.",
    "prompts": "[{\"theorem\": \"Set.InjOn Nat.factorization {x | x \u2260 0}\",\n  \"isProp\": true,\n  \"docString\":\n  \"Every nonzero natural number has a unique prime factorization \"},\n {\"theorem\":\n  \"\u2200 {a b x y u v : \u2115}, a = x ^ 2 + y ^ 2 \u2192 b = u ^ 2 + v ^ 2 \u2192 \u2203 r s, a * b = r ^ 2 + s ^ 2\",\n  \"isProp\": true,\n  \"docString\":\n  \"The set of natural numbers that are sums of two squares is closed under multiplication. \"},\n {\"theorem\": \"\u2200 {m n : \u2115}, (\u2200 (a : \u2115), a \u2223 m \u2194 a \u2223 n) \u2194 m = n\",\n  \"isProp\": true,\n  \"docString\":\n  \"Two natural numbers are equal if and only if they have the same divisors. \"},\n {\"theorem\":\n  \"\u2200 (a b : \u2115), a \u2260 0 \u2192 b \u2260 0 \u2192 (a = b \u2194 \u2200 (p : \u2115), Nat.Prime p \u2192 padicValNat p a = padicValNat p b)\",\n  \"isProp\": true,\n  \"docString\":\n  \"Two positive naturals are equal if their prime padic valuations are equal \"},\n {\"theorem\": \"\u2200 {m n : \u2115}, (\u2200 (a : \u2115), m \u2223 a \u2194 n \u2223 a) \u2194 m = n\",\n  \"isProp\": true,\n  \"docString\":\n  \"Two natural numbers are equal if and only if they have the same multiples. \"},\n {\"theorem\":\n  \"\u2200 {\u03b1 : Type u_1} [inst : CancelCommMonoidWithZero \u03b1] [dec_irr : (p : Associates \u03b1) \u2192 Decidable (Irreducible p)]\\n  [inst_1 : UniqueFactorizationMonoid \u03b1] [dec : DecidableEq \u03b1] [dec' : DecidableEq (Associates \u03b1)] {a p : Associates \u03b1},\\n  Irreducible p \u2192\\n    \u2200 [inst_2 : (n : \u2115) \u2192 Decidable (a \u2223 p ^ n)] {n : \u2115} (h : a \u2223 p ^ n),\\n      a = p ^ Nat.find (_ : \u2203 n, (fun n => a \u2223 p ^ n) n)\",\n  \"isProp\": true,\n  \"docString\": \"The only divisors of prime powers are prime powers. \"},\n {\"theorem\":\n  \"\u2200 {a b : \u2115},\\n  a \u2260 0 \u2192 b \u2260 0 \u2192 List.toFinset (Nat.factors (a * b)) = List.toFinset (Nat.factors a) \u222a List.toFinset (Nat.factors b)\",\n  \"isProp\": true,\n  \"docString\":\n  \"If `a`, `b` are positive, the prime divisors of `a * b` are the union of those of `a` and `b` \"},\n {\"theorem\":\n  \"\u2200 {\u03b1 : Type u} [self : StrictOrderedRing \u03b1] (a b : \u03b1), 0 < a \u2192 0 < b \u2192 0 < a * b\",\n  \"isProp\": true,\n  \"docString\": \"The product of two positive elements is positive. \"},\n {\"theorem\":\n  \"\u2200 {\u03b1 : Type u} [inst : Semiring \u03b1] {I : Ideal \u03b1} [self : Ideal.IsPrime I] {x y : \u03b1}, x * y \u2208 I \u2192 x \u2208 I \u2228 y \u2208 I\",\n  \"isProp\": true,\n  \"docString\":\n  \"If a product lies in the prime ideal, then at least one element lies in the prime ideal. \"},\n {\"theorem\": \"\u2200 (self : \u211a), Nat.coprime (Int.natAbs self.num) self.den\",\n  \"isProp\": true,\n  \"docString\":\n  \"The numerator and denominator are coprime: it is in \\\"reduced form\\\". \"}]\n"
  },
  {
    "stmt": "Every matrix satisfies its own characteristic polynomial.",
    "prompts": "[{\"theorem\":\n  \"\u2200 {\u03b1 : Type u_2} {n : Type u_1} [inst : DecidableEq n] [inst_1 : Zero \u03b1] [inst_2 : One \u03b1], Matrix.IsDiag 1\",\n  \"isProp\": true,\n  \"docString\": \"Every identity matrix is diagonal. \"},\n {\"theorem\":\n  \"\u2200 {\u03c3 : Type u_1} {R : Type u_2} [inst : CommSemiring R] (p : MvPolynomial \u03c3 R),\\n  \u2203 n f _hf q, p = \u2191(MvPolynomial.rename f) q\",\n  \"isProp\": true,\n  \"docString\": \"Every polynomial is a polynomial in finitely many variables. \"},\n {\"theorem\":\n  \"\u2200 {A : Type u_1} {B : Type u_2} [inst : Field A] [inst_1 : Ring B] [inst_2 : IsDomain B] [inst_3 : Algebra A B] {x : B},\\n  IsIntegral A x \u2192 x \u2260 0 \u2192 Polynomial.coeff (minpoly A x) 0 \u2260 0\",\n  \"isProp\": true,\n  \"docString\":\n  \"The minimal polynomial of a nonzero element has nonzero constant coefficient. \"},\n {\"theorem\":\n  \"\u2200 {R : Type u} {M : Type v} [inst : CommRing R] [inst_1 : Nontrivial R] [inst_2 : AddCommGroup M] [inst_3 : Module R M]\\n  [inst_4 : Module.Free R M] [inst_5 : Module.Finite R M] (f : M \u2192\u2097[R] M) {\u03b9 : Type w} [inst_6 : Fintype \u03b9]\\n  (b : Basis \u03b9 R M), Matrix.charpoly (\u2191(LinearMap.toMatrix b b) f) = LinearMap.charpoly f\",\n  \"isProp\": true,\n  \"docString\":\n  \"`charpoly f` is the characteristic polynomial of the matrix of `f` in any basis. \"},\n {\"theorem\":\n  \"\u2200 {R : Type u} [inst : CommRing R] {n : Type v} [inst_1 : DecidableEq n] [inst_2 : Fintype n] (M : Matrix n n R)\\n  (p : Polynomial R), \u2191(Polynomial.aeval M) p = \u2191(Polynomial.aeval M) (p %\u2098 Matrix.charpoly M)\",\n  \"isProp\": true,\n  \"docString\":\n  \"Any matrix polynomial `p` is equivalent under evaluation to `p %\u2098 M.charpoly`; that is, `p`\\nis equivalent to a polynomial with degree less than the dimension of the matrix. \"},\n {\"theorem\":\n  \"\u2200 {R : Type u_1} {M : Type u_3} [inst : CommSemiring R] {\u03c3 : Type u_2} [inst_1 : AddCommMonoid M] (w : \u03c3 \u2192 M)\\n  (\u03c6 : MvPolynomial \u03c3 R), \u2211\u1da0 (m : M), \u2191(MvPolynomial.weightedHomogeneousComponent w m) \u03c6 = \u03c6\",\n  \"isProp\": true,\n  \"docString\":\n  \"Every polynomial is the sum of its weighted homogeneous components. \"},\n {\"theorem\":\n  \"\u2200 {R : Type u} [inst : CommSemiring R] (I : Ideal (Polynomial R)) (p : Polynomial R),\\n  (\u2200 (n : \u2115), Polynomial.coeff p n \u2208 Ideal.comap Polynomial.C I) \u2192 p \u2208 I\",\n  \"isProp\": true,\n  \"docString\":\n  \"If every coefficient of a polynomial is in an ideal `I`, then so is the polynomial itself \"},\n {\"theorem\": \"\u2200 {\u03b1 : Type u_1} {n : Type u_2} [inst : Zero \u03b1], Matrix.IsDiag 0\",\n  \"isProp\": true,\n  \"docString\": \"Every zero matrix is diagonal. \"},\n {\"theorem\":\n  \"\u2200 {A : Type u_1} {B : Type u_2} [inst : CommRing A] [inst_1 : Ring B] [inst_2 : Algebra A B] {x : B},\\n  IsIntegral A x \u2192 Polynomial.Monic (minpoly A x)\",\n  \"isProp\": true,\n  \"docString\": \"A minimal polynomial is monic. \"},\n {\"theorem\":\n  \"\u2200 {A : Type u_1} {B : Type u_2} [inst : CommRing A] [inst_1 : Ring B] [inst_2 : Algebra A B] {x : B}\\n  [inst_3 : IsDomain A] [inst_4 : IsDomain B], IsIntegral A x \u2192 Irreducible (minpoly A x)\",\n  \"isProp\": true,\n  \"docString\": \"A minimal polynomial is irreducible. \"}]\n"
  },
  {
    "stmt": "The square root of an irrational number is irrational.",
    "prompts": "[{\"theorem\": \"\u2200 {r : \u211d}, Transcendental \u211a r \u2192 Irrational r\",\n  \"isProp\": true,\n  \"docString\": \"A transcendental real number is irrational. \"},\n {\"theorem\": \"Irrational goldenConj\",\n  \"isProp\": true,\n  \"docString\": \"The conjugate of the golden ratio is irrational. \"},\n {\"theorem\": \"Irrational (Real.sqrt 2)\",\n  \"isProp\": true,\n  \"docString\": \"**Irrationality of the Square Root of 2** \"},\n {\"theorem\": \"Irrational goldenRatio\",\n  \"isProp\": true,\n  \"docString\": \"The golden ratio is irrational. \"},\n {\"theorem\": \"\u2200 {a : \u2115}, \u2191(Nat.sqrt a) \u2264 Real.sqrt \u2191a\",\n  \"isProp\": true,\n  \"docString\": \"The natural square root is at most the real square root \"},\n {\"theorem\": \"\u2200 {a : \u2115}, Real.sqrt \u2191a \u2264 \u2191(Nat.sqrt a) + 1\",\n  \"isProp\": true,\n  \"docString\":\n  \"The real square root is at most the natural square root plus one \"},\n {\"theorem\": \"\u2200 {p x : \u211d}, LiouvilleWith p x \u2192 1 < p \u2192 Irrational x\",\n  \"isProp\": true,\n  \"docString\":\n  \"A number satisfying the Liouville condition with exponent `p > 1` is an irrational number. \"},\n {\"theorem\": \"\u2200 {x y : \u211d}, x < y \u2192 \u2203 r, Irrational r \u2227 x < r \u2227 r < y\",\n  \"isProp\": true,\n  \"docString\":\n  \"There is an irrational number `r` between any two reals `x < r < y`. \"},\n {\"theorem\":\n  \"\u2200 (q : \u211a), GeneralizedContinuedFraction.Terminates (GeneralizedContinuedFraction.of q)\",\n  \"isProp\": true,\n  \"docString\": \"The continued fraction of a rational number terminates. \"},\n {\"theorem\": \"\u2200 {x y : \u211d}, Irrational (x + y) \u2192 Irrational x \u2228 Irrational y\",\n  \"isProp\": true,\n  \"docString\":\n  \"If `x + y` is irrational, then at least one of `x` and `y` is irrational. \"}]\n"
  },
  {
    "stmt": "If the square of a number is even, the number itself is even.",
    "prompts": "[{\"theorem\":\n  \"\u2200 {\u03b1 : Type u} [inst : LinearOrderedRing \u03b1] {x y : \u03b1}, x * x + y * y = 0 \u2194 x = 0 \u2227 y = 0\",\n  \"isProp\": true,\n  \"docString\": \"The sum of two squares is zero iff both elements are zero. \"},\n {\"theorem\":\n  \"\u2200 {a b x y u v : \u2115}, a = x ^ 2 + y ^ 2 \u2192 b = u ^ 2 + v ^ 2 \u2192 \u2203 r s, a * b = r ^ 2 + s ^ 2\",\n  \"isProp\": true,\n  \"docString\":\n  \"The set of natural numbers that are sums of two squares is closed under multiplication. \"},\n {\"theorem\":\n  \"\u2200 {\ud835\udd5c : Type u\ud835\udd5c} {G : Type uG} {E : Type uE} {E' : Type uE'} {F : Type uF} [inst : NormedAddCommGroup E]\\n  [inst_1 : NormedAddCommGroup E'] [inst_2 : NormedAddCommGroup F] {f : G \u2192 E} {g : G \u2192 E'} {x : G}\\n  [inst_3 : NontriviallyNormedField \ud835\udd5c] [inst_4 : NormedSpace \ud835\udd5c E] [inst_5 : NormedSpace \ud835\udd5c E'] [inst_6 : NormedSpace \ud835\udd5c F]\\n  (L : E \u2192L[\ud835\udd5c] E' \u2192L[\ud835\udd5c] F) [inst_7 : MeasurableSpace G] {\u03bc : MeasureTheory.Measure G} [inst_8 : NormedSpace \u211d F]\\n  [inst_9 : AddCommGroup G] [inst_10 : MeasureTheory.Measure.IsAddLeftInvariant \u03bc]\\n  [inst_11 : MeasureTheory.Measure.IsNegInvariant \u03bc] [inst_12 : MeasurableNeg G] [inst_13 : MeasurableAdd G],\\n  (\u2200\u1d50 (x : G) \u2202\u03bc, f (-x) = f x) \u2192 (\u2200\u1d50 (x : G) \u2202\u03bc, g (-x) = g x) \u2192 convolution f g L (-x) = convolution f g L x\",\n  \"isProp\": true,\n  \"docString\": \"The convolution of two even functions is also even. \"},\n {\"theorem\": \"\u2200 {m n : \u2115}, (\u2200 (a : \u2115), m \u2223 a \u2194 n \u2223 a) \u2194 m = n\",\n  \"isProp\": true,\n  \"docString\":\n  \"Two natural numbers are equal if and only if they have the same multiples. \"},\n {\"theorem\":\n  \"\u2200 {F : Type u_1} [inst : Field F] [inst_1 : Finite F], ringChar F = 2 \u2192 \u2200 (a : F), IsSquare a\",\n  \"isProp\": true,\n  \"docString\":\n  \"In a finite field of characteristic `2`, all elements are squares. \"},\n {\"theorem\":\n  \"\u2200 (a b c d x y z w : \u2115),\\n  Int.natAbs (\u2191a * \u2191x - \u2191b * \u2191y - \u2191c * \u2191z - \u2191d * \u2191w) ^ 2 + Int.natAbs (\u2191a * \u2191y + \u2191b * \u2191x + \u2191c * \u2191w - \u2191d * \u2191z) ^ 2 +\\n        Int.natAbs (\u2191a * \u2191z - \u2191b * \u2191w + \u2191c * \u2191x + \u2191d * \u2191y) ^ 2 +\\n      Int.natAbs (\u2191a * \u2191w + \u2191b * \u2191z - \u2191c * \u2191y + \u2191d * \u2191x) ^ 2 =\\n    (a ^ 2 + b ^ 2 + c ^ 2 + d ^ 2) * (x ^ 2 + y ^ 2 + z ^ 2 + w ^ 2)\",\n  \"isProp\": true,\n  \"docString\":\n  \"**Euler's four-square identity**, a version for natural numbers. \"},\n {\"theorem\": \"\u2200 {n : \u2115}, IsSquare (-1) \u2192 \u2203 x y, n = x ^ 2 + y ^ 2\",\n  \"isProp\": true,\n  \"docString\":\n  \"If `-1` is a square modulo the natural number `n`, then `n` is a sum of two squares. \"},\n {\"theorem\":\n  \"\u2200 {F : Type u_1} [inst : Field F] [inst_1 : Fintype F] [inst_2 : DecidableEq F] {a : F},\\n  a \u2260 0 \u2192 \u2191(quadraticChar F) a ^ 2 = 1\",\n  \"isProp\": true,\n  \"docString\":\n  \"The square of the quadratic character on nonzero arguments is `1`. \"},\n {\"theorem\":\n  \"\u2200 {R : Type u} {S : Type v} [inst : CommRing R] [inst_1 : CommRing S] {R' : Type u_1} {S' : Type u_2}\\n  [inst_2 : CommRing R'] [inst_3 : CommRing S'] {f : R \u2192+* S} {f' : R' \u2192+* S'} {g : R \u2192+* R'} {g' : S \u2192+* S'}\\n  (hfg : RingHom.comp f' g = RingHom.comp g' f) (I : Ideal S'),\\n  let leq := (_ : Ideal.comap f (Ideal.comap g' I) \u2264 Ideal.comap g (Ideal.comap f' I));\\n  RingHom.comp (Ideal.quotientMap I g' (_ : Ideal.comap g' I \u2264 Ideal.comap g' I))\\n      (Ideal.quotientMap (Ideal.comap g' I) f\\n        (_ : Ideal.comap f (Ideal.comap g' I) \u2264 Ideal.comap f (Ideal.comap g' I))) =\\n    RingHom.comp (Ideal.quotientMap I f' (_ : Ideal.comap f' I \u2264 Ideal.comap f' I))\\n      (Ideal.quotientMap (Ideal.comap f' I) g leq)\",\n  \"isProp\": true,\n  \"docString\":\n  \"Commutativity of a square is preserved when taking quotients by an ideal. \"},\n {\"theorem\":\n  \"\u2200 {R : Type u} [inst : CommRing R] {R' : Type v} [inst_1 : CommRing R'] {\u03c7 : MulChar R R'},\\n  MulChar.IsQuadratic \u03c7 \u2192 \u2200 {n : \u2115}, Odd n \u2192 \u03c7 ^ n = \u03c7\",\n  \"isProp\": true,\n  \"docString\":\n  \"The `n`th power of a quadratic character is itself, when `n` is odd. \"}]\n"
  },
  {
    "stmt": "In a finite commutative ring, all prime ideals are maximal.",
    "prompts": "[{\"theorem\":\n  \"\u2200 {R : Type u} [inst : CommRing R],\\n  (\u2200 (P : Ideal R), Ideal.IsPrime P \u2192 Submodule.IsPrincipal P) \u2192 IsPrincipalIdealRing R\",\n  \"isProp\": true,\n  \"docString\":\n  \"If all prime ideals in a commutative ring are principal, so are all other ideals. \"},\n {\"theorem\":\n  \"\u2200 {R : Type u} [inst : CommRing R] (I : Ideal R), IsField (R \u29f8 I) \u2192 Ideal.IsMaximal I\",\n  \"isProp\": true,\n  \"docString\":\n  \"If the quotient by an ideal is a field, then the ideal is maximal. \"},\n {\"theorem\":\n  \"\u2200 {R : Type u} [inst : CommRing R] (I : Ideal R), Ideal.IsMaximal I \u2194 IsField (R \u29f8 I)\",\n  \"isProp\": true,\n  \"docString\":\n  \"The quotient of a ring by an ideal is a field iff the ideal is maximal. \"},\n {\"theorem\":\n  \"\u2200 {R : Type u_1} [inst : NormedRing R] [inst_1 : CompleteSpace R] {I : Ideal R} [hI : Ideal.IsMaximal I], IsClosed \u2191I\",\n  \"isProp\": true,\n  \"docString\": \"Maximal ideals in complete normed rings are closed. \"},\n {\"theorem\":\n  \"\u2200 {R : Type u_1} [inst : CommRing R],\\n  Set.Finite {I | Ideal.IsMaximal I} \u2192 \u2200 {I : Ideal R}, IsUnit \u2191I \u2192 Submodule.IsPrincipal I\",\n  \"isProp\": true,\n  \"docString\":\n  \"An invertible ideal in a commutative ring with finitely many maximal ideals is principal.\\n\\nhttps://math.stackexchange.com/a/95857 \"},\n {\"theorem\":\n  \"\u2200 (\u03b1 : Type u) [inst : Semiring \u03b1] [inst_1 : Nontrivial \u03b1], \u2203 M, Ideal.IsMaximal M\",\n  \"isProp\": true,\n  \"docString\": \"Krull's theorem: a nontrivial ring has a maximal ideal. \"},\n {\"theorem\":\n  \"\u2200 {R : Type u} [inst : CommRing R] [self : IsBezout R] (I : Ideal R), Ideal.FG I \u2192 Submodule.IsPrincipal I\",\n  \"isProp\": true,\n  \"docString\": \"Any finitely generated ideal is principal. \"},\n {\"theorem\":\n  \"\u2200 {R : Type u_2} [inst : CommRing R] {A : Type u_1} [inst_1 : CommRing A] [inst_2 : Algebra R A] {S : Submonoid R}\\n  [inst_3 : IsLocalization S A],\\n  S \u2264 nonZeroDivisors R \u2192\\n    Set.Finite {I | Ideal.IsMaximal I} \u2192 \u2200 (I I' : FractionalIdeal S A), I * I' = 1 \u2192 Submodule.IsPrincipal \u2191I\",\n  \"isProp\": true,\n  \"docString\":\n  \"An invertible fractional ideal of a commutative ring with finitely many maximal ideals is principal.\\n\\nhttps://math.stackexchange.com/a/95857 \"},\n {\"theorem\":\n  \"\u2200 {\u03b1 : Type u} [inst : Semiring \u03b1] {I : Ideal \u03b1} [self : Ideal.IsMaximal I], IsCoatom I\",\n  \"isProp\": true,\n  \"docString\":\n  \"The maximal ideal is a coatom in the ordering on ideals; that is, it is not the entire ring,\\nand there are no other proper ideals strictly containing it. \"},\n {\"theorem\":\n  \"\u2200 (R : Type u_1) [inst : Semiring R], IsNoetherianRing R \u2194 \u2200 (I : Ideal R), Ideal.FG I\",\n  \"isProp\": true,\n  \"docString\":\n  \"A ring is Noetherian if and only if all its ideals are finitely-generated. \"}]\n"
  },
  {
    "stmt": "A topological space $X$ is Hausdorff if and only if the diagonal is a closed set in $X \u00d7 X$.",
    "prompts": "[{\"theorem\":\n  \"\u2200 {\u03b1 : Type u} {\u03b2 : Type v} [inst : TopologicalSpace \u03b1] [inst_1 : TopologicalSpace \u03b2] [inst_2 : CompactSpace \u03b1]\\n  [inst_3 : T2Space \u03b2] {f : \u03b1 \u2192 \u03b2}, Continuous f \u2192 IsClosedMap f\",\n  \"isProp\": true,\n  \"docString\":\n  \"A continuous map from a compact space to a Hausdorff space is a closed map. \"},\n {\"theorem\":\n  \"\u2200 {\u03b1 : Type u} [inst : PseudoMetricSpace \u03b1] {s : Set \u03b1} [inst_1 : T2Space \u03b1] [inst_2 : ProperSpace \u03b1],\\n  IsCompact s \u2194 IsClosed s \u2227 Metric.Bounded s\",\n  \"isProp\": true,\n  \"docString\":\n  \"The **Heine\u2013Borel theorem**:\\nIn a proper Hausdorff space, a set is compact if and only if it is closed and bounded. \"},\n {\"theorem\":\n  \"\u2200 {\u03b1 : Type u} [inst : TopologicalSpace \u03b1] [self : T2Space \u03b1] (x y : \u03b1),\\n  x \u2260 y \u2192 \u2203 u v, IsOpen u \u2227 IsOpen v \u2227 x \u2208 u \u2227 y \u2208 v \u2227 Disjoint u v\",\n  \"isProp\": true,\n  \"docString\":\n  \"Every two points in a Hausdorff space admit disjoint open neighbourhoods. \"},\n {\"theorem\":\n  \"\u2200 {\u03b1 : Type u} [inst : EMetricSpace \u03b1] [inst_1 : CompleteSpace \u03b1], CompleteSpace (TopologicalSpace.Closeds \u03b1)\",\n  \"isProp\": true,\n  \"docString\":\n  \"In a complete space, the type of closed subsets is complete for the\\nHausdorff edistance. \"},\n {\"theorem\":\n  \"\u2200 {\u03b1 : Type u} [inst : PseudoMetricSpace \u03b1] {s t : Set \u03b1},\\n  IsClosed s \u2192 IsClosed t \u2192 EMetric.hausdorffEdist s t \u2260 \u22a4 \u2192 (Metric.hausdorffDist s t = 0 \u2194 s = t)\",\n  \"isProp\": true,\n  \"docString\":\n  \"Two closed sets are at zero Hausdorff distance if and only if they coincide \"},\n {\"theorem\":\n  \"\u2200 {H : Type u_1} [inst : TopologicalSpace H] [inst_1 : LocallyCompactSpace H] [inst_2 : T2Space H],\\n  TotallyDisconnectedSpace H \u2194 TotallySeparatedSpace H\",\n  \"isProp\": true,\n  \"docString\":\n  \"A locally compact Hausdorff space is totally disconnected\\nif and only if it is totally separated. \"},\n {\"theorem\":\n  \"\u2200 {H : Type u_1} [inst : TopologicalSpace H] [inst_1 : LocallyCompactSpace H] [inst_2 : T2Space H]\\n  [inst_3 : TotallyDisconnectedSpace H], TopologicalSpace.IsTopologicalBasis {s | IsClopen s}\",\n  \"isProp\": true,\n  \"docString\":\n  \"A locally compact Hausdorff totally disconnected space has a basis with clopen elements. \"},\n {\"theorem\": \"\u2200 {X Y : CompHaus} (f : X \u27f6 Y), IsClosedMap \u2191f\",\n  \"isProp\": true,\n  \"docString\":\n  \"Any continuous function on compact Hausdorff spaces is a closed map. \"},\n {\"theorem\":\n  \"\u2200 {\u03b1 : Type u} [inst : PseudoEMetricSpace \u03b1] {s t : Set \u03b1},\\n  IsClosed s \u2192 IsClosed t \u2192 (EMetric.hausdorffEdist s t = 0 \u2194 s = t)\",\n  \"isProp\": true,\n  \"docString\":\n  \"Two closed sets are at zero Hausdorff edistance if and only if they coincide \"},\n {\"theorem\":\n  \"\u2200 {X : Type u_1} [inst : TopologicalSpace X] [inst_1 : LocallyCompactSpace X] [inst_2 : T2Space X],\\n  NormalSpace (OnePoint X)\",\n  \"isProp\": true,\n  \"docString\":\n  \"The one point compactification of a locally compact Hausdorff space is a normal (hence,\\nHausdorff and regular) topological space. \"}]\n"
  },
  {
    "stmt": "If every point of a subset of a topological space is contained in some open set, the subset itself is open.",
    "prompts": "[{\"theorem\":\n  \"\u2200 {\u03b1 : Type u} [inst : TopologicalSpace \u03b1] [inst_1 : T2Space \u03b1] [inst_2 : CompactSpace \u03b1]\\n  [inst_3 : TotallyDisconnectedSpace \u03b1] {x : \u03b1} {U : Set \u03b1}, IsOpen U \u2192 x \u2208 U \u2192 \u2203 V, IsClopen V \u2227 x \u2208 V \u2227 V \u2286 U\",\n  \"isProp\": true,\n  \"docString\":\n  \"Every member of an open set in a compact Hausdorff totally disconnected space\\nis contained in a clopen set contained in the open set.  \"},\n {\"theorem\":\n  \"\u2200 {\u03b1 : Type u_1} [t : TopologicalSpace \u03b1], t = \u22a4 \u2192 \u2200 (U : TopologicalSpace.Opens \u03b1), U = \u22a5 \u2228 U = \u22a4\",\n  \"isProp\": true,\n  \"docString\":\n  \"An open set in the indiscrete topology is either empty or the whole space. \"},\n {\"theorem\":\n  \"\u2200 {\u03b1 : Type u} [inst : TopologicalSpace \u03b1] {s t : Set \u03b1}, IsCompact s \u2192 IsClosed t \u2192 t \u2286 s \u2192 IsCompact t\",\n  \"isProp\": true,\n  \"docString\": \"A closed subset of a compact set is a compact set. \"},\n {\"theorem\":\n  \"\u2200 {\u03b1 : Type u} [inst : TopologicalSpace \u03b1] [inst_1 : PreirreducibleSpace \u03b1] {s : Set \u03b1},\\n  IsOpen s \u2192 Set.Nonempty s \u2192 Dense s\",\n  \"isProp\": true,\n  \"docString\": \"In a (pre)irreducible space, a nonempty open set is dense. \"},\n {\"theorem\":\n  \"\u2200 {\u03b1 : Type u} [inst : TopologicalSpace \u03b1] [inst_1 : LocallyCompactSpace \u03b1] {K : Set \u03b1},\\n  IsCompact K \u2192 \u2203 K', IsCompact K' \u2227 K \u2286 interior K'\",\n  \"isProp\": true,\n  \"docString\":\n  \"In a locally compact space, every compact set is contained in the interior of a compact set. \"},\n {\"theorem\":\n  \"\u2200 {\u03b1 : Type u} [t : TopologicalSpace \u03b1] [inst : TopologicalSpace.SecondCountableTopology \u03b1] {\u03b9 : Type u_1}\\n  (s : \u03b9 \u2192 Set \u03b1), (\u2200 (i : \u03b9), IsOpen (s i)) \u2192 \u2203 T, Set.Countable T \u2227 \u22c3 (i : \u03b9) (_ : i \u2208 T), s i = \u22c3 (i : \u03b9), s i\",\n  \"isProp\": true,\n  \"docString\":\n  \"In a second-countable space, an open set, given as a union of open sets,\\nis equal to the union of countably many of those sets. \"},\n {\"theorem\":\n  \"\u2200 {\u03b1 : Type u} [inst : EMetricSpace \u03b1] {s : Set \u03b1}, IsClosed s \u2192 IsClosed {t | \u2191t \u2286 s}\",\n  \"isProp\": true,\n  \"docString\": \"Subsets of a given closed subset form a closed set \"},\n {\"theorem\":\n  \"\u2200 {\u03b1 : Type u} [inst : TopologicalSpace \u03b1] [inst_1 : T2Space \u03b1] {s : Set \u03b1},\\n  Set.Finite s \u2192 \u2203 U, (\u2200 (x : \u03b1), x \u2208 U x \u2227 IsOpen (U x)) \u2227 Set.PairwiseDisjoint s U\",\n  \"isProp\": true,\n  \"docString\":\n  \"Points of a finite set can be separated by open sets from each other. \"},\n {\"theorem\":\n  \"\u2200 {\u03b1 : Type u} [inst : TopologicalSpace \u03b1] {S U : Set \u03b1},\\n  IsPreirreducible S \u2192 IsOpen U \u2192 Set.Nonempty (S \u2229 U) \u2192 S \u2286 closure (S \u2229 U)\",\n  \"isProp\": true,\n  \"docString\":\n  \"A nonempty open subset of a preirreducible subspace is dense in the subspace. \"},\n {\"theorem\":\n  \"\u2200 {\u03b1 : Type u_1} [inst : TopologicalSpace \u03b1] {C : Set \u03b1} [inst_1 : TopologicalSpace.SecondCountableTopology \u03b1],\\n  IsClosed C \u2192 \u00acSet.Countable C \u2192 \u2203 D, Perfect D \u2227 Set.Nonempty D \u2227 D \u2286 C\",\n  \"isProp\": true,\n  \"docString\":\n  \"Any uncountable closed set in a second countable space contains a nonempty perfect subset.\"}]\n"
  },
  {
    "stmt": "Every non-identity element of a free group is of infinite order.",
    "prompts": "[{\"theorem\":\n  \"\u2200 {G : Type u_1} [inst : Group G] {x : G}, IsOfFinOrder x\u207b\u00b9 \u2194 IsOfFinOrder x\",\n  \"isProp\": true,\n  \"docString\": \"Inverses of elements of finite order have finite order. \"},\n {\"theorem\":\n  \"\u2200 {\u03b1 : Type u_1} [self : LinearOrderedCommGroupWithZero \u03b1] (a : \u03b1), a \u2260 0 \u2192 a * a\u207b\u00b9 = 1\",\n  \"isProp\": true,\n  \"docString\": \"Every nonzero element of a group with zero is invertible. \"},\n {\"theorem\":\n  \"\u2200 {G : Type u_1} [inst : Monoid G] {x : G}, 0 < orderOf x \u2194 IsOfFinOrder x\",\n  \"isProp\": true,\n  \"docString\": \"A group element has finite order iff its order is positive. \"},\n {\"theorem\":\n  \"\u2200 (G : Type u_1) [inst : Monoid G], \u00acMonoid.IsTorsion G \u2194 \u2203 g, \u00acIsOfFinOrder g\",\n  \"isProp\": true,\n  \"docString\":\n  \"A monoid is not a torsion monoid if it has an element of infinite order. \"},\n {\"theorem\":\n  \"\u2200 {G : Type u_2} {H : Type u_1} [inst : Monoid G] [inst_1 : Monoid H] (f : G \u2192* H) {x : G},\\n  IsOfFinOrder x \u2192 IsOfFinOrder (\u2191f x)\",\n  \"isProp\": true,\n  \"docString\": \"The image of an element of finite order has finite order. \"},\n {\"theorem\":\n  \"\u2200 {G : Type u_1} [inst : AddGroup G] {x : G}, IsOfFinAddOrder x \u2192 IsOfFinAddOrder (-x)\",\n  \"isProp\": true,\n  \"docString\":\n  \"Inverses of elements of finite additive order have finite additive order.\"},\n {\"theorem\":\n  \"\u2200 {G : Type u_1} [inst : AddMonoid G] (H : AddSubmonoid G) (x : { x // x \u2208 H }), IsOfFinAddOrder x \u2194 IsOfFinAddOrder \u2191x\",\n  \"isProp\": true,\n  \"docString\": \"Elements of finite order are of finite order in submonoids.\"},\n {\"theorem\":\n  \"\u2200 {G : Type u_1} [inst : AddMonoid G] {x : G}, 0 < addOrderOf x \u2194 IsOfFinAddOrder x\",\n  \"isProp\": true,\n  \"docString\":\n  \"A group element has finite additive order iff its order is positive.\"},\n {\"theorem\":\n  \"\u2200 {\u03b1 : Type u} [inst : Group \u03b1] [inst_1 : Fintype \u03b1] {p : \u2115} [hp : Fact (Nat.Prime p)], Fintype.card \u03b1 = p \u2192 IsCyclic \u03b1\",\n  \"isProp\": true,\n  \"docString\": \"A finite group of prime order is cyclic. \"},\n {\"theorem\":\n  \"\u2200 {G : Type u_2} {H : Type u_1} [inst : AddMonoid G] [inst_1 : AddMonoid H] (f : G \u2192+ H) {x : G},\\n  IsOfFinAddOrder x \u2192 IsOfFinAddOrder (\u2191f x)\",\n  \"isProp\": true,\n  \"docString\":\n  \"The image of an element of finite additive order has finite additive order.\"}]\n"
  },
  {
    "stmt": "An element of a discrete valuation ring is a unit if and only if it has a valuation of zero.",
    "prompts": "[{\"theorem\":\n  \"\u2200 {K : Type u_2} [inst : DivisionRing K] {\u0393\u2080 : Type u_1} [inst_1 : LinearOrderedCommMonoidWithZero \u0393\u2080]\\n  [inst_2 : Nontrivial \u0393\u2080] (v : Valuation K \u0393\u2080) {x : K}, \u2191v x = 0 \u2194 x = 0\",\n  \"isProp\": true,\n  \"docString\":\n  \"If `v` is a valuation on a division ring then `v(x) = 0` iff `x = 0`. \"},\n {\"theorem\":\n  \"\u2200 {R : Type u_1} [inst : CommRing R] [inst_1 : IsDomain R] {s : Multiset (Ideal R)},\\n  Multiset.prod s = \u22a5 \u2194 \u2203 I, I \u2208 s \u2227 I = \u22a5\",\n  \"isProp\": true,\n  \"docString\":\n  \"A product of ideals in an integral domain is zero if and only if one of the terms is zero. \"},\n {\"theorem\":\n  \"\u2200 {M\u2080 : Type u_1} [inst : MulZeroOneClass M\u2080], 0 = 1 \u2192 \u2200 (a : M\u2080), a = 0\",\n  \"isProp\": true,\n  \"docString\":\n  \"In a monoid with zero, if zero equals one, then zero is the only element. \"},\n {\"theorem\":\n  \"\u2200 {R : Type u} [inst : CommRing R] [inst_1 : IsDomain R] [inst_2 : UniqueFactorizationMonoid R],\\n  (\u2203 p, Irreducible p) \u2192 (\u2200 \u2983p q : R\u2984, Irreducible p \u2192 Irreducible q \u2192 Associated p q) \u2192 DiscreteValuationRing R\",\n  \"isProp\": true,\n  \"docString\":\n  \"A unique factorization domain with at least one irreducible element\\nin which all irreducible elements are associated\\nis a discrete valuation ring.\\n\"},\n {\"theorem\":\n  \"\u2200 (R : Type u_1) [inst : CommRing R], Nonempty (Algebra \u211a R) \u2194 \u2200 (I : Ideal R), I \u2260 \u22a4 \u2192 CharZero (R \u29f8 I)\",\n  \"isProp\": true,\n  \"docString\":\n  \"A ring is a `\u211a`-algebra iff it has equal characteristic zero. \"},\n {\"theorem\":\n  \"\u2200 {R : Type u_2} {S : Type u_1} [inst : EuclideanDomain R] [inst_1 : CommRing S] [inst_2 : IsDomain S]\\n  [inst_3 : Algebra R S] (abv : AbsoluteValue R \u2124) (I : { x // x \u2208 nonZeroDivisors (Ideal S) }),\\n  \u2203 b, b \u2208 \u2191I \u2227 b \u2260 0 \u2227 \u2200 (c : S), c \u2208 \u2191I \u2192 \u2191abv (\u2191(Algebra.norm R) c) < \u2191abv (\u2191(Algebra.norm R) b) \u2192 c = 0\",\n  \"isProp\": true,\n  \"docString\": \"A nonzero ideal has an element of minimal norm. \"},\n {\"theorem\":\n  \"\u2200 {R : Type u} [inst : NonUnitalNonAssocRing R] (s : NonUnitalSubring R), 0 \u2208 s\",\n  \"isProp\": true,\n  \"docString\": \"A non-unital subring contains the ring's 0. \"},\n {\"theorem\":\n  \"\u2200 {M\u2080 : Type u_1} [inst : MonoidWithZero M\u2080] [inst_1 : Nontrivial M\u2080] (u : M\u2080\u02e3), \u2191u \u2260 0\",\n  \"isProp\": true,\n  \"docString\":\n  \"An element of the unit group of a nonzero monoid with zero represented as an element\\nof the monoid is nonzero. \"},\n {\"theorem\":\n  \"\u2200 {R : Type u_1} [inst : CommRing R] [inst_1 : IsDomain R] [inst_2 : IsDedekindDomain R]\\n  (v : IsDedekindDomain.HeightOneSpectrum R), IsDedekindDomain.HeightOneSpectrum.intValuationDef v 0 = 0\",\n  \"isProp\": true,\n  \"docString\": \"The `v`-adic valuation of `0 : R` equals 0. \"},\n {\"theorem\":\n  \"\u2200 {R : Type u} {S : Type v} {F : Type u_1} [inst : Semiring R] [inst_1 : Semiring S] [rcf : RingHomClass F R S] (f : F)\\n  {r : R}, r \u2208 RingHom.ker f \u2194 \u2191f r = 0\",\n  \"isProp\": true,\n  \"docString\": \"An element is in the kernel if and only if it maps to zero.\"}]\n"
  },
  {
    "stmt": "For any two relatively prime positive integers $a$ and $b$, every sufficiently large natural number $N$ can be written as a linear combination $ax + by$ of $a$ and $b$, where both $x$ and $y$ are natural numbers.",
    "prompts": "[{\"theorem\":\n  \"\u2200 {a b : \u2124}, a \u2260 0 \u2192 IsLeast {n | 0 < n \u2227 \u2203 x y, \u2191n = a * x + b * y} (Int.gcd a b)\",\n  \"isProp\": true,\n  \"docString\":\n  \"For nonzero integers `a` and `b`, `gcd a b` is the smallest positive natural number that can be\\nwritten in the form `a * x + b * y` for some pair of integers `x` and `y` \"},\n {\"theorem\":\n  \"\u2200 {\u03b1 : Type u_1} [inst : LinearOrderedRing \u03b1] [inst_1 : Archimedean \u03b1] {x y : \u03b1},\\n  1 \u2264 x \u2192 1 < y \u2192 \u2203 n, y ^ n \u2264 x \u2227 x < y ^ (n + 1)\",\n  \"isProp\": true,\n  \"docString\":\n  \"Every x greater than or equal to 1 is between two successive\\nnatural-number powers of every y greater than one. \"},\n {\"theorem\":\n  \"\u2200 {a b x y u v : \u2115}, a = x ^ 2 + y ^ 2 \u2192 b = u ^ 2 + v ^ 2 \u2192 \u2203 r s, a * b = r ^ 2 + s ^ 2\",\n  \"isProp\": true,\n  \"docString\":\n  \"The set of natural numbers that are sums of two squares is closed under multiplication. \"},\n {\"theorem\":\n  \"\u2200 {a b : \u2115},\\n  a \u2260 0 \u2192 b \u2260 0 \u2192 List.toFinset (Nat.factors (a * b)) = List.toFinset (Nat.factors a) \u222a List.toFinset (Nat.factors b)\",\n  \"isProp\": true,\n  \"docString\":\n  \"If `a`, `b` are positive, the prime divisors of `a * b` are the union of those of `a` and `b` \"},\n {\"theorem\":\n  \"\u2200 {a b : \u2115}, a \u2260 0 \u2192 b \u2260 0 \u2192 Nat.factors (a * b) ~ Nat.factors a ++ Nat.factors b\",\n  \"isProp\": true,\n  \"docString\":\n  \"For positive `a` and `b`, the prime factors of `a * b` are the union of those of `a` and `b` \"},\n {\"theorem\":\n  \"\u2200 {\u03b1 : Type u_1} [inst : OrderedAddCommMonoid \u03b1] [self : Archimedean \u03b1] (x : \u03b1) {y : \u03b1}, 0 < y \u2192 \u2203 n, x \u2264 n \u2022 y\",\n  \"isProp\": true,\n  \"docString\":\n  \"For any two elements `x`, `y` such that `0 < y`, there exists a natural number `n`\\nsuch that `x \u2264 n \u2022 y`. \"},\n {\"theorem\": \"\u2200 {m n : \u2115}, (\u2200 (a : \u2115), m \u2223 a \u2194 n \u2223 a) \u2194 m = n\",\n  \"isProp\": true,\n  \"docString\":\n  \"Two natural numbers are equal if and only if they have the same multiples. \"},\n {\"theorem\": \"Set.InjOn Nat.factorization {x | x \u2260 0}\",\n  \"isProp\": true,\n  \"docString\":\n  \"Every nonzero natural number has a unique prime factorization \"},\n {\"theorem\":\n  \"\u2200 {a b : \u2115}, Nat.coprime a b \u2192 Nat.factors (a * b) ~ Nat.factors a ++ Nat.factors b\",\n  \"isProp\": true,\n  \"docString\":\n  \"For coprime `a` and `b`, the prime factors of `a * b` are the union of those of `a` and `b` \"},\n {\"theorem\":\n  \"\u2200 {a b : \u2115},\\n  Nat.coprime a b \u2192 (Nat.factorization (a * b)).support = (Nat.factorization a).support \u222a (Nat.factorization b).support\",\n  \"isProp\": true,\n  \"docString\":\n  \"For coprime `a` and `b` the prime factorization `a * b` is the union of those of `a` and `b` \"}]\n"
  },
  {
    "stmt": "Every field is a ring.",
    "prompts": "[{\"theorem\": \"\u2200 (K : Type u) [inst : Field K], ValuationRing K\",\n  \"isProp\": true,\n  \"docString\": \"A field is a valuation ring. \"},\n {\"theorem\":\n  \"\u2200 {K : Type u_2} {L : Type u_1} [inst : Field K] [inst_1 : Field L] [inst_2 : Algebra K L] (S : IntermediateField K L),\\n  0 \u2208 S\",\n  \"isProp\": true,\n  \"docString\": \"An intermediate field contains the ring's 0. \"},\n {\"theorem\":\n  \"\u2200 {K : Type u_2} {L : Type u_1} [inst : Field K] [inst_1 : Field L] [inst_2 : Algebra K L] (S : IntermediateField K L),\\n  1 \u2208 S\",\n  \"isProp\": true,\n  \"docString\": \"An intermediate field contains the ring's 1. \"},\n {\"theorem\":\n  \"\u2200 (\u03b1 : Type u_1) [inst : LinearOrderedField \u03b1] [inst_1 : FloorRing \u03b1], Archimedean \u03b1\",\n  \"isProp\": true,\n  \"docString\": \"A linear ordered field that is a floor ring is archimedean. \"},\n {\"theorem\":\n  \"\u2200 {R : Type u} [inst : Semiring R], IsField R \u2192 \u2200 (x y : R), x * y = y * x\",\n  \"isProp\": true,\n  \"docString\": \"Fields are commutative. \"},\n {\"theorem\":\n  \"CategoryTheory.Limits.HasLimitsOfSize.{v, v, max u v, max (u + 1) (v + 1)} CommSemiRingCatMax\",\n  \"isProp\": true,\n  \"docString\": \"The category of rings has all limits. \"},\n {\"theorem\":\n  \"\u2200 {K : Type u} [inst : DivisionSemiring K] (I : Ideal K), I = \u22a5 \u2228 I = \u22a4\",\n  \"isProp\": true,\n  \"docString\": \"All ideals in a division (semi)ring are trivial. \"},\n {\"theorem\": \"\u2200 {R : Type u} [inst : Semiring R], IsField R \u2192 \u2203 x y, x \u2260 y\",\n  \"isProp\": true,\n  \"docString\":\n  \"For a semiring to be a field, it must have two distinct elements. \"},\n {\"theorem\":\n  \"\u2200 (K : Type u_1) [inst : Field K] [nf : NumberField K], \u00acIsField { x // x \u2208 NumberField.ringOfIntegers K }\",\n  \"isProp\": true,\n  \"docString\": \"The ring of integers of a number field is not a field. \"},\n {\"theorem\":\n  \"\u2200 (self : AlgebraicGeometry.LocallyRingedSpace) (x : \u2191\u2191self.toPresheafedSpace),\\n  LocalRing \u2191(TopCat.Presheaf.stalk self.presheaf x)\",\n  \"isProp\": true,\n  \"docString\": \"Stalks of a locally ringed space are local rings. \"}]\n"
  },
  {
    "stmt": "The set of units in a ring forms a group.",
    "prompts": "[{\"theorem\":\n  \"\u2200 {R : Type u_1} [inst : NormedRing R] [inst_1 : CompleteSpace R], IsOpen {x | IsUnit x}\",\n  \"isProp\": true,\n  \"docString\":\n  \"The group of units of a complete normed ring is an open subset of the ring. \"},\n {\"theorem\":\n  \"\u2200 {R : Type u_1} [inst : CommRing R] [inst_1 : IsDomain R] (S : Subgroup R\u02e3) [inst_2 : Finite { x // x \u2208 S }],\\n  IsCyclic { x // x \u2208 S }\",\n  \"isProp\": true,\n  \"docString\":\n  \"A finite subgroup of the units of an integral domain is cyclic. \"},\n {\"theorem\":\n  \"\u2200 {R : Type u_2} {G : Type u_1} [inst : CommRing R] [inst_1 : IsDomain R] [inst_2 : Group G] [inst_3 : Finite G]\\n  (f : G \u2192* R), Function.Injective \u2191f \u2192 IsCyclic G\",\n  \"isProp\": true,\n  \"docString\":\n  \"A finite subgroup of the unit group of an integral domain is cyclic. \"},\n {\"theorem\":\n  \"\u2200 {G : Type u_1} [inst : Group G] [inst_1 : Finite G], Monoid.IsTorsion G\",\n  \"isProp\": true,\n  \"docString\": \"Finite groups are torsion groups. \"},\n {\"theorem\":\n  \"\u2200 {G : Type u_1} [inst : Group G], SMulCommClass G { x // x \u2208 Subgroup.center G } G\",\n  \"isProp\": true,\n  \"docString\": \"The center of a group acts commutatively on that group. \"},\n {\"theorem\":\n  \"\u2200 {G : Type u_1} [inst : Group G] {k : Set G}, k \u2286 \u2191(Subgroup.closure k)\",\n  \"isProp\": true,\n  \"docString\": \"The subgroup generated by a set includes the set. \"},\n {\"theorem\":\n  \"LieGroup (modelWithCornersSelf \u211d (EuclideanSpace \u211d (Fin 1))) { x // x \u2208 circle }\",\n  \"isProp\": true,\n  \"docString\": \"The unit circle in `\u2102` is a Lie group. \"},\n {\"theorem\": \"\u2200 {R : Type u} [inst : Ring R] (s : Subring R), 0 \u2208 s\",\n  \"isProp\": true,\n  \"docString\": \"A subring contains the ring's 0. \"},\n {\"theorem\":\n  \"\u2200 {\u03b1 : Type u_1} [inst : NormedDivisionRing \u03b1], TopologicalDivisionRing \u03b1\",\n  \"isProp\": true,\n  \"docString\": \"A normed division ring is a topological division ring. \"},\n {\"theorem\": \"\u2200 {R : Type u} [inst : Ring R] (s : Subring R), 1 \u2208 s\",\n  \"isProp\": true,\n  \"docString\": \"A subring contains the ring's 1. \"}]\n"
  },
  {
    "stmt": "If the direct product of two groups is torsion free then each of the groups is torsion free.",
    "prompts": "[{\"theorem\":\n  \"\u2200 {\u03b7 : Type u_1} {Gs : \u03b7 \u2192 Type u_2} [inst : (i : \u03b7) \u2192 Group (Gs i)],\\n  (\u2200 (i : \u03b7), Monoid.IsTorsionFree (Gs i)) \u2192 Monoid.IsTorsionFree ((i : \u03b7) \u2192 Gs i)\",\n  \"isProp\": true,\n  \"docString\": \"Direct products of torsion free groups are torsion free. \"},\n {\"theorem\":\n  \"\u2200 {\u03b7 : Type u_1} {Gs : \u03b7 \u2192 Type u_2} [inst : (i : \u03b7) \u2192 AddGroup (Gs i)],\\n  (\u2200 (i : \u03b7), AddMonoid.IsTorsionFree (Gs i)) \u2192 AddMonoid.IsTorsionFree ((i : \u03b7) \u2192 Gs i)\",\n  \"isProp\": true,\n  \"docString\":\n  \"Direct products of additive torsion free groups are torsion free.\"},\n {\"theorem\":\n  \"\u2200 {G : Type u_1} [inst : Group G], Monoid.IsTorsionFree G \u2192 \u2200 (H : Subgroup G), Monoid.IsTorsionFree { x // x \u2208 H }\",\n  \"isProp\": true,\n  \"docString\": \"Subgroups of torsion-free groups are torsion-free. \"},\n {\"theorem\":\n  \"\u2200 {G : Type u_1} [inst : AddGroup G],\\n  AddMonoid.IsTorsionFree G \u2192 \u2200 (H : AddSubgroup G), AddMonoid.IsTorsionFree { x // x \u2208 H }\",\n  \"isProp\": true,\n  \"docString\":\n  \"Subgroups of additive torsion-free groups are additively torsion-free.\"},\n {\"theorem\":\n  \"\u2200 (G : Type u_1) [inst : CommGroup G], Monoid.IsTorsionFree (G \u29f8 CommGroup.torsion G)\",\n  \"isProp\": true,\n  \"docString\":\n  \"Quotienting a group by its torsion subgroup yields a torsion free group. \"},\n {\"theorem\":\n  \"\u2200 (G : Type u_1) [inst : AddCommGroup G], AddMonoid.IsTorsionFree (G \u29f8 AddCommGroup.torsion G)\",\n  \"isProp\": true,\n  \"docString\":\n  \"Quotienting a group by its additive torsion subgroup yields an additive torsion free group.\"},\n {\"theorem\":\n  \"\u2200 {G : Type u_1} {H : Type u_2} [inst : Group G] {N : Subgroup G} [inst_1 : Group H] {f : G \u2192* H},\\n  N = MonoidHom.ker f \u2192 Monoid.IsTorsion H \u2192 Monoid.IsTorsion { x // x \u2208 N } \u2192 Monoid.IsTorsion G\",\n  \"isProp\": true,\n  \"docString\": \"Torsion groups are closed under extensions. \"},\n {\"theorem\":\n  \"\u2200 {G : Type u_1} [inst : Group G], Monoid.IsTorsion G \u2192 \u2200 (H : Subgroup G), Monoid.IsTorsion { x // x \u2208 H }\",\n  \"isProp\": true,\n  \"docString\": \"Subgroups of torsion groups are torsion groups. \"},\n {\"theorem\":\n  \"\u2200 {G : Type u_1} [inst : AddGroup G], AddMonoid.IsTorsion G \u2192 \u2200 (H : AddSubgroup G), AddMonoid.IsTorsion { x // x \u2208 H }\",\n  \"isProp\": true,\n  \"docString\":\n  \"Subgroups of additive torsion groups are additive torsion groups.\"},\n {\"theorem\":\n  \"\u2200 {G : Type u_1} [inst : Group G] [inst_1 : Finite G], Monoid.IsTorsion G\",\n  \"isProp\": true,\n  \"docString\": \"Finite groups are torsion groups. \"}]\n"
  }
]