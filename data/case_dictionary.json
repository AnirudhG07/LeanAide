[
  {
    "snakecase": "measure_theory.outer_measure",
    "camelcase": "MeasureTheory.OuterMeasure"
  },
  {
    "snakecase": "set.finrank",
    "camelcase": "Set.finrank"
  },
  {
    "snakecase": "subring.closure",
    "camelcase": "Subring.closure"
  },
  {
    "snakecase": "category_theory.limits.has_biproduct",
    "camelcase": "CategoryTheory.Limits.HasBiproduct"
  },
  {
    "snakecase": "add_commute",
    "camelcase": "AddCommute"
  },
  {
    "snakecase": "category_theory.limits.has_terminal",
    "camelcase": "CategoryTheory.Limits.HasTerminal"
  },
  {
    "snakecase": "category_theory.is_right_adjoint",
    "camelcase": "CategoryTheory.IsRightAdjoint"
  },
  {
    "snakecase": "zero_hom",
    "camelcase": "ZeroHom"
  },
  {
    "snakecase": "category_theory.non_preadditive_abelian.",
    "camelcase": "CategoryTheory.NonPreadditiveAbelian"
  },
  {
    "snakecase": "baire_space",
    "camelcase": "BaireSpace"
  },
  {
    "snakecase": "free_group.mk",
    "camelcase": "FreeGroup.mk"
  },
  {
    "snakecase": "ideal.quotient.mk",
    "camelcase": "Ideal.Quotient.mk"
  },
  {
    "snakecase": "conditionally_complete_lattice",
    "camelcase": "ConditionallyCompleteLattice"
  },
  {
    "snakecase": "complete_lattice.is_Sup_finite_compact",
    "camelcase": "CompleteLattice.IsSupFiniteCompact"
  },
  {
    "snakecase": "polynomial.expand",
    "camelcase": "Polynomial.expand"
  },
  {
    "snakecase": "pi.single",
    "camelcase": "Pi.single"
  },
  {
    "snakecase": "left_distrib_class",
    "camelcase": "LeftDistribClass"
  },
  {
    "snakecase": "bind",
    "camelcase": "Bind"
  },
  {
    "snakecase": "pmf",
    "camelcase": "Pmf"
  },
  {
    "snakecase": "mul_opposite.op",
    "camelcase": "MulOpposite.op"
  },
  {
    "snakecase": "fixed_by_finite",
    "camelcase": "FixedByFinite"
  },
  {
    "snakecase": "filter.is_bounded",
    "camelcase": "Filter.IsBounded"
  },
  {
    "snakecase": "direct_sum.is_internal",
    "camelcase": "DirectSum.IsInternal"
  },
  {
    "snakecase": "transcendental",
    "camelcase": "Transcendental"
  },
  {
    "snakecase": "bounded_continuous_function.comp",
    "camelcase": "BoundedContinuousFunction.comp"
  },
  {
    "snakecase": "has_fderiv_at_filter",
    "camelcase": "HasFderivAtFilter"
  },
  {
    "snakecase": "sum.elim",
    "camelcase": "Sum.elim"
  },
  {
    "snakecase": "lie_algebra.ad",
    "camelcase": "LieAlgebra.ad"
  },
  {
    "snakecase": "omega.nat.preterm",
    "camelcase": "Omega.Nat.Preterm"
  },
  {
    "snakecase": "normal",
    "camelcase": "Normal"
  },
  {
    "snakecase": "category_theory.exact",
    "camelcase": "CategoryTheory.Exact"
  },
  {
    "snakecase": "finsupp.total",
    "camelcase": "Finsupp.total"
  },
  {
    "snakecase": "locally_finite_order",
    "camelcase": "LocallyFiniteOrder"
  },
  {
    "snakecase": "truncated_witt_vector.truncate",
    "camelcase": "TruncatedWittVector.truncate"
  },
  {
    "snakecase": "algebra.norm",
    "camelcase": "Algebra.norm"
  },
  {
    "snakecase": "quotient",
    "camelcase": "Quotient"
  },
  {
    "snakecase": "category_theory.is_connected",
    "camelcase": "CategoryTheory.IsConnected"
  },
  {
    "snakecase": "nat.partrec.code.evaln",
    "camelcase": "Nat.Partrec.Code.evaln"
  },
  {
    "snakecase": "linear_ordered_add_comm_monoid_with_top",
    "camelcase": "LinearOrderedAddCommMonoidWithTop"
  },
  {
    "snakecase": "set.Ioc",
    "camelcase": "Set.Ioc"
  },
  {
    "snakecase": "int.clog",
    "camelcase": "Int.clog"
  },
  {
    "snakecase": "category_theory.limits.has_multiequalizer",
    "camelcase": "CategoryTheory.Limits.HasMultiequalizer"
  },
  {
    "snakecase": "monoid_algebra.of",
    "camelcase": "MonoidAlgebra.of"
  },
  {
    "snakecase": "tropical.untrop",
    "camelcase": "Tropical.untrop"
  },
  {
    "snakecase": "bounded_continuous_function.const",
    "camelcase": "BoundedContinuousFunction.const"
  },
  {
    "snakecase": "analytic_at",
    "camelcase": "AnalyticAt"
  },
  {
    "snakecase": "closure",
    "camelcase": "Closure"
  },
  {
    "snakecase": "bdd_above",
    "camelcase": "BddAbove"
  },
  {
    "snakecase": "metric_space",
    "camelcase": "MetricSpace"
  },
  {
    "snakecase": "nat.mkpair",
    "camelcase": "Nat.mkpair"
  },
  {
    "snakecase": "ratfunc.mk",
    "camelcase": "Ratfunc.mk"
  },
  {
    "snakecase": "domain",
    "camelcase": "IsDomain"
  },
  {
    "snakecase": "category_theory.limits.initial_mono_class",
    "camelcase": "CategoryTheory.Limits.InitialMonoClass"
  },
  {
    "snakecase": "module.projective",
    "camelcase": "Module.Projective"
  },
  {
    "snakecase": "order_bot",
    "camelcase": "OrderBot"
  },
  {
    "snakecase": "category_theory.forget",
    "camelcase": "CategoryTheory.forget"
  },
  {
    "snakecase": "is_dedekind_domain.height_one_spectrum",
    "camelcase": "IsDedekindDomain.HeightOneSpectrum"
  },
  {
    "snakecase": "right_distrib_class",
    "camelcase": "RightDistribClass"
  },
  {
    "snakecase": "is_closed_map",
    "camelcase": "IsClosedMap"
  },
  {
    "snakecase": "continuous_linear_map.lsmul",
    "camelcase": "ContinuousLinearMap.lsmul"
  },
  {
    "snakecase": "category_theory.presieve.singleton",
    "camelcase": "CategoryTheory.Presieve.Singleton"
  },
  {
    "snakecase": "category_theory.limits.coprod.map",
    "camelcase": "CategoryTheory.Limits.coprod.map"
  },
  {
    "snakecase": "Lim",
    "camelcase": "lim"
  },
  {
    "snakecase": "lower_semicontinuous_at",
    "camelcase": "LowerSemicontinuousAt"
  },
  {
    "snakecase": "star_semigroup",
    "camelcase": "StarSemigroup"
  },
  {
    "snakecase": "triv_sq_zero_ext",
    "camelcase": "TrivSqZeroExt"
  },
  {
    "snakecase": "holder_on_with",
    "camelcase": "HolderOnWith"
  },
  {
    "snakecase": "has_compact_support",
    "camelcase": "HasCompactSupport"
  },
  {
    "snakecase": "pequiv.single",
    "camelcase": "Pequiv.single"
  },
  {
    "snakecase": "max_chain",
    "camelcase": "MaxChain"
  },
  {
    "snakecase": "cont",
    "camelcase": "Cont"
  },
  {
    "snakecase": "direct_sum.of",
    "camelcase": "DirectSum.of"
  },
  {
    "snakecase": "is_order_right_adjoint",
    "camelcase": "IsOrderRightAdjoint"
  },
  {
    "snakecase": "cont_diff_at",
    "camelcase": "ContDiffAt"
  },
  {
    "snakecase": "order.ideal",
    "camelcase": "Order.IsIdeal"
  },
  {
    "snakecase": "min",
    "camelcase": "IsMin"
  },
  {
    "snakecase": "category_theory.limits.has_finite_limits",
    "camelcase": "CategoryTheory.Limits.HasFiniteLimits"
  },
  {
    "snakecase": "covariant_class",
    "camelcase": "CovariantClass"
  },
  {
    "snakecase": "filter.tendsto_Ixx_class",
    "camelcase": "Filter.TendstoIxxClass"
  },
  {
    "snakecase": "monoid_hom.single",
    "camelcase": "MonoidHom.single"
  },
  {
    "snakecase": "category_theory.limits.colimit.desc",
    "camelcase": "CategoryTheory.Limits.IsColimit.desc"
  },
  {
    "snakecase": "measurable_space.generate_measurable_rec",
    "camelcase": "MeasurableSpace.GenerateMeasurableRec"
  },
  {
    "snakecase": "subgroup.map",
    "camelcase": "Subgroup.map"
  },
  {
    "snakecase": "rank_condition",
    "camelcase": "RankCondition"
  },
  {
    "snakecase": "category_theory.limits.prod.map",
    "camelcase": "CategoryTheory.Limits.prod.map"
  },
  {
    "snakecase": "add_cancel_comm_monoid",
    "camelcase": "AddCancelCommMonoid"
  },
  {
    "snakecase": "mv_polynomial.rename",
    "camelcase": "MvPolynomial.rename"
  },
  {
    "snakecase": "continuous_map.compact_conv_nhd",
    "camelcase": "ContinuousMap.CompactConvNhd"
  },
  {
    "snakecase": "filter.tendsto",
    "camelcase": "Filter.Tendsto"
  },
  {
    "snakecase": "prod.rprod",
    "camelcase": "Prod.RProd"
  },
  {
    "snakecase": "balanced",
    "camelcase": "Balanced"
  },
  {
    "snakecase": "interval_integrable",
    "camelcase": "IntervalIntegrable"
  },
  {
    "snakecase": "first_order.language.Structure.cg",
    "camelcase": "FirstOrder.Language.Structure.Cg"
  },
  {
    "snakecase": "has_faithful_smul",
    "camelcase": "HasFaithfulSmul"
  },
  {
    "snakecase": "is_local_extr_on",
    "camelcase": "IsLocalExtrOn"
  },
  {
    "snakecase": "linear_map.lsum",
    "camelcase": "LinearMap.lsum"
  },
  {
    "snakecase": "category_theory.projective",
    "camelcase": "CategoryTheory.Projective"
  },
  {
    "snakecase": "normed_ring",
    "camelcase": "NormedRing"
  },
  {
    "snakecase": "perfection.coeff",
    "camelcase": "Perfection.coeff"
  },
  {
    "snakecase": "category_theory.reflective",
    "camelcase": "CategoryTheory.Reflective"
  },
  {
    "snakecase": "local_equiv",
    "camelcase": "LocalEquiv"
  },
  {
    "snakecase": "category_theory.bicategory.associator",
    "camelcase": "CategoryTheory.Bicategory.associator"
  },
  {
    "snakecase": "generalized_continued_fraction",
    "camelcase": "GeneralizedContinuedFraction"
  },
  {
    "snakecase": "is_noetherian_ring",
    "camelcase": "IsNoetherianRing"
  },
  {
    "snakecase": "ring",
    "camelcase": "Ring"
  },
  {
    "snakecase": "is_lie_abelian",
    "camelcase": "IsLieAbelian"
  },
  {
    "snakecase": "linear_map.compatible_smul",
    "camelcase": "LinearMap.CompatibleSmul"
  },
  {
    "snakecase": "is_localization.away",
    "camelcase": "IsLocalization.Away"
  },
  {
    "snakecase": "path.homotopic.pi",
    "camelcase": "Path.Homotopic.pi"
  },
  {
    "snakecase": "subsemigroup.closure",
    "camelcase": "Subsemigroup.closure"
  },
  {
    "snakecase": "unit_interval",
    "camelcase": "UnitInterval"
  },
  {
    "snakecase": "power_series.exp",
    "camelcase": "PowerSeries.exp"
  },
  {
    "snakecase": "ring_hom.id",
    "camelcase": "IsRingHom.id"
  },
  {
    "snakecase": "inner_product_space",
    "camelcase": "InnerProductSpace"
  },
  {
    "snakecase": "continuous_multilinear_map",
    "camelcase": "ContinuousMultilinearMap"
  },
  {
    "snakecase": "omega.ee",
    "camelcase": "Omega.Ee"
  },
  {
    "snakecase": "uniform_space.ball",
    "camelcase": "UniformSpace.Ball"
  },
  {
    "snakecase": "clifford_algebra",
    "camelcase": "CliffordAlgebra"
  },
  {
    "snakecase": "free_product.word",
    "camelcase": "FreeProduct.Word"
  },
  {
    "snakecase": "zero_lt.pos_mul_mono",
    "camelcase": "ZeroLt.PosMulMono"
  },
  {
    "snakecase": "subalgebra",
    "camelcase": "Subalgebra"
  },
  {
    "snakecase": "lucas_lehmer.X.",
    "camelcase": "LucasLehmer.X"
  },
  {
    "snakecase": "holder_with",
    "camelcase": "HolderWith"
  },
  {
    "snakecase": "category_theory.paths",
    "camelcase": "CategoryTheory.Paths"
  },
  {
    "snakecase": "linear_pmap",
    "camelcase": "LinearPmap"
  },
  {
    "snakecase": "prime",
    "camelcase": "Prime"
  },
  {
    "snakecase": "fixed_points.subfield",
    "camelcase": "FixedPoints.subfield"
  },
  {
    "snakecase": "category_theory.is_equivalence",
    "camelcase": "CategoryTheory.IsEquivalence"
  },
  {
    "snakecase": "is_square",
    "camelcase": "IsSquare"
  },
  {
    "snakecase": "open_subgroup",
    "camelcase": "OpenSubgroup"
  },
  {
    "snakecase": "has_strict_deriv_at",
    "camelcase": "HasStrictDerivAt"
  },
  {
    "snakecase": "affine.simplex.points_with_circumcenter_index",
    "camelcase": "Affine.Simplex.PointsWithCircumcenterIndex"
  },
  {
    "snakecase": "Class.iota",
    "camelcase": "Class.Iota"
  },
  {
    "snakecase": "category_theory.limits.has_products",
    "camelcase": "CategoryTheory.Limits.HasProducts"
  },
  {
    "snakecase": "category_theory.limits.has_strict_initial_objects",
    "camelcase": "CategoryTheory.Limits.HasStrictInitialObjects"
  },
  {
    "snakecase": "witt_vector.isocrystal_equiv",
    "camelcase": "WittVector.IsocrystalEquiv"
  },
  {
    "snakecase": "measure_theory.sigma_finite",
    "camelcase": "MeasureTheory.SigmaFinite"
  },
  {
    "snakecase": "absorbent",
    "camelcase": "Absorbent"
  },
  {
    "snakecase": "is_local_max_on",
    "camelcase": "IsLocalMaxOn"
  },
  {
    "snakecase": "exp_char",
    "camelcase": "ExpChar"
  },
  {
    "snakecase": "nat.arithmetic_function",
    "camelcase": "Nat.ArithmeticFunction"
  },
  {
    "snakecase": "polynomial.chebyshev.U",
    "camelcase": "Polynomial.Chebyshev.u"
  },
  {
    "snakecase": "topological_space.separable_space",
    "camelcase": "TopologicalSpace.SeparableSpace"
  },
  {
    "snakecase": "ring_hom.localization_preserves",
    "camelcase": "RingHom.LocalizationPreserves"
  },
  {
    "snakecase": "lipschitz_on_with",
    "camelcase": "LipschitzOnWith"
  },
  {
    "snakecase": "category_theory.bicategory.lift_hom",
    "camelcase": "CategoryTheory.Bicategory.LiftHom"
  },
  {
    "snakecase": "polish_space",
    "camelcase": "PolishSpace"
  },
  {
    "snakecase": "finset.centroid",
    "camelcase": "Finset.centroid"
  },
  {
    "snakecase": "linear_map.adjoint",
    "camelcase": "LinearMap.adjoint"
  },
  {
    "snakecase": "relation.join",
    "camelcase": "Relation.Join"
  },
  {
    "snakecase": "id",
    "camelcase": "Id"
  },
  {
    "snakecase": "false",
    "camelcase": "False"
  },
  {
    "snakecase": "ordinal.principal",
    "camelcase": "Ordinal.Principal"
  },
  {
    "snakecase": "hall_matchings_on",
    "camelcase": "HallMatchingsOn"
  },
  {
    "snakecase": "is_add_monoid_hom",
    "camelcase": "IsAddMonoidHom"
  },
  {
    "snakecase": "continuous_within_at",
    "camelcase": "ContinuousWithinAt"
  },
  {
    "snakecase": "normed_algebra",
    "camelcase": "NormedAlgebra"
  },
  {
    "snakecase": "order.frame",
    "camelcase": "Order.Frame"
  },
  {
    "snakecase": "measure_theory.measure",
    "camelcase": "MeasureTheory.Measure"
  },
  {
    "snakecase": "is_submonoid",
    "camelcase": "IsSubmonoid"
  },
  {
    "snakecase": "semigroup_with_zero",
    "camelcase": "SemigroupWithZero"
  },
  {
    "snakecase": "real.sqrt",
    "camelcase": "Real.sqrt"
  },
  {
    "snakecase": "category_theory.limits.cokernel.map",
    "camelcase": "CategoryTheory.Limits.cokernel.map"
  },
  {
    "snakecase": "euclidean_geometry.cospherical",
    "camelcase": "EuclideanGeometry.Cospherical"
  },
  {
    "snakecase": "is_add_hom",
    "camelcase": "IsAddHom"
  },
  {
    "snakecase": "category_theory.preadditive",
    "camelcase": "CategoryTheory.Preadditive"
  },
  {
    "snakecase": "free_product.of",
    "camelcase": "FreeProduct.of"
  },
  {
    "snakecase": "add_subsemigroup",
    "camelcase": "AddSubsemigroup"
  },
  {
    "snakecase": "rel.image",
    "camelcase": "Rel.Image"
  },
  {
    "snakecase": "is_localization.mk",
    "camelcase": "Localization.mk"
  },
  {
    "snakecase": "affine.simplex.points_with_circumcenter_index.point_index",
    "camelcase": "Affine.Simplex.PointsWithCircumcenterIndex.point_index"
  },
  {
    "snakecase": "erased",
    "camelcase": "Erased"
  },
  {
    "snakecase": "compact",
    "camelcase": "IsCompact"
  },
  {
    "snakecase": "add_zero_class",
    "camelcase": "AddZeroClass"
  },
  {
    "snakecase": "normalized_gcd_monoid",
    "camelcase": "NormalizedGcdMonoid"
  },
  {
    "snakecase": "is_max_on",
    "camelcase": "IsMaxOn"
  },
  {
    "snakecase": "module.is_torsion",
    "camelcase": "Module.IsTorsion"
  },
  {
    "snakecase": "module.End",
    "camelcase": "Module.End"
  },
  {
    "snakecase": "localization",
    "camelcase": "Localization"
  },
  {
    "snakecase": "algebraic_geometry.PresheafedSpace",
    "camelcase": "AlgebraicGeometry.PresheafedSpace"
  },
  {
    "snakecase": "int",
    "camelcase": "Int"
  },
  {
    "snakecase": "function.embedding.inl",
    "camelcase": "Function.Embedding.inl"
  },
  {
    "snakecase": "category_theory.limits.pi.map",
    "camelcase": "CategoryTheory.Limits.Pi.map"
  },
  {
    "snakecase": "algebraic_geometry.LocallyRingedSpace.",
    "camelcase": "AlgebraicGeometry.LocallyRingedSpace"
  },
  {
    "snakecase": "has_ssubset.ssubset",
    "camelcase": "HasSsubset.Ssubset"
  },
  {
    "snakecase": "cardinal",
    "camelcase": "Cardinal"
  },
  {
    "snakecase": "besicovitch.satellite_config",
    "camelcase": "Besicovitch.SatelliteConfig"
  },
  {
    "snakecase": "interior",
    "camelcase": "Interior"
  },
  {
    "snakecase": "quaternion_algebra.conj",
    "camelcase": "QuaternionAlgebra.conj"
  },
  {
    "snakecase": "category_theory.limits.has_finite_biproducts",
    "camelcase": "CategoryTheory.Limits.HasFiniteBiproducts"
  },
  {
    "snakecase": "ordered_smul",
    "camelcase": "OrderedSmul"
  },
  {
    "snakecase": "category_theory.limits.preserves_finite_limits",
    "camelcase": "CategoryTheory.Limits.PreservesFiniteLimits"
  },
  {
    "snakecase": "tensor_algebra",
    "camelcase": "TensorAlgebra"
  },
  {
    "snakecase": "uniform_continuous_on",
    "camelcase": "UniformContinuousOn"
  },
  {
    "snakecase": "monoid_algebra",
    "camelcase": "MonoidAlgebra"
  },
  {
    "snakecase": "vector.nil",
    "camelcase": "Vector.nil"
  },
  {
    "snakecase": "has_sbtw.sbtw",
    "camelcase": "HasSbtw.Sbtw"
  },
  {
    "snakecase": "category_theory.limits.has_pullbacks",
    "camelcase": "CategoryTheory.Limits.HasPullbacks"
  },
  {
    "snakecase": "is_dedekind_domain_inv",
    "camelcase": "IsDedekindDomainInv"
  },
  {
    "snakecase": "upper_semicontinuous_within_at",
    "camelcase": "UpperSemicontinuousWithinAt"
  },
  {
    "snakecase": "topological_space.is_separable",
    "camelcase": "TopologicalSpace.IsSeparable"
  },
  {
    "snakecase": "nat.primes",
    "camelcase": "Nat.Primes"
  },
  {
    "snakecase": "ring_hom_isometric",
    "camelcase": "RingHomIsometric"
  },
  {
    "snakecase": "category_theory.solution_set_condition",
    "camelcase": "CategoryTheory.SolutionSetCondition"
  },
  {
    "snakecase": "category_theory.limits.has_images",
    "camelcase": "CategoryTheory.Limits.HasImages"
  },
  {
    "snakecase": "is_localization.map",
    "camelcase": "IsLocalization.map"
  },
  {
    "snakecase": "polynomial.chebyshev.T",
    "camelcase": "Polynomial.Chebyshev.t"
  },
  {
    "snakecase": "free_product.word.empty",
    "camelcase": "FreeProduct.Word.empty"
  },
  {
    "snakecase": "set.Icc",
    "camelcase": "Set.Icc"
  },
  {
    "snakecase": "is_irrefl",
    "camelcase": "irrefl"
  },
  {
    "snakecase": "category_theory.limits.wide_pullback_shape",
    "camelcase": "CategoryTheory.Limits.WidePullbackShape"
  },
  {
    "snakecase": "spectrum",
    "camelcase": "Spectrum"
  },
  {
    "snakecase": "complex_shape.up",
    "camelcase": "ComplexShape.up"
  },
  {
    "snakecase": "add_group",
    "camelcase": "AddGroup"
  },
  {
    "snakecase": "generalized_continued_fraction.int_fract_pair",
    "camelcase": "GeneralizedContinuedFraction.IntFractPair"
  },
  {
    "snakecase": "is_of_fin_order",
    "camelcase": "IsOfFinOrder"
  },
  {
    "snakecase": "regular_expression.map",
    "camelcase": "RegularExpression.map"
  },
  {
    "snakecase": "filter.map",
    "camelcase": "Filter.map"
  },
  {
    "snakecase": "function.bijective",
    "camelcase": "Function.Bijective"
  },
  {
    "snakecase": "semi_normed_ring",
    "camelcase": "SemiNormedRing"
  },
  {
    "snakecase": "category_theory.cover_lifting",
    "camelcase": "CategoryTheory.CoverLifting"
  },
  {
    "snakecase": "algebra.discr",
    "camelcase": "Algebra.discr"
  },
  {
    "snakecase": "category_theory.functor.empty",
    "camelcase": "CategoryTheory.Functor.empty"
  },
  {
    "snakecase": "category_theory.limits.has_finite_colimits",
    "camelcase": "CategoryTheory.Limits.HasFiniteColimits"
  },
  {
    "snakecase": "has_measurable_mul",
    "camelcase": "HasMeasurableMul"
  },
  {
    "snakecase": "measure_theory.analytic_set",
    "camelcase": "MeasureTheory.AnalyticSet"
  },
  {
    "snakecase": "lie_submodule.ucs",
    "camelcase": "LieSubmodule.ucs"
  },
  {
    "snakecase": "quandle.conj",
    "camelcase": "Quandle.Conj"
  },
  {
    "snakecase": "semilattice_inf",
    "camelcase": "SemilatticeInf"
  },
  {
    "snakecase": "uv.compression",
    "camelcase": "Uv.compression"
  },
  {
    "snakecase": "witt_vector.init",
    "camelcase": "WittVector.init"
  },
  {
    "snakecase": "category_theory.well_powered",
    "camelcase": "CategoryTheory.WellPowered"
  },
  {
    "snakecase": "category_theory.limits.biprod.fst",
    "camelcase": "CategoryTheory.Limits.biprod.fst"
  },
  {
    "snakecase": "category_theory.presieve.is_separated",
    "camelcase": "CategoryTheory.Presieve.IsSeparated"
  },
  {
    "snakecase": "add_torsor",
    "camelcase": "AddTorsor"
  },
  {
    "snakecase": "function.surjective",
    "camelcase": "Function.surjective"
  },
  {
    "snakecase": "mvqpf.P",
    "camelcase": "Mvqpf.p"
  },
  {
    "snakecase": "category_theory.locally_cover_dense",
    "camelcase": "CategoryTheory.LocallyCoverDense"
  },
  {
    "snakecase": "category_theory.is_preconnected",
    "camelcase": "CategoryTheory.IsPreconnected"
  },
  {
    "snakecase": "linear_isometry_equiv.neg",
    "camelcase": "LinearIsometryEquiv.neg"
  },
  {
    "snakecase": "commute",
    "camelcase": "Commute"
  },
  {
    "snakecase": "truncated_witt_vector",
    "camelcase": "TruncatedWittVector"
  },
  {
    "snakecase": "order_topology",
    "camelcase": "OrderTopology"
  },
  {
    "snakecase": "category_theory.monad.forget_creates_colimits.lambda",
    "camelcase": "CategoryTheory.Monad.ForgetCreatesColimits.lambda"
  },
  {
    "snakecase": "set.maps_to",
    "camelcase": "Set.MapsTo"
  },
  {
    "snakecase": "algebraic_independent",
    "camelcase": "AlgebraicIndependent"
  },
  {
    "snakecase": "rep",
    "camelcase": "Rep"
  },
  {
    "snakecase": "topological_space.closeds",
    "camelcase": "TopologicalSpace.Closeds"
  },
  {
    "snakecase": "category_theory.prod.swap",
    "camelcase": "CategoryTheory.prod.swap"
  },
  {
    "snakecase": "omega_complete_partial_order.chain",
    "camelcase": "OmegaCompletePartialOrder.Chain"
  },
  {
    "snakecase": "order.pfilter",
    "camelcase": "Order.IsPfilter"
  },
  {
    "snakecase": "discrete_topology",
    "camelcase": "DiscreteTopology"
  },
  {
    "snakecase": "subfield",
    "camelcase": "Subfield"
  },
  {
    "snakecase": "witt_vector.is_poly",
    "camelcase": "WittVector.IsPoly"
  },
  {
    "snakecase": "bornology.is_bounded",
    "camelcase": "Bornology.IsBounded"
  },
  {
    "snakecase": "tensor_product.rid",
    "camelcase": "TensorProduct.rid"
  },
  {
    "snakecase": "is_fw_invariant",
    "camelcase": "IsFwInvariant"
  },
  {
    "snakecase": "set.maps_to.restrict",
    "camelcase": "Set.MapsTo.restrict"
  },
  {
    "snakecase": "tc",
    "camelcase": "TC"
  },
  {
    "snakecase": "category_theory.iso.refl",
    "camelcase": "CategoryTheory.Iso.refl"
  },
  {
    "snakecase": "list.nil",
    "camelcase": "List.nil"
  },
  {
    "snakecase": "add_monoid_hom_class",
    "camelcase": "AddMonoidHomClass"
  },
  {
    "snakecase": "category_theory.pretopology",
    "camelcase": "CategoryTheory.Pretopology"
  },
  {
    "snakecase": "quaternion_group.a",
    "camelcase": "QuaternionGroup.a"
  },
  {
    "snakecase": "category_theory.limits.has_coproducts_of_shape",
    "camelcase": "CategoryTheory.Limits.HasCoproductsOfShape"
  },
  {
    "snakecase": "preorder",
    "camelcase": "Preorder"
  },
  {
    "snakecase": "category_theory.cartesian_closed",
    "camelcase": "CategoryTheory.CartesianClosed"
  },
  {
    "snakecase": "category_theory.limits.prod.fst",
    "camelcase": "CategoryTheory.Limits.prod.fst"
  },
  {
    "snakecase": "clifford_algebra.involute",
    "camelcase": "CliffordAlgebra.involute"
  },
  {
    "snakecase": "has_deriv_at_filter",
    "camelcase": "HasDerivAtFilter"
  },
  {
    "snakecase": "turing.list_blank",
    "camelcase": "Turing.ListBlank"
  },
  {
    "snakecase": "multiset.Ioc",
    "camelcase": "Multiset.ioc"
  },
  {
    "snakecase": "cardinal.prod",
    "camelcase": "Cardinal.prod"
  },
  {
    "snakecase": "rat.mk",
    "camelcase": "Rat.mk"
  },
  {
    "snakecase": "category_theory.zag",
    "camelcase": "CategoryTheory.Zag"
  },
  {
    "snakecase": "strict_mono_on",
    "camelcase": "StrictMonoOn"
  },
  {
    "snakecase": "rack.pre_envel_group_rel",
    "camelcase": "Rack.PreEnvelGroupRel"
  },
  {
    "snakecase": "is_add_cyclic",
    "camelcase": "IsAddCyclic"
  },
  {
    "snakecase": "is_local_min_on",
    "camelcase": "IsLocalMinOn"
  },
  {
    "snakecase": "category_theory.creates_limits_of_size",
    "camelcase": "CategoryTheory.CreatesLimitsOfSize"
  },
  {
    "snakecase": "bilin_form",
    "camelcase": "BilinForm"
  },
  {
    "snakecase": "complex.exp",
    "camelcase": "Complex.exp"
  },
  {
    "snakecase": "category_theory.is_pushout",
    "camelcase": "CategoryTheory.IsPushout"
  },
  {
    "snakecase": "power_series.rescale",
    "camelcase": "PowerSeries.rescale"
  },
  {
    "snakecase": "is_add_right_regular",
    "camelcase": "IsAddRightRegular"
  },
  {
    "snakecase": "con.ker",
    "camelcase": "Con.ker"
  },
  {
    "snakecase": "tc",
    "camelcase": "Tc"
  },
  {
    "snakecase": "quotient_map",
    "camelcase": "QuotientMap"
  },
  {
    "snakecase": "is_totally_separated",
    "camelcase": "IsTotallySeparated"
  },
  {
    "snakecase": "open_add_subgroup",
    "camelcase": "OpenAddSubgroup"
  },
  {
    "snakecase": "category_theory.sheaf.subcanonical",
    "camelcase": "CategoryTheory.Sheaf.Subcanonical"
  },
  {
    "snakecase": "is_nonstrict_strict_order",
    "camelcase": "IsNonstrictStrictOrder"
  },
  {
    "snakecase": "inv",
    "camelcase": "Inv"
  },
  {
    "snakecase": "char_buffer",
    "camelcase": "CharBuffer"
  },
  {
    "snakecase": "category_theory.limits.cone",
    "camelcase": "CategoryTheory.Limits.Cone"
  },
  {
    "snakecase": "category_theory.presieve",
    "camelcase": "CategoryTheory.Presieve"
  },
  {
    "snakecase": "category_theory.limits.has_pullback",
    "camelcase": "CategoryTheory.Limits.HasPullback"
  },
  {
    "snakecase": "is_descending_central_series",
    "camelcase": "IsDescendingCentralSeries"
  },
  {
    "snakecase": "local_homeomorph",
    "camelcase": "LocalHomeomorph"
  },
  {
    "snakecase": "is_bounded_linear_map",
    "camelcase": "IsBoundedLinearMap"
  },
  {
    "snakecase": "add_torsor.nonempty",
    "camelcase": "AddTorsor.nonempty"
  },
  {
    "snakecase": "finset.Ioo",
    "camelcase": "Finset.ioo"
  },
  {
    "snakecase": "is_free_groupoid.of",
    "camelcase": "IsFreeGroupoid.of"
  },
  {
    "snakecase": "linear_ordered_semiring",
    "camelcase": "LinearOrderedSemiring"
  },
  {
    "snakecase": "quasi_sober",
    "camelcase": "QuasiSober"
  },
  {
    "snakecase": "ideal.span",
    "camelcase": "Ideal.span"
  },
  {
    "snakecase": "normed_space.polar",
    "camelcase": "NormedSpace.Polar"
  },
  {
    "snakecase": "category_theory.abelian.image.",
    "camelcase": "CategoryTheory.Abelian.image"
  },
  {
    "snakecase": "star_module.re",
    "camelcase": "StarModule.re"
  },
  {
    "snakecase": "free_group.red.step",
    "camelcase": "FreeGroup.Red.Step"
  },
  {
    "snakecase": "first_order.language.is_fraisse",
    "camelcase": "FirstOrder.Language.IsFraisse"
  },
  {
    "snakecase": "open",
    "camelcase": "IsOpen"
  },
  {
    "snakecase": "category_theory.cover_preserving",
    "camelcase": "CategoryTheory.CoverPreserving"
  },
  {
    "snakecase": "set.Ioi",
    "camelcase": "Set.Ioi"
  },
  {
    "snakecase": "reflexive",
    "camelcase": "Reflexive"
  },
  {
    "snakecase": "free_abelian_group.of",
    "camelcase": "FreeAbelianGroup.of"
  },
  {
    "snakecase": "laurent_polynomial.C",
    "camelcase": "LaurentPolynomial.c"
  },
  {
    "snakecase": "category_theory.limits.is_zero",
    "camelcase": "CategoryTheory.Limits.IsZero"
  },
  {
    "snakecase": "is_antichain",
    "camelcase": "IsAntichain"
  },
  {
    "snakecase": "path.homotopic.prod",
    "camelcase": "Path.Homotopic.prod"
  },
  {
    "snakecase": "has_norm.norm",
    "camelcase": "HasNorm.norm"
  },
  {
    "snakecase": "has_ftaylor_series_up_to",
    "camelcase": "HasFtaylorSeriesUpTo"
  },
  {
    "snakecase": "rack.act",
    "camelcase": "Rack.act"
  },
  {
    "snakecase": "is_localization.away",
    "camelcase": "Localization.Away"
  },
  {
    "snakecase": "category_theory.limits.biproduct.lift",
    "camelcase": "CategoryTheory.Limits.biproduct.lift"
  },
  {
    "snakecase": "tensor_product.compatible_smul",
    "camelcase": "TensorProduct.CompatibleSmul"
  },
  {
    "snakecase": "valuation",
    "camelcase": "Valuation"
  },
  {
    "snakecase": "power_series.X",
    "camelcase": "PowerSeries.x"
  },
  {
    "snakecase": "is_seq",
    "camelcase": "Seq"
  },
  {
    "snakecase": "group",
    "camelcase": "Group"
  },
  {
    "snakecase": "category_theory.is_iso",
    "camelcase": "CategoryTheory.Iso"
  },
  {
    "snakecase": "category_theory.is_equivalence",
    "camelcase": "CategoryTheory.Equivalence"
  },
  {
    "snakecase": "uniform_inducing",
    "camelcase": "UniformInducing"
  },
  {
    "snakecase": "category_theory.limits.has_image_map",
    "camelcase": "CategoryTheory.Limits.HasImageMap"
  },
  {
    "snakecase": "prod.snd",
    "camelcase": "Prod.snd"
  },
  {
    "snakecase": "same_ray",
    "camelcase": "SameRay"
  },
  {
    "snakecase": "locally_constant.comap",
    "camelcase": "LocallyConstant.comap"
  },
  {
    "snakecase": "configuration.has_points",
    "camelcase": "Configuration.HasPoints"
  },
  {
    "snakecase": "fraction_ring",
    "camelcase": "FractionRing"
  },
  {
    "snakecase": "category_theory.limits.colimit",
    "camelcase": "CategoryTheory.Limits.colimit"
  },
  {
    "snakecase": "ideal",
    "camelcase": "Ideal"
  },
  {
    "snakecase": "unique_diff_on",
    "camelcase": "UniqueDiffOn"
  },
  {
    "snakecase": "category_theory.limits.has_binary_products",
    "camelcase": "CategoryTheory.Limits.HasBinaryProducts"
  },
  {
    "snakecase": "category_theory.abelian.app",
    "camelcase": "CategoryTheory.Abelian.app"
  },
  {
    "snakecase": "prod",
    "camelcase": "Prod"
  },
  {
    "snakecase": "simplex_category",
    "camelcase": "SimplexCategory"
  },
  {
    "snakecase": "category_theory.limits.colimit_cocone",
    "camelcase": "CategoryTheory.Limits.ColimitCocone"
  },
  {
    "snakecase": "set.range",
    "camelcase": "Set.Range"
  },
  {
    "snakecase": "category_theory.limits.coproducts_disjoint",
    "camelcase": "CategoryTheory.Limits.CoproductsDisjoint"
  },
  {
    "snakecase": "generalized_continued_fraction.pair",
    "camelcase": "GeneralizedContinuedFraction.Pair"
  },
  {
    "snakecase": "units.mk",
    "camelcase": "Units.mk"
  },
  {
    "snakecase": "subadditive",
    "camelcase": "Subadditive"
  },
  {
    "snakecase": "localization",
    "camelcase": "IsLocalization"
  },
  {
    "snakecase": "right_cancel_semigroup",
    "camelcase": "RightCancelSemigroup"
  },
  {
    "snakecase": "clifford_algebra.reverse",
    "camelcase": "CliffordAlgebra.reverse"
  },
  {
    "snakecase": "subgroup_class",
    "camelcase": "SubgroupClass"
  },
  {
    "snakecase": "order.ideal",
    "camelcase": "Order.Ideal"
  },
  {
    "snakecase": "category_theory.sieve.generate",
    "camelcase": "CategoryTheory.Sieve.generate"
  },
  {
    "snakecase": "polish_space.is_clopenable",
    "camelcase": "PolishSpace.IsClopenable"
  },
  {
    "snakecase": "quiver",
    "camelcase": "Quiver"
  },
  {
    "snakecase": "affine.triangle",
    "camelcase": "Affine.Triangle"
  },
  {
    "snakecase": "has_fpower_series_on_ball",
    "camelcase": "HasFpowerSeriesOnBall"
  },
  {
    "snakecase": "mul_one_class",
    "camelcase": "MulOneClass"
  },
  {
    "snakecase": "multiset.map",
    "camelcase": "Multiset.map"
  },
  {
    "snakecase": "fintype.card",
    "camelcase": "Fintype.card"
  },
  {
    "snakecase": "inseparable",
    "camelcase": "Inseparable"
  },
  {
    "snakecase": "mv_polynomial.aeval",
    "camelcase": "MvPolynomial.aeval"
  },
  {
    "snakecase": "is_add_regular",
    "camelcase": "IsAddRegular"
  },
  {
    "snakecase": "dense",
    "camelcase": "Dense"
  },
  {
    "snakecase": "lower_semicontinuous_within_at",
    "camelcase": "LowerSemicontinuousWithinAt"
  },
  {
    "snakecase": "empty_relation",
    "camelcase": "EmptyRelation"
  },
  {
    "snakecase": "category_theory.limits.has_product",
    "camelcase": "CategoryTheory.Limits.HasProduct"
  },
  {
    "snakecase": "category_theory.limits.has_colimits",
    "camelcase": "CategoryTheory.Limits.HasColimits"
  },
  {
    "snakecase": "is_trivial_topological_fiber_bundle",
    "camelcase": "IsTrivialTopologicalFiberBundle"
  },
  {
    "snakecase": "lt",
    "camelcase": "LT"
  },
  {
    "snakecase": "topological_space.open_nhds",
    "camelcase": "TopologicalSpace.OpenNhds"
  },
  {
    "snakecase": "opposite.op",
    "camelcase": "Opposite.op"
  },
  {
    "snakecase": "list.Ico",
    "camelcase": "List.ico"
  },
  {
    "snakecase": "has_subset",
    "camelcase": "HasSubset"
  },
  {
    "snakecase": "function.const",
    "camelcase": "Function.const"
  },
  {
    "snakecase": "is_top",
    "camelcase": "IsTop"
  },
  {
    "snakecase": "monotone_on",
    "camelcase": "MonotoneOn"
  },
  {
    "snakecase": "topological_space.opens.map",
    "camelcase": "TopologicalSpace.Opens.map"
  },
  {
    "snakecase": "tensor_product.lid",
    "camelcase": "TensorProduct.lid"
  },
  {
    "snakecase": "subsemigroup",
    "camelcase": "Subsemigroup"
  },
  {
    "snakecase": "category_theory.SheafOfTypes",
    "camelcase": "CategoryTheory.SheafOfTypes"
  },
  {
    "snakecase": "is_directed",
    "camelcase": "Directed"
  },
  {
    "snakecase": "polynomial.lifts",
    "camelcase": "Polynomial.lifts"
  },
  {
    "snakecase": "perfection_map",
    "camelcase": "PerfectionMap"
  },
  {
    "snakecase": "complex.cos",
    "camelcase": "Complex.cos"
  },
  {
    "snakecase": "prod.rprod",
    "camelcase": "Prod.Rprod"
  },
  {
    "snakecase": "fact",
    "camelcase": "Fact"
  },
  {
    "snakecase": "category_theory.limits.preserves_limit",
    "camelcase": "CategoryTheory.Limits.PreservesLimit"
  },
  {
    "snakecase": "finsupp",
    "camelcase": "Finsupp"
  },
  {
    "snakecase": "mdifferentiable_within_at",
    "camelcase": "MdifferentiableWithinAt"
  },
  {
    "snakecase": "is_monoid_hom",
    "camelcase": "IsMonoidHom"
  },
  {
    "snakecase": "normed_comm_ring",
    "camelcase": "NormedCommRing"
  },
  {
    "snakecase": "convex_on",
    "camelcase": "ConvexOn"
  },
  {
    "snakecase": "is_fraction_ring.lift",
    "camelcase": "IsFractionRing.lift"
  },
  {
    "snakecase": "is_free_groupoid.generators",
    "camelcase": "IsFreeGroupoid.Generators"
  },
  {
    "snakecase": "lower_adjoint",
    "camelcase": "LowerAdjoint"
  },
  {
    "snakecase": "real.arsinh",
    "camelcase": "Real.arsinh"
  },
  {
    "snakecase": "nat.lt",
    "camelcase": "Nat.Lt"
  },
  {
    "snakecase": "omega_complete_partial_order.continuous",
    "camelcase": "OmegaCompletePartialOrder.Continuous"
  },
  {
    "snakecase": "jordan_holder_lattice",
    "camelcase": "JordanHolderLattice"
  },
  {
    "snakecase": "tendsto_locally_uniformly_on",
    "camelcase": "TendstoLocallyUniformlyOn"
  },
  {
    "snakecase": "filter.cocompact",
    "camelcase": "Filter.cocompact"
  },
  {
    "snakecase": "category_theory.strong_mono",
    "camelcase": "CategoryTheory.StrongMono"
  },
  {
    "snakecase": "category_theory.limits.coequalizer.",
    "camelcase": "CategoryTheory.Limits.coequalizer"
  },
  {
    "snakecase": "finset.falling",
    "camelcase": "Finset.falling"
  },
  {
    "snakecase": "rack.envel_group",
    "camelcase": "Rack.EnvelGroup"
  },
  {
    "snakecase": "strict_convex",
    "camelcase": "StrictConvex"
  },
  {
    "snakecase": "real.log",
    "camelcase": "Real.log"
  },
  {
    "snakecase": "category_theory.regular_mono",
    "camelcase": "CategoryTheory.RegularMono"
  },
  {
    "snakecase": "is_invariant",
    "camelcase": "IsInvariant"
  },
  {
    "snakecase": "hmul",
    "camelcase": "HMul"
  },
  {
    "snakecase": "category_theory.limits.mono_factorisation",
    "camelcase": "CategoryTheory.Limits.MonoFactorisation"
  },
  {
    "snakecase": "add_equiv_class.inv",
    "camelcase": "AddEquivClass.inv"
  },
  {
    "snakecase": "category_theory.normal_mono_category",
    "camelcase": "CategoryTheory.NormalMonoCategory"
  },
  {
    "snakecase": "category_theory.ProjectiveResolution.lift",
    "camelcase": "CategoryTheory.ProjectiveResolution.lift"
  },
  {
    "snakecase": "category_theory.simple",
    "camelcase": "CategoryTheory.Simple"
  },
  {
    "snakecase": "star_add_monoid",
    "camelcase": "StarAddMonoid"
  },
  {
    "snakecase": "finite",
    "camelcase": "Finite"
  },
  {
    "snakecase": "algebraic_geometry.structure_sheaf.comap",
    "camelcase": "AlgebraicGeometry.StructureSheaf.comap"
  },
  {
    "snakecase": "category_theory.limits.has_pushouts",
    "camelcase": "CategoryTheory.Limits.HasPushouts"
  },
  {
    "snakecase": "is_separable",
    "camelcase": "IsSeparable"
  },
  {
    "snakecase": "function.swap",
    "camelcase": "Function.swap"
  },
  {
    "snakecase": "category_theory.limits.walking_cospan.one",
    "camelcase": "CategoryTheory.Limits.WalkingCospan.one"
  },
  {
    "snakecase": "free_group.mk",
    "camelcase": "IsFreeGroup.mk"
  },
  {
    "snakecase": "is_alg_closed",
    "camelcase": "IsAlgClosed"
  },
  {
    "snakecase": "indexed_partition",
    "camelcase": "IndexedPartition"
  },
  {
    "snakecase": "linear_map.trace",
    "camelcase": "LinearMap.trace"
  },
  {
    "snakecase": "symmetric_rel",
    "camelcase": "SymmetricRel"
  },
  {
    "snakecase": "pos_tangent_cone_at",
    "camelcase": "PosTangentConeAt"
  },
  {
    "snakecase": "basis.mk",
    "camelcase": "Basis.mk"
  },
  {
    "snakecase": "subsingleton",
    "camelcase": "Subsingleton"
  },
  {
    "snakecase": "set.eq_on",
    "camelcase": "Set.EqOn"
  },
  {
    "snakecase": "continuous_linear_map.inverse",
    "camelcase": "ContinuousLinearMap.inverse"
  },
  {
    "snakecase": "quot.mk",
    "camelcase": "Quot.mk"
  },
  {
    "snakecase": "filter",
    "camelcase": "Filter"
  },
  {
    "snakecase": "submodule.map",
    "camelcase": "Submodule.map"
  },
  {
    "snakecase": "structure_groupoid.maximal_atlas",
    "camelcase": "StructureGroupoid.MaximalAtlas"
  },
  {
    "snakecase": "universal_enveloping_algebra.",
    "camelcase": "UniversalEnvelopingAlgebra"
  },
  {
    "snakecase": "finsupp.supported",
    "camelcase": "Finsupp.supported"
  },
  {
    "snakecase": "normed_group.core",
    "camelcase": "NormedGroup.Core"
  },
  {
    "snakecase": "lipschitz_with",
    "camelcase": "LipschitzWith"
  },
  {
    "snakecase": "is_idempotent",
    "camelcase": "IsIdempotent"
  },
  {
    "snakecase": "category_theory.retraction",
    "camelcase": "CategoryTheory.retraction"
  },
  {
    "snakecase": "function.surjective",
    "camelcase": "Function.Surjective"
  },
  {
    "snakecase": "subgroup.center",
    "camelcase": "Subgroup.center"
  },
  {
    "snakecase": "conditionally_complete_linear_order",
    "camelcase": "ConditionallyCompleteLinearOrder"
  },
  {
    "snakecase": "is_local_extr",
    "camelcase": "IsLocalExtr"
  },
  {
    "snakecase": "formal_multilinear_series.id",
    "camelcase": "FormalMultilinearSeries.id"
  },
  {
    "snakecase": "add_subgroup_class",
    "camelcase": "AddSubgroupClass"
  },
  {
    "snakecase": "is_atom",
    "camelcase": "IsAtom"
  },
  {
    "snakecase": "category_theory.has_shift",
    "camelcase": "CategoryTheory.HasShift"
  },
  {
    "snakecase": "nat.sqrt",
    "camelcase": "Nat.sqrt"
  },
  {
    "snakecase": "compact_Icc_space",
    "camelcase": "CompactIccSpace"
  },
  {
    "snakecase": "linear_ordered_add_comm_monoid",
    "camelcase": "LinearOrderedAddCommMonoid"
  },
  {
    "snakecase": "topological_space",
    "camelcase": "TopologicalSpace"
  },
  {
    "snakecase": "category_theory.costructured_arrow",
    "camelcase": "CategoryTheory.CostructuredArrow"
  },
  {
    "snakecase": "topological_space.pseudo_metrizable_space",
    "camelcase": "TopologicalSpace.PseudoMetrizableSpace"
  },
  {
    "snakecase": "category_theory.limits.pullback.snd",
    "camelcase": "CategoryTheory.Limits.pullback.snd"
  },
  {
    "snakecase": "subspace",
    "camelcase": "Subspace"
  },
  {
    "snakecase": "multiset.nat.antidiagonal",
    "camelcase": "Multiset.Nat.antidiagonal"
  },
  {
    "snakecase": "measure_theory.is_stopping_time",
    "camelcase": "MeasureTheory.IsStoppingTime"
  },
  {
    "snakecase": "complex.im",
    "camelcase": "Complex.im"
  },
  {
    "snakecase": "finset.range",
    "camelcase": "Finset.range"
  },
  {
    "snakecase": "con.comap",
    "camelcase": "Con.comap"
  },
  {
    "snakecase": "has_ftaylor_series_up_to_on",
    "camelcase": "HasFtaylorSeriesUpToOn"
  },
  {
    "snakecase": "complex_shape",
    "camelcase": "ComplexShape"
  },
  {
    "snakecase": "category_theory.limits.walking_multispan.right",
    "camelcase": "CategoryTheory.Limits.WalkingMultispan.right"
  },
  {
    "snakecase": "modular_group.T",
    "camelcase": "ModularGroup.t"
  },
  {
    "snakecase": "quaternion_algebra",
    "camelcase": "QuaternionAlgebra"
  },
  {
    "snakecase": "add",
    "camelcase": "Add"
  },
  {
    "snakecase": "ne_zero",
    "camelcase": "NeZero"
  },
  {
    "snakecase": "category_theory.limits.types.filtered_colimit.rel",
    "camelcase": "CategoryTheory.Limits.Types.FilteredColimit.Rel"
  },
  {
    "snakecase": "set.univ",
    "camelcase": "Set.univ"
  },
  {
    "snakecase": "multiset",
    "camelcase": "Multiset"
  },
  {
    "snakecase": "complex.I",
    "camelcase": "Complex.i"
  },
  {
    "snakecase": "generalized_continued_fraction.convergents",
    "camelcase": "GeneralizedContinuedFraction.convergents"
  },
  {
    "snakecase": "category_theory.limits.has_coproducts",
    "camelcase": "CategoryTheory.Limits.HasCoproducts"
  },
  {
    "snakecase": "turing.to_partrec.code",
    "camelcase": "Turing.ToPartrec.Code"
  },
  {
    "snakecase": "fintype.elems",
    "camelcase": "Fintype.elems"
  },
  {
    "snakecase": "category_theory.limits.pullback.fst",
    "camelcase": "CategoryTheory.Limits.pullback.fst"
  },
  {
    "snakecase": "tropical",
    "camelcase": "Tropical"
  },
  {
    "snakecase": "category_theory.limits.reflects_limit",
    "camelcase": "CategoryTheory.Limits.ReflectsLimit"
  },
  {
    "snakecase": "subfield",
    "camelcase": "IsSubfield"
  },
  {
    "snakecase": "measure_theory.strongly_measurable",
    "camelcase": "MeasureTheory.StronglyMeasurable"
  },
  {
    "snakecase": "representation",
    "camelcase": "Representation"
  },
  {
    "snakecase": "is_bounded_bilinear_map",
    "camelcase": "IsBoundedBilinearMap"
  },
  {
    "snakecase": "lie_ideal.map",
    "camelcase": "LieIdeal.map"
  },
  {
    "snakecase": "path_connected_space",
    "camelcase": "PathConnectedSpace"
  },
  {
    "snakecase": "add_valuation",
    "camelcase": "AddValuation"
  },
  {
    "snakecase": "category_theory.limits.has_colimits_of_size",
    "camelcase": "CategoryTheory.Limits.HasColimitsOfSize"
  },
  {
    "snakecase": "is_right_regular",
    "camelcase": "IsRightRegular"
  },
  {
    "snakecase": "category_theory.limits.has_wide_equalizers",
    "camelcase": "CategoryTheory.Limits.HasWideEqualizers"
  },
  {
    "snakecase": "contravariant_class",
    "camelcase": "ContravariantClass"
  },
  {
    "snakecase": "span_points",
    "camelcase": "SpanPoints"
  },
  {
    "snakecase": "irreflexive",
    "camelcase": "Irreflexive"
  },
  {
    "snakecase": "Gromov_Hausdorff.HD",
    "camelcase": "GromovHausdorff.hD"
  },
  {
    "snakecase": "region_between",
    "camelcase": "RegionBetween"
  },
  {
    "snakecase": "real.cos",
    "camelcase": "Real.cos"
  },
  {
    "snakecase": "nat.partrec.code",
    "camelcase": "Nat.Partrec.Code"
  },
  {
    "snakecase": "option.elim",
    "camelcase": "Option.elim"
  },
  {
    "snakecase": "zero_at_infty_continuous_map",
    "camelcase": "ZeroAtInftyContinuousMap"
  },
  {
    "snakecase": "fraction_ring",
    "camelcase": "IsFractionRing"
  },
  {
    "snakecase": "category_theory.subobject",
    "camelcase": "CategoryTheory.Subobject"
  },
  {
    "snakecase": "cont_diff",
    "camelcase": "ContDiff"
  },
  {
    "snakecase": "category_theory.limits.has_limits",
    "camelcase": "CategoryTheory.Limits.HasLimits"
  },
  {
    "snakecase": "set.bij_on",
    "camelcase": "Set.BijOn"
  },
  {
    "snakecase": "category_theory.indecomposable",
    "camelcase": "CategoryTheory.Indecomposable"
  },
  {
    "snakecase": "left_cancel_monoid",
    "camelcase": "LeftCancelMonoid"
  },
  {
    "snakecase": "small",
    "camelcase": "Small"
  },
  {
    "snakecase": "is_separated",
    "camelcase": "IsSeparated"
  },
  {
    "snakecase": "append",
    "camelcase": "Append"
  },
  {
    "snakecase": "sum.inl",
    "camelcase": "Sum.inl"
  },
  {
    "snakecase": "upper_semicontinuous_on",
    "camelcase": "UpperSemicontinuousOn"
  },
  {
    "snakecase": "measure_theory.measure_space",
    "camelcase": "MeasureTheory.MeasureSpace"
  },
  {
    "snakecase": "nat.nth",
    "camelcase": "Nat.nth"
  },
  {
    "snakecase": "mul_aut.conj",
    "camelcase": "MulAut.conj"
  },
  {
    "snakecase": "classical.choice",
    "camelcase": "Classical.choice"
  },
  {
    "snakecase": "continued_fraction",
    "camelcase": "ContinuedFraction"
  },
  {
    "snakecase": "category_theory.is_idempotent_complete",
    "camelcase": "CategoryTheory.IsIdempotentComplete"
  },
  {
    "snakecase": "opens.pretopology",
    "camelcase": "Opens.pretopology"
  },
  {
    "snakecase": "ordinal.is_normal",
    "camelcase": "Ordinal.IsNormal"
  },
  {
    "snakecase": "category_theory.comonad",
    "camelcase": "CategoryTheory.Comonad"
  },
  {
    "snakecase": "filter.principal",
    "camelcase": "Filter.principal"
  },
  {
    "snakecase": "turing.list_blank.cons",
    "camelcase": "Turing.ListBlank.cons"
  },
  {
    "snakecase": "tangent_space",
    "camelcase": "TangentSpace"
  },
  {
    "snakecase": "generalized_boolean_algebra",
    "camelcase": "GeneralizedBooleanAlgebra"
  },
  {
    "snakecase": "submodule",
    "camelcase": "Submodule"
  },
  {
    "snakecase": "language.map",
    "camelcase": "Language.map"
  },
  {
    "snakecase": "sequential_space",
    "camelcase": "SequentialSpace"
  },
  {
    "snakecase": "dense_range",
    "camelcase": "DenseRange"
  },
  {
    "snakecase": "category_theory.limits.colimit",
    "camelcase": "CategoryTheory.Limits.IsColimit"
  },
  {
    "snakecase": "rack",
    "camelcase": "Rack"
  },
  {
    "snakecase": "category_theory.limits.has_cokernel",
    "camelcase": "CategoryTheory.Limits.HasCokernel"
  },
  {
    "snakecase": "category_theory.limits.strong_epi_mono_factorisation",
    "camelcase": "CategoryTheory.Limits.StrongEpiMonoFactorisation"
  },
  {
    "snakecase": "is_separated",
    "camelcase": "Separated"
  },
  {
    "snakecase": "category_theory.limits.colimit.pre",
    "camelcase": "CategoryTheory.Limits.colimit.pre"
  },
  {
    "snakecase": "division_comm_monoid",
    "camelcase": "DivisionCommMonoid"
  },
  {
    "snakecase": "linear_map.range",
    "camelcase": "LinearMap.range"
  },
  {
    "snakecase": "category_theory.limits.has_pushout",
    "camelcase": "CategoryTheory.Limits.HasPushout"
  },
  {
    "snakecase": "topological_fiber_bundle.trivialization",
    "camelcase": "TopologicalFiberBundle.Trivialization"
  },
  {
    "snakecase": "category_theory.limits.biprod.inl",
    "camelcase": "CategoryTheory.Limits.biprod.inl"
  },
  {
    "snakecase": "continuous_map.compact_open.gen",
    "camelcase": "ContinuousMap.CompactOpen.Gen"
  },
  {
    "snakecase": "witt_vector.map",
    "camelcase": "WittVector.map"
  },
  {
    "snakecase": "antisymm_rel",
    "camelcase": "AntisymmRel"
  },
  {
    "snakecase": "measurable_space.dynkin_system.generate",
    "camelcase": "MeasurableSpace.DynkinSystem.generate"
  },
  {
    "snakecase": "category_theory.limits.prod.snd",
    "camelcase": "CategoryTheory.Limits.prod.snd"
  },
  {
    "snakecase": "power_series.monomial",
    "camelcase": "PowerSeries.monomial"
  },
  {
    "snakecase": "category_theory.limits.has_cokernels",
    "camelcase": "CategoryTheory.Limits.HasCokernels"
  },
  {
    "snakecase": "category_theory.presieve.is_sheaf_for",
    "camelcase": "CategoryTheory.Presieve.IsSheafFor"
  },
  {
    "snakecase": "prod.fst",
    "camelcase": "Prod.fst"
  },
  {
    "snakecase": "linear_map.inr",
    "camelcase": "LinearMap.inr"
  },
  {
    "snakecase": "is_free_group",
    "camelcase": "FreeGroup"
  },
  {
    "snakecase": "is_commutative",
    "camelcase": "commutative"
  },
  {
    "snakecase": "category_theory.limits.limit",
    "camelcase": "CategoryTheory.Limits.limit"
  },
  {
    "snakecase": "comm_group_with_zero",
    "camelcase": "CommGroupWithZero"
  },
  {
    "snakecase": "affine_subspace.mk",
    "camelcase": "AffineSubspace.mk"
  },
  {
    "snakecase": "has_continuous_mul",
    "camelcase": "HasContinuousMul"
  },
  {
    "snakecase": "dfinsupp",
    "camelcase": "Dfinsupp"
  },
  {
    "snakecase": "add_subgroup.pi",
    "camelcase": "AddSubgroup.pi"
  },
  {
    "snakecase": "subring",
    "camelcase": "Subring"
  },
  {
    "snakecase": "category_theory.grothendieck_topology",
    "camelcase": "CategoryTheory.GrothendieckTopology"
  },
  {
    "snakecase": "category_theory.category",
    "camelcase": "CategoryTheory.Category"
  },
  {
    "snakecase": "smul_with_zero",
    "camelcase": "SmulWithZero"
  },
  {
    "snakecase": "is_field",
    "camelcase": "Field"
  },
  {
    "snakecase": "algebra.trace",
    "camelcase": "Algebra.trace"
  },
  {
    "snakecase": "Top.local_predicate",
    "camelcase": "Top.LocalPredicate"
  },
  {
    "snakecase": "is_localization.mk",
    "camelcase": "IsLocalization.mk"
  },
  {
    "snakecase": "lie_submodule",
    "camelcase": "LieSubmodule"
  },
  {
    "snakecase": "category_theory.limits.lim",
    "camelcase": "CategoryTheory.Limits.lim"
  },
  {
    "snakecase": "is_free_groupoid",
    "camelcase": "IsFreeGroupoid"
  },
  {
    "snakecase": "liouville_with",
    "camelcase": "LiouvilleWith"
  },
  {
    "snakecase": "pythagorean_triple",
    "camelcase": "PythagoreanTriple"
  },
  {
    "snakecase": "is_linear_order",
    "camelcase": "LinearOrder"
  },
  {
    "snakecase": "hindman.FP",
    "camelcase": "Hindman.FP"
  },
  {
    "snakecase": "joined_in",
    "camelcase": "JoinedIn"
  },
  {
    "snakecase": "is_partial_order",
    "camelcase": "PartialOrder"
  },
  {
    "snakecase": "ordering",
    "camelcase": "Ordering"
  },
  {
    "snakecase": "unitization.inl",
    "camelcase": "Unitization.inl"
  },
  {
    "snakecase": "direct_sum",
    "camelcase": "DirectSum"
  },
  {
    "snakecase": "euclidean_space",
    "camelcase": "EuclideanSpace"
  },
  {
    "snakecase": "ideal.map",
    "camelcase": "Ideal.map"
  },
  {
    "snakecase": "set_of",
    "camelcase": "SetOf"
  },
  {
    "snakecase": "smooth",
    "camelcase": "Smooth"
  },
  {
    "snakecase": "category_theory.limits.is_image",
    "camelcase": "CategoryTheory.Limits.image"
  },
  {
    "snakecase": "fderiv_measurable_aux.D",
    "camelcase": "FderivMeasurableAux.D"
  },
  {
    "snakecase": "has_nndist.nndist",
    "camelcase": "HasNndist.nndist"
  },
  {
    "snakecase": "linear_map.inl",
    "camelcase": "LinearMap.inl"
  },
  {
    "snakecase": "category_theory.limits.has_equalizers",
    "camelcase": "CategoryTheory.Limits.HasEqualizers"
  },
  {
    "snakecase": "complete_lattice",
    "camelcase": "CompleteLattice"
  },
  {
    "snakecase": "function.injective",
    "camelcase": "Function.injective"
  },
  {
    "snakecase": "derangements.equiv.remove_none.fiber",
    "camelcase": "Derangements.Equiv.RemoveNone.Fiber"
  },
  {
    "snakecase": "is_coatom",
    "camelcase": "IsCoatom"
  },
  {
    "snakecase": "is_dedekind_domain",
    "camelcase": "IsDedekindDomain"
  },
  {
    "snakecase": "add_comm_monoid",
    "camelcase": "AddCommMonoid"
  },
  {
    "snakecase": "triv_sq_zero_ext.snd",
    "camelcase": "TrivSqZeroExt.snd"
  },
  {
    "snakecase": "exterior_algebra.",
    "camelcase": "ExteriorAlgebra"
  },
  {
    "snakecase": "jordan_holder_lattice.is_maximal",
    "camelcase": "JordanHolderLattice.IsMaximal"
  },
  {
    "snakecase": "basis",
    "camelcase": "Basis"
  },
  {
    "snakecase": "mul_opposite.unop",
    "camelcase": "MulOpposite.unop"
  },
  {
    "snakecase": "mv_polynomial.expand",
    "camelcase": "MvPolynomial.expand"
  },
  {
    "snakecase": "witt_vector.isocrystal",
    "camelcase": "WittVector.Isocrystal"
  },
  {
    "snakecase": "category_theory.enough_projectives",
    "camelcase": "CategoryTheory.EnoughProjectives"
  },
  {
    "snakecase": "Top.presheaf.is_sheaf",
    "camelcase": "Top.Presheaf.IsSheaf"
  },
  {
    "snakecase": "nat.upto.gt",
    "camelcase": "Nat.Upto.Gt"
  },
  {
    "snakecase": "finset.nat.antidiagonal",
    "camelcase": "Finset.Nat.antidiagonal"
  },
  {
    "snakecase": "category_theory.limits.has_limit",
    "camelcase": "CategoryTheory.Limits.HasLimit"
  },
  {
    "snakecase": "intermediate_field",
    "camelcase": "IntermediateField"
  },
  {
    "snakecase": "polynomial.splits",
    "camelcase": "Polynomial.Splits"
  },
  {
    "snakecase": "tendsto_locally_uniformly",
    "camelcase": "TendstoLocallyUniformly"
  },
  {
    "snakecase": "is_totally_disconnected",
    "camelcase": "IsTotallyDisconnected"
  },
  {
    "snakecase": "lie_ring",
    "camelcase": "LieRing"
  },
  {
    "snakecase": "mvqpf",
    "camelcase": "Mvqpf"
  },
  {
    "snakecase": "galois_connection",
    "camelcase": "GaloisConnection"
  },
  {
    "snakecase": "pmf.pure",
    "camelcase": "Pmf.pure"
  },
  {
    "snakecase": "metric.diam",
    "camelcase": "Metric.diam"
  },
  {
    "snakecase": "set.inv_on",
    "camelcase": "Set.InvOn"
  },
  {
    "snakecase": "category_theory.limits.cone.whisker",
    "camelcase": "CategoryTheory.Limits.Cone.whisker"
  },
  {
    "snakecase": "relation.game_add",
    "camelcase": "Relation.GameAdd"
  },
  {
    "snakecase": "category_theory.limits.biprod.desc",
    "camelcase": "CategoryTheory.Limits.biprod.desc"
  },
  {
    "snakecase": "uv.is_compressed",
    "camelcase": "Uv.IsCompressed"
  },
  {
    "snakecase": "multiples",
    "camelcase": "Multiples"
  },
  {
    "snakecase": "category_theory.sieve.pullback",
    "camelcase": "CategoryTheory.Sieve.pullback"
  },
  {
    "snakecase": "category_theory.linear",
    "camelcase": "CategoryTheory.Linear"
  },
  {
    "snakecase": "category_theory.limits.pushout.inr",
    "camelcase": "CategoryTheory.Limits.pushout.inr"
  },
  {
    "snakecase": "topological_semiring",
    "camelcase": "TopologicalSemiring"
  },
  {
    "snakecase": "ring.inverse",
    "camelcase": "Ring.inverse"
  },
  {
    "snakecase": "con",
    "camelcase": "Con"
  },
  {
    "snakecase": "cluster_pt",
    "camelcase": "ClusterPt"
  },
  {
    "snakecase": "is_least",
    "camelcase": "IsLeast"
  },
  {
    "snakecase": "list.range",
    "camelcase": "List.range"
  },
  {
    "snakecase": "function.embedding.inr",
    "camelcase": "Function.Embedding.inr"
  },
  {
    "snakecase": "category_theory.limits.has_kernel",
    "camelcase": "CategoryTheory.Limits.HasKernel"
  },
  {
    "snakecase": "strong_rank_condition",
    "camelcase": "StrongRankCondition"
  },
  {
    "snakecase": "matrix.special_linear_group",
    "camelcase": "Matrix.SpecialLinearGroup"
  },
  {
    "snakecase": "category_theory.limits.has_finite_products",
    "camelcase": "CategoryTheory.Limits.HasFiniteProducts"
  },
  {
    "snakecase": "category_theory.limits.cofork",
    "camelcase": "CategoryTheory.Limits.Cofork"
  },
  {
    "snakecase": "set.Ico",
    "camelcase": "Set.Ico"
  },
  {
    "snakecase": "char_zero",
    "camelcase": "CharZero"
  },
  {
    "snakecase": "is_associative",
    "camelcase": "Associative"
  },
  {
    "snakecase": "monoid_with_zero",
    "camelcase": "MonoidWithZero"
  },
  {
    "snakecase": "intermediate_field.adjoin",
    "camelcase": "IntermediateField.adjoin"
  },
  {
    "snakecase": "finsupp.sum",
    "camelcase": "Finsupp.sum"
  },
  {
    "snakecase": "comm_semiring",
    "camelcase": "CommSemiring"
  },
  {
    "snakecase": "dense_embedding",
    "camelcase": "DenseEmbedding"
  },
  {
    "snakecase": "cauchy",
    "camelcase": "Cauchy"
  },
  {
    "snakecase": "nat.count",
    "camelcase": "Nat.count"
  },
  {
    "snakecase": "comm_semigroup",
    "camelcase": "CommSemigroup"
  },
  {
    "snakecase": "tensor_product",
    "camelcase": "TensorProduct"
  },
  {
    "snakecase": "is_antisymm",
    "camelcase": "antisymm"
  },
  {
    "snakecase": "function.involutive",
    "camelcase": "Function.Involutive"
  },
  {
    "snakecase": "Top.presheaf.presieve_of_covering",
    "camelcase": "Top.Presheaf.PresieveOfCovering"
  },
  {
    "snakecase": "inhabited",
    "camelcase": "Inhabited"
  },
  {
    "snakecase": "smul_comm_class",
    "camelcase": "SmulCommClass"
  },
  {
    "snakecase": "comm_group",
    "camelcase": "CommGroup"
  },
  {
    "snakecase": "affine.simplex.points_with_circumcenter_index.circumcenter_index",
    "camelcase": "Affine.Simplex.PointsWithCircumcenterIndex.circumcenter_index"
  },
  {
    "snakecase": "is_seq_compact",
    "camelcase": "IsSeqCompact"
  },
  {
    "snakecase": "category_theory.limits.walking_pair.right",
    "camelcase": "CategoryTheory.Limits.WalkingPair.right"
  },
  {
    "snakecase": "category_theory.limits.coprod.braiding",
    "camelcase": "CategoryTheory.Limits.coprod.braiding"
  },
  {
    "snakecase": "irrational",
    "camelcase": "Irrational"
  },
  {
    "snakecase": "MOD",
    "camelcase": "Mod"
  },
  {
    "snakecase": "category_theory.limits.pair",
    "camelcase": "CategoryTheory.Limits.pair"
  },
  {
    "snakecase": "category_theory.inv",
    "camelcase": "CategoryTheory.inv"
  },
  {
    "snakecase": "finsupp.single",
    "camelcase": "Finsupp.single"
  },
  {
    "snakecase": "nonempty",
    "camelcase": "Nonempty"
  },
  {
    "snakecase": "module.rank",
    "camelcase": "Module.rank"
  },
  {
    "snakecase": "quiver.path",
    "camelcase": "Quiver.Path"
  },
  {
    "snakecase": "category_theory.coyoneda",
    "camelcase": "CategoryTheory.coyoneda"
  },
  {
    "snakecase": "polynomial.is_splitting_field",
    "camelcase": "Polynomial.SplittingField"
  },
  {
    "snakecase": "is_total",
    "camelcase": "IsTotal"
  },
  {
    "snakecase": "derivation",
    "camelcase": "Derivation"
  },
  {
    "snakecase": "continuous_on",
    "camelcase": "ContinuousOn"
  },
  {
    "snakecase": "is_pi_system",
    "camelcase": "IsPiSystem"
  },
  {
    "snakecase": "nnreal",
    "camelcase": "Nnreal"
  },
  {
    "snakecase": "submonoid.closure",
    "camelcase": "Submonoid.closure"
  },
  {
    "snakecase": "ennreal",
    "camelcase": "Ennreal"
  },
  {
    "snakecase": "set.Ici",
    "camelcase": "Set.Ici"
  },
  {
    "snakecase": "category_theory.creates_colimits_of_shape",
    "camelcase": "CategoryTheory.CreatesColimitsOfShape"
  },
  {
    "snakecase": "is_adic",
    "camelcase": "IsAdic"
  },
  {
    "snakecase": "category_theory.hom_orthogonal",
    "camelcase": "CategoryTheory.HomOrthogonal"
  },
  {
    "snakecase": "ordinal.log",
    "camelcase": "Ordinal.log"
  },
  {
    "snakecase": "measure_theory.filtration",
    "camelcase": "MeasureTheory.Filtration"
  },
  {
    "snakecase": "category_theory.abelian.coimage.",
    "camelcase": "CategoryTheory.Abelian.coimage"
  },
  {
    "snakecase": "is_equiv",
    "camelcase": "IsEquiv"
  },
  {
    "snakecase": "preorder",
    "camelcase": "IsPreorder"
  },
  {
    "snakecase": "is_antisymm",
    "camelcase": "IsAntisymm"
  },
  {
    "snakecase": "odd",
    "camelcase": "Odd"
  },
  {
    "snakecase": "has_mfderiv_at",
    "camelcase": "HasMfderivAt"
  },
  {
    "snakecase": "galois_insertion",
    "camelcase": "GaloisInsertion"
  },
  {
    "snakecase": "witt_vector.truncate",
    "camelcase": "WittVector.truncate"
  },
  {
    "snakecase": "direct_sum.mk",
    "camelcase": "DirectSum.mk"
  },
  {
    "snakecase": "has_exists_add_of_le",
    "camelcase": "HasExistsAddOfLe"
  },
  {
    "snakecase": "bounded_continuous_function",
    "camelcase": "BoundedContinuousFunction"
  },
  {
    "snakecase": "charted_space",
    "camelcase": "ChartedSpace"
  },
  {
    "snakecase": "mvpfunctor",
    "camelcase": "Mvpfunctor"
  },
  {
    "snakecase": "function.fixed_points",
    "camelcase": "Function.FixedPoints"
  },
  {
    "snakecase": "affine_map.id",
    "camelcase": "AffineMap.id"
  },
  {
    "snakecase": "cont_diff_on",
    "camelcase": "ContDiffOn"
  },
  {
    "snakecase": "convex_cone",
    "camelcase": "ConvexCone"
  },
  {
    "snakecase": "lattice",
    "camelcase": "Lattice"
  },
  {
    "snakecase": "category_theory.abelian.pseudo_equal",
    "camelcase": "CategoryTheory.Abelian.PseudoEqual"
  },
  {
    "snakecase": "tendsto_uniformly_on",
    "camelcase": "TendstoUniformlyOn"
  },
  {
    "snakecase": "mul_mem_class",
    "camelcase": "MulMemClass"
  },
  {
    "snakecase": "list",
    "camelcase": "List"
  },
  {
    "snakecase": "linear_map.det",
    "camelcase": "LinearMap.det"
  },
  {
    "snakecase": "group_algebra.average",
    "camelcase": "GroupAlgebra.average"
  },
  {
    "snakecase": "ratfunc.eval",
    "camelcase": "Ratfunc.eval"
  },
  {
    "snakecase": "le",
    "camelcase": "LE"
  },
  {
    "snakecase": "category_theory.is_cofiltered",
    "camelcase": "CategoryTheory.IsCofiltered"
  },
  {
    "snakecase": "Mon",
    "camelcase": "Mon_"
  },
  {
    "snakecase": "relation.trans_gen",
    "camelcase": "Relation.TransGen"
  },
  {
    "snakecase": "differentiable_at",
    "camelcase": "DifferentiableAt"
  },
  {
    "snakecase": "finsupp.cons",
    "camelcase": "Finsupp.cons"
  },
  {
    "snakecase": "add_subgroup",
    "camelcase": "AddSubgroup"
  },
  {
    "snakecase": "category_theory.limits.pi.lift",
    "camelcase": "CategoryTheory.Limits.Pi.lift"
  },
  {
    "snakecase": "has_ssubset",
    "camelcase": "HasSsubset"
  },
  {
    "snakecase": "category_theory.yoneda",
    "camelcase": "CategoryTheory.yoneda"
  },
  {
    "snakecase": "category_theory.limits.colimit.desc",
    "camelcase": "CategoryTheory.Limits.colimit.desc"
  },
  {
    "snakecase": "is_well_order",
    "camelcase": "WellOrder"
  },
  {
    "snakecase": "continuous_linear_map.id",
    "camelcase": "ContinuousLinearMap.id"
  },
  {
    "snakecase": "submonoid.map",
    "camelcase": "Submonoid.map"
  },
  {
    "snakecase": "order.pred",
    "camelcase": "Order.pred"
  },
  {
    "snakecase": "vector.map",
    "camelcase": "Vector.map"
  },
  {
    "snakecase": "emetric.diam",
    "camelcase": "Emetric.diam"
  },
  {
    "snakecase": "gt",
    "camelcase": "Gt"
  },
  {
    "snakecase": "division_ring",
    "camelcase": "DivisionRing"
  },
  {
    "snakecase": "nat_ordinal",
    "camelcase": "NatOrdinal"
  },
  {
    "snakecase": "category_theory.limits.cocone.whisker",
    "camelcase": "CategoryTheory.Limits.Cocone.whisker"
  },
  {
    "snakecase": "quaternion_group",
    "camelcase": "QuaternionGroup"
  },
  {
    "snakecase": "is_prime_pow",
    "camelcase": "IsPrimePow"
  },
  {
    "snakecase": "list.sorted",
    "camelcase": "List.Sorted"
  },
  {
    "snakecase": "bornology.is_cobounded",
    "camelcase": "Bornology.cobounded"
  },
  {
    "snakecase": "generalized_continued_fraction.int_fract_pair.stream",
    "camelcase": "GeneralizedContinuedFraction.IntFractPair.stream"
  },
  {
    "snakecase": "bounded_order",
    "camelcase": "BoundedOrder"
  },
  {
    "snakecase": "upper_half_plane",
    "camelcase": "UpperHalfPlane"
  },
  {
    "snakecase": "cyclotomic_field",
    "camelcase": "CyclotomicField"
  },
  {
    "snakecase": "is_trichotomous",
    "camelcase": "trichotomous"
  },
  {
    "snakecase": "affine.simplex.circumradius",
    "camelcase": "Affine.Simplex.circumradius"
  },
  {
    "snakecase": "topological_space.compacts.equiv",
    "camelcase": "TopologicalSpace.Compacts.equiv"
  },
  {
    "snakecase": "ordered_comm_ring",
    "camelcase": "OrderedCommRing"
  },
  {
    "snakecase": "continuous_linear_map.snd",
    "camelcase": "ContinuousLinearMap.snd"
  },
  {
    "snakecase": "category_theory.presieve.is_sheaf",
    "camelcase": "CategoryTheory.Presieve.IsSheaf"
  },
  {
    "snakecase": "int.fract",
    "camelcase": "Int.fract"
  },
  {
    "snakecase": "first_order.language",
    "camelcase": "FirstOrder.Language"
  },
  {
    "snakecase": "has_edist.edist",
    "camelcase": "HasEdist.edist"
  },
  {
    "snakecase": "category_theory.limits.has_coequalizers",
    "camelcase": "CategoryTheory.Limits.HasCoequalizers"
  },
  {
    "snakecase": "mv_polynomial.eval",
    "camelcase": "MvPolynomial.eval"
  },
  {
    "snakecase": "category_theory.equalizer.first_obj",
    "camelcase": "CategoryTheory.Equalizer.FirstObj"
  },
  {
    "snakecase": "unit",
    "camelcase": "Unit"
  },
  {
    "snakecase": "summable",
    "camelcase": "Summable"
  },
  {
    "snakecase": "perfection.lift",
    "camelcase": "Perfection.lift"
  },
  {
    "snakecase": "no_zero_divisors",
    "camelcase": "NoZeroDivisors"
  },
  {
    "snakecase": "is_principal_ideal_ring",
    "camelcase": "IsPrincipalIdealRing"
  },
  {
    "snakecase": "complete_lattice.set_independent",
    "camelcase": "CompleteLattice.SetIndependent"
  },
  {
    "snakecase": "is_simple_group",
    "camelcase": "IsSimpleGroup"
  },
  {
    "snakecase": "set.sized",
    "camelcase": "Set.Sized"
  },
  {
    "snakecase": "localization.r",
    "camelcase": "Localization.r"
  },
  {
    "snakecase": "is_top",
    "camelcase": "Top"
  },
  {
    "snakecase": "category_theory.is_iso",
    "camelcase": "CategoryTheory.IsIso"
  },
  {
    "snakecase": "dfinsupp.lsum",
    "camelcase": "Dfinsupp.lsum"
  },
  {
    "snakecase": "set.inclusion",
    "camelcase": "Set.inclusion"
  },
  {
    "snakecase": "finite_dimensional",
    "camelcase": "FiniteDimensional"
  },
  {
    "snakecase": "canonically_ordered_comm_semiring",
    "camelcase": "CanonicallyOrderedCommSemiring"
  },
  {
    "snakecase": "complete_space",
    "camelcase": "CompleteSpace"
  },
  {
    "snakecase": "filter.Coprod",
    "camelcase": "Filter.coprod"
  },
  {
    "snakecase": "true",
    "camelcase": "True"
  },
  {
    "snakecase": "bdd_below",
    "camelcase": "BddBelow"
  },
  {
    "snakecase": "category_theory.skeletal",
    "camelcase": "CategoryTheory.Skeletal"
  },
  {
    "snakecase": "multiset.card",
    "camelcase": "Multiset.card"
  },
  {
    "snakecase": "filter.is_bounded_under",
    "camelcase": "Filter.IsBoundedUnder"
  },
  {
    "snakecase": "torus_integrable",
    "camelcase": "TorusIntegrable"
  },
  {
    "snakecase": "category_theory.limits.has_limits_of_shape",
    "camelcase": "CategoryTheory.Limits.HasLimitsOfShape"
  },
  {
    "snakecase": "cardinal.continuum",
    "camelcase": "Cardinal.continuum"
  },
  {
    "snakecase": "category_theory.regular_epi",
    "camelcase": "CategoryTheory.RegularEpi"
  },
  {
    "snakecase": "nat.prime",
    "camelcase": "Nat.Prime"
  },
  {
    "snakecase": "matrix.col",
    "camelcase": "Matrix.col"
  },
  {
    "snakecase": "free_group.red",
    "camelcase": "FreeGroup.Red"
  },
  {
    "snakecase": "nat.partrec",
    "camelcase": "Nat.Partrec"
  },
  {
    "snakecase": "distrib",
    "camelcase": "Distrib"
  },
  {
    "snakecase": "linear_ordered_comm_group",
    "camelcase": "LinearOrderedCommGroup"
  },
  {
    "snakecase": "category_theory.pre",
    "camelcase": "CategoryTheory.pre"
  },
  {
    "snakecase": "topological_space.metrizable_space",
    "camelcase": "TopologicalSpace.MetrizableSpace"
  },
  {
    "snakecase": "normal_space",
    "camelcase": "NormalSpace"
  },
  {
    "snakecase": "metric.closed_ball",
    "camelcase": "Metric.is_closed_ball"
  },
  {
    "snakecase": "totally_disconnected_space",
    "camelcase": "TotallyDisconnectedSpace"
  },
  {
    "snakecase": "add_left_cancel_monoid",
    "camelcase": "AddLeftCancelMonoid"
  },
  {
    "snakecase": "transitive",
    "camelcase": "Transitive"
  },
  {
    "snakecase": "category_theory.locally_small",
    "camelcase": "CategoryTheory.LocallySmall"
  },
  {
    "snakecase": "category_theory.faithful",
    "camelcase": "CategoryTheory.Faithful"
  },
  {
    "snakecase": "has_continuous_add",
    "camelcase": "HasContinuousAdd"
  },
  {
    "snakecase": "has_scalar",
    "camelcase": "HasScalar"
  },
  {
    "snakecase": "algebraic_geometry.SheafedSpace.is_open_immersion",
    "camelcase": "AlgebraicGeometry.SheafedSpace.IsOpenImmersion"
  },
  {
    "snakecase": "is_cyclotomic_extension",
    "camelcase": "IsCyclotomicExtension"
  },
  {
    "snakecase": "free_group.reduce",
    "camelcase": "FreeGroup.reduce"
  },
  {
    "snakecase": "triv_sq_zero_ext.fst",
    "camelcase": "TrivSqZeroExt.fst"
  },
  {
    "snakecase": "has_sup",
    "camelcase": "HasSup"
  },
  {
    "snakecase": "category_theory.limits.walking_pair",
    "camelcase": "CategoryTheory.Limits.WalkingPair"
  },
  {
    "snakecase": "module.dual",
    "camelcase": "Module.Dual"
  },
  {
    "snakecase": "alternating_map",
    "camelcase": "AlternatingMap"
  },
  {
    "snakecase": "separated_space",
    "camelcase": "SeparatedSpace"
  },
  {
    "snakecase": "category_theory.monad",
    "camelcase": "CategoryTheory.Monad"
  },
  {
    "snakecase": "game",
    "camelcase": "Game"
  },
  {
    "snakecase": "semilattice_sup",
    "camelcase": "SemilatticeSup"
  },
  {
    "snakecase": "category_theory.limits.kernel.",
    "camelcase": "CategoryTheory.Limits.kernel"
  },
  {
    "snakecase": "first_order.language.substructure.closure",
    "camelcase": "FirstOrder.Language.Substructure.closure"
  },
  {
    "snakecase": "computable",
    "camelcase": "Computable"
  },
  {
    "snakecase": "category_theory.limits.diag",
    "camelcase": "CategoryTheory.Limits.diag"
  },
  {
    "snakecase": "has_vsub.vsub",
    "camelcase": "HasVsub.vsub"
  },
  {
    "snakecase": "is_locally_homeomorph",
    "camelcase": "IsLocallyHomeomorph"
  },
  {
    "snakecase": "set_like",
    "camelcase": "SetLike"
  },
  {
    "snakecase": "topological_space.is_topological_basis",
    "camelcase": "TopologicalSpace.IsTopologicalBasis"
  },
  {
    "snakecase": "joined",
    "camelcase": "Joined"
  },
  {
    "snakecase": "algebra.lmul",
    "camelcase": "Algebra.lmul"
  },
  {
    "snakecase": "category_theory.limits.has_image",
    "camelcase": "CategoryTheory.Limits.HasImage"
  },
  {
    "snakecase": "has_Inf.Inf",
    "camelcase": "HasInf.inf"
  },
  {
    "snakecase": "equiv_functor",
    "camelcase": "EquivFunctor"
  },
  {
    "snakecase": "polynomial.taylor",
    "camelcase": "Polynomial.taylor"
  },
  {
    "snakecase": "category_theory.limits.has_kernels",
    "camelcase": "CategoryTheory.Limits.HasKernels"
  },
  {
    "snakecase": "algebraic_geometry.Scheme",
    "camelcase": "AlgebraicGeometry.Scheme"
  },
  {
    "snakecase": "add_subgroup.center",
    "camelcase": "AddSubgroup.center"
  },
  {
    "snakecase": "triv_sq_zero_ext.inr",
    "camelcase": "TrivSqZeroExt.inr"
  },
  {
    "snakecase": "category_theory.discrete",
    "camelcase": "CategoryTheory.Discrete"
  },
  {
    "snakecase": "continuous_map.restrict",
    "camelcase": "ContinuousMap.restrict"
  },
  {
    "snakecase": "cardinal.ord",
    "camelcase": "Cardinal.ord"
  },
  {
    "snakecase": "antilipschitz_with",
    "camelcase": "AntilipschitzWith"
  },
  {
    "snakecase": "normed_field",
    "camelcase": "NormedField"
  },
  {
    "snakecase": "norm_one_class",
    "camelcase": "NormOneClass"
  },
  {
    "snakecase": "empty",
    "camelcase": "Empty"
  },
  {
    "snakecase": "set.image",
    "camelcase": "Set.Image"
  },
  {
    "snakecase": "holor",
    "camelcase": "Holor"
  },
  {
    "snakecase": "totally_separated_space",
    "camelcase": "TotallySeparatedSpace"
  },
  {
    "snakecase": "category_theory.fin_category",
    "camelcase": "CategoryTheory.FinCategory"
  },
  {
    "snakecase": "category_theory.limits.preserves_colimit",
    "camelcase": "CategoryTheory.Limits.PreservesColimit"
  },
  {
    "snakecase": "polynomial.is_splitting_field",
    "camelcase": "Polynomial.IsSplittingField"
  },
  {
    "snakecase": "equiv.symm",
    "camelcase": "Equiv.symm"
  },
  {
    "snakecase": "uniform_continuous",
    "camelcase": "UniformContinuous"
  },
  {
    "snakecase": "polynomial.erase",
    "camelcase": "Polynomial.erase"
  },
  {
    "snakecase": "lie_algebra.is_engelian",
    "camelcase": "LieAlgebra.IsEngelian"
  },
  {
    "snakecase": "is_linear_order",
    "camelcase": "IsLinearOrder"
  },
  {
    "snakecase": "category_theory.category_struct",
    "camelcase": "CategoryTheory.CategoryStruct"
  },
  {
    "snakecase": "perfect_ring",
    "camelcase": "PerfectRing"
  },
  {
    "snakecase": "ordered_comm_semiring",
    "camelcase": "OrderedCommSemiring"
  },
  {
    "snakecase": "ideal.comap",
    "camelcase": "Ideal.comap"
  },
  {
    "snakecase": "ereal",
    "camelcase": "Ereal"
  },
  {
    "snakecase": "concave_on",
    "camelcase": "ConcaveOn"
  },
  {
    "snakecase": "category_theory.is_pullback",
    "camelcase": "CategoryTheory.IsPullback"
  },
  {
    "snakecase": "differentiable",
    "camelcase": "Differentiable"
  },
  {
    "snakecase": "conformal_at",
    "camelcase": "ConformalAt"
  },
  {
    "snakecase": "trans",
    "camelcase": "Trans"
  },
  {
    "snakecase": "semiring",
    "camelcase": "Semiring"
  },
  {
    "snakecase": "category_theory.limits.pushout.inl",
    "camelcase": "CategoryTheory.Limits.pushout.inl"
  },
  {
    "snakecase": "filter.cofinite",
    "camelcase": "Filter.cofinite"
  },
  {
    "snakecase": "category_theory.limits.has_binary_coproduct",
    "camelcase": "CategoryTheory.Limits.HasBinaryCoproduct"
  },
  {
    "snakecase": "function.support",
    "camelcase": "Function.Support"
  },
  {
    "snakecase": "is_modular_lattice",
    "camelcase": "IsModularLattice"
  },
  {
    "snakecase": "Class.univ",
    "camelcase": "Class.Univ"
  },
  {
    "snakecase": "empty",
    "camelcase": "IsEmpty"
  },
  {
    "snakecase": "powers",
    "camelcase": "Powers"
  },
  {
    "snakecase": "pgame.mk",
    "camelcase": "Pgame.mk"
  },
  {
    "snakecase": "meas",
    "camelcase": "Meas"
  },
  {
    "snakecase": "upper_semicontinuous_at",
    "camelcase": "UpperSemicontinuousAt"
  },
  {
    "snakecase": "relation.cut_expand",
    "camelcase": "Relation.CutExpand"
  },
  {
    "snakecase": "local_ring",
    "camelcase": "LocalRing"
  },
  {
    "snakecase": "category_theory.limits.pullback_cone.mk",
    "camelcase": "CategoryTheory.Limits.PullbackCone.mk"
  },
  {
    "snakecase": "is_irrefl",
    "camelcase": "IsIrrefl"
  },
  {
    "snakecase": "setoid.r",
    "camelcase": "Setoid.r"
  },
  {
    "snakecase": "witt_vector.lift",
    "camelcase": "WittVector.lift"
  },
  {
    "snakecase": "filter.is_cobounded",
    "camelcase": "Filter.IsCobounded"
  },
  {
    "snakecase": "number_field",
    "camelcase": "NumberField"
  },
  {
    "snakecase": "euclidean_domain.gcd",
    "camelcase": "EuclideanDomain.gcd"
  },
  {
    "snakecase": "category_theory.limits.cocone",
    "camelcase": "CategoryTheory.Limits.Cocone"
  },
  {
    "snakecase": "non_unital_semi_normed_ring",
    "camelcase": "NonUnitalSemiNormedRing"
  },
  {
    "snakecase": "polynomial.eval",
    "camelcase": "Polynomial.eval"
  },
  {
    "snakecase": "has_inf",
    "camelcase": "HasInf"
  },
  {
    "snakecase": "dfinsupp.erase",
    "camelcase": "Dfinsupp.erase"
  },
  {
    "snakecase": "generalized_continued_fraction.pair.map",
    "camelcase": "GeneralizedContinuedFraction.Pair.map"
  },
  {
    "snakecase": "is_poly",
    "camelcase": "IsPoly"
  },
  {
    "snakecase": "finset.filter",
    "camelcase": "Finset.filter"
  },
  {
    "snakecase": "list.nat.antidiagonal",
    "camelcase": "List.Nat.antidiagonal"
  },
  {
    "snakecase": "category_theory.is_left_adjoint",
    "camelcase": "CategoryTheory.IsLeftAdjoint"
  },
  {
    "snakecase": "real.tan",
    "camelcase": "Real.tan"
  },
  {
    "snakecase": "fin",
    "camelcase": "Fin"
  },
  {
    "snakecase": "complex.sin",
    "camelcase": "Complex.sin"
  },
  {
    "snakecase": "normalization_monoid",
    "camelcase": "NormalizationMonoid"
  },
  {
    "snakecase": "is_ascending_central_series",
    "camelcase": "IsAscendingCentralSeries"
  },
  {
    "snakecase": "submonoid.powers",
    "camelcase": "Submonoid.powers"
  },
  {
    "snakecase": "polynomial.has_separable_contraction",
    "camelcase": "Polynomial.HasSeparableContraction"
  },
  {
    "snakecase": "multilinear_map",
    "camelcase": "MultilinearMap"
  },
  {
    "snakecase": "ring_hom.id",
    "camelcase": "RingHom.id"
  },
  {
    "snakecase": "basis.repr",
    "camelcase": "Basis.repr"
  },
  {
    "snakecase": "sum",
    "camelcase": "Sum"
  },
  {
    "snakecase": "category_theory.strong_epi",
    "camelcase": "CategoryTheory.StrongEpi"
  },
  {
    "snakecase": "implies",
    "camelcase": "Implies"
  },
  {
    "snakecase": "category_theory.limits.has_limits_of_size",
    "camelcase": "CategoryTheory.Limits.HasLimitsOfSize"
  },
  {
    "snakecase": "locally_compact_space",
    "camelcase": "LocallyCompactSpace"
  },
  {
    "snakecase": "collinear",
    "camelcase": "Collinear"
  },
  {
    "snakecase": "locally_convex_space",
    "camelcase": "LocallyConvexSpace"
  },
  {
    "snakecase": "submodule.comap",
    "camelcase": "Submodule.comap"
  },
  {
    "snakecase": "option.none",
    "camelcase": "Option.none"
  },
  {
    "snakecase": "matrix.diagonal",
    "camelcase": "Matrix.diagonal"
  },
  {
    "snakecase": "second_countable_topology_either",
    "camelcase": "SecondCountableTopologyEither"
  },
  {
    "snakecase": "add_action.orbit",
    "camelcase": "AddAction.Orbit"
  },
  {
    "snakecase": "category_theory.limits.has_colimit",
    "camelcase": "CategoryTheory.Limits.HasColimit"
  },
  {
    "snakecase": "category_theory.creates_limit",
    "camelcase": "CategoryTheory.CreatesLimit"
  },
  {
    "snakecase": "non_assoc_semiring",
    "camelcase": "NonAssocSemiring"
  },
  {
    "snakecase": "category_theory.normal_epi_category",
    "camelcase": "CategoryTheory.NormalEpiCategory"
  },
  {
    "snakecase": "partition_of_unity",
    "camelcase": "PartitionOfUnity"
  },
  {
    "snakecase": "gcd_monoid.gcd",
    "camelcase": "GcdMonoid.gcd"
  },
  {
    "snakecase": "has_scalar.smul",
    "camelcase": "HasScalar.smul"
  },
  {
    "snakecase": "tsupport",
    "camelcase": "Tsupport"
  },
  {
    "snakecase": "quot.lift",
    "camelcase": "Quot.lift"
  },
  {
    "snakecase": "is_frobenius_number",
    "camelcase": "IsFrobeniusNumber"
  },
  {
    "snakecase": "pred_order",
    "camelcase": "PredOrder"
  },
  {
    "snakecase": "mvqpf.cofix",
    "camelcase": "Mvqpf.Cofix"
  },
  {
    "snakecase": "absolute_value",
    "camelcase": "AbsoluteValue"
  },
  {
    "snakecase": "uniform_space",
    "camelcase": "UniformSpace"
  },
  {
    "snakecase": "generalized_continued_fraction.of",
    "camelcase": "GeneralizedContinuedFraction.of"
  },
  {
    "snakecase": "category_theory.limits.biprod.braiding",
    "camelcase": "CategoryTheory.Limits.biprod.braiding"
  },
  {
    "snakecase": "regular_expression",
    "camelcase": "RegularExpression"
  },
  {
    "snakecase": "order.succ",
    "camelcase": "Order.succ"
  },
  {
    "snakecase": "opposite.unop",
    "camelcase": "Opposite.unop"
  },
  {
    "snakecase": "polynomial.gal.restrict",
    "camelcase": "Polynomial.Gal.restrict"
  },
  {
    "snakecase": "algebraic_geometry.SheafedSpace",
    "camelcase": "AlgebraicGeometry.SheafedSpace"
  },
  {
    "snakecase": "function.End",
    "camelcase": "Function.End"
  },
  {
    "snakecase": "subtraction_comm_monoid",
    "camelcase": "SubtractionCommMonoid"
  },
  {
    "snakecase": "closure_operator.mk",
    "camelcase": "ClosureOperator.mk"
  },
  {
    "snakecase": "std_simplex",
    "camelcase": "StdSimplex"
  },
  {
    "snakecase": "is_irreducible",
    "camelcase": "Irreducible"
  },
  {
    "snakecase": "add_con",
    "camelcase": "AddCon"
  },
  {
    "snakecase": "ordered_add_comm_monoid",
    "camelcase": "OrderedAddCommMonoid"
  },
  {
    "snakecase": "tensor_product.assoc",
    "camelcase": "TensorProduct.assoc"
  },
  {
    "snakecase": "ordered_ring",
    "camelcase": "OrderedRing"
  },
  {
    "snakecase": "mdifferentiable_on",
    "camelcase": "MdifferentiableOn"
  },
  {
    "snakecase": "approximates_linear_on",
    "camelcase": "ApproximatesLinearOn"
  },
  {
    "snakecase": "list.duplicate",
    "camelcase": "List.Duplicate"
  },
  {
    "snakecase": "list.chain",
    "camelcase": "List.Chain"
  },
  {
    "snakecase": "metric.ball",
    "camelcase": "Metric.Ball"
  },
  {
    "snakecase": "function.uncurry",
    "camelcase": "Function.uncurry"
  },
  {
    "snakecase": "matrix",
    "camelcase": "Matrix"
  },
  {
    "snakecase": "quaternion_group.xa",
    "camelcase": "QuaternionGroup.xa"
  },
  {
    "snakecase": "category_theory.limits.has_coequalizer",
    "camelcase": "CategoryTheory.Limits.HasCoequalizer"
  },
  {
    "snakecase": "is_localization.is_integer",
    "camelcase": "IsLocalization.IsInteger"
  },
  {
    "snakecase": "order_top",
    "camelcase": "OrderTop"
  },
  {
    "snakecase": "category_theory.limits.has_wide_coequalizers",
    "camelcase": "CategoryTheory.Limits.HasWideCoequalizers"
  },
  {
    "snakecase": "category_theory.limits.has_zero_morphisms",
    "camelcase": "CategoryTheory.Limits.HasZeroMorphisms"
  },
  {
    "snakecase": "continuous_map.homotopy.hcast",
    "camelcase": "ContinuousMap.Homotopy.hcast"
  },
  {
    "snakecase": "relation.refl_gen",
    "camelcase": "Relation.ReflGen"
  },
  {
    "snakecase": "ZMOD",
    "camelcase": "Zmod"
  },
  {
    "snakecase": "mul_zero_class",
    "camelcase": "MulZeroClass"
  },
  {
    "snakecase": "vector",
    "camelcase": "Vector"
  },
  {
    "snakecase": "mul_action_with_zero",
    "camelcase": "MulActionWithZero"
  },
  {
    "snakecase": "quotient.mk",
    "camelcase": "Quotient.mk"
  },
  {
    "snakecase": "plift",
    "camelcase": "Plift"
  },
  {
    "snakecase": "first_order.language.Structure.fg",
    "camelcase": "FirstOrder.Language.Structure.Fg"
  },
  {
    "snakecase": "mv_polynomial.C",
    "camelcase": "MvPolynomial.c"
  },
  {
    "snakecase": "composition",
    "camelcase": "Composition"
  },
  {
    "snakecase": "is_transcendence_basis",
    "camelcase": "IsTranscendenceBasis"
  },
  {
    "snakecase": "category_theory.is_kernel_pair",
    "camelcase": "CategoryTheory.IsKernelPair"
  },
  {
    "snakecase": "non_unital_ring",
    "camelcase": "NonUnitalRing"
  },
  {
    "snakecase": "lie_algebra.is_semisimple",
    "camelcase": "LieAlgebra.IsSemisimple"
  },
  {
    "snakecase": "category_theory.limits.has_finite_wide_pushouts",
    "camelcase": "CategoryTheory.Limits.HasFiniteWidePushouts"
  },
  {
    "snakecase": "is_compactly_generated",
    "camelcase": "IsCompactlyGenerated"
  },
  {
    "snakecase": "has_continuous_inv",
    "camelcase": "HasContinuousInv"
  },
  {
    "snakecase": "complete_lattice.is_compact_element",
    "camelcase": "CompleteLattice.IsCompactElement"
  },
  {
    "snakecase": "pell.xn",
    "camelcase": "Pell.xn"
  },
  {
    "snakecase": "class_group",
    "camelcase": "ClassGroup"
  },
  {
    "snakecase": "strict_convex_on",
    "camelcase": "StrictConvexOn"
  },
  {
    "snakecase": "division_monoid",
    "camelcase": "DivisionMonoid"
  },
  {
    "snakecase": "sylow",
    "camelcase": "Sylow"
  },
  {
    "snakecase": "is_free_group.of",
    "camelcase": "FreeGroup.of"
  },
  {
    "snakecase": "absorbs",
    "camelcase": "Absorbs"
  },
  {
    "snakecase": "linear_map.rtensor",
    "camelcase": "LinearMap.rtensor"
  },
  {
    "snakecase": "differentiable_within_at",
    "camelcase": "DifferentiableWithinAt"
  },
  {
    "snakecase": "nat.card",
    "camelcase": "Nat.card"
  },
  {
    "snakecase": "mv_polynomial.X",
    "camelcase": "MvPolynomial.x"
  },
  {
    "snakecase": "is_glb",
    "camelcase": "IsGlb"
  },
  {
    "snakecase": "rack.pre_envel_group",
    "camelcase": "Rack.PreEnvelGroup"
  },
  {
    "snakecase": "pseudo_emetric_space",
    "camelcase": "PseudoEmetricSpace"
  },
  {
    "snakecase": "distrib_mul_action",
    "camelcase": "DistribMulAction"
  },
  {
    "snakecase": "inner_product_space.is_self_adjoint",
    "camelcase": "InnerProductSpace.IsSelfAdjoint"
  },
  {
    "snakecase": "category_theory.limits.has_finite_wide_pullbacks",
    "camelcase": "CategoryTheory.Limits.HasFiniteWidePullbacks"
  },
  {
    "snakecase": "category_theory.limits.pushout_cocone.mk",
    "camelcase": "CategoryTheory.Limits.PushoutCocone.mk"
  },
  {
    "snakecase": "proper_space",
    "camelcase": "ProperSpace"
  },
  {
    "snakecase": "category_theory.over",
    "camelcase": "CategoryTheory.Over"
  },
  {
    "snakecase": "topological_space.opens",
    "camelcase": "TopologicalSpace.Opens"
  },
  {
    "snakecase": "measure_theory.measure_preserving",
    "camelcase": "MeasureTheory.MeasurePreserving"
  },
  {
    "snakecase": "function.update",
    "camelcase": "Function.update"
  },
  {
    "snakecase": "multiset.count",
    "camelcase": "Multiset.count"
  },
  {
    "snakecase": "filter.comap",
    "camelcase": "Filter.comap"
  },
  {
    "snakecase": "quadratic_form.polar",
    "camelcase": "QuadraticForm.polar"
  },
  {
    "snakecase": "category_theory.has_injective_resolutions",
    "camelcase": "CategoryTheory.HasInjectiveResolutions"
  },
  {
    "snakecase": "is_atomistic",
    "camelcase": "IsAtomistic"
  },
  {
    "snakecase": "tensor_product.mk",
    "camelcase": "TensorProduct.mk"
  },
  {
    "snakecase": "add_monoid_hom.id",
    "camelcase": "IsAddMonoidHom.id"
  },
  {
    "snakecase": "is_simple_module",
    "camelcase": "IsSimpleModule"
  },
  {
    "snakecase": "function.involutive",
    "camelcase": "Function.involutive"
  },
  {
    "snakecase": "category_theory.limits.biprod.lift",
    "camelcase": "CategoryTheory.Limits.biprod.lift"
  },
  {
    "snakecase": "is_seq_closed",
    "camelcase": "IsSeqClosed"
  },
  {
    "snakecase": "category_theory.Sheaf",
    "camelcase": "CategoryTheory.Sheaf"
  },
  {
    "snakecase": "preconnected_space",
    "camelcase": "PreconnectedSpace"
  },
  {
    "snakecase": "modular_group.fdo",
    "camelcase": "ModularGroup.Fdo"
  },
  {
    "snakecase": "well_founded",
    "camelcase": "WellFounded"
  },
  {
    "snakecase": "tendsto_uniformly",
    "camelcase": "TendstoUniformly"
  },
  {
    "snakecase": "denumerable.raise",
    "camelcase": "Denumerable.raise"
  },
  {
    "snakecase": "subgroup.zpowers",
    "camelcase": "Subgroup.zpowers"
  },
  {
    "snakecase": "integral_closure",
    "camelcase": "IsIntegralClosure"
  },
  {
    "snakecase": "fintype",
    "camelcase": "Fintype"
  },
  {
    "snakecase": "discrete_valuation_ring",
    "camelcase": "DiscreteValuationRing"
  },
  {
    "snakecase": "add_semigroup",
    "camelcase": "AddSemigroup"
  },
  {
    "snakecase": "is_directed",
    "camelcase": "IsDirected"
  },
  {
    "snakecase": "is_solvable_by_rad",
    "camelcase": "IsSolvableByRad"
  },
  {
    "snakecase": "function.embedding.subtype",
    "camelcase": "Function.Embedding.subtype"
  },
  {
    "snakecase": "is_cycle",
    "camelcase": "Cycle"
  },
  {
    "snakecase": "nontrivial",
    "camelcase": "Nontrivial"
  },
  {
    "snakecase": "is_fractional",
    "camelcase": "IsFractional"
  },
  {
    "snakecase": "quandle.conj.map",
    "camelcase": "Quandle.Conj.map"
  },
  {
    "snakecase": "mul_action.orbit",
    "camelcase": "MulAction.Orbit"
  },
  {
    "snakecase": "is_integrally_closed",
    "camelcase": "IsIntegrallyClosed"
  },
  {
    "snakecase": "set.inj_on",
    "camelcase": "Set.InjOn"
  },
  {
    "snakecase": "category_theory.single_obj",
    "camelcase": "CategoryTheory.SingleObj"
  },
  {
    "snakecase": "finset.pimage",
    "camelcase": "Finset.pimage"
  },
  {
    "snakecase": "is_normal_subgroup",
    "camelcase": "IsNormalSubgroup"
  },
  {
    "snakecase": "polynomial.monomial",
    "camelcase": "Polynomial.monomial"
  },
  {
    "snakecase": "is_solvable",
    "camelcase": "IsSolvable"
  },
  {
    "snakecase": "set.interval",
    "camelcase": "Set.Interval"
  },
  {
    "snakecase": "list.drop",
    "camelcase": "List.drop"
  },
  {
    "snakecase": "category_theory.limits.has_equalizer",
    "camelcase": "CategoryTheory.Limits.HasEqualizer"
  },
  {
    "snakecase": "category_theory.limits.pullback.lift",
    "camelcase": "CategoryTheory.Limits.pullback.lift"
  },
  {
    "snakecase": "pseudo_metric_space",
    "camelcase": "PseudoMetricSpace"
  },
  {
    "snakecase": "ordinal",
    "camelcase": "Ordinal"
  },
  {
    "snakecase": "has_fpower_series_at",
    "camelcase": "HasFpowerSeriesAt"
  },
  {
    "snakecase": "balanced_hull",
    "camelcase": "BalancedHull"
  },
  {
    "snakecase": "path.homotopic.proj",
    "camelcase": "Path.Homotopic.proj"
  },
  {
    "snakecase": "function.injective",
    "camelcase": "Function.Injective"
  },
  {
    "snakecase": "graded_monoid.mk",
    "camelcase": "GradedMonoid.mk"
  },
  {
    "snakecase": "matrix.circulant",
    "camelcase": "Matrix.circulant"
  },
  {
    "snakecase": "lucas_lehmer.s",
    "camelcase": "LucasLehmer.s"
  },
  {
    "snakecase": "add_group_filter_basis",
    "camelcase": "AddGroupFilterBasis"
  },
  {
    "snakecase": "quadratic_form",
    "camelcase": "QuadraticForm"
  },
  {
    "snakecase": "measure_theory.prog_measurable",
    "camelcase": "MeasureTheory.ProgMeasurable"
  },
  {
    "snakecase": "metric.cthickening",
    "camelcase": "Metric.Cthickening"
  },
  {
    "snakecase": "measurable_set",
    "camelcase": "MeasurableSet"
  },
  {
    "snakecase": "complex",
    "camelcase": "Complex"
  },
  {
    "snakecase": "add_submonoid",
    "camelcase": "AddSubmonoid"
  },
  {
    "snakecase": "ab",
    "camelcase": "Ab"
  },
  {
    "snakecase": "witt_vector",
    "camelcase": "WittVector"
  },
  {
    "snakecase": "category_theory.limits.kernel.lift",
    "camelcase": "CategoryTheory.Limits.kernel.lift"
  },
  {
    "snakecase": "add_valuation.comap",
    "camelcase": "AddValuation.comap"
  },
  {
    "snakecase": "mul_zero_one_class",
    "camelcase": "MulZeroOneClass"
  },
  {
    "snakecase": "cardinal.sup",
    "camelcase": "Cardinal.sup"
  },
  {
    "snakecase": "is_lower_set",
    "camelcase": "LowerSet"
  },
  {
    "snakecase": "open_embedding",
    "camelcase": "OpenEmbedding"
  },
  {
    "snakecase": "has_vadd",
    "camelcase": "HasVadd"
  },
  {
    "snakecase": "uniform_add_group",
    "camelcase": "UniformAddGroup"
  },
  {
    "snakecase": "submonoid.comap",
    "camelcase": "Submonoid.comap"
  },
  {
    "snakecase": "has_mem.mem",
    "camelcase": "HasMem.Mem"
  },
  {
    "snakecase": "continuous_at",
    "camelcase": "ContinuousAt"
  },
  {
    "snakecase": "category_theory.subobject.mk",
    "camelcase": "CategoryTheory.Subobject.mk"
  },
  {
    "snakecase": "uniform_embedding",
    "camelcase": "UniformEmbedding"
  },
  {
    "snakecase": "int.log",
    "camelcase": "Int.log"
  },
  {
    "snakecase": "metric.sphere",
    "camelcase": "Metric.Sphere"
  },
  {
    "snakecase": "star_module",
    "camelcase": "StarModule"
  },
  {
    "snakecase": "shelf_hom",
    "camelcase": "ShelfHom"
  },
  {
    "snakecase": "quaternion.conj",
    "camelcase": "Quaternion.conj"
  },
  {
    "snakecase": "regular_space",
    "camelcase": "RegularSpace"
  },
  {
    "snakecase": "lower_semicontinuous_on",
    "camelcase": "LowerSemicontinuousOn"
  },
  {
    "snakecase": "quiver.symmetrify",
    "camelcase": "Quiver.Symmetrify"
  },
  {
    "snakecase": "cau_seq",
    "camelcase": "CauSeq"
  },
  {
    "snakecase": "is_regular",
    "camelcase": "IsRegular"
  },
  {
    "snakecase": "is_group_hom",
    "camelcase": "IsGroupHom"
  },
  {
    "snakecase": "finset.univ",
    "camelcase": "Finset.univ"
  },
  {
    "snakecase": "stieltjes_function",
    "camelcase": "StieltjesFunction"
  },
  {
    "snakecase": "add_units",
    "camelcase": "AddUnits"
  },
  {
    "snakecase": "category_theory.limits.limit.pre",
    "camelcase": "CategoryTheory.Limits.limit.pre"
  },
  {
    "snakecase": "monotone",
    "camelcase": "Monotone"
  },
  {
    "snakecase": "decidable_pred",
    "camelcase": "DecidablePred"
  },
  {
    "snakecase": "complex.abs",
    "camelcase": "Complex.abs"
  },
  {
    "snakecase": "connected_component",
    "camelcase": "ConnectedComponent"
  },
  {
    "snakecase": "lie_subalgebra",
    "camelcase": "LieSubalgebra"
  },
  {
    "snakecase": "function_field",
    "camelcase": "FunctionField"
  },
  {
    "snakecase": "topological_ring",
    "camelcase": "TopologicalRing"
  },
  {
    "snakecase": "set.Ioo",
    "camelcase": "Set.Ioo"
  },
  {
    "snakecase": "category_theory.skeleton",
    "camelcase": "CategoryTheory.Skeleton"
  },
  {
    "snakecase": "dfinsupp.single",
    "camelcase": "Dfinsupp.single"
  },
  {
    "snakecase": "submodule.orthogonal",
    "camelcase": "Submodule.orthogonal"
  },
  {
    "snakecase": "eckmann_hilton.is_unital",
    "camelcase": "EckmannHilton.IsUnital"
  },
  {
    "snakecase": "is_well_order",
    "camelcase": "IsWellOrder"
  },
  {
    "snakecase": "buffer.size",
    "camelcase": "Buffer.size"
  },
  {
    "snakecase": "semi_normed_group.core",
    "camelcase": "SemiNormedGroup.Core"
  },
  {
    "snakecase": "is_trichotomous",
    "camelcase": "IsTrichotomous"
  },
  {
    "snakecase": "trunc.mk",
    "camelcase": "Trunc.mk"
  },
  {
    "snakecase": "left_cancel_semigroup",
    "camelcase": "LeftCancelSemigroup"
  },
  {
    "snakecase": "even",
    "camelcase": "Even"
  },
  {
    "snakecase": "archimedean",
    "camelcase": "Archimedean"
  },
  {
    "snakecase": "local_homeomorph.refl",
    "camelcase": "LocalHomeomorph.refl"
  },
  {
    "snakecase": "weak_bilin",
    "camelcase": "WeakBilin"
  },
  {
    "snakecase": "convex",
    "camelcase": "Convex"
  },
  {
    "snakecase": "besicovitch.multiplicity",
    "camelcase": "Besicovitch.multiplicity"
  },
  {
    "snakecase": "has_fderiv_at",
    "camelcase": "HasFderivAt"
  },
  {
    "snakecase": "formal_multilinear_series",
    "camelcase": "FormalMultilinearSeries"
  },
  {
    "snakecase": "is_algebraic",
    "camelcase": "IsAlgebraic"
  },
  {
    "snakecase": "cancel_monoid_with_zero",
    "camelcase": "CancelMonoidWithZero"
  },
  {
    "snakecase": "absolute_value",
    "camelcase": "IsAbsoluteValue"
  },
  {
    "snakecase": "topological_group",
    "camelcase": "TopologicalGroup"
  },
  {
    "snakecase": "category_theory.concrete_category.forget",
    "camelcase": "CategoryTheory.ConcreteCategory.forget"
  },
  {
    "snakecase": "num",
    "camelcase": "Num"
  },
  {
    "snakecase": "ordinal.omega",
    "camelcase": "Ordinal.omega"
  },
  {
    "snakecase": "linear_equiv.det",
    "camelcase": "LinearEquiv.det"
  },
  {
    "snakecase": "unique_mdiff_within_at",
    "camelcase": "UniqueMdiffWithinAt"
  },
  {
    "snakecase": "finset.Ioc",
    "camelcase": "Finset.ioc"
  },
  {
    "snakecase": "squarefree",
    "camelcase": "Squarefree"
  },
  {
    "snakecase": "normed_group_hom",
    "camelcase": "NormedGroupHom"
  },
  {
    "snakecase": "pos",
    "camelcase": "Pos"
  },
  {
    "snakecase": "quotient.lift",
    "camelcase": "Quotient.lift"
  },
  {
    "snakecase": "mul_action.fixed_by",
    "camelcase": "MulAction.FixedBy"
  },
  {
    "snakecase": "isometry",
    "camelcase": "Isometry"
  },
  {
    "snakecase": "analytic_on",
    "camelcase": "AnalyticOn"
  },
  {
    "snakecase": "continuous_linear_map.fst",
    "camelcase": "ContinuousLinearMap.fst"
  },
  {
    "snakecase": "has_norm",
    "camelcase": "HasNorm"
  },
  {
    "snakecase": "directed_on",
    "camelcase": "DirectedOn"
  },
  {
    "snakecase": "bounded_space",
    "camelcase": "BoundedSpace"
  },
  {
    "snakecase": "subgroup.center",
    "camelcase": "IsSubgroup.Center"
  },
  {
    "snakecase": "canonically_linear_ordered_add_monoid",
    "camelcase": "CanonicallyLinearOrderedAddMonoid"
  },
  {
    "snakecase": "typevec",
    "camelcase": "Typevec"
  },
  {
    "snakecase": "finset",
    "camelcase": "Finset"
  },
  {
    "snakecase": "category_theory.projective.d",
    "camelcase": "CategoryTheory.Projective.d"
  },
  {
    "snakecase": "lie_module.is_weight",
    "camelcase": "LieModule.IsWeight"
  },
  {
    "snakecase": "euclidean_domain",
    "camelcase": "EuclideanDomain"
  },
  {
    "snakecase": "is_mul_hom",
    "camelcase": "IsMulHom"
  },
  {
    "snakecase": "linear_map.single",
    "camelcase": "LinearMap.single"
  },
  {
    "snakecase": "algebra.finite_type",
    "camelcase": "Algebra.FiniteType"
  },
  {
    "snakecase": "plift",
    "camelcase": "PLift"
  },
  {
    "snakecase": "sym.map",
    "camelcase": "Sym.map"
  },
  {
    "snakecase": "function.is_fixed_pt",
    "camelcase": "Function.IsFixedPt"
  },
  {
    "snakecase": "category_theory.compatible_preserving",
    "camelcase": "CategoryTheory.CompatiblePreserving"
  },
  {
    "snakecase": "is_irreducible",
    "camelcase": "IsIrreducible"
  },
  {
    "snakecase": "nonarchimedean_group",
    "camelcase": "NonarchimedeanGroup"
  },
  {
    "snakecase": "one_hom_class",
    "camelcase": "OneHomClass"
  },
  {
    "snakecase": "complex.sinh",
    "camelcase": "Complex.sinh"
  },
  {
    "snakecase": "has_compact_mul_support",
    "camelcase": "HasCompactMulSupport"
  },
  {
    "snakecase": "add_monoid",
    "camelcase": "AddMonoid"
  },
  {
    "snakecase": "category_theory.limits.biproduct.desc",
    "camelcase": "CategoryTheory.Limits.biproduct.desc"
  },
  {
    "snakecase": "convex_independent",
    "camelcase": "ConvexIndependent"
  },
  {
    "snakecase": "functor",
    "camelcase": "Functor"
  },
  {
    "snakecase": "ring_subgroups_basis",
    "camelcase": "RingSubgroupsBasis"
  },
  {
    "snakecase": "projectivization.mk",
    "camelcase": "Projectivization.mk"
  },
  {
    "snakecase": "is_chain",
    "camelcase": "IsChain"
  },
  {
    "snakecase": "paracompact_space",
    "camelcase": "ParacompactSpace"
  },
  {
    "snakecase": "function.bijective",
    "camelcase": "Function.bijective"
  },
  {
    "snakecase": "non_unital_non_assoc_ring",
    "camelcase": "NonUnitalNonAssocRing"
  },
  {
    "snakecase": "punit",
    "camelcase": "PUnit"
  },
  {
    "snakecase": "unique_factorization_monoid.factors",
    "camelcase": "UniqueFactorizationMonoid.factors"
  },
  {
    "snakecase": "category_theory.limits.span",
    "camelcase": "CategoryTheory.Limits.span"
  },
  {
    "snakecase": "measure_theory.measure_space.volume",
    "camelcase": "MeasureTheory.MeasureSpace.volume"
  },
  {
    "snakecase": "mul_action.stabilizer",
    "camelcase": "MulAction.stabilizer"
  },
  {
    "snakecase": "cancel_comm_monoid_with_zero",
    "camelcase": "CancelCommMonoidWithZero"
  },
  {
    "snakecase": "measurable_space",
    "camelcase": "MeasurableSpace"
  },
  {
    "snakecase": "ray_vector",
    "camelcase": "RayVector"
  },
  {
    "snakecase": "is_total",
    "camelcase": "Total"
  },
  {
    "snakecase": "polynomial.X",
    "camelcase": "Polynomial.x"
  },
  {
    "snakecase": "metric.bounded",
    "camelcase": "Metric.Bounded"
  },
  {
    "snakecase": "is_primitive_root",
    "camelcase": "IsPrimitiveRoot"
  },
  {
    "snakecase": "nat.arithmetic_function.moebius",
    "camelcase": "Nat.ArithmeticFunction.moebius"
  },
  {
    "snakecase": "path.pi",
    "camelcase": "Path.pi"
  },
  {
    "snakecase": "continuous_linear_map.adjoint",
    "camelcase": "ContinuousLinearMap.adjoint"
  },
  {
    "snakecase": "set.univ",
    "camelcase": "Set.Univ"
  },
  {
    "snakecase": "vector.scanl",
    "camelcase": "Vector.scanl"
  },
  {
    "snakecase": "star_ordered_ring",
    "camelcase": "StarOrderedRing"
  },
  {
    "snakecase": "urysohns.CU",
    "camelcase": "Urysohns.CU"
  },
  {
    "snakecase": "measurable_space.comap",
    "camelcase": "MeasurableSpace.comap"
  },
  {
    "snakecase": "pairwise",
    "camelcase": "Pairwise"
  },
  {
    "snakecase": "measurable_space.map",
    "camelcase": "MeasurableSpace.map"
  },
  {
    "snakecase": "has_star.star",
    "camelcase": "HasStar.star"
  },
  {
    "snakecase": "category_theory.limits.has_finite_coproducts",
    "camelcase": "CategoryTheory.Limits.HasFiniteCoproducts"
  },
  {
    "snakecase": "decidable_rel",
    "camelcase": "DecidableRel"
  },
  {
    "snakecase": "is_fraction_ring.denom",
    "camelcase": "IsFractionRing.denom"
  },
  {
    "snakecase": "is_noetherian",
    "camelcase": "IsNoetherian"
  },
  {
    "snakecase": "minimals",
    "camelcase": "Minimals"
  },
  {
    "snakecase": "is_upper_set",
    "camelcase": "IsUpperSet"
  },
  {
    "snakecase": "is_nilpotent",
    "camelcase": "IsNilpotent"
  },
  {
    "snakecase": "is_cyclic",
    "camelcase": "IsCyclic"
  },
  {
    "snakecase": "qpf.Wequiv",
    "camelcase": "Qpf.Wequiv"
  },
  {
    "snakecase": "diff_cont_on_cl",
    "camelcase": "DiffContOnCl"
  },
  {
    "snakecase": "strict_order.cof",
    "camelcase": "StrictOrder.cof"
  },
  {
    "snakecase": "seminorm",
    "camelcase": "Seminorm"
  },
  {
    "snakecase": "mvfunctor.liftr",
    "camelcase": "Mvfunctor.Liftr"
  },
  {
    "snakecase": "orthonormal",
    "camelcase": "Orthonormal"
  },
  {
    "snakecase": "quaternion",
    "camelcase": "Quaternion"
  },
  {
    "snakecase": "category_theory.limits.terminal.from",
    "camelcase": "CategoryTheory.Limits.terminal.from"
  },
  {
    "snakecase": "prime_spectrum",
    "camelcase": "PrimeSpectrum"
  },
  {
    "snakecase": "closure_operator",
    "camelcase": "ClosureOperator"
  },
  {
    "snakecase": "semiconj_by",
    "camelcase": "SemiconjBy"
  },
  {
    "snakecase": "list.pairwise",
    "camelcase": "List.Pairwise"
  },
  {
    "snakecase": "measure_theory.simple_func",
    "camelcase": "MeasureTheory.SimpleFunc"
  },
  {
    "snakecase": "decidable",
    "camelcase": "Decidable"
  },
  {
    "snakecase": "mul",
    "camelcase": "Mul"
  },
  {
    "snakecase": "category_theory.functor.const",
    "camelcase": "CategoryTheory.Functor.const"
  },
  {
    "snakecase": "add_subgroup.closure",
    "camelcase": "AddSubgroup.closure"
  },
  {
    "snakecase": "affine.simplex.circumcenter",
    "camelcase": "Affine.Simplex.circumcenter"
  },
  {
    "snakecase": "is_connected",
    "camelcase": "IsConnected"
  },
  {
    "snakecase": "ordered_semiring",
    "camelcase": "OrderedSemiring"
  },
  {
    "snakecase": "tensor_product.algebra_tensor_module.curry",
    "camelcase": "TensorProduct.AlgebraTensorModule.curry"
  },
  {
    "snakecase": "polynomial.bernoulli",
    "camelcase": "Polynomial.bernoulli"
  },
  {
    "snakecase": "real.sinh",
    "camelcase": "Real.sinh"
  },
  {
    "snakecase": "category_theory.subobject.pullback",
    "camelcase": "CategoryTheory.Subobject.pullback"
  },
  {
    "snakecase": "has_strict_fderiv_at",
    "camelcase": "HasStrictFderivAt"
  },
  {
    "snakecase": "is_add_unit",
    "camelcase": "IsAddUnit"
  },
  {
    "snakecase": "pgame",
    "camelcase": "Pgame"
  },
  {
    "snakecase": "strongly_measurable_at_filter",
    "camelcase": "StronglyMeasurableAtFilter"
  },
  {
    "snakecase": "finite_dimensional.finrank",
    "camelcase": "FiniteDimensional.finrank"
  },
  {
    "snakecase": "normalizer_condition",
    "camelcase": "NormalizerCondition"
  },
  {
    "snakecase": "dvd_not_unit",
    "camelcase": "DvdNotUnit"
  },
  {
    "snakecase": "emetric.ball",
    "camelcase": "Emetric.Ball"
  },
  {
    "snakecase": "unique",
    "camelcase": "Unique"
  },
  {
    "snakecase": "cont_mdiff_at",
    "camelcase": "ContMdiffAt"
  },
  {
    "snakecase": "mul_semiring_action",
    "camelcase": "MulSemiringAction"
  },
  {
    "snakecase": "dense_inducing",
    "camelcase": "DenseInducing"
  },
  {
    "snakecase": "is_max",
    "camelcase": "IsMax"
  },
  {
    "snakecase": "denoms_clearable",
    "camelcase": "DenomsClearable"
  },
  {
    "snakecase": "add_con.ker",
    "camelcase": "AddCon.ker"
  },
  {
    "snakecase": "group_with_zero",
    "camelcase": "GroupWithZero"
  },
  {
    "snakecase": "mvqpf.abs",
    "camelcase": "Mvqpf.abs"
  },
  {
    "snakecase": "unique_factorization_monoid",
    "camelcase": "UniqueFactorizationMonoid"
  },
  {
    "snakecase": "lub",
    "camelcase": "IsLub"
  },
  {
    "snakecase": "function.left_inverse",
    "camelcase": "Function.LeftInverse"
  },
  {
    "snakecase": "homology.",
    "camelcase": "homology"
  },
  {
    "snakecase": "category_theory.essentially_small",
    "camelcase": "CategoryTheory.EssentiallySmall"
  },
  {
    "snakecase": "besicovitch.ball_package",
    "camelcase": "Besicovitch.BallPackage"
  },
  {
    "snakecase": "uniform_cauchy_seq_on",
    "camelcase": "UniformCauchySeqOn"
  },
  {
    "snakecase": "classical.some",
    "camelcase": "Classical.some"
  },
  {
    "snakecase": "is_semiring_hom",
    "camelcase": "IsSemiringHom"
  },
  {
    "snakecase": "borel_space",
    "camelcase": "BorelSpace"
  },
  {
    "snakecase": "basis.of_vector_space_index",
    "camelcase": "Basis.OfVectorSpaceIndex"
  },
  {
    "snakecase": "right_deriv_measurable_aux.D",
    "camelcase": "RightDerivMeasurableAux.D"
  },
  {
    "snakecase": "category_theory.InjectiveResolution",
    "camelcase": "CategoryTheory.InjectiveResolution"
  },
  {
    "snakecase": "is_coprime",
    "camelcase": "IsCoprime"
  },
  {
    "snakecase": "star_module.im",
    "camelcase": "StarModule.im"
  },
  {
    "snakecase": "category_theory.limits.limit_cone",
    "camelcase": "CategoryTheory.Limits.LimitCone"
  },
  {
    "snakecase": "weak_dual.polar",
    "camelcase": "WeakDual.Polar"
  },
  {
    "snakecase": "category_theory.limits.kernel.map",
    "camelcase": "CategoryTheory.Limits.kernel.map"
  },
  {
    "snakecase": "unique_diff_within_at",
    "camelcase": "UniqueDiffWithinAt"
  },
  {
    "snakecase": "add_right_cancel_semigroup",
    "camelcase": "AddRightCancelSemigroup"
  },
  {
    "snakecase": "max_chain",
    "camelcase": "IsMaxChain"
  },
  {
    "snakecase": "category_theory.subobject.exists",
    "camelcase": "CategoryTheory.Subobject.exists"
  },
  {
    "snakecase": "is_bot",
    "camelcase": "IsBot"
  },
  {
    "snakecase": "non_assoc_ring",
    "camelcase": "NonAssocRing"
  },
  {
    "snakecase": "linear_ordered_comm_group_with_zero",
    "camelcase": "LinearOrderedCommGroupWithZero"
  },
  {
    "snakecase": "category_theory.limits.has_colimits_of_shape",
    "camelcase": "CategoryTheory.Limits.HasColimitsOfShape"
  },
  {
    "snakecase": "pi_nat.cylinder",
    "camelcase": "PiNat.Cylinder"
  },
  {
    "snakecase": "category_theory.sieve",
    "camelcase": "CategoryTheory.Sieve"
  },
  {
    "snakecase": "algebra.is_integral",
    "camelcase": "Algebra.IsIntegral"
  },
  {
    "snakecase": "prod.lex",
    "camelcase": "Prod.Lex"
  },
  {
    "snakecase": "has_mfderiv_within_at",
    "camelcase": "HasMfderivWithinAt"
  },
  {
    "snakecase": "qpf.recF",
    "camelcase": "Qpf.recF"
  },
  {
    "snakecase": "category_theory.limits.pullback_cone",
    "camelcase": "CategoryTheory.Limits.PullbackCone"
  },
  {
    "snakecase": "algebraic_geometry.RingedSpace",
    "camelcase": "AlgebraicGeometry.RingedSpace"
  },
  {
    "snakecase": "witt_vector.verschiebung",
    "camelcase": "WittVector.verschiebung"
  },
  {
    "snakecase": "category_theory.limits.initial.to",
    "camelcase": "CategoryTheory.Limits.initial.to"
  },
  {
    "snakecase": "padic_seq",
    "camelcase": "PadicSeq"
  },
  {
    "snakecase": "sub_mul_action",
    "camelcase": "SubMulAction"
  },
  {
    "snakecase": "measurable_space.generate_measurable",
    "camelcase": "MeasurableSpace.GenerateMeasurable"
  },
  {
    "snakecase": "div_inv_monoid",
    "camelcase": "DivInvMonoid"
  },
  {
    "snakecase": "ideal.is_jacobson",
    "camelcase": "Ideal.IsJacobson"
  },
  {
    "snakecase": "topological_space.compacts",
    "camelcase": "TopologicalSpace.Compacts"
  },
  {
    "snakecase": "category_theory.idempotents.karoubi",
    "camelcase": "CategoryTheory.Idempotents.Karoubi"
  },
  {
    "snakecase": "is_lower_set",
    "camelcase": "IsLowerSet"
  },
  {
    "snakecase": "laurent_polynomial.T",
    "camelcase": "LaurentPolynomial.t"
  },
  {
    "snakecase": "id_rel",
    "camelcase": "IdRel"
  },
  {
    "snakecase": "shrinking_lemma.partial_refinement",
    "camelcase": "ShrinkingLemma.PartialRefinement"
  },
  {
    "snakecase": "ring_hom_comp_triple",
    "camelcase": "RingHomCompTriple"
  },
  {
    "snakecase": "locally_finite",
    "camelcase": "LocallyFinite"
  },
  {
    "snakecase": "is_smul_regular",
    "camelcase": "IsSmulRegular"
  },
  {
    "snakecase": "parse_result.done",
    "camelcase": "ParseResult.done"
  },
  {
    "snakecase": "category_theory.arrow",
    "camelcase": "CategoryTheory.Arrow"
  },
  {
    "snakecase": "algebra",
    "camelcase": "Algebra"
  },
  {
    "snakecase": "frontier",
    "camelcase": "Frontier"
  },
  {
    "snakecase": "category_theory.limits.initial.to",
    "camelcase": "CategoryTheory.Limits.IsInitial.to"
  },
  {
    "snakecase": "non_unital_non_assoc_semiring",
    "camelcase": "NonUnitalNonAssocSemiring"
  },
  {
    "snakecase": "linear_ordered_comm_monoid_with_zero",
    "camelcase": "LinearOrderedCommMonoidWithZero"
  },
  {
    "snakecase": "real.angle",
    "camelcase": "Real.Angle"
  },
  {
    "snakecase": "monoid",
    "camelcase": "Monoid"
  },
  {
    "snakecase": "add_comm_semigroup",
    "camelcase": "AddCommSemigroup"
  },
  {
    "snakecase": "set.Union",
    "camelcase": "Set.union"
  },
  {
    "snakecase": "complete_lattice.independent",
    "camelcase": "CompleteLattice.Independent"
  },
  {
    "snakecase": "add_monoid_algebra.grade",
    "camelcase": "AddMonoidAlgebra.grade"
  },
  {
    "snakecase": "mv_polynomial",
    "camelcase": "MvPolynomial"
  },
  {
    "snakecase": "strict_concave_on",
    "camelcase": "StrictConcaveOn"
  },
  {
    "snakecase": "quotient_group.mk",
    "camelcase": "QuotientGroup.mk"
  },
  {
    "snakecase": "has_subset.subset",
    "camelcase": "HasSubset.Subset"
  },
  {
    "snakecase": "category_theory.enough_injectives",
    "camelcase": "CategoryTheory.EnoughInjectives"
  },
  {
    "snakecase": "has_continuous_neg",
    "camelcase": "HasContinuousNeg"
  },
  {
    "snakecase": "unit",
    "camelcase": "IsUnit"
  },
  {
    "snakecase": "alg_hom.id",
    "camelcase": "AlgHom.id"
  },
  {
    "snakecase": "set.center",
    "camelcase": "Set.Center"
  },
  {
    "snakecase": "vadd_comm_class",
    "camelcase": "VaddCommClass"
  },
  {
    "snakecase": "is_artinian",
    "camelcase": "IsArtinian"
  },
  {
    "snakecase": "is_coatomic",
    "camelcase": "IsCoatomic"
  },
  {
    "snakecase": "triv_sq_zero_ext.inl",
    "camelcase": "TrivSqZeroExt.inl"
  },
  {
    "snakecase": "upper_semicontinuous",
    "camelcase": "UpperSemicontinuous"
  },
  {
    "snakecase": "bump_covering",
    "camelcase": "BumpCovering"
  },
  {
    "snakecase": "add_subgroup.comap",
    "camelcase": "AddSubgroup.comap"
  },
  {
    "snakecase": "category_theory.mono",
    "camelcase": "CategoryTheory.Mono"
  },
  {
    "snakecase": "finset.image",
    "camelcase": "Finset.image"
  },
  {
    "snakecase": "superset",
    "camelcase": "Superset"
  },
  {
    "snakecase": "linear_map.ker",
    "camelcase": "LinearMap.ker"
  },
  {
    "snakecase": "has_Sup.Sup",
    "camelcase": "HasSup.sup"
  },
  {
    "snakecase": "add_subgroup",
    "camelcase": "IsAddSubgroup"
  },
  {
    "snakecase": "canonically_ordered_add_monoid",
    "camelcase": "CanonicallyOrderedAddMonoid"
  },
  {
    "snakecase": "sigma_compact_space",
    "camelcase": "SigmaCompactSpace"
  },
  {
    "snakecase": "module.free",
    "camelcase": "Module.Free"
  },
  {
    "snakecase": "non_unital_comm_ring",
    "camelcase": "NonUnitalCommRing"
  },
  {
    "snakecase": "topological_space.positive_compacts",
    "camelcase": "TopologicalSpace.PositiveCompacts"
  },
  {
    "snakecase": "equivalence",
    "camelcase": "Equivalence"
  },
  {
    "snakecase": "subfield.closure",
    "camelcase": "Subfield.closure"
  },
  {
    "snakecase": "lie_algebra.is_nilpotent",
    "camelcase": "LieAlgebra.IsNilpotent"
  },
  {
    "snakecase": "add_action",
    "camelcase": "AddAction"
  },
  {
    "snakecase": "category_theory.limits.preserves_finite_colimits",
    "camelcase": "CategoryTheory.Limits.PreservesFiniteColimits"
  },
  {
    "snakecase": "multiset.filter",
    "camelcase": "Multiset.filter"
  },
  {
    "snakecase": "embedding",
    "camelcase": "Embedding"
  },
  {
    "snakecase": "is_succ_archimedean",
    "camelcase": "IsSuccArchimedean"
  },
  {
    "snakecase": "category_theory.creates_colimit",
    "camelcase": "CategoryTheory.CreatesColimit"
  },
  {
    "snakecase": "list.length",
    "camelcase": "List.length"
  },
  {
    "snakecase": "closed_under_restriction",
    "camelcase": "ClosedUnderRestriction"
  },
  {
    "snakecase": "set.Inter",
    "camelcase": "Set.inter"
  },
  {
    "snakecase": "measure_theory.signed_measure",
    "camelcase": "MeasureTheory.SignedMeasure"
  },
  {
    "snakecase": "projective_spectrum",
    "camelcase": "ProjectiveSpectrum"
  },
  {
    "snakecase": "list.map",
    "camelcase": "List.map"
  },
  {
    "snakecase": "no_max_order",
    "camelcase": "NoMaxOrder"
  },
  {
    "snakecase": "semigroup",
    "camelcase": "Semigroup"
  },
  {
    "snakecase": "set.exposed_points",
    "camelcase": "Set.ExposedPoints"
  },
  {
    "snakecase": "circular_preorder",
    "camelcase": "CircularPreorder"
  },
  {
    "snakecase": "add_le_cancellable",
    "camelcase": "AddLeCancellable"
  },
  {
    "snakecase": "monoid_hom_class",
    "camelcase": "MonoidHomClass"
  },
  {
    "snakecase": "category_theory.section_",
    "camelcase": "CategoryTheory.section_"
  },
  {
    "snakecase": "sigma.mk",
    "camelcase": "Sigma.mk"
  },
  {
    "snakecase": "principal_ideal_ring.factors",
    "camelcase": "PrincipalIdealRing.factors"
  },
  {
    "snakecase": "witt_vector.standard_one_dim_isocrystal",
    "camelcase": "WittVector.StandardOneDimIsocrystal"
  },
  {
    "snakecase": "inter",
    "camelcase": "Inter"
  },
  {
    "snakecase": "euclidean_geometry.orthocentric_system",
    "camelcase": "EuclideanGeometry.OrthocentricSystem"
  },
  {
    "snakecase": "add_con.comap",
    "camelcase": "AddCon.comap"
  },
  {
    "snakecase": "subgroup.closure",
    "camelcase": "Subgroup.closure"
  },
  {
    "snakecase": "finset.fold",
    "camelcase": "Finset.fold"
  },
  {
    "snakecase": "category_theory.limits.preserves_limits_of_shape",
    "camelcase": "CategoryTheory.Limits.PreservesLimitsOfShape"
  },
  {
    "snakecase": "finset.Iio",
    "camelcase": "Finset.iio"
  },
  {
    "snakecase": "order.pfilter",
    "camelcase": "Order.Pfilter"
  },
  {
    "snakecase": "is_monoid_hom",
    "camelcase": "MonoidHom"
  },
  {
    "snakecase": "maximals",
    "camelcase": "Maximals"
  },
  {
    "snakecase": "category_theory.limits.colim",
    "camelcase": "CategoryTheory.Limits.colim"
  },
  {
    "snakecase": "topological_add_group",
    "camelcase": "TopologicalAddGroup"
  },
  {
    "snakecase": "star_ring",
    "camelcase": "StarRing"
  },
  {
    "snakecase": "cauchy_seq",
    "camelcase": "CauchySeq"
  },
  {
    "snakecase": "subsemiring.closure",
    "camelcase": "Subsemiring.closure"
  },
  {
    "snakecase": "generalized_continued_fraction.int_fract_pair.of",
    "camelcase": "GeneralizedContinuedFraction.IntFractPair.of"
  },
  {
    "snakecase": "cau_seq",
    "camelcase": "IsCauSeq"
  },
  {
    "snakecase": "decidable_eq",
    "camelcase": "DecidableEq"
  },
  {
    "snakecase": "Top.presheaf.sheaf_condition_equalizer_products.res",
    "camelcase": "Top.Presheaf.SheafConditionEqualizerProducts.res"
  },
  {
    "snakecase": "open_map",
    "camelcase": "IsOpenMap"
  },
  {
    "snakecase": "antitone_on",
    "camelcase": "AntitoneOn"
  },
  {
    "snakecase": "measure_theory.simple_func.const",
    "camelcase": "MeasureTheory.SimpleFunc.const"
  },
  {
    "snakecase": "encodable",
    "camelcase": "Encodable"
  },
  {
    "snakecase": "resolvent_set",
    "camelcase": "ResolventSet"
  },
  {
    "snakecase": "is_greatest",
    "camelcase": "IsGreatest"
  },
  {
    "snakecase": "lower_semicontinuous",
    "camelcase": "LowerSemicontinuous"
  },
  {
    "snakecase": "quiver.arborescence",
    "camelcase": "Quiver.Arborescence"
  },
  {
    "snakecase": "sym",
    "camelcase": "Sym"
  },
  {
    "snakecase": "unique_mdiff_on",
    "camelcase": "UniqueMdiffOn"
  },
  {
    "snakecase": "category_theory.ess_surj",
    "camelcase": "CategoryTheory.EssSurj"
  },
  {
    "snakecase": "category_theory.limits.has_products_of_shape",
    "camelcase": "CategoryTheory.Limits.HasProductsOfShape"
  },
  {
    "snakecase": "category_theory.limits.cotrident",
    "camelcase": "CategoryTheory.Limits.Cotrident"
  },
  {
    "snakecase": "is_complete",
    "camelcase": "IsComplete"
  },
  {
    "snakecase": "category_theory.epi",
    "camelcase": "CategoryTheory.Epi"
  },
  {
    "snakecase": "category_theory.Groupoid",
    "camelcase": "CategoryTheory.Groupoid"
  },
  {
    "snakecase": "is_complemented",
    "camelcase": "IsComplemented"
  },
  {
    "snakecase": "nat.fib",
    "camelcase": "Nat.fib"
  },
  {
    "snakecase": "function.antiperiodic",
    "camelcase": "Function.Antiperiodic"
  },
  {
    "snakecase": "bornology",
    "camelcase": "Bornology"
  },
  {
    "snakecase": "add_submonoid",
    "camelcase": "IsAddSubmonoid"
  },
  {
    "snakecase": "set.Union",
    "camelcase": "Set.Union"
  },
  {
    "snakecase": "dvd",
    "camelcase": "Dvd"
  },
  {
    "snakecase": "has_insert.insert",
    "camelcase": "HasInsert.insert"
  },
  {
    "snakecase": "normed_group_hom.id",
    "camelcase": "NormedGroupHom.id"
  },
  {
    "snakecase": "polynomial.derivative",
    "camelcase": "Polynomial.derivative"
  },
  {
    "snakecase": "module.ray.map",
    "camelcase": "Module.Ray.map"
  },
  {
    "snakecase": "quadratic_form.pi",
    "camelcase": "QuadraticForm.pi"
  },
  {
    "snakecase": "simple_graph",
    "camelcase": "SimpleGraph"
  },
  {
    "snakecase": "prod.lex",
    "camelcase": "Prod.lex"
  },
  {
    "snakecase": "has_continuous_const_smul",
    "camelcase": "HasContinuousConstSmul"
  },
  {
    "snakecase": "category_theory.limits.coprod.inl",
    "camelcase": "CategoryTheory.Limits.coprod.inl"
  },
  {
    "snakecase": "closed_embedding",
    "camelcase": "ClosedEmbedding"
  },
  {
    "snakecase": "category_theory.limits.has_strict_terminal_objects",
    "camelcase": "CategoryTheory.Limits.HasStrictTerminalObjects"
  },
  {
    "snakecase": "function.mul_support",
    "camelcase": "Function.MulSupport"
  },
  {
    "snakecase": "ordered_comm_monoid",
    "camelcase": "OrderedCommMonoid"
  },
  {
    "snakecase": "is_extreme",
    "camelcase": "IsExtreme"
  },
  {
    "snakecase": "Top.sheaf",
    "camelcase": "Top.Sheaf"
  },
  {
    "snakecase": "category_theory.presieve.family_of_elements",
    "camelcase": "CategoryTheory.Presieve.FamilyOfElements"
  },
  {
    "snakecase": "is_localization.sec",
    "camelcase": "IsLocalization.sec"
  },
  {
    "snakecase": "charted_space.atlas",
    "camelcase": "ChartedSpace.Atlas"
  },
  {
    "snakecase": "function.semiconj",
    "camelcase": "Function.Semiconj"
  },
  {
    "snakecase": "mul_action.stabilizer.submonoid",
    "camelcase": "MulAction.Stabilizer.submonoid"
  },
  {
    "snakecase": "has_inner.inner",
    "camelcase": "HasInner.inner"
  },
  {
    "snakecase": "nonunits",
    "camelcase": "Nonunits"
  },
  {
    "snakecase": "add_salem_spencer",
    "camelcase": "AddSalemSpencer"
  },
  {
    "snakecase": "strict_anti",
    "camelcase": "StrictAnti"
  },
  {
    "snakecase": "mvfunctor",
    "camelcase": "Mvfunctor"
  },
  {
    "snakecase": "is_symm",
    "camelcase": "symm"
  },
  {
    "snakecase": "is_max_filter",
    "camelcase": "IsMaxFilter"
  },
  {
    "snakecase": "multiset.Ico",
    "camelcase": "Multiset.ico"
  },
  {
    "snakecase": "category_theory.is_reflexive_pair",
    "camelcase": "CategoryTheory.IsReflexivePair"
  },
  {
    "snakecase": "has_star",
    "camelcase": "HasStar"
  },
  {
    "snakecase": "measure_theory.integrable_on",
    "camelcase": "MeasureTheory.IntegrableOn"
  },
  {
    "snakecase": "first_order.language.is_fraisse_limit",
    "camelcase": "FirstOrder.Language.IsFraisseLimit"
  },
  {
    "snakecase": "is_free_group",
    "camelcase": "IsFreeGroup"
  },
  {
    "snakecase": "algebraic_geometry.prime_spectrum.Top",
    "camelcase": "AlgebraicGeometry.PrimeSpectrum.top"
  },
  {
    "snakecase": "topological_space.first_countable_topology",
    "camelcase": "TopologicalSpace.FirstCountableTopology"
  },
  {
    "snakecase": "bundle.total_space",
    "camelcase": "Bundle.TotalSpace"
  },
  {
    "snakecase": "ideal.le_comap_map",
    "camelcase": "Ideal.le_comap_map"
  },
  {
    "snakecase": "submonoid_class",
    "camelcase": "SubmonoidClass"
  },
  {
    "snakecase": "category_theory.limits.is_initial",
    "camelcase": "CategoryTheory.Limits.initial"
  },
  {
    "snakecase": "relation.refl_trans_gen",
    "camelcase": "Relation.ReflTransGen"
  },
  {
    "snakecase": "is_topological_fiber_bundle",
    "camelcase": "IsTopologicalFiberBundle"
  },
  {
    "snakecase": "prime_multiset",
    "camelcase": "PrimeMultiset"
  },
  {
    "snakecase": "laurent_polynomial",
    "camelcase": "LaurentPolynomial"
  },
  {
    "snakecase": "hdiv",
    "camelcase": "HDiv"
  },
  {
    "snakecase": "polynomial.cyclotomic",
    "camelcase": "Polynomial.cyclotomic"
  },
  {
    "snakecase": "category_theory.limits.prod.braiding",
    "camelcase": "CategoryTheory.Limits.prod.braiding"
  },
  {
    "snakecase": "quiver.rooted_connected",
    "camelcase": "Quiver.RootedConnected"
  },
  {
    "snakecase": "has_set_prod.prod",
    "camelcase": "HasSetProd.prod"
  },
  {
    "snakecase": "submodule.span",
    "camelcase": "Submodule.span"
  },
  {
    "snakecase": "nonarchimedean_ring",
    "camelcase": "NonarchimedeanRing"
  },
  {
    "snakecase": "category_theory.subobject.lower",
    "camelcase": "CategoryTheory.Subobject.lower"
  },
  {
    "snakecase": "category_theory.cosimplicial_object",
    "camelcase": "CategoryTheory.CosimplicialObject"
  },
  {
    "snakecase": "floor_ring",
    "camelcase": "FloorRing"
  },
  {
    "snakecase": "dihedral_group",
    "camelcase": "DihedralGroup"
  },
  {
    "snakecase": "fin.succ",
    "camelcase": "Fin.succ"
  },
  {
    "snakecase": "zsqrtd.lift",
    "camelcase": "Zsqrtd.lift"
  },
  {
    "snakecase": "opens_measurable_space",
    "camelcase": "OpensMeasurableSpace"
  },
  {
    "snakecase": "asymptotics.superpolynomial_decay",
    "camelcase": "Asymptotics.SuperpolynomialDecay"
  },
  {
    "snakecase": "category_theory.costructured_arrow.map",
    "camelcase": "CategoryTheory.CostructuredArrow.map"
  },
  {
    "snakecase": "category_theory.limits.limit",
    "camelcase": "CategoryTheory.Limits.IsLimit"
  },
  {
    "snakecase": "finset.Icc",
    "camelcase": "Finset.icc"
  },
  {
    "snakecase": "free_product",
    "camelcase": "FreeProduct"
  },
  {
    "snakecase": "to_nat",
    "camelcase": "ToNat"
  },
  {
    "snakecase": "associated",
    "camelcase": "Associated"
  },
  {
    "snakecase": "tree",
    "camelcase": "Tree"
  },
  {
    "snakecase": "flow",
    "camelcase": "Flow"
  },
  {
    "snakecase": "option",
    "camelcase": "Option"
  },
  {
    "snakecase": "galois_coinsertion",
    "camelcase": "GaloisCoinsertion"
  },
  {
    "snakecase": "is_fraction_ring.num",
    "camelcase": "IsFractionRing.num"
  },
  {
    "snakecase": "one",
    "camelcase": "One"
  },
  {
    "snakecase": "coe",
    "camelcase": "Coe"
  },
  {
    "snakecase": "zero",
    "camelcase": "Zero"
  },
  {
    "snakecase": "mvfunctor.map",
    "camelcase": "Mvfunctor.map"
  },
  {
    "snakecase": "category_theory.limits.terminal.from",
    "camelcase": "CategoryTheory.Limits.IsTerminal.from"
  },
  {
    "snakecase": "category_theory.limits.binary_fan",
    "camelcase": "CategoryTheory.Limits.BinaryFan"
  },
  {
    "snakecase": "local_min",
    "camelcase": "IsLocalMin"
  },
  {
    "snakecase": "function.right_inverse",
    "camelcase": "Function.RightInverse"
  },
  {
    "snakecase": "category_theory.limits.has_zero_object",
    "camelcase": "CategoryTheory.Limits.HasZeroObject"
  },
  {
    "snakecase": "is_subgroup",
    "camelcase": "IsSubgroup"
  },
  {
    "snakecase": "zmod.val",
    "camelcase": "Zmod.val"
  },
  {
    "snakecase": "complete_lattice.is_sup_closed_compact",
    "camelcase": "CompleteLattice.IsSupClosedCompact"
  },
  {
    "snakecase": "measure_theory.simple_func.piecewise",
    "camelcase": "MeasureTheory.SimpleFunc.piecewise"
  },
  {
    "snakecase": "metric.thickening",
    "camelcase": "Metric.Thickening"
  },
  {
    "snakecase": "uv.compress",
    "camelcase": "Uv.compress"
  },
  {
    "snakecase": "function.commute",
    "camelcase": "Function.Commute"
  },
  {
    "snakecase": "padic_int.lift",
    "camelcase": "PadicInt.lift"
  },
  {
    "snakecase": "add_monoid_algebra",
    "camelcase": "AddMonoidAlgebra"
  },
  {
    "snakecase": "category_theory.exact_pairing",
    "camelcase": "CategoryTheory.ExactPairing"
  },
  {
    "snakecase": "cont_mdiff_within_at",
    "camelcase": "ContMdiffWithinAt"
  },
  {
    "snakecase": "continuous",
    "camelcase": "Continuous"
  },
  {
    "snakecase": "cont_mdiff_on",
    "camelcase": "ContMdiffOn"
  },
  {
    "snakecase": "measure_theory.measure.add_haar_measure",
    "camelcase": "MeasureTheory.Measure.IsAddHaarMeasure"
  },
  {
    "snakecase": "function.is_periodic_pt",
    "camelcase": "Function.IsPeriodicPt"
  },
  {
    "snakecase": "orthogonal_family",
    "camelcase": "OrthogonalFamily"
  },
  {
    "snakecase": "set.image",
    "camelcase": "Set.image"
  },
  {
    "snakecase": "eq_",
    "camelcase": "Eq"
  },
  {
    "snakecase": "valuation.comap",
    "camelcase": "Valuation.comap"
  },
  {
    "snakecase": "modular_group.fd",
    "camelcase": "ModularGroup.Fd"
  },
  {
    "snakecase": "valuation_ring",
    "camelcase": "ValuationRing"
  },
  {
    "snakecase": "cstar_ring",
    "camelcase": "CstarRing"
  },
  {
    "snakecase": "orientation",
    "camelcase": "Orientation"
  },
  {
    "snakecase": "local_max",
    "camelcase": "IsLocalMax"
  },
  {
    "snakecase": "ratfunc",
    "camelcase": "Ratfunc"
  },
  {
    "snakecase": "category_theory.ProjectiveResolution",
    "camelcase": "CategoryTheory.ProjectiveResolution"
  },
  {
    "snakecase": "cycle.nil",
    "camelcase": "Cycle.nil"
  },
  {
    "snakecase": "left_inv",
    "camelcase": "IsLeftInv"
  },
  {
    "snakecase": "inducing",
    "camelcase": "Inducing"
  },
  {
    "snakecase": "category_theory.limits.binary_cofan",
    "camelcase": "CategoryTheory.Limits.BinaryCofan"
  },
  {
    "snakecase": "measure_theory.measure.count",
    "camelcase": "MeasureTheory.Measure.count"
  },
  {
    "snakecase": "is_ring_hom",
    "camelcase": "RingHom"
  },
  {
    "snakecase": "normed_star_group",
    "camelcase": "NormedStarGroup"
  },
  {
    "snakecase": "subgroup.pi",
    "camelcase": "Subgroup.pi"
  },
  {
    "snakecase": "monoid_with_zero_hom_class",
    "camelcase": "MonoidWithZeroHomClass"
  },
  {
    "snakecase": "ultrafilter.extend",
    "camelcase": "Ultrafilter.extend"
  },
  {
    "snakecase": "lower_bounds",
    "camelcase": "LowerBounds"
  },
  {
    "snakecase": "add_monoid_hom.single",
    "camelcase": "AddMonoidHom.single"
  },
  {
    "snakecase": "is_mul_hom",
    "camelcase": "MulHom"
  },
  {
    "snakecase": "quadratic_form.associated",
    "camelcase": "QuadraticForm.associated"
  },
  {
    "snakecase": "nat.clog",
    "camelcase": "Nat.clog"
  },
  {
    "snakecase": "category_theory.presieve.family_of_elements.restrict",
    "camelcase": "CategoryTheory.Presieve.FamilyOfElements.restrict"
  },
  {
    "snakecase": "is_scalar_tower",
    "camelcase": "IsScalarTower"
  },
  {
    "snakecase": "is_free_group.generators",
    "camelcase": "IsFreeGroup.Generators"
  },
  {
    "snakecase": "pempty",
    "camelcase": "Pempty"
  },
  {
    "snakecase": "graded_monoid.gmonoid",
    "camelcase": "GradedMonoid.Gmonoid"
  },
  {
    "snakecase": "affine.simplex",
    "camelcase": "Affine.Simplex"
  },
  {
    "snakecase": "category_theory.limits.cokernel.desc",
    "camelcase": "CategoryTheory.Limits.cokernel.desc"
  },
  {
    "snakecase": "has_measurable_add",
    "camelcase": "HasMeasurableAdd"
  },
  {
    "snakecase": "wf_dvd_monoid",
    "camelcase": "WfDvdMonoid"
  },
  {
    "snakecase": "dihedral_group.r",
    "camelcase": "DihedralGroup.r"
  },
  {
    "snakecase": "polynomial.C",
    "camelcase": "Polynomial.c"
  },
  {
    "snakecase": "category_theory.has_right_dual",
    "camelcase": "CategoryTheory.HasRightDual"
  },
  {
    "snakecase": "acc",
    "camelcase": "Acc"
  },
  {
    "snakecase": "is_exposed",
    "camelcase": "IsExposed"
  },
  {
    "snakecase": "subsemiring",
    "camelcase": "Subsemiring"
  },
  {
    "snakecase": "measurable_embedding",
    "camelcase": "MeasurableEmbedding"
  },
  {
    "snakecase": "is_galois",
    "camelcase": "IsGalois"
  },
  {
    "snakecase": "is_submonoid",
    "camelcase": "Submonoid"
  },
  {
    "snakecase": "normed_linear_ordered_field",
    "camelcase": "NormedLinearOrderedField"
  },
  {
    "snakecase": "first_order.language.closed_under",
    "camelcase": "FirstOrder.Language.ClosedUnder"
  },
  {
    "snakecase": "comm_monoid",
    "camelcase": "CommMonoid"
  },
  {
    "snakecase": "discrete_valuation_ring.has_unit_mul_pow_irreducible_factorization",
    "camelcase": "DiscreteValuationRing.HasUnitMulPowIrreducibleFactorization"
  },
  {
    "snakecase": "is_max",
    "camelcase": "max"
  },
  {
    "snakecase": "clifford_algebra_quaternion.Q",
    "camelcase": "CliffordAlgebraQuaternion.q"
  },
  {
    "snakecase": "polynomial.aeval",
    "camelcase": "Polynomial.aeval"
  },
  {
    "snakecase": "closed",
    "camelcase": "IsClosed"
  },
  {
    "snakecase": "algebra.finite_presentation",
    "camelcase": "Algebra.FinitePresentation"
  },
  {
    "snakecase": "module.finite",
    "camelcase": "Module.Finite"
  },
  {
    "snakecase": "turing.to_partrec.cont",
    "camelcase": "Turing.ToPartrec.Cont"
  },
  {
    "snakecase": "category_theory.limits.has_coproduct",
    "camelcase": "CategoryTheory.Limits.HasCoproduct"
  },
  {
    "snakecase": "category_theory.limits.preserves_colimits_of_shape",
    "camelcase": "CategoryTheory.Limits.PreservesColimitsOfShape"
  },
  {
    "snakecase": "complex.re",
    "camelcase": "Complex.re"
  },
  {
    "snakecase": "free_product.neword",
    "camelcase": "FreeProduct.Neword"
  },
  {
    "snakecase": "category_theory.zigzag",
    "camelcase": "CategoryTheory.Zigzag"
  },
  {
    "snakecase": "prod.mk",
    "camelcase": "Prod.mk"
  },
  {
    "snakecase": "zero_lt.mul_pos_strict_mono",
    "camelcase": "ZeroLt.MulPosStrictMono"
  },
  {
    "snakecase": "category_theory.cover_dense",
    "camelcase": "CategoryTheory.CoverDense"
  },
  {
    "snakecase": "finsupp.erase",
    "camelcase": "Finsupp.erase"
  },
  {
    "snakecase": "encodable.decode",
    "camelcase": "Encodable.decode"
  },
  {
    "snakecase": "complete_linear_order",
    "camelcase": "CompleteLinearOrder"
  },
  {
    "snakecase": "is_localization.lift",
    "camelcase": "IsLocalization.lift"
  },
  {
    "snakecase": "is_add_monoid_hom",
    "camelcase": "AddMonoidHom"
  },
  {
    "snakecase": "is_conj",
    "camelcase": "IsConj"
  },
  {
    "snakecase": "category_theory.subobject.map",
    "camelcase": "CategoryTheory.Subobject.map"
  },
  {
    "snakecase": "primrec",
    "camelcase": "Primrec"
  },
  {
    "snakecase": "lucas_lehmer.q",
    "camelcase": "LucasLehmer.q"
  },
  {
    "snakecase": "add_monoid_algebra.of",
    "camelcase": "AddMonoidAlgebra.of"
  },
  {
    "snakecase": "omega.clause",
    "camelcase": "Omega.Clause"
  },
  {
    "snakecase": "multiset.Icc",
    "camelcase": "Multiset.icc"
  },
  {
    "snakecase": "module.free.choose_basis_index",
    "camelcase": "Module.Free.ChooseBasisIndex"
  },
  {
    "snakecase": "pointed",
    "camelcase": "Pointed"
  },
  {
    "snakecase": "nat.factorization",
    "camelcase": "Nat.factorization"
  },
  {
    "snakecase": "matrix.transvection_struct",
    "camelcase": "Matrix.TransvectionStruct"
  },
  {
    "snakecase": "measurable_singleton_class",
    "camelcase": "MeasurableSingletonClass"
  },
  {
    "snakecase": "category_theory.full",
    "camelcase": "CategoryTheory.Full"
  },
  {
    "snakecase": "add_subsemigroup.closure",
    "camelcase": "AddSubsemigroup.closure"
  },
  {
    "snakecase": "real.exp",
    "camelcase": "Real.exp"
  },
  {
    "snakecase": "linear_isometry_equiv.refl",
    "camelcase": "LinearIsometryEquiv.refl"
  },
  {
    "snakecase": "category_theory.limits.pushout_cocone",
    "camelcase": "CategoryTheory.Limits.PushoutCocone"
  },
  {
    "snakecase": "category_theory.limits.is_initial",
    "camelcase": "CategoryTheory.Limits.IsInitial"
  },
  {
    "snakecase": "category_theory.comm_sq",
    "camelcase": "CategoryTheory.CommSq"
  },
  {
    "snakecase": "associates",
    "camelcase": "Associates"
  },
  {
    "snakecase": "measure_theory.is_finite_measure",
    "camelcase": "MeasureTheory.FiniteMeasure"
  },
  {
    "snakecase": "quiver.wide_subquiver_symmetrify",
    "camelcase": "Quiver.WideSubquiverSymmetrify"
  },
  {
    "snakecase": "nat.bitwise",
    "camelcase": "Nat.bitwise"
  },
  {
    "snakecase": "list.count",
    "camelcase": "List.count"
  },
  {
    "snakecase": "topological_vector_bundle_core",
    "camelcase": "TopologicalVectorBundleCore"
  },
  {
    "snakecase": "set.unbounded",
    "camelcase": "Set.Unbounded"
  },
  {
    "snakecase": "antitone",
    "camelcase": "Antitone"
  },
  {
    "snakecase": "measure_theory.measurably_separable",
    "camelcase": "MeasureTheory.MeasurablySeparable"
  },
  {
    "snakecase": "is_preirreducible",
    "camelcase": "IsPreirreducible"
  },
  {
    "snakecase": "cont_mdiff",
    "camelcase": "ContMdiff"
  },
  {
    "snakecase": "is_reduced",
    "camelcase": "IsReduced"
  },
  {
    "snakecase": "rel",
    "camelcase": "Rel"
  },
  {
    "snakecase": "hadd",
    "camelcase": "HAdd"
  },
  {
    "snakecase": "normed_space",
    "camelcase": "NormedSpace"
  },
  {
    "snakecase": "has_distrib_neg",
    "camelcase": "HasDistribNeg"
  },
  {
    "snakecase": "ring_hom.finite",
    "camelcase": "RingHom.Finite"
  },
  {
    "snakecase": "category_theory.limits.binary_bicone",
    "camelcase": "CategoryTheory.Limits.BinaryBicone"
  },
  {
    "snakecase": "setoid",
    "camelcase": "Setoid"
  },
  {
    "snakecase": "homological_complex",
    "camelcase": "HomologicalComplex"
  },
  {
    "snakecase": "circle_integrable",
    "camelcase": "CircleIntegrable"
  },
  {
    "snakecase": "free_abelian_group",
    "camelcase": "FreeAbelianGroup"
  },
  {
    "snakecase": "shelf.act",
    "camelcase": "Shelf.act"
  },
  {
    "snakecase": "lie_ring_module",
    "camelcase": "LieRingModule"
  },
  {
    "snakecase": "configuration.nondegenerate",
    "camelcase": "Configuration.Nondegenerate"
  },
  {
    "snakecase": "unitization",
    "camelcase": "Unitization"
  },
  {
    "snakecase": "submodule.torsion",
    "camelcase": "Submodule.torsion"
  },
  {
    "snakecase": "linear_ordered_field",
    "camelcase": "LinearOrderedField"
  },
  {
    "snakecase": "cardinal.sum",
    "camelcase": "Cardinal.sum"
  },
  {
    "snakecase": "category_theory.bundled",
    "camelcase": "CategoryTheory.Bundled"
  },
  {
    "snakecase": "pSet",
    "camelcase": "PSet"
  },
  {
    "snakecase": "category_theory.free_bicategory.hom",
    "camelcase": "CategoryTheory.FreeBicategory.Hom"
  },
  {
    "snakecase": "add_hom_class",
    "camelcase": "AddHomClass"
  },
  {
    "snakecase": "quiver.root",
    "camelcase": "Quiver.root"
  },
  {
    "snakecase": "cardinal.mk",
    "camelcase": "Cardinal.mk"
  },
  {
    "snakecase": "continuous_map.conj_invariant_subalgebra",
    "camelcase": "ContinuousMap.ConjInvariantSubalgebra"
  },
  {
    "snakecase": "strict_anti_on",
    "camelcase": "StrictAntiOn"
  },
  {
    "snakecase": "is_add_left_regular",
    "camelcase": "IsAddLeftRegular"
  },
  {
    "snakecase": "category_theory.limits.reflects_colimit",
    "camelcase": "CategoryTheory.Limits.ReflectsColimit"
  },
  {
    "snakecase": "linear_map.id",
    "camelcase": "LinearMap.id"
  },
  {
    "snakecase": "topological_space.compacts.map",
    "camelcase": "TopologicalSpace.Compacts.map"
  },
  {
    "snakecase": "has_vsub",
    "camelcase": "HasVsub"
  },
  {
    "snakecase": "algebraic_geometry.PresheafedSpace.glue_data",
    "camelcase": "AlgebraicGeometry.PresheafedSpace.GlueData"
  },
  {
    "snakecase": "set_like.graded_monoid",
    "camelcase": "SetLike.GradedMonoid"
  },
  {
    "snakecase": "is_asymm",
    "camelcase": "asymm"
  },
  {
    "snakecase": "category_theory.limits.bicone",
    "camelcase": "CategoryTheory.Limits.Bicone"
  },
  {
    "snakecase": "is_antisymm",
    "camelcase": "Antisymm"
  },
  {
    "snakecase": "category_theory.limits.has_binary_coproducts",
    "camelcase": "CategoryTheory.Limits.HasBinaryCoproducts"
  },
  {
    "snakecase": "zero_hom_class",
    "camelcase": "ZeroHomClass"
  },
  {
    "snakecase": "bornology.is_cobounded",
    "camelcase": "Bornology.IsCobounded"
  },
  {
    "snakecase": "category_theory.limits.has_binary_biproducts",
    "camelcase": "CategoryTheory.Limits.HasBinaryBiproducts"
  },
  {
    "snakecase": "linear_recurrence",
    "camelcase": "LinearRecurrence"
  },
  {
    "snakecase": "local_equiv.refl",
    "camelcase": "LocalEquiv.refl"
  },
  {
    "snakecase": "option.some",
    "camelcase": "Option.some"
  },
  {
    "snakecase": "polynomial.dickson",
    "camelcase": "Polynomial.dickson"
  },
  {
    "snakecase": "upper_bounds",
    "camelcase": "UpperBounds"
  },
  {
    "snakecase": "is_partial_order",
    "camelcase": "IsPartialOrder"
  },
  {
    "snakecase": "matrix.row",
    "camelcase": "Matrix.row"
  },
  {
    "snakecase": "comp_rel",
    "camelcase": "CompRel"
  },
  {
    "snakecase": "category_theory.presheaf.is_sheaf",
    "camelcase": "CategoryTheory.Presheaf.IsSheaf"
  },
  {
    "snakecase": "with_top",
    "camelcase": "WithTop"
  },
  {
    "snakecase": "is_poly",
    "camelcase": "Poly"
  },
  {
    "snakecase": "category_theory.limits.fork",
    "camelcase": "CategoryTheory.Limits.Fork"
  },
  {
    "snakecase": "real.sin",
    "camelcase": "Real.sin"
  },
  {
    "snakecase": "category_theory.endofunctor.algebra",
    "camelcase": "CategoryTheory.Endofunctor.Algebra"
  },
  {
    "snakecase": "category_theory.has_left_dual",
    "camelcase": "CategoryTheory.HasLeftDual"
  },
  {
    "snakecase": "map_cluster_pt",
    "camelcase": "MapClusterPt"
  },
  {
    "snakecase": "part",
    "camelcase": "Part"
  },
  {
    "snakecase": "category_theory.limits.biprod.inr",
    "camelcase": "CategoryTheory.Limits.biprod.inr"
  },
  {
    "snakecase": "nondiscrete_normed_field",
    "camelcase": "NondiscreteNormedField"
  },
  {
    "snakecase": "lie_algebra",
    "camelcase": "LieAlgebra"
  },
  {
    "snakecase": "category_theory.arrow.mk",
    "camelcase": "CategoryTheory.Arrow.mk"
  },
  {
    "snakecase": "algebra.adjoin",
    "camelcase": "Algebra.adjoin"
  },
  {
    "snakecase": "cardinal.aleph",
    "camelcase": "Cardinal.aleph"
  },
  {
    "snakecase": "ring_hom_inv_pair",
    "camelcase": "RingHomInvPair"
  },
  {
    "snakecase": "algebra.is_algebraic",
    "camelcase": "Algebra.IsAlgebraic"
  },
  {
    "snakecase": "has_fderiv_within_at",
    "camelcase": "HasFderivWithinAt"
  },
  {
    "snakecase": "category_theory.limits.cokernel.",
    "camelcase": "CategoryTheory.Limits.cokernel"
  },
  {
    "snakecase": "category_theory.exponential_ideal",
    "camelcase": "CategoryTheory.ExponentialIdeal"
  },
  {
    "snakecase": "linear_ordered_cancel_add_comm_monoid",
    "camelcase": "LinearOrderedCancelAddCommMonoid"
  },
  {
    "snakecase": "topological_space.second_countable_topology",
    "camelcase": "TopologicalSpace.SecondCountableTopology"
  },
  {
    "snakecase": "is_conformal_map",
    "camelcase": "IsConformalMap"
  },
  {
    "snakecase": "category_theory.End",
    "camelcase": "CategoryTheory.End"
  },
  {
    "snakecase": "category_theory.limits.walking_pair.left",
    "camelcase": "CategoryTheory.Limits.WalkingPair.left"
  },
  {
    "snakecase": "category_theory.has_lifting_property",
    "camelcase": "CategoryTheory.HasLiftingProperty"
  },
  {
    "snakecase": "is_simple_order",
    "camelcase": "IsSimpleOrder"
  },
  {
    "snakecase": "non_unital_semiring",
    "camelcase": "NonUnitalSemiring"
  },
  {
    "snakecase": "comm_monoid_with_zero",
    "camelcase": "CommMonoidWithZero"
  },
  {
    "snakecase": "dioph.dioph_fn",
    "camelcase": "Dioph.DiophFn"
  },
  {
    "snakecase": "inhabited.default",
    "camelcase": "Inhabited.default"
  },
  {
    "snakecase": "category_theory.split_mono",
    "camelcase": "CategoryTheory.SplitMono"
  },
  {
    "snakecase": "polynomial.is_separable_contraction",
    "camelcase": "Polynomial.IsSeparableContraction"
  },
  {
    "snakecase": "category_theory.free_bicategory.preinclusion",
    "camelcase": "CategoryTheory.FreeBicategory.preinclusion"
  },
  {
    "snakecase": "nat",
    "camelcase": "Nat"
  },
  {
    "snakecase": "hilbert_basis",
    "camelcase": "HilbertBasis"
  },
  {
    "snakecase": "is_preconnected",
    "camelcase": "IsPreconnected"
  },
  {
    "snakecase": "order_closed_topology",
    "camelcase": "OrderClosedTopology"
  },
  {
    "snakecase": "ordered_add_comm_group",
    "camelcase": "OrderedAddCommGroup"
  },
  {
    "snakecase": "linear_ordered_comm_ring",
    "camelcase": "LinearOrderedCommRing"
  },
  {
    "snakecase": "differentiable_on",
    "camelcase": "DifferentiableOn"
  },
  {
    "snakecase": "list.take",
    "camelcase": "List.take"
  },
  {
    "snakecase": "seq_continuous",
    "camelcase": "SeqContinuous"
  },
  {
    "snakecase": "inner_product_geometry.angle",
    "camelcase": "InnerProductGeometry.angle"
  },
  {
    "snakecase": "real.pi",
    "camelcase": "Real.pi"
  },
  {
    "snakecase": "orientation.map",
    "camelcase": "Orientation.map"
  },
  {
    "snakecase": "finsupp.distrib_mul_action_hom.single",
    "camelcase": "Finsupp.DistribMulActionHom.single"
  },
  {
    "snakecase": "mdifferentiable_at",
    "camelcase": "MdifferentiableAt"
  },
  {
    "snakecase": "affine_basis",
    "camelcase": "AffineBasis"
  },
  {
    "snakecase": "cont_diff_within_at",
    "camelcase": "ContDiffWithinAt"
  },
  {
    "snakecase": "category_theory.limits.biproduct.",
    "camelcase": "CategoryTheory.Limits.biproduct"
  },
  {
    "snakecase": "is_artinian_ring",
    "camelcase": "IsArtinianRing"
  },
  {
    "snakecase": "is_field",
    "camelcase": "IsField"
  },
  {
    "snakecase": "compact_space",
    "camelcase": "CompactSpace"
  },
  {
    "snakecase": "add_action.fixed_by",
    "camelcase": "AddAction.FixedBy"
  },
  {
    "snakecase": "floor_semiring",
    "camelcase": "FloorSemiring"
  },
  {
    "snakecase": "matrix.reindex",
    "camelcase": "Matrix.reindex"
  },
  {
    "snakecase": "is_compl",
    "camelcase": "IsCompl"
  },
  {
    "snakecase": "is_asymm",
    "camelcase": "IsAsymm"
  },
  {
    "snakecase": "measure_theory.is_finite_measure",
    "camelcase": "MeasureTheory.IsFiniteMeasure"
  },
  {
    "snakecase": "is_associative",
    "camelcase": "associative"
  },
  {
    "snakecase": "set.surj_on",
    "camelcase": "Set.SurjOn"
  },
  {
    "snakecase": "add_subgroup.map",
    "camelcase": "AddSubgroup.map"
  },
  {
    "snakecase": "category_theory.locally_discrete",
    "camelcase": "CategoryTheory.LocallyDiscrete"
  },
  {
    "snakecase": "bool",
    "camelcase": "Bool"
  },
  {
    "snakecase": "algebraic_geometry.PresheafedSpace.is_open_immersion",
    "camelcase": "AlgebraicGeometry.PresheafedSpace.IsOpenImmersion"
  },
  {
    "snakecase": "has_deriv_at",
    "camelcase": "HasDerivAt"
  },
  {
    "snakecase": "category_theory.limits.preserves_filtered_colimits",
    "camelcase": "CategoryTheory.Limits.PreservesFilteredColimits"
  },
  {
    "snakecase": "distrib_lattice",
    "camelcase": "DistribLattice"
  },
  {
    "snakecase": "complex_shape.down",
    "camelcase": "ComplexShape.down"
  },
  {
    "snakecase": "continuous_map.uncurry",
    "camelcase": "ContinuousMap.uncurry"
  },
  {
    "snakecase": "module.End.has_eigenvector",
    "camelcase": "Module.End.HasEigenvector"
  },
  {
    "snakecase": "power_basis",
    "camelcase": "PowerBasis"
  },
  {
    "snakecase": "trans",
    "camelcase": "IsTrans"
  },
  {
    "snakecase": "nat.find",
    "camelcase": "Nat.find"
  },
  {
    "snakecase": "Top.presheaf.presieve_of_covering_aux",
    "camelcase": "Top.Presheaf.PresieveOfCoveringAux"
  },
  {
    "snakecase": "ultrafilter.map",
    "camelcase": "Ultrafilter.map"
  },
  {
    "snakecase": "typevec.id",
    "camelcase": "Typevec.id"
  },
  {
    "snakecase": "add_left_cancel_semigroup",
    "camelcase": "AddLeftCancelSemigroup"
  },
  {
    "snakecase": "array",
    "camelcase": "Array"
  },
  {
    "snakecase": "category_theory.presieve.is_separated_for",
    "camelcase": "CategoryTheory.Presieve.IsSeparatedFor"
  },
  {
    "snakecase": "invertible",
    "camelcase": "Invertible"
  },
  {
    "snakecase": "linear_independent",
    "camelcase": "LinearIndependent"
  },
  {
    "snakecase": "add_submonoid.closure",
    "camelcase": "AddSubmonoid.closure"
  },
  {
    "snakecase": "dihedral_group.sr",
    "camelcase": "DihedralGroup.sr"
  },
  {
    "snakecase": "homotopy",
    "camelcase": "Homotopy"
  },
  {
    "snakecase": "list.scanl",
    "camelcase": "List.scanl"
  },
  {
    "snakecase": "category_theory.abelian",
    "camelcase": "CategoryTheory.Abelian"
  },
  {
    "snakecase": "subring",
    "camelcase": "IsSubring"
  },
  {
    "snakecase": "category_theory.creates_limits_of_shape",
    "camelcase": "CategoryTheory.CreatesLimitsOfShape"
  },
  {
    "snakecase": "sum.inr",
    "camelcase": "Sum.inr"
  },
  {
    "snakecase": "polynomial.degree",
    "camelcase": "Polynomial.degree"
  },
  {
    "snakecase": "affine.simplex.altitude",
    "camelcase": "Affine.Simplex.altitude"
  },
  {
    "snakecase": "measure_theory.adapted",
    "camelcase": "MeasureTheory.Adapted"
  },
  {
    "snakecase": "right_inv",
    "camelcase": "IsRightInv"
  },
  {
    "snakecase": "finset.cons",
    "camelcase": "Finset.cons"
  },
  {
    "snakecase": "normed_space.dual",
    "camelcase": "NormedSpace.Dual"
  },
  {
    "snakecase": "subtype.val",
    "camelcase": "Subtype.val"
  },
  {
    "snakecase": "topological_space.nonempty_compacts",
    "camelcase": "TopologicalSpace.NonemptyCompacts"
  },
  {
    "snakecase": "subtraction_monoid",
    "camelcase": "SubtractionMonoid"
  },
  {
    "snakecase": "measurable",
    "camelcase": "Measurable"
  },
  {
    "snakecase": "linear_map.ltensor",
    "camelcase": "LinearMap.ltensor"
  },
  {
    "snakecase": "parser.nat",
    "camelcase": "Parser.nat"
  },
  {
    "snakecase": "is_localization.at_prime",
    "camelcase": "Localization.AtPrime"
  },
  {
    "snakecase": "omega_complete_partial_order",
    "camelcase": "OmegaCompletePartialOrder"
  },
  {
    "snakecase": "add_monoid_hom.id",
    "camelcase": "AddMonoidHom.id"
  },
  {
    "snakecase": "add_submonoid_class",
    "camelcase": "AddSubmonoidClass"
  },
  {
    "snakecase": "topological_vector_bundle.trivialization",
    "camelcase": "TopologicalVectorBundle.Trivialization"
  },
  {
    "snakecase": "finset.shadow",
    "camelcase": "Finset.shadow"
  },
  {
    "snakecase": "normed_group",
    "camelcase": "NormedGroup"
  },
  {
    "snakecase": "topological_fiber_bundle_core",
    "camelcase": "TopologicalFiberBundleCore"
  },
  {
    "snakecase": "category_theory.limits.has_binary_biproduct",
    "camelcase": "CategoryTheory.Limits.HasBinaryBiproduct"
  },
  {
    "snakecase": "emetric_space",
    "camelcase": "EmetricSpace"
  },
  {
    "snakecase": "liouville",
    "camelcase": "Liouville"
  },
  {
    "snakecase": "segment",
    "camelcase": "Segment"
  },
  {
    "snakecase": "category_theory.limits.pullback",
    "camelcase": "CategoryTheory.Limits.pullback"
  },
  {
    "snakecase": "disjoint",
    "camelcase": "Disjoint"
  },
  {
    "snakecase": "omega.nat.preterm.val",
    "camelcase": "Omega.Nat.Preterm.val"
  },
  {
    "snakecase": "option.map",
    "camelcase": "Option.map"
  },
  {
    "snakecase": "no_min_order",
    "camelcase": "NoMinOrder"
  },
  {
    "snakecase": "category_theory.limits.is_image",
    "camelcase": "CategoryTheory.Limits.IsImage"
  },
  {
    "snakecase": "contracting_with",
    "camelcase": "ContractingWith"
  },
  {
    "snakecase": "category_theory.is_filtered",
    "camelcase": "CategoryTheory.IsFiltered"
  },
  {
    "snakecase": "witt_vector.peval",
    "camelcase": "WittVector.peval"
  },
  {
    "snakecase": "densely_ordered",
    "camelcase": "DenselyOrdered"
  },
  {
    "snakecase": "ideal.is_jacobson",
    "camelcase": "Ideal.jacobson"
  },
  {
    "snakecase": "has_deriv_within_at",
    "camelcase": "HasDerivWithinAt"
  },
  {
    "snakecase": "polynomial",
    "camelcase": "Polynomial"
  },
  {
    "snakecase": "is_cyclotomic_extension.zeta",
    "camelcase": "IsCyclotomicExtension.zeta"
  },
  {
    "snakecase": "category_theory.mono_over",
    "camelcase": "CategoryTheory.MonoOver"
  },
  {
    "snakecase": "add_cancel_monoid",
    "camelcase": "AddCancelMonoid"
  },
  {
    "snakecase": "mul_action.fixed_points",
    "camelcase": "MulAction.FixedPoints"
  },
  {
    "snakecase": "projective_spectrum.zero_locus",
    "camelcase": "ProjectiveSpectrum.ZeroLocus"
  },
  {
    "snakecase": "has_btw.btw",
    "camelcase": "HasBtw.Btw"
  },
  {
    "snakecase": "metric.closed_ball",
    "camelcase": "Metric.ClosedBall"
  },
  {
    "snakecase": "category_theory.discrete.functor",
    "camelcase": "CategoryTheory.Discrete.functor"
  },
  {
    "snakecase": "has_sum",
    "camelcase": "HasSum"
  },
  {
    "snakecase": "subtype",
    "camelcase": "Subtype"
  },
  {
    "snakecase": "locally_constant",
    "camelcase": "LocallyConstant"
  },
  {
    "snakecase": "zero_lt.pos_mul_strict_mono",
    "camelcase": "ZeroLt.PosMulStrictMono"
  },
  {
    "snakecase": "category_theory.limits.pushout",
    "camelcase": "CategoryTheory.Limits.pushout"
  },
  {
    "snakecase": "continuous_map.curry",
    "camelcase": "ContinuousMap.curry"
  },
  {
    "snakecase": "is_min_filter",
    "camelcase": "IsMinFilter"
  },
  {
    "snakecase": "AddMon.filtered_colimits.M.mk",
    "camelcase": "AddMon.FilteredColimits.M.mk"
  },
  {
    "snakecase": "succ_order",
    "camelcase": "SuccOrder"
  },
  {
    "snakecase": "lie_ideal",
    "camelcase": "LieIdeal"
  },
  {
    "snakecase": "ord",
    "camelcase": "Ord"
  },
  {
    "snakecase": "qpf.P",
    "camelcase": "Qpf.p"
  },
  {
    "snakecase": "list.filter",
    "camelcase": "List.filter"
  },
  {
    "snakecase": "buffer.read",
    "camelcase": "Buffer.read"
  },
  {
    "snakecase": "additive",
    "camelcase": "Additive"
  },
  {
    "snakecase": "mul_action",
    "camelcase": "MulAction"
  },
  {
    "snakecase": "nat.lt",
    "camelcase": "Nat.lt"
  },
  {
    "snakecase": "is_min_on",
    "camelcase": "IsMinOn"
  },
  {
    "snakecase": "category_theory.limits.is_terminal",
    "camelcase": "CategoryTheory.Limits.terminal"
  },
  {
    "snakecase": "locally_constant",
    "camelcase": "IsLocallyConstant"
  },
  {
    "snakecase": "ring_hom_surjective",
    "camelcase": "RingHomSurjective"
  },
  {
    "snakecase": "mv_polynomial.coeff",
    "camelcase": "MvPolynomial.coeff"
  },
  {
    "snakecase": "seq_closure",
    "camelcase": "SeqClosure"
  },
  {
    "snakecase": "path.homotopic.quotient",
    "camelcase": "Path.Homotopic.Quotient"
  },
  {
    "snakecase": "gcd_monoid",
    "camelcase": "GcdMonoid"
  },
  {
    "snakecase": "ge",
    "camelcase": "Ge"
  },
  {
    "snakecase": "is_commutative",
    "camelcase": "IsCommutative"
  },
  {
    "snakecase": "noncompact_space",
    "camelcase": "NoncompactSpace"
  },
  {
    "snakecase": "pell.yn",
    "camelcase": "Pell.yn"
  },
  {
    "snakecase": "no_zero_smul_divisors",
    "camelcase": "NoZeroSmulDivisors"
  },
  {
    "snakecase": "finset.subtype",
    "camelcase": "Finset.subtype"
  },
  {
    "snakecase": "category_theory.limits.has_wide_pullbacks",
    "camelcase": "CategoryTheory.Limits.HasWidePullbacks"
  },
  {
    "snakecase": "qpf",
    "camelcase": "Qpf"
  },
  {
    "snakecase": "set.Inter",
    "camelcase": "Set.Inter"
  },
  {
    "snakecase": "is_free_group.of",
    "camelcase": "IsFreeGroup.of"
  },
  {
    "snakecase": "picard_lindelof",
    "camelcase": "PicardLindelof"
  },
  {
    "snakecase": "has_groupoid",
    "camelcase": "HasGroupoid"
  },
  {
    "snakecase": "strict_mono",
    "camelcase": "StrictMono"
  },
  {
    "snakecase": "add_aut.conj",
    "camelcase": "AddAut.conj"
  },
  {
    "snakecase": "linear_ordered_add_comm_group",
    "camelcase": "LinearOrderedAddCommGroup"
  },
  {
    "snakecase": "euclidean_geometry.angle",
    "camelcase": "EuclideanGeometry.angle"
  },
  {
    "snakecase": "category_theory.concrete_category",
    "camelcase": "CategoryTheory.ConcreteCategory"
  },
  {
    "snakecase": "category_theory.monoidal_category",
    "camelcase": "CategoryTheory.MonoidalCategory"
  },
  {
    "snakecase": "function.comp",
    "camelcase": "Function.comp"
  },
  {
    "snakecase": "subgroup.comap",
    "camelcase": "Subgroup.comap"
  },
  {
    "snakecase": "category_theory.creates_colimits_of_size",
    "camelcase": "CategoryTheory.CreatesColimitsOfSize"
  },
  {
    "snakecase": "is_ring_hom",
    "camelcase": "IsRingHom"
  },
  {
    "snakecase": "ring_hom_class",
    "camelcase": "RingHomClass"
  },
  {
    "snakecase": "one_hom",
    "camelcase": "OneHom"
  },
  {
    "snakecase": "category_theory.small_category",
    "camelcase": "CategoryTheory.SmallCategory"
  },
  {
    "snakecase": "is_complement",
    "camelcase": "Complement"
  },
  {
    "snakecase": "tactic.calculated_Prop",
    "camelcase": "Tactic.CalculatedProp"
  },
  {
    "snakecase": "add_semiconj_by",
    "camelcase": "AddSemiconjBy"
  },
  {
    "snakecase": "equiv.perm",
    "camelcase": "Equiv.perm"
  },
  {
    "snakecase": "relation.fibration",
    "camelcase": "Relation.Fibration"
  },
  {
    "snakecase": "prime_spectrum.comap",
    "camelcase": "PrimeSpectrum.comap"
  },
  {
    "snakecase": "open_segment",
    "camelcase": "OpenSegment"
  },
  {
    "snakecase": "inner_product_space.core",
    "camelcase": "InnerProductSpace.Core"
  },
  {
    "snakecase": "simplex_category.mk",
    "camelcase": "SimplexCategory.mk"
  },
  {
    "snakecase": "clopen",
    "camelcase": "IsClopen"
  },
  {
    "snakecase": "normed_division_ring",
    "camelcase": "NormedDivisionRing"
  },
  {
    "snakecase": "category_theory.exp",
    "camelcase": "CategoryTheory.exp"
  },
  {
    "snakecase": "strict_convex_space",
    "camelcase": "StrictConvexSpace"
  },
  {
    "snakecase": "mul_hom_class",
    "camelcase": "MulHomClass"
  },
  {
    "snakecase": "uniform_space.completion",
    "camelcase": "UniformSpace.Completion"
  },
  {
    "snakecase": "set.Iio",
    "camelcase": "Set.Iio"
  },
  {
    "snakecase": "invariant_basis_number",
    "camelcase": "InvariantBasisNumber"
  },
  {
    "snakecase": "composition_series",
    "camelcase": "CompositionSeries"
  },
  {
    "snakecase": "omega_limit",
    "camelcase": "OmegaLimit"
  },
  {
    "snakecase": "category_theory.is_coreflexive_pair",
    "camelcase": "CategoryTheory.IsCoreflexivePair"
  },
  {
    "snakecase": "has_continuous_sub",
    "camelcase": "HasContinuousSub"
  },
  {
    "snakecase": "subgroup.right_transversals",
    "camelcase": "Subgroup.RightTransversals"
  },
  {
    "snakecase": "category_theory.reflects_isomorphisms",
    "camelcase": "CategoryTheory.ReflectsIsomorphisms"
  },
  {
    "snakecase": "sub_neg_monoid",
    "camelcase": "SubNegMonoid"
  },
  {
    "snakecase": "category_theory.Ran",
    "camelcase": "CategoryTheory.ran"
  },
  {
    "snakecase": "besicovitch.tau_package",
    "camelcase": "Besicovitch.TauPackage"
  },
  {
    "snakecase": "prime_spectrum.zero_locus",
    "camelcase": "PrimeSpectrum.ZeroLocus"
  },
  {
    "snakecase": "polynomial.map",
    "camelcase": "Polynomial.map"
  },
  {
    "snakecase": "cancel_monoid",
    "camelcase": "CancelMonoid"
  },
  {
    "snakecase": "structure_groupoid",
    "camelcase": "StructureGroupoid"
  },
  {
    "snakecase": "filter.hyperfilter",
    "camelcase": "Filter.hyperfilter"
  },
  {
    "snakecase": "is_refl",
    "camelcase": "refl"
  },
  {
    "snakecase": "module.is_torsion_by",
    "camelcase": "Module.IsTorsionBy"
  },
  {
    "snakecase": "is_add_hom",
    "camelcase": "AddHom"
  },
  {
    "snakecase": "is_subgroup",
    "camelcase": "Subgroup"
  },
  {
    "snakecase": "finpartition",
    "camelcase": "Finpartition"
  },
  {
    "snakecase": "affine_independent",
    "camelcase": "AffineIndependent"
  },
  {
    "snakecase": "module.ray",
    "camelcase": "Module.Ray"
  },
  {
    "snakecase": "is_extr_filter",
    "camelcase": "IsExtrFilter"
  },
  {
    "snakecase": "is_of_fin_add_order",
    "camelcase": "IsOfFinAddOrder"
  },
  {
    "snakecase": "is_left_regular",
    "camelcase": "IsLeftRegular"
  },
  {
    "snakecase": "is_multiplicative",
    "camelcase": "Multiplicative"
  },
  {
    "snakecase": "witt_vector.teichmuller",
    "camelcase": "WittVector.teichmuller"
  },
  {
    "snakecase": "add_equiv_class",
    "camelcase": "AddEquivClass"
  },
  {
    "snakecase": "lie_module",
    "camelcase": "LieModule"
  },
  {
    "snakecase": "prod.rprod",
    "camelcase": "Prod.rprod"
  },
  {
    "snakecase": "algebraic_geometry.Scheme.pullback.gluing",
    "camelcase": "AlgebraicGeometry.Scheme.Pullback.gluing"
  },
  {
    "snakecase": "has_dist.dist",
    "camelcase": "HasDist.dist"
  },
  {
    "snakecase": "category_theory.simplicial_object",
    "camelcase": "CategoryTheory.SimplicialObject"
  },
  {
    "snakecase": "category_theory.limits.walking_parallel_family.one",
    "camelcase": "CategoryTheory.Limits.WalkingParallelFamily.one"
  },
  {
    "snakecase": "category_theory.presieve.yoneda_sheaf_condition",
    "camelcase": "CategoryTheory.Presieve.YonedaSheafCondition"
  },
  {
    "snakecase": "function.periodic",
    "camelcase": "Function.Periodic"
  },
  {
    "snakecase": "category_theory.split_epi",
    "camelcase": "CategoryTheory.SplitEpi"
  },
  {
    "snakecase": "graded_monoid",
    "camelcase": "GradedMonoid"
  },
  {
    "snakecase": "add_action.stabilizer",
    "camelcase": "AddAction.stabilizer"
  },
  {
    "snakecase": "wide_subquiver",
    "camelcase": "WideSubquiver"
  },
  {
    "snakecase": "lie_module.is_nilpotent",
    "camelcase": "LieModule.IsNilpotent"
  },
  {
    "snakecase": "mdifferentiable",
    "camelcase": "Mdifferentiable"
  },
  {
    "snakecase": "Mon.filtered_colimits.M.mk",
    "camelcase": "Mon.FilteredColimits.M.mk"
  },
  {
    "snakecase": "has_continuous_smul",
    "camelcase": "HasContinuousSmul"
  },
  {
    "snakecase": "ne",
    "camelcase": "Ne"
  },
  {
    "snakecase": "category_theory.is_subterminal",
    "camelcase": "CategoryTheory.IsSubterminal"
  },
  {
    "snakecase": "geometry.simplicial_complex",
    "camelcase": "Geometry.SimplicialComplex"
  },
  {
    "snakecase": "balanced_core",
    "camelcase": "BalancedCore"
  },
  {
    "snakecase": "has_ordered_sub",
    "camelcase": "HasOrderedSub"
  },
  {
    "snakecase": "is_upper_set",
    "camelcase": "UpperSet"
  },
  {
    "snakecase": "is_extr_on",
    "camelcase": "IsExtrOn"
  },
  {
    "snakecase": "dual_number",
    "camelcase": "DualNumber"
  },
  {
    "snakecase": "star_convex",
    "camelcase": "StarConvex"
  },
  {
    "snakecase": "group_topology",
    "camelcase": "GroupTopology"
  },
  {
    "snakecase": "pempty",
    "camelcase": "PEmpty"
  },
  {
    "snakecase": "is_local_ring_hom",
    "camelcase": "IsLocalRingHom"
  },
  {
    "snakecase": "witt_vector.frobenius",
    "camelcase": "WittVector.frobenius"
  },
  {
    "snakecase": "normed_add_torsor",
    "camelcase": "NormedAddTorsor"
  },
  {
    "snakecase": "eqv_gen.setoid",
    "camelcase": "EqvGen.setoid"
  },
  {
    "snakecase": "prod.map",
    "camelcase": "Prod.map"
  },
  {
    "snakecase": "category_theory.limits.has_binary_product",
    "camelcase": "CategoryTheory.Limits.HasBinaryProduct"
  },
  {
    "snakecase": "hsub",
    "camelcase": "HSub"
  },
  {
    "snakecase": "euclidean_geometry.reflection",
    "camelcase": "EuclideanGeometry.reflection"
  },
  {
    "snakecase": "totally_bounded",
    "camelcase": "TotallyBounded"
  },
  {
    "snakecase": "is_commutative",
    "camelcase": "Commutative"
  },
  {
    "snakecase": "uniform_group",
    "camelcase": "UniformGroup"
  },
  {
    "snakecase": "category_theory.limits.preserves_limits",
    "camelcase": "CategoryTheory.Limits.PreservesLimits"
  },
  {
    "snakecase": "set.Iic",
    "camelcase": "Set.Iic"
  },
  {
    "snakecase": "is_refl",
    "camelcase": "IsRefl"
  },
  {
    "snakecase": "configuration.has_lines",
    "camelcase": "Configuration.HasLines"
  },
  {
    "snakecase": "ultrafilter",
    "camelcase": "Ultrafilter"
  },
  {
    "snakecase": "heq",
    "camelcase": "HEq"
  },
  {
    "snakecase": "stream",
    "camelcase": "Stream"
  },
  {
    "snakecase": "topological_space.induced",
    "camelcase": "TopologicalSpace.induced"
  },
  {
    "snakecase": "multilinear_map.alternatization",
    "camelcase": "MultilinearMap.alternatization"
  },
  {
    "snakecase": "is_pred_archimedean",
    "camelcase": "IsPredArchimedean"
  },
  {
    "snakecase": "category_theory.limits.trident.",
    "camelcase": "CategoryTheory.Limits.Trident"
  },
  {
    "snakecase": "measure_theory.Lp",
    "camelcase": "MeasureTheory.lp"
  },
  {
    "snakecase": "category_theory.limits.equalizer.",
    "camelcase": "CategoryTheory.Limits.equalizer"
  },
  {
    "snakecase": "affine_subspace",
    "camelcase": "AffineSubspace"
  },
  {
    "snakecase": "finset.map",
    "camelcase": "Finset.map"
  },
  {
    "snakecase": "category_theory.limits.biprod.snd",
    "camelcase": "CategoryTheory.Limits.biprod.snd"
  },
  {
    "snakecase": "Top.presheaf",
    "camelcase": "Top.Presheaf"
  },
  {
    "snakecase": "infinite",
    "camelcase": "Infinite"
  },
  {
    "snakecase": "category_theory.limits.has_initial",
    "camelcase": "CategoryTheory.Limits.HasInitial"
  },
  {
    "snakecase": "conj_act",
    "camelcase": "ConjAct"
  },
  {
    "snakecase": "set.extreme_points",
    "camelcase": "Set.ExtremePoints"
  },
  {
    "snakecase": "finset.Ico",
    "camelcase": "Finset.ico"
  },
  {
    "snakecase": "is_localization.at_prime",
    "camelcase": "IsLocalization.AtPrime"
  },
  {
    "snakecase": "category_theory.limits.coprod.inr",
    "camelcase": "CategoryTheory.Limits.coprod.inr"
  },
  {
    "snakecase": "is_countably_spanning",
    "camelcase": "IsCountablySpanning"
  },
  {
    "snakecase": "cont_diff_bump_of_inner",
    "camelcase": "ContDiffBumpOfInner"
  },
  {
    "snakecase": "category_theory.limits.has_image_maps",
    "camelcase": "CategoryTheory.Limits.HasImageMaps"
  },
  {
    "snakecase": "category_theory.limits.cospan",
    "camelcase": "CategoryTheory.Limits.cospan"
  },
  {
    "snakecase": "modular_group.S",
    "camelcase": "ModularGroup.s"
  },
  {
    "snakecase": "real.cosh",
    "camelcase": "Real.cosh"
  },
  {
    "snakecase": "is_symm",
    "camelcase": "IsSymm"
  },
  {
    "snakecase": "is_integral",
    "camelcase": "IsIntegral"
  },
  {
    "snakecase": "add_localization.r",
    "camelcase": "AddLocalization.r"
  },
  {
    "snakecase": "graded_algebra",
    "camelcase": "GradedAlgebra"
  },
  {
    "snakecase": "has_abs.abs",
    "camelcase": "HasAbs.abs"
  },
  {
    "snakecase": "multiplicity.finite",
    "camelcase": "multiplicity.Finite"
  },
  {
    "snakecase": "tangent_cone_at",
    "camelcase": "TangentConeAt"
  },
  {
    "snakecase": "category_theory.limits.is_terminal",
    "camelcase": "CategoryTheory.Limits.IsTerminal"
  },
  {
    "snakecase": "complex.cosh",
    "camelcase": "Complex.cosh"
  },
  {
    "snakecase": "has_mem",
    "camelcase": "HasMem"
  },
  {
    "snakecase": "pnat.xgcd_type",
    "camelcase": "Pnat.XgcdType"
  },
  {
    "snakecase": "nat.log",
    "camelcase": "Nat.log"
  },
  {
    "snakecase": "power_series.mk",
    "camelcase": "PowerSeries.mk"
  },
  {
    "snakecase": "is_add_group_hom",
    "camelcase": "IsAddGroupHom"
  },
  {
    "snakecase": "category_theory.bicategory",
    "camelcase": "CategoryTheory.Bicategory"
  },
  {
    "snakecase": "free_algebra.",
    "camelcase": "FreeAlgebra"
  },
  {
    "snakecase": "is_associative",
    "camelcase": "IsAssociative"
  },
  {
    "snakecase": "linear_ordered_ring",
    "camelcase": "LinearOrderedRing"
  },
  {
    "snakecase": "cyclotomic_ring",
    "camelcase": "CyclotomicRing"
  },
  {
    "snakecase": "matrix.det",
    "camelcase": "Matrix.det"
  },
  {
    "snakecase": "quotient_add_group.mk",
    "camelcase": "QuotientAddGroup.mk"
  },
  {
    "snakecase": "order.partial_iso",
    "camelcase": "Order.PartialIso"
  },
  {
    "snakecase": "is_equiv",
    "camelcase": "Equiv"
  },
  {
    "snakecase": "category_theory.has_projective_resolutions",
    "camelcase": "CategoryTheory.HasProjectiveResolutions"
  },
  {
    "snakecase": "path",
    "camelcase": "Path"
  },
  {
    "snakecase": "zero_lt.mul_pos_mono",
    "camelcase": "ZeroLt.MulPosMono"
  },
  {
    "snakecase": "clifford_algebra_complex.Q",
    "camelcase": "CliffordAlgebraComplex.q"
  },
  {
    "snakecase": "measure_theory",
    "camelcase": "MeasureTheory"
  },
  {
    "snakecase": "asymptotics",
    "camelcase": "Asymptotics"
  },
  {
    "snakecase": "perm",
    "camelcase": "Perm"
  },
  {
    "snakecase": "is_cycle",
    "camelcase": "IsCycle"
  },
  {
    "snakecase": "category_theory",
    "camelcase": "CategoryTheory"
  },
  {
    "snakecase": "bicategory",
    "camelcase": "Bicategory"
  },
  {
    "snakecase": "probability_theory",
    "camelcase": "ProbabilityTheory"
  },
  {
    "snakecase": "pnat",
    "camelcase": "Pnat"
  },
  {
    "snakecase": "is_coprime",
    "camelcase": "Coprime"
  },
  {
    "snakecase": "endofunctor",
    "camelcase": "Endofunctor"
  },
  {
    "snakecase": "multiplicative",
    "camelcase": "Multiplicative"
  },
  {
    "snakecase": "quotient_add_group",
    "camelcase": "QuotientAddGroup"
  },
  {
    "snakecase": "units",
    "camelcase": "Units"
  },
  {
    "snakecase": "outer_measure",
    "camelcase": "OuterMeasure"
  },
  {
    "snakecase": "add_monoid_hom",
    "camelcase": "AddMonoidHom"
  },
  {
    "snakecase": "first_order",
    "camelcase": "FirstOrder"
  },
  {
    "snakecase": "language",
    "camelcase": "Language"
  },
  {
    "snakecase": "hom",
    "camelcase": "Hom"
  },
  {
    "snakecase": "order",
    "camelcase": "Order"
  },
  {
    "snakecase": "has_right_dual",
    "camelcase": "HasRightDual"
  },
  {
    "snakecase": "tactic",
    "camelcase": "Tactic"
  },
  {
    "snakecase": "parser",
    "camelcase": "Parser"
  },
  {
    "snakecase": "nonneg",
    "camelcase": "Nonneg"
  },
  {
    "snakecase": "partially_well_ordered_on",
    "camelcase": "PartiallyWellOrderedOn"
  },
  {
    "snakecase": "triangle",
    "camelcase": "Triangle"
  },
  {
    "snakecase": "is_max",
    "camelcase": "Max"
  },
  {
    "snakecase": "algebraic_geometry",
    "camelcase": "AlgebraicGeometry"
  },
  {
    "snakecase": "limits",
    "camelcase": "Limits"
  },
  {
    "snakecase": "dual",
    "camelcase": "Dual"
  },
  {
    "snakecase": "affine",
    "camelcase": "IsAffine"
  },
  {
    "snakecase": "linear_map",
    "camelcase": "LinearMap"
  },
  {
    "snakecase": "turing",
    "camelcase": "Turing"
  },
  {
    "snakecase": "reflects_colimit",
    "camelcase": "ReflectsColimit"
  },
  {
    "snakecase": "continuous_map",
    "camelcase": "ContinuousMap"
  },
  {
    "snakecase": "sup_indep",
    "camelcase": "SupIndep"
  },
  {
    "snakecase": "grothendieck_topology",
    "camelcase": "GrothendieckTopology"
  },
  {
    "snakecase": "real",
    "camelcase": "Real"
  },
  {
    "snakecase": "zsqrtd",
    "camelcase": "Zsqrtd"
  },
  {
    "snakecase": "lucas_lehmer",
    "camelcase": "LucasLehmer"
  },
  {
    "snakecase": "iso",
    "camelcase": "Iso"
  },
  {
    "snakecase": "wide_pullback_shape",
    "camelcase": "WidePullbackShape"
  },
  {
    "snakecase": "alg_hom",
    "camelcase": "AlgHom"
  },
  {
    "snakecase": "germ",
    "camelcase": "Germ"
  },
  {
    "snakecase": "measure",
    "camelcase": "Measure"
  },
  {
    "snakecase": "cone",
    "camelcase": "Cone"
  },
  {
    "snakecase": "reflects_isomorphisms",
    "camelcase": "ReflectsIsomorphisms"
  },
  {
    "snakecase": "jordan_decomposition",
    "camelcase": "JordanDecomposition"
  },
  {
    "snakecase": "bounded",
    "camelcase": "IsBounded"
  },
  {
    "snakecase": "omega",
    "camelcase": "Omega"
  },
  {
    "snakecase": "preterm",
    "camelcase": "Preterm"
  },
  {
    "snakecase": "inj_on",
    "camelcase": "InjOn"
  },
  {
    "snakecase": "has_cokernels",
    "camelcase": "HasCokernels"
  },
  {
    "snakecase": "is_add_submonoid",
    "camelcase": "AddSubmonoid"
  },
  {
    "snakecase": "q",
    "camelcase": "Q"
  },
  {
    "snakecase": "configuration",
    "camelcase": "Configuration"
  },
  {
    "snakecase": "affine_equiv",
    "camelcase": "AffineEquiv"
  },
  {
    "snakecase": "abelian",
    "camelcase": "Abelian"
  },
  {
    "snakecase": "dioph",
    "camelcase": "Dioph"
  },
  {
    "snakecase": "add_equiv",
    "camelcase": "AddEquiv"
  },
  {
    "snakecase": "filtered_colimits",
    "camelcase": "FilteredColimits"
  },
  {
    "snakecase": "empty_right",
    "camelcase": "is_empty_right"
  },
  {
    "snakecase": "filtration",
    "camelcase": "Filtration"
  },
  {
    "snakecase": "order_dual",
    "camelcase": "OrderDual"
  },
  {
    "snakecase": "pi_Lp",
    "camelcase": "PiLp"
  },
  {
    "snakecase": "presheaf",
    "camelcase": "Presheaf"
  },
  {
    "snakecase": "sheaf_condition_equalizer_products",
    "camelcase": "SheafConditionEqualizerProducts"
  },
  {
    "snakecase": "free_bicategory",
    "camelcase": "FreeBicategory"
  },
  {
    "snakecase": "elementary_embedding",
    "camelcase": "ElementaryEmbedding"
  },
  {
    "snakecase": "free",
    "camelcase": "Free"
  },
  {
    "snakecase": "is_open_immersion",
    "camelcase": "IsOpenImmersion"
  },
  {
    "snakecase": "sigma",
    "camelcase": "Sigma"
  },
  {
    "snakecase": "emetric",
    "camelcase": "Emetric"
  },
  {
    "snakecase": "arrow",
    "camelcase": "Arrow"
  },
  {
    "snakecase": "is_colimit",
    "camelcase": "colimit"
  },
  {
    "snakecase": "continuous_linear_map",
    "camelcase": "ContinuousLinearMap"
  },
  {
    "snakecase": "function",
    "camelcase": "Function"
  },
  {
    "snakecase": "surjective",
    "camelcase": "Surjective"
  },
  {
    "snakecase": "glue_data",
    "camelcase": "GlueData"
  },
  {
    "snakecase": "has_basis",
    "camelcase": "HasBasis"
  },
  {
    "snakecase": "monoidal_category",
    "camelcase": "MonoidalCategory"
  },
  {
    "snakecase": "core",
    "camelcase": "Core"
  },
  {
    "snakecase": "r",
    "camelcase": "R"
  },
  {
    "snakecase": "has_biproduct",
    "camelcase": "HasBiproduct"
  },
  {
    "snakecase": "ne_bot",
    "camelcase": "NeBot"
  },
  {
    "snakecase": "dir",
    "camelcase": "Dir"
  },
  {
    "snakecase": "opens",
    "camelcase": "Opens"
  },
  {
    "snakecase": "relation",
    "camelcase": "Relation"
  },
  {
    "snakecase": "padic_int",
    "camelcase": "PadicInt"
  },
  {
    "snakecase": "antiperiodic",
    "camelcase": "Antiperiodic"
  },
  {
    "snakecase": "simple_func",
    "camelcase": "SimpleFunc"
  },
  {
    "snakecase": "non_preadditive_abelian",
    "camelcase": "NonPreadditiveAbelian"
  },
  {
    "snakecase": "fraction_ring",
    "camelcase": "is_fraction_ring"
  },
  {
    "snakecase": "has_terminal",
    "camelcase": "HasTerminal"
  },
  {
    "snakecase": "split_mono",
    "camelcase": "SplitMono"
  },
  {
    "snakecase": "structure_sheaf",
    "camelcase": "StructureSheaf"
  },
  {
    "snakecase": "simple",
    "camelcase": "Simple"
  },
  {
    "snakecase": "discrete",
    "camelcase": "Discrete"
  },
  {
    "snakecase": "affine_map",
    "camelcase": "AffineMap"
  },
  {
    "snakecase": "tendsto",
    "camelcase": "Tendsto"
  },
  {
    "snakecase": "is_right_adjoint",
    "camelcase": "IsRightAdjoint"
  },
  {
    "snakecase": "over",
    "camelcase": "Over"
  },
  {
    "snakecase": "construct_products",
    "camelcase": "ConstructProducts"
  },
  {
    "snakecase": "xgcd_type",
    "camelcase": "XgcdType"
  },
  {
    "snakecase": "refl_trans_gen",
    "camelcase": "ReflTransGen"
  },
  {
    "snakecase": "is_add_submonoid",
    "camelcase": "IsAddSubmonoid"
  },
  {
    "snakecase": "transvection_struct",
    "camelcase": "TransvectionStruct"
  },
  {
    "snakecase": "presieve",
    "camelcase": "Presieve"
  },
  {
    "snakecase": "family_of_elements",
    "camelcase": "FamilyOfElements"
  },
  {
    "snakecase": "compatible",
    "camelcase": "Compatible"
  },
  {
    "snakecase": "completion",
    "camelcase": "Completion"
  },
  {
    "snakecase": "linear_equiv",
    "camelcase": "LinearEquiv"
  },
  {
    "snakecase": "prog_measurable",
    "camelcase": "ProgMeasurable"
  },
  {
    "snakecase": "has_finite_wide_pullbacks",
    "camelcase": "HasFiniteWidePullbacks"
  },
  {
    "snakecase": "mul_equiv",
    "camelcase": "MulEquiv"
  },
  {
    "snakecase": "is_colimit",
    "camelcase": "IsColimit"
  },
  {
    "snakecase": "map_iso",
    "camelcase": "map_is_iso"
  },
  {
    "snakecase": "quotient_group",
    "camelcase": "QuotientGroup"
  },
  {
    "snakecase": "is_zero",
    "camelcase": "IsZero"
  },
  {
    "snakecase": "is_top",
    "camelcase": "top"
  },
  {
    "snakecase": "is_prime",
    "camelcase": "IsPrime"
  },
  {
    "snakecase": "linear_isometry_equiv",
    "camelcase": "LinearIsometryEquiv"
  },
  {
    "snakecase": "colimit_adj",
    "camelcase": "ColimitAdj"
  },
  {
    "snakecase": "pi",
    "camelcase": "Pi"
  },
  {
    "snakecase": "haar",
    "camelcase": "Haar"
  },
  {
    "snakecase": "szemeredi_regularity",
    "camelcase": "SzemerediRegularity"
  },
  {
    "snakecase": "walking_multispan",
    "camelcase": "WalkingMultispan"
  },
  {
    "snakecase": "fork",
    "camelcase": "Fork"
  },
  {
    "snakecase": "is_limit",
    "camelcase": "IsLimit"
  },
  {
    "snakecase": "sized",
    "camelcase": "Sized"
  },
  {
    "snakecase": "power_series",
    "camelcase": "PowerSeries"
  },
  {
    "snakecase": "exists",
    "camelcase": "Exists"
  },
  {
    "snakecase": "equivalent",
    "camelcase": "IsEquivalent"
  },
  {
    "snakecase": "topological_vector_bundle",
    "camelcase": "TopologicalVectorBundle"
  },
  {
    "snakecase": "trivialization",
    "camelcase": "Trivialization"
  },
  {
    "snakecase": "monad",
    "camelcase": "Monad"
  },
  {
    "snakecase": "is_metric",
    "camelcase": "Metric"
  },
  {
    "snakecase": "has_injective_resolutions",
    "camelcase": "HasInjectiveResolutions"
  },
  {
    "snakecase": "comonad",
    "camelcase": "Comonad"
  },
  {
    "snakecase": "coalgebra",
    "camelcase": "Coalgebra"
  },
  {
    "snakecase": "isocrystal",
    "camelcase": "Isocrystal"
  },
  {
    "snakecase": "empty",
    "camelcase": "is_empty"
  },
  {
    "snakecase": "monic",
    "camelcase": "Monic"
  },
  {
    "snakecase": "shift",
    "camelcase": "Shift"
  },
  {
    "snakecase": "initial",
    "camelcase": "Initial"
  },
  {
    "snakecase": "torsion",
    "camelcase": "IsTorsion"
  },
  {
    "snakecase": "is_subgroup",
    "camelcase": "subgroup"
  },
  {
    "snakecase": "subobject",
    "camelcase": "Subobject"
  },
  {
    "snakecase": "mul_opposite",
    "camelcase": "MulOpposite"
  },
  {
    "snakecase": "is_quotient",
    "camelcase": "Quotient"
  },
  {
    "snakecase": "proj",
    "camelcase": "IsProj"
  },
  {
    "snakecase": "is_left_adjoint",
    "camelcase": "IsLeftAdjoint"
  },
  {
    "snakecase": "simplicial_object",
    "camelcase": "SimplicialObject"
  },
  {
    "snakecase": "is_zero",
    "camelcase": "zero"
  },
  {
    "snakecase": "is_limit",
    "camelcase": "limit"
  },
  {
    "snakecase": "Prop",
    "camelcase": "prop"
  },
  {
    "snakecase": "partrec",
    "camelcase": "Partrec"
  },
  {
    "snakecase": "code",
    "camelcase": "Code"
  },
  {
    "snakecase": "geometry",
    "camelcase": "Geometry"
  },
  {
    "snakecase": "simplicial_complex",
    "camelcase": "SimplicialComplex"
  },
  {
    "snakecase": "alg_equiv",
    "camelcase": "AlgEquiv"
  },
  {
    "snakecase": "eqv_gen",
    "camelcase": "EqvGen"
  },
  {
    "snakecase": "eq_on",
    "camelcase": "EqOn"
  },
  {
    "snakecase": "terminates",
    "camelcase": "Terminates"
  },
  {
    "snakecase": "iso",
    "camelcase": "is_iso"
  },
  {
    "snakecase": "ord_connected",
    "camelcase": "OrdConnected"
  },
  {
    "snakecase": "impartial",
    "camelcase": "Impartial"
  },
  {
    "snakecase": "cartesian_closed",
    "camelcase": "CartesianClosed"
  },
  {
    "snakecase": "is_Sup_finite_compact",
    "camelcase": "IsSupFiniteCompact"
  },
  {
    "snakecase": "linear_map",
    "camelcase": "IsLinearMap"
  },
  {
    "snakecase": "pell",
    "camelcase": "Pell"
  },
  {
    "snakecase": "Spec_",
    "camelcase": "Spec"
  },
  {
    "snakecase": "cochain_complex",
    "camelcase": "CochainComplex"
  },
  {
    "snakecase": "word",
    "camelcase": "Word"
  },
  {
    "snakecase": "is_coreflexive_pair",
    "camelcase": "IsCoreflexivePair"
  },
  {
    "snakecase": "monoid_hom",
    "camelcase": "MonoidHom"
  },
  {
    "snakecase": "has_strict_terminal_objects",
    "camelcase": "HasStrictTerminalObjects"
  },
  {
    "snakecase": "right",
    "camelcase": "Right"
  },
  {
    "snakecase": "eckmann_hilton",
    "camelcase": "EckmannHilton"
  },
  {
    "snakecase": "is_unital",
    "camelcase": "IsUnital"
  },
  {
    "snakecase": "regular_mono",
    "camelcase": "RegularMono"
  },
  {
    "snakecase": "neword",
    "camelcase": "Neword"
  },
  {
    "snakecase": "step",
    "camelcase": "Step"
  },
  {
    "snakecase": "weak_dual",
    "camelcase": "WeakDual"
  },
  {
    "snakecase": "is_bot",
    "camelcase": "Bot"
  },
  {
    "snakecase": "positive_compacts",
    "camelcase": "PositiveCompacts"
  },
  {
    "snakecase": "rat",
    "camelcase": "Rat"
  },
  {
    "snakecase": "is_integral",
    "camelcase": "Integral"
  },
  {
    "snakecase": "bounded",
    "camelcase": "Bounded"
  },
  {
    "snakecase": "linear",
    "camelcase": "Linear"
  },
  {
    "snakecase": "has_zero_object",
    "camelcase": "HasZeroObject"
  },
  {
    "snakecase": "cover_preserving",
    "camelcase": "CoverPreserving"
  },
  {
    "snakecase": "is_filtered",
    "camelcase": "IsFiltered"
  },
  {
    "snakecase": "distrib_mul_action_hom",
    "camelcase": "DistribMulActionHom"
  },
  {
    "snakecase": "bundled",
    "camelcase": "Bundled"
  },
  {
    "snakecase": "fundamental_groupoid",
    "camelcase": "FundamentalGroupoid"
  },
  {
    "snakecase": "C",
    "camelcase": "c"
  },
  {
    "snakecase": "finite",
    "camelcase": "IsFinite"
  },
  {
    "snakecase": "idempotents",
    "camelcase": "Idempotents"
  },
  {
    "snakecase": "karoubi",
    "camelcase": "Karoubi"
  },
  {
    "snakecase": "bundle",
    "camelcase": "Bundle"
  },
  {
    "snakecase": "adjunction",
    "camelcase": "Adjunction"
  },
  {
    "snakecase": "creates_colimit",
    "camelcase": "CreatesColimit"
  },
  {
    "snakecase": "localization_map",
    "camelcase": "LocalizationMap"
  },
  {
    "snakecase": "lex",
    "camelcase": "Lex"
  },
  {
    "snakecase": "trans",
    "camelcase": "is_trans"
  },
  {
    "snakecase": "sections",
    "camelcase": "Sections"
  },
  {
    "snakecase": "nat_trans",
    "camelcase": "NatTrans"
  },
  {
    "snakecase": "le",
    "camelcase": "Le"
  },
  {
    "snakecase": "has_image",
    "camelcase": "HasImage"
  },
  {
    "snakecase": "countable",
    "camelcase": "Countable"
  },
  {
    "snakecase": "modular_group",
    "camelcase": "ModularGroup"
  },
  {
    "snakecase": "biprod",
    "camelcase": "Biprod"
  },
  {
    "snakecase": "is_min",
    "camelcase": "min"
  },
  {
    "snakecase": "FP",
    "camelcase": "Fp"
  },
  {
    "snakecase": "is_finite_measure",
    "camelcase": "IsFiniteMeasure"
  },
  {
    "snakecase": "topological_fiber_bundle",
    "camelcase": "IsTopologicalFiberBundle"
  },
  {
    "snakecase": "zero_lt",
    "camelcase": "ZeroLt"
  },
  {
    "snakecase": "to_set",
    "camelcase": "ToSet"
  },
  {
    "snakecase": "pure",
    "camelcase": "Pure"
  },
  {
    "snakecase": "injective",
    "camelcase": "Injective"
  },
  {
    "snakecase": "clifford_algebra_quaternion",
    "camelcase": "CliffordAlgebraQuaternion"
  },
  {
    "snakecase": "chebyshev",
    "camelcase": "Chebyshev"
  },
  {
    "snakecase": "to_partrec",
    "camelcase": "ToPartrec"
  },
  {
    "snakecase": "types",
    "camelcase": "Types"
  },
  {
    "snakecase": "closeds",
    "camelcase": "Closeds"
  },
  {
    "snakecase": "inner_product_geometry",
    "camelcase": "InnerProductGeometry"
  },
  {
    "snakecase": "special_linear_group",
    "camelcase": "SpecialLinearGroup"
  },
  {
    "snakecase": "angle",
    "camelcase": "Angle"
  },
  {
    "snakecase": "is_prime",
    "camelcase": "Prime"
  },
  {
    "snakecase": "is_coprime",
    "camelcase": "coprime"
  },
  {
    "snakecase": "fs",
    "camelcase": "Fs"
  },
  {
    "snakecase": "walk",
    "camelcase": "Walk"
  },
  {
    "snakecase": "pequiv",
    "camelcase": "Pequiv"
  },
  {
    "snakecase": "sigma_finite",
    "camelcase": "SigmaFinite"
  },
  {
    "snakecase": "pairwise_disjoint",
    "camelcase": "PairwiseDisjoint"
  },
  {
    "snakecase": "besicovitch",
    "camelcase": "Besicovitch"
  },
  {
    "snakecase": "satellite_config",
    "camelcase": "SatelliteConfig"
  },
  {
    "snakecase": "frame",
    "camelcase": "Frame"
  },
  {
    "snakecase": "finite_type",
    "camelcase": "FiniteType"
  },
  {
    "snakecase": "refl",
    "camelcase": "is_refl"
  },
  {
    "snakecase": "positive_cone",
    "camelcase": "PositiveCone"
  },
  {
    "snakecase": "is_topological_basis",
    "camelcase": "IsTopologicalBasis"
  },
  {
    "snakecase": "walking_pair",
    "camelcase": "WalkingPair"
  },
  {
    "snakecase": "of_",
    "camelcase": "of"
  },
  {
    "snakecase": "cg",
    "camelcase": "Cg"
  },
  {
    "snakecase": "self_adjoint",
    "camelcase": "IsSelfAdjoint"
  },
  {
    "snakecase": "has_limits",
    "camelcase": "HasLimits"
  },
  {
    "snakecase": "clifford_algebra_complex",
    "camelcase": "CliffordAlgebraComplex"
  },
  {
    "snakecase": "mul_pos_strict_mono",
    "camelcase": "MulPosStrictMono"
  },
  {
    "snakecase": "cover",
    "camelcase": "Cover"
  },
  {
    "snakecase": "is_image",
    "camelcase": "IsImage"
  },
  {
    "snakecase": "has_set_prod",
    "camelcase": "HasSetProd"
  },
  {
    "snakecase": "pair",
    "camelcase": "Pair"
  },
  {
    "snakecase": "is_seq",
    "camelcase": "seq"
  },
  {
    "snakecase": "of_nat_iso",
    "camelcase": "OfNatIso"
  },
  {
    "snakecase": "compares",
    "camelcase": "Compares"
  },
  {
    "snakecase": "forget_creates_colimits",
    "camelcase": "ForgetCreatesColimits"
  },
  {
    "snakecase": "pushout_cocone",
    "camelcase": "PushoutCocone"
  },
  {
    "snakecase": "clause",
    "camelcase": "Clause"
  },
  {
    "snakecase": "center",
    "camelcase": "Center"
  },
  {
    "snakecase": "dynkin_system",
    "camelcase": "DynkinSystem"
  },
  {
    "snakecase": "separable_space",
    "camelcase": "SeparableSpace"
  },
  {
    "snakecase": "is_internal",
    "camelcase": "IsInternal"
  },
  {
    "snakecase": "height_one_spectrum",
    "camelcase": "HeightOneSpectrum"
  },
  {
    "snakecase": "substructure",
    "camelcase": "Substructure"
  },
  {
    "snakecase": "costructured_arrow",
    "camelcase": "CostructuredArrow"
  },
  {
    "snakecase": "lt",
    "camelcase": "IsLt"
  },
  {
    "snakecase": "reduce",
    "camelcase": "Reduce"
  },
  {
    "snakecase": "cosimplicial_object",
    "camelcase": "CosimplicialObject"
  },
  {
    "snakecase": "domain",
    "camelcase": "is_domain"
  },
  {
    "snakecase": "fuzzy",
    "camelcase": "Fuzzy"
  },
  {
    "snakecase": "has_colimits_of_shape",
    "camelcase": "HasColimitsOfShape"
  },
  {
    "snakecase": "has_binary_biproducts",
    "camelcase": "HasBinaryBiproducts"
  },
  {
    "snakecase": "is_field",
    "camelcase": "field"
  },
  {
    "snakecase": "bound",
    "camelcase": "Bound"
  },
  {
    "snakecase": "has_antitone_basis",
    "camelcase": "HasAntitoneBasis"
  },
  {
    "snakecase": "path",
    "camelcase": "IsPath"
  },
  {
    "snakecase": "Module",
    "camelcase": "module"
  },
  {
    "snakecase": "biproduct",
    "camelcase": "Biproduct"
  },
  {
    "snakecase": "arithmetic_function",
    "camelcase": "ArithmeticFunction"
  },
  {
    "snakecase": "cofork",
    "camelcase": "Cofork"
  },
  {
    "snakecase": "pre",
    "camelcase": "Pre"
  },
  {
    "snakecase": "pfilter",
    "camelcase": "Pfilter"
  },
  {
    "snakecase": "chain_complex",
    "camelcase": "ChainComplex"
  },
  {
    "snakecase": "integral_closure",
    "camelcase": "IntegralClosure"
  },
  {
    "snakecase": "initial_mono_class",
    "camelcase": "InitialMonoClass"
  },
  {
    "snakecase": "nonempty",
    "camelcase": "is_nonempty"
  },
  {
    "snakecase": "Lp",
    "camelcase": "lp"
  },
  {
    "snakecase": "creates_limits_of_shape",
    "camelcase": "CreatesLimitsOfShape"
  },
  {
    "snakecase": "bicone",
    "camelcase": "Bicone"
  },
  {
    "snakecase": "comp",
    "camelcase": "Comp"
  },
  {
    "snakecase": "is_normal",
    "camelcase": "Normal"
  },
  {
    "snakecase": "ee",
    "camelcase": "Ee"
  },
  {
    "snakecase": "principal_ideal_ring",
    "camelcase": "IsPrincipalIdealRing"
  },
  {
    "snakecase": "exact",
    "camelcase": "Exact"
  },
  {
    "snakecase": "classical",
    "camelcase": "Classical"
  },
  {
    "snakecase": "is_prime",
    "camelcase": "prime"
  },
  {
    "snakecase": "is_euclidean",
    "camelcase": "Euclidean"
  },
  {
    "snakecase": "signed_measure",
    "camelcase": "SignedMeasure"
  },
  {
    "snakecase": "is_primitive",
    "camelcase": "IsPrimitive"
  },
  {
    "snakecase": "is_total",
    "camelcase": "total"
  },
  {
    "snakecase": "refl",
    "camelcase": "IsRefl"
  },
  {
    "snakecase": "is_separable_contraction",
    "camelcase": "IsSeparableContraction"
  },
  {
    "snakecase": "is_complement",
    "camelcase": "complement"
  },
  {
    "snakecase": "enough_projectives",
    "camelcase": "EnoughProjectives"
  },
  {
    "snakecase": "final",
    "camelcase": "Final"
  },
  {
    "snakecase": "equivalence",
    "camelcase": "IsEquivalence"
  },
  {
    "snakecase": "is_finite_measure",
    "camelcase": "FiniteMeasure"
  },
  {
    "snakecase": "is_hermitian",
    "camelcase": "IsHermitian"
  },
  {
    "snakecase": "mono",
    "camelcase": "Mono"
  },
  {
    "snakecase": "cover_dense",
    "camelcase": "CoverDense"
  },
  {
    "snakecase": "has_limit",
    "camelcase": "HasLimit"
  },
  {
    "snakecase": "affine",
    "camelcase": "Affine"
  },
  {
    "snakecase": "simplex",
    "camelcase": "Simplex"
  },
  {
    "snakecase": "is_conjugate_exponent",
    "camelcase": "IsConjugateExponent"
  },
  {
    "snakecase": "subset",
    "camelcase": "Subset"
  },
  {
    "snakecase": "cofix",
    "camelcase": "Cofix"
  },
  {
    "snakecase": "ess_surj",
    "camelcase": "EssSurj"
  },
  {
    "snakecase": "has_lines",
    "camelcase": "HasLines"
  },
  {
    "snakecase": "hindman",
    "camelcase": "Hindman"
  },
  {
    "snakecase": "is_fraisse",
    "camelcase": "IsFraisse"
  },
  {
    "snakecase": "csring_expr",
    "camelcase": "CsringExpr"
  },
  {
    "snakecase": "right_deriv_measurable_aux",
    "camelcase": "RightDerivMeasurableAux"
  },
  {
    "snakecase": "is_integral",
    "camelcase": "integral"
  },
  {
    "snakecase": "fs",
    "camelcase": "FS"
  },
  {
    "snakecase": "binary_bicone",
    "camelcase": "BinaryBicone"
  },
  {
    "snakecase": "supp",
    "camelcase": "Supp"
  },
  {
    "snakecase": "bitwise",
    "camelcase": "Bitwise"
  },
  {
    "snakecase": "pullback",
    "camelcase": "Pullback"
  },
  {
    "snakecase": "has_multiequalizer",
    "camelcase": "HasMultiequalizer"
  },
  {
    "snakecase": "cocone",
    "camelcase": "Cocone"
  },
  {
    "snakecase": "sieve",
    "camelcase": "Sieve"
  },
  {
    "snakecase": "eq_",
    "camelcase": "eq"
  },
  {
    "snakecase": "cones",
    "camelcase": "Cones"
  },
  {
    "snakecase": "Union",
    "camelcase": "union"
  },
  {
    "snakecase": "has_insert",
    "camelcase": "HasInsert"
  },
  {
    "snakecase": "periodic",
    "camelcase": "Periodic"
  },
  {
    "snakecase": "Gromov_Hausdorff",
    "camelcase": "GromovHausdorff"
  },
  {
    "snakecase": "partition",
    "camelcase": "Partition"
  },
  {
    "snakecase": "is_sheaf",
    "camelcase": "Sheaf"
  },
  {
    "snakecase": "Sheaf_to_presheaf",
    "camelcase": "SheafToPresheaf"
  },
  {
    "snakecase": "Ico",
    "camelcase": "ico"
  },
  {
    "snakecase": "open_cover",
    "camelcase": "OpenCover"
  },
  {
    "snakecase": "strongly_measurable",
    "camelcase": "StronglyMeasurable"
  },
  {
    "snakecase": "has_abs",
    "camelcase": "HasAbs"
  },
  {
    "snakecase": "shelf",
    "camelcase": "Shelf"
  },
  {
    "snakecase": "is_image",
    "camelcase": "Image"
  },
  {
    "snakecase": "gal",
    "camelcase": "Gal"
  },
  {
    "snakecase": "has_finite_wide_pushouts",
    "camelcase": "HasFiniteWidePushouts"
  },
  {
    "snakecase": "has_lifting_property",
    "camelcase": "HasLiftingProperty"
  },
  {
    "snakecase": "pullback",
    "camelcase": "IsPullback"
  },
  {
    "snakecase": "fix",
    "camelcase": "Fix"
  },
  {
    "snakecase": "is_kernel_pair",
    "camelcase": "IsKernelPair"
  },
  {
    "snakecase": "equivalent",
    "camelcase": "Equivalent"
  },
  {
    "snakecase": "large",
    "camelcase": "Large"
  },
  {
    "snakecase": "Iio",
    "camelcase": "iio"
  },
  {
    "snakecase": "carrier",
    "camelcase": "Carrier"
  },
  {
    "snakecase": "red",
    "camelcase": "Red"
  },
  {
    "snakecase": "nonempty_compacts",
    "camelcase": "NonemptyCompacts"
  },
  {
    "snakecase": "euclidean_geometry",
    "camelcase": "EuclideanGeometry"
  },
  {
    "snakecase": "local_invariant_prop",
    "camelcase": "LocalInvariantProp"
  },
  {
    "snakecase": "rename",
    "camelcase": "Rename"
  },
  {
    "snakecase": "is_countably_generated",
    "camelcase": "IsCountablyGenerated"
  },
  {
    "snakecase": "hom_orthogonal",
    "camelcase": "HomOrthogonal"
  },
  {
    "snakecase": "int_fract_pair",
    "camelcase": "IntFractPair"
  },
  {
    "snakecase": "topological_fiber_bundle",
    "camelcase": "TopologicalFiberBundle"
  },
  {
    "snakecase": "is_absolute_value",
    "camelcase": "IsAbsoluteValue"
  },
  {
    "snakecase": "preadditive",
    "camelcase": "Preadditive"
  },
  {
    "snakecase": "is_some",
    "camelcase": "some"
  },
  {
    "snakecase": "creates_limit",
    "camelcase": "CreatesLimit"
  },
  {
    "snakecase": "projective",
    "camelcase": "Projective"
  },
  {
    "snakecase": "ssubset",
    "camelcase": "Ssubset"
  },
  {
    "snakecase": "lt",
    "camelcase": "Lt"
  },
  {
    "snakecase": "preserves_finite_limits",
    "camelcase": "PreservesFiniteLimits"
  },
  {
    "snakecase": "restrict_scalars",
    "camelcase": "RestrictScalars"
  },
  {
    "snakecase": "linear_isometry",
    "camelcase": "LinearIsometry"
  },
  {
    "snakecase": "integral_closure",
    "camelcase": "is_integral_closure"
  },
  {
    "snakecase": "duplicate",
    "camelcase": "Duplicate"
  },
  {
    "snakecase": "denumerable",
    "camelcase": "Denumerable"
  },
  {
    "snakecase": "chain",
    "camelcase": "Chain"
  },
  {
    "snakecase": "elementary_substructure",
    "camelcase": "ElementarySubstructure"
  },
  {
    "snakecase": "pre_envel_group",
    "camelcase": "PreEnvelGroup"
  },
  {
    "snakecase": "average",
    "camelcase": "Average"
  },
  {
    "snakecase": "semiconj",
    "camelcase": "Semiconj"
  },
  {
    "snakecase": "Set",
    "camelcase": "set"
  },
  {
    "snakecase": "singleton",
    "camelcase": "Singleton"
  },
  {
    "snakecase": "generators",
    "camelcase": "Generators"
  },
  {
    "snakecase": "init",
    "camelcase": "Init"
  },
  {
    "snakecase": "is_irreducible",
    "camelcase": "irreducible"
  },
  {
    "snakecase": "const",
    "camelcase": "Const"
  },
  {
    "snakecase": "Coprod",
    "camelcase": "coprod"
  },
  {
    "snakecase": "mono_factorisation",
    "camelcase": "MonoFactorisation"
  },
  {
    "snakecase": "fin_category",
    "camelcase": "FinCategory"
  },
  {
    "snakecase": "rprod",
    "camelcase": "Rprod"
  },
  {
    "snakecase": "surjective",
    "camelcase": "is_surjective"
  },
  {
    "snakecase": "conv",
    "camelcase": "Conv"
  },
  {
    "snakecase": "is_subordinate",
    "camelcase": "IsSubordinate"
  },
  {
    "snakecase": "is_absolute_value",
    "camelcase": "AbsoluteValue"
  },
  {
    "snakecase": "is_euclidean",
    "camelcase": "IsEuclidean"
  },
  {
    "snakecase": "iso",
    "camelcase": "IsIso"
  },
  {
    "snakecase": "is_image",
    "camelcase": "image"
  },
  {
    "snakecase": "nim",
    "camelcase": "Nim"
  },
  {
    "snakecase": "gen",
    "camelcase": "Gen"
  },
  {
    "snakecase": "ray",
    "camelcase": "Ray"
  },
  {
    "snakecase": "add_con_gen",
    "camelcase": "AddConGen"
  },
  {
    "snakecase": "mem_",
    "camelcase": "Mem"
  },
  {
    "snakecase": "maximal",
    "camelcase": "is_maximal"
  },
  {
    "snakecase": "free_algebra",
    "camelcase": "FreeAlgebra"
  },
  {
    "snakecase": "representable",
    "camelcase": "Representable"
  },
  {
    "snakecase": "is_submonoid",
    "camelcase": "submonoid"
  },
  {
    "snakecase": "base_set",
    "camelcase": "BaseSet"
  },
  {
    "snakecase": "quot",
    "camelcase": "Quot"
  },
  {
    "snakecase": "nodup",
    "camelcase": "Nodup"
  },
  {
    "snakecase": "horner_expr",
    "camelcase": "HornerExpr"
  },
  {
    "snakecase": "poly",
    "camelcase": "Poly"
  },
  {
    "snakecase": "minimal",
    "camelcase": "IsMinimal"
  },
  {
    "snakecase": "partition",
    "camelcase": "IsPartition"
  },
  {
    "snakecase": "has_points",
    "camelcase": "HasPoints"
  },
  {
    "snakecase": "relabelling",
    "camelcase": "Relabelling"
  },
  {
    "snakecase": "root_",
    "camelcase": "root"
  },
  {
    "snakecase": "universal_enveloping_algebra",
    "camelcase": "UniversalEnvelopingAlgebra"
  },
  {
    "snakecase": "is_separable",
    "camelcase": "Separable"
  },
  {
    "snakecase": "points_with_circumcenter_index",
    "camelcase": "PointsWithCircumcenterIndex"
  },
  {
    "snakecase": "list_blank",
    "camelcase": "ListBlank"
  },
  {
    "snakecase": "is_equiv",
    "camelcase": "equiv"
  },
  {
    "snakecase": "find",
    "camelcase": "Find"
  },
  {
    "snakecase": "is_reflexive_pair",
    "camelcase": "IsReflexivePair"
  },
  {
    "snakecase": "shrinking_lemma",
    "camelcase": "ShrinkingLemma"
  },
  {
    "snakecase": "partial_refinement",
    "camelcase": "PartialRefinement"
  },
  {
    "snakecase": "is_complete",
    "camelcase": "complete"
  },
  {
    "snakecase": "is_nilpotent",
    "camelcase": "nilpotent"
  },
  {
    "snakecase": "has_coequalizer",
    "camelcase": "HasCoequalizer"
  },
  {
    "snakecase": "fundamental_groupoid_functor",
    "camelcase": "FundamentalGroupoidFunctor"
  },
  {
    "snakecase": "has_nndist",
    "camelcase": "HasNndist"
  },
  {
    "snakecase": "is_clopenable",
    "camelcase": "IsClopenable"
  },
  {
    "snakecase": "is_compl",
    "camelcase": "compl"
  },
  {
    "snakecase": "binary_fan",
    "camelcase": "BinaryFan"
  },
  {
    "snakecase": "generate_measurable",
    "camelcase": "GenerateMeasurable"
  },
  {
    "snakecase": "is_idempotent_complete",
    "camelcase": "IsIdempotentComplete"
  },
  {
    "snakecase": "measure_preserving",
    "camelcase": "MeasurePreserving"
  },
  {
    "snakecase": "ideal",
    "camelcase": "IsIdeal"
  },
  {
    "snakecase": "has_left_dual",
    "camelcase": "HasLeftDual"
  },
  {
    "snakecase": "is_bilimit",
    "camelcase": "IsBilimit"
  },
  {
    "snakecase": "creates_colimits_of_size",
    "camelcase": "CreatesColimitsOfSize"
  },
  {
    "snakecase": "homotopic",
    "camelcase": "Homotopic"
  },
  {
    "snakecase": "has_lt",
    "camelcase": "HasLt"
  },
  {
    "snakecase": "cokernel_cofork",
    "camelcase": "CokernelCofork"
  },
  {
    "snakecase": "adj_matrix",
    "camelcase": "IsAdjMatrix"
  },
  {
    "snakecase": "category",
    "camelcase": "Category"
  },
  {
    "snakecase": "is_min",
    "camelcase": "IsMin"
  },
  {
    "snakecase": "has_equalizers",
    "camelcase": "HasEqualizers"
  },
  {
    "snakecase": "has_finite_limits",
    "camelcase": "HasFiniteLimits"
  },
  {
    "snakecase": "regular_epi",
    "camelcase": "RegularEpi"
  },
  {
    "snakecase": "to_add_monoid_hom",
    "camelcase": "to_is_add_monoid_hom"
  },
  {
    "snakecase": "tendsto_Ixx_class",
    "camelcase": "TendstoIxxClass"
  },
  {
    "snakecase": "add_monoid_hom",
    "camelcase": "IsAddMonoidHom"
  },
  {
    "snakecase": "mono_over",
    "camelcase": "MonoOver"
  },
  {
    "snakecase": "has_dist",
    "camelcase": "HasDist"
  },
  {
    "snakecase": "obj",
    "camelcase": "Obj"
  },
  {
    "snakecase": "liftr",
    "camelcase": "Liftr"
  },
  {
    "snakecase": "compatible_smul",
    "camelcase": "CompatibleSmul"
  },
  {
    "snakecase": "surj_on",
    "camelcase": "SurjOn"
  },
  {
    "snakecase": "zigzag",
    "camelcase": "Zigzag"
  },
  {
    "snakecase": "generate_measurable_rec",
    "camelcase": "GenerateMeasurableRec"
  },
  {
    "snakecase": "upto",
    "camelcase": "Upto"
  },
  {
    "snakecase": "left",
    "camelcase": "Left"
  },
  {
    "snakecase": "is_primitive",
    "camelcase": "Primitive"
  },
  {
    "snakecase": "is_cofiltered",
    "camelcase": "IsCofiltered"
  },
  {
    "snakecase": "to_fun",
    "camelcase": "ToFun"
  },
  {
    "snakecase": "strong_mono",
    "camelcase": "StrongMono"
  },
  {
    "snakecase": "trident",
    "camelcase": "Trident"
  },
  {
    "snakecase": "has_finite_products",
    "camelcase": "HasFiniteProducts"
  },
  {
    "snakecase": "well_powered",
    "camelcase": "WellPowered"
  },
  {
    "snakecase": "cofinite_topology",
    "camelcase": "CofiniteTopology"
  },
  {
    "snakecase": "uv",
    "camelcase": "Uv"
  },
  {
    "snakecase": "neg",
    "camelcase": "Neg"
  },
  {
    "snakecase": "is_normal",
    "camelcase": "IsNormal"
  },
  {
    "snakecase": "exterior_algebra",
    "camelcase": "ExteriorAlgebra"
  },
  {
    "snakecase": "has_edist",
    "camelcase": "HasEdist"
  },
  {
    "snakecase": "is_cartan_subalgebra",
    "camelcase": "IsCartanSubalgebra"
  },
  {
    "snakecase": "golden_ratio",
    "camelcase": "GoldenRatio"
  },
  {
    "snakecase": "extend",
    "camelcase": "Extend"
  },
  {
    "snakecase": "preserves_finite_colimits",
    "camelcase": "PreservesFiniteColimits"
  },
  {
    "snakecase": "is_periodic_pt",
    "camelcase": "IsPeriodicPt"
  },
  {
    "snakecase": "primes",
    "camelcase": "Primes"
  },
  {
    "snakecase": "is_scalar_tower",
    "camelcase": "scalar_tower"
  },
  {
    "snakecase": "Ran_is_sheaf_of_cover_lifting",
    "camelcase": "RanIsSheafOfCoverLifting"
  },
  {
    "snakecase": "has_sbtw",
    "camelcase": "HasSbtw"
  },
  {
    "snakecase": "sbtw",
    "camelcase": "Sbtw"
  },
  {
    "snakecase": "preserves_limit",
    "camelcase": "PreservesLimit"
  },
  {
    "snakecase": "smul",
    "camelcase": "Smul"
  },
  {
    "snakecase": "perfection",
    "camelcase": "Perfection"
  },
  {
    "snakecase": "Qf",
    "camelcase": "IsQf"
  },
  {
    "snakecase": "refl_gen",
    "camelcase": "ReflGen"
  },
  {
    "snakecase": "is_algebraic",
    "camelcase": "Algebraic"
  },
  {
    "snakecase": "exact_pairing",
    "camelcase": "ExactPairing"
  },
  {
    "snakecase": "fderiv_measurable_aux",
    "camelcase": "FderivMeasurableAux"
  },
  {
    "snakecase": "is_fixed_pt",
    "camelcase": "IsFixedPt"
  },
  {
    "snakecase": "multiplicative",
    "camelcase": "IsMultiplicative"
  },
  {
    "snakecase": "creates_colimits_of_shape",
    "camelcase": "CreatesColimitsOfShape"
  },
  {
    "snakecase": "is_quotient",
    "camelcase": "IsQuotient"
  },
  {
    "snakecase": "compact_conv_nhd",
    "camelcase": "CompactConvNhd"
  },
  {
    "snakecase": "pi_nat",
    "camelcase": "PiNat"
  },
  {
    "snakecase": "J",
    "camelcase": "j"
  },
  {
    "snakecase": "rprod",
    "camelcase": "RProd"
  },
  {
    "snakecase": "gluing",
    "camelcase": "Gluing"
  },
  {
    "snakecase": "is_atom",
    "camelcase": "atom"
  },
  {
    "snakecase": "add_localization",
    "camelcase": "AddLocalization"
  },
  {
    "snakecase": "mem_right_transversals",
    "camelcase": "MemRightTransversals"
  },
  {
    "snakecase": "is_noetherian",
    "camelcase": "Noetherian"
  },
  {
    "snakecase": "finite_presentation",
    "camelcase": "FinitePresentation"
  },
  {
    "snakecase": "monoid_hom",
    "camelcase": "IsMonoidHom"
  },
  {
    "snakecase": "is_two_block_diagonal",
    "camelcase": "IsTwoBlockDiagonal"
  },
  {
    "snakecase": "fg",
    "camelcase": "Fg"
  },
  {
    "snakecase": "reflective",
    "camelcase": "Reflective"
  },
  {
    "snakecase": "is_algebraic",
    "camelcase": "algebraic"
  },
  {
    "snakecase": "walking_cospan",
    "camelcase": "WalkingCospan"
  },
  {
    "snakecase": "frobenius",
    "camelcase": "Frobenius"
  },
  {
    "snakecase": "is_regular",
    "camelcase": "Regular"
  },
  {
    "snakecase": "con_gen",
    "camelcase": "ConGen"
  },
  {
    "snakecase": "maps_to",
    "camelcase": "MapsTo"
  },
  {
    "snakecase": "graph",
    "camelcase": "Graph"
  },
  {
    "snakecase": "S",
    "camelcase": "s"
  },
  {
    "snakecase": "lower",
    "camelcase": "IsLower"
  },
  {
    "snakecase": "compact",
    "camelcase": "is_compact"
  },
  {
    "snakecase": "w",
    "camelcase": "W"
  },
  {
    "snakecase": "Kuratowski_embedding",
    "camelcase": "KuratowskiEmbedding"
  },
  {
    "snakecase": "local_predicate",
    "camelcase": "LocalPredicate"
  },
  {
    "snakecase": "iic",
    "camelcase": "Iic"
  },
  {
    "snakecase": "centralizer",
    "camelcase": "Centralizer"
  },
  {
    "snakecase": "preserves_colimit",
    "camelcase": "PreservesColimit"
  },
  {
    "snakecase": "away",
    "camelcase": "Away"
  },
  {
    "snakecase": "gmonoid",
    "camelcase": "Gmonoid"
  },
  {
    "snakecase": "space",
    "camelcase": "Space"
  },
  {
    "snakecase": "is_admissible",
    "camelcase": "IsAdmissible"
  },
  {
    "snakecase": "color",
    "camelcase": "Color"
  },
  {
    "snakecase": "has_orthogonal_cols",
    "camelcase": "HasOrthogonalCols"
  },
  {
    "snakecase": "first_countable_topology",
    "camelcase": "FirstCountableTopology"
  },
  {
    "snakecase": "concrete_category",
    "camelcase": "ConcreteCategory"
  },
  {
    "snakecase": "superpolynomial_decay",
    "camelcase": "SuperpolynomialDecay"
  },
  {
    "snakecase": "is_add_hom",
    "camelcase": "add_hom"
  },
  {
    "snakecase": "maximal",
    "camelcase": "IsMaximal"
  },
  {
    "snakecase": "support",
    "camelcase": "Support"
  },
  {
    "snakecase": "iso",
    "camelcase": "IsO"
  },
  {
    "snakecase": "is_regular",
    "camelcase": "regular"
  },
  {
    "snakecase": "cau_seq",
    "camelcase": "is_cau_seq"
  },
  {
    "snakecase": "ball",
    "camelcase": "Ball"
  },
  {
    "snakecase": "splitting_field",
    "camelcase": "IsSplittingField"
  },
  {
    "snakecase": "f",
    "camelcase": "F"
  },
  {
    "snakecase": "metrizable_space",
    "camelcase": "MetrizableSpace"
  },
  {
    "snakecase": "dom_coprod",
    "camelcase": "DomCoprod"
  },
  {
    "snakecase": "urysohns",
    "camelcase": "Urysohns"
  },
  {
    "snakecase": "filtered_colimit",
    "camelcase": "FilteredColimit"
  },
  {
    "snakecase": "pos_mul_mono",
    "camelcase": "PosMulMono"
  },
  {
    "snakecase": "left_inverse",
    "camelcase": "LeftInverse"
  },
  {
    "snakecase": "pushout",
    "camelcase": "IsPushout"
  },
  {
    "snakecase": "buffer",
    "camelcase": "Buffer"
  },
  {
    "snakecase": "pretopology",
    "camelcase": "Pretopology"
  },
  {
    "snakecase": "paths",
    "camelcase": "Paths"
  },
  {
    "snakecase": "I",
    "camelcase": "i"
  },
  {
    "snakecase": "preserves_zero_morphisms",
    "camelcase": "PreservesZeroMorphisms"
  },
  {
    "snakecase": "fixed_points",
    "camelcase": "FixedPoints"
  },
  {
    "snakecase": "parse_result",
    "camelcase": "ParseResult"
  },
  {
    "snakecase": "is_normal",
    "camelcase": "normal"
  },
  {
    "snakecase": "closed",
    "camelcase": "Closed"
  },
  {
    "snakecase": "opposite",
    "camelcase": "Opposite"
  },
  {
    "snakecase": "coord",
    "camelcase": "Coord"
  },
  {
    "snakecase": "algebraic_topology",
    "camelcase": "AlgebraicTopology"
  },
  {
    "snakecase": "iota",
    "camelcase": "Iota"
  },
  {
    "snakecase": "is_directed",
    "camelcase": "directed"
  },
  {
    "snakecase": "has_products",
    "camelcase": "HasProducts"
  },
  {
    "snakecase": "has_strict_initial_objects",
    "camelcase": "HasStrictInitialObjects"
  },
  {
    "snakecase": "integers",
    "camelcase": "Integers"
  },
  {
    "snakecase": "nondegenerate",
    "camelcase": "Nondegenerate"
  },
  {
    "snakecase": "is_stopping_time",
    "camelcase": "IsStoppingTime"
  },
  {
    "snakecase": "isocrystal_equiv",
    "camelcase": "IsocrystalEquiv"
  },
  {
    "snakecase": "lift_hom",
    "camelcase": "LiftHom"
  },
  {
    "snakecase": "orthogonal",
    "camelcase": "Orthogonal"
  },
  {
    "snakecase": "int_valuation",
    "camelcase": "IntValuation"
  },
  {
    "snakecase": "lub",
    "camelcase": "is_lub"
  },
  {
    "snakecase": "parallel_pair",
    "camelcase": "ParallelPair"
  },
  {
    "snakecase": "simple",
    "camelcase": "IsSimple"
  },
  {
    "snakecase": "creates_limits_of_size",
    "camelcase": "CreatesLimitsOfSize"
  },
  {
    "snakecase": "charpoly",
    "camelcase": "charPoly"
  },
  {
    "snakecase": "U",
    "camelcase": "u"
  },
  {
    "snakecase": "eval",
    "camelcase": "Eval"
  },
  {
    "snakecase": "pullback_cone",
    "camelcase": "PullbackCone"
  },
  {
    "snakecase": "localization_preserves",
    "camelcase": "LocalizationPreserves"
  },
  {
    "snakecase": "map",
    "camelcase": "Map"
  },
  {
    "snakecase": "has_separable_contraction",
    "camelcase": "HasSeparableContraction"
  },
  {
    "snakecase": "dold_kan",
    "camelcase": "DoldKan"
  },
  {
    "snakecase": "join",
    "camelcase": "Join"
  },
  {
    "snakecase": "open_map",
    "camelcase": "is_open_map"
  },
  {
    "snakecase": "initial",
    "camelcase": "IsInitial"
  },
  {
    "snakecase": "unit",
    "camelcase": "is_unit"
  },
  {
    "snakecase": "bij_on",
    "camelcase": "BijOn"
  },
  {
    "snakecase": "principal",
    "camelcase": "Principal"
  },
  {
    "snakecase": "set_independent",
    "camelcase": "SetIndependent"
  },
  {
    "snakecase": "tfae",
    "camelcase": "Tfae"
  },
  {
    "snakecase": "torsion",
    "camelcase": "Torsion"
  },
  {
    "snakecase": "quandle",
    "camelcase": "Quandle"
  },
  {
    "snakecase": "cokernel",
    "camelcase": "Cokernel"
  },
  {
    "snakecase": "desc",
    "camelcase": "Desc"
  },
  {
    "snakecase": "chain",
    "camelcase": "IsChain"
  },
  {
    "snakecase": "normal_closure",
    "camelcase": "NormalClosure"
  },
  {
    "snakecase": "cospherical",
    "camelcase": "Cospherical"
  },
  {
    "snakecase": "torsion_by_set",
    "camelcase": "IsTorsionBySet"
  },
  {
    "snakecase": "limit_cone",
    "camelcase": "LimitCone"
  },
  {
    "snakecase": "cocones",
    "camelcase": "Cocones"
  },
  {
    "snakecase": "has_colimit",
    "camelcase": "HasColimit"
  },
  {
    "snakecase": "factor_thru_image",
    "camelcase": "FactorThruImage"
  },
  {
    "snakecase": "is_conj",
    "camelcase": "conj"
  },
  {
    "snakecase": "pseudo_metrizable_space",
    "camelcase": "PseudoMetrizableSpace"
  },
  {
    "snakecase": "is_colimit",
    "camelcase": "Colimit"
  },
  {
    "snakecase": "skeleton",
    "camelcase": "Skeleton"
  },
  {
    "snakecase": "is_sheaf",
    "camelcase": "IsSheaf"
  },
  {
    "snakecase": "comm_sq",
    "camelcase": "CommSq"
  },
  {
    "snakecase": "normal_mono_category",
    "camelcase": "NormalMonoCategory"
  },
  {
    "snakecase": "adj",
    "camelcase": "Adj"
  },
  {
    "snakecase": "X",
    "camelcase": "x"
  },
  {
    "snakecase": "is_internal",
    "camelcase": "Internal"
  },
  {
    "snakecase": "salient",
    "camelcase": "Salient"
  },
  {
    "snakecase": "option",
    "camelcase": "IsOption"
  },
  {
    "snakecase": "is_sheaf_for",
    "camelcase": "IsSheafFor"
  },
  {
    "snakecase": "has_limits_of_size",
    "camelcase": "HasLimitsOfSize"
  },
  {
    "snakecase": "coproducts_disjoint",
    "camelcase": "CoproductsDisjoint"
  },
  {
    "snakecase": "open_nhds",
    "camelcase": "OpenNhds"
  },
  {
    "snakecase": "exponent_exists",
    "camelcase": "ExponentExists"
  },
  {
    "snakecase": "lf",
    "camelcase": "Lf"
  },
  {
    "snakecase": "pure",
    "camelcase": "IsPure"
  },
  {
    "snakecase": "is_sheaf_unique_gluing",
    "camelcase": "IsSheafUniqueGluing"
  },
  {
    "snakecase": "rooted_connected",
    "camelcase": "RootedConnected"
  },
  {
    "snakecase": "has_finite_biproducts",
    "camelcase": "HasFiniteBiproducts"
  },
  {
    "snakecase": "countable_functions",
    "camelcase": "CountableFunctions"
  },
  {
    "snakecase": "orbit",
    "camelcase": "Orbit"
  },
  {
    "snakecase": "single_obj",
    "camelcase": "SingleObj"
  },
  {
    "snakecase": "splitting_field",
    "camelcase": "SplittingField"
  },
  {
    "snakecase": "none",
    "camelcase": "None"
  },
  {
    "snakecase": "Spec_",
    "camelcase": "spec"
  },
  {
    "snakecase": "preserves_colimits_of_shape",
    "camelcase": "PreservesColimitsOfShape"
  },
  {
    "snakecase": "section_",
    "camelcase": "section"
  },
  {
    "snakecase": "walking_parallel_family",
    "camelcase": "WalkingParallelFamily"
  },
  {
    "snakecase": "left_moves",
    "camelcase": "LeftMoves"
  },
  {
    "snakecase": "is_cofiltered",
    "camelcase": "cofiltered"
  },
  {
    "snakecase": "has_btw",
    "camelcase": "HasBtw"
  },
  {
    "snakecase": "cons",
    "camelcase": "Cons"
  },
  {
    "snakecase": "has_binary_biproduct",
    "camelcase": "HasBinaryBiproduct"
  },
  {
    "snakecase": "has_pullbacks",
    "camelcase": "HasPullbacks"
  },
  {
    "snakecase": "dimension_le_one",
    "camelcase": "DimensionLeOne"
  },
  {
    "snakecase": "lifts",
    "camelcase": "Lifts"
  },
  {
    "snakecase": "tau_package",
    "camelcase": "TauPackage"
  },
  {
    "snakecase": "at_prime",
    "camelcase": "AtPrime"
  },
  {
    "snakecase": "is_three_cycle",
    "camelcase": "IsThreeCycle"
  },
  {
    "snakecase": "right_inverse",
    "camelcase": "RightInverse"
  },
  {
    "snakecase": "principal",
    "camelcase": "IsPrincipal"
  },
  {
    "snakecase": "solution_set_condition",
    "camelcase": "SolutionSetCondition"
  },
  {
    "snakecase": "has_images",
    "camelcase": "HasImages"
  },
  {
    "snakecase": "full",
    "camelcase": "Full"
  },
  {
    "snakecase": "verschiebung",
    "camelcase": "Verschiebung"
  },
  {
    "snakecase": "list",
    "camelcase": "IsList"
  },
  {
    "snakecase": "finprod",
    "camelcase": "Finprod"
  },
  {
    "snakecase": "monoid_hom",
    "camelcase": "is_monoid_hom"
  },
  {
    "snakecase": "sep",
    "camelcase": "Sep"
  },
  {
    "snakecase": "ball_package",
    "camelcase": "BallPackage"
  },
  {
    "snakecase": "sizeof",
    "camelcase": "sizeOf"
  },
  {
    "snakecase": "is_connected",
    "camelcase": "Connected"
  },
  {
    "snakecase": "cover_lifting",
    "camelcase": "CoverLifting"
  },
  {
    "snakecase": "orthocentric_system",
    "camelcase": "OrthocentricSystem"
  },
  {
    "snakecase": "jacobson",
    "camelcase": "IsJacobson"
  },
  {
    "snakecase": "is_sheaf_opens_le_cover",
    "camelcase": "IsSheafOpensLeCover"
  },
  {
    "snakecase": "is_bot",
    "camelcase": "bot"
  },
  {
    "snakecase": "pivot",
    "camelcase": "Pivot"
  },
  {
    "snakecase": "bijective",
    "camelcase": "Bijective"
  },
  {
    "snakecase": "symmetrify",
    "camelcase": "Symmetrify"
  },
  {
    "snakecase": "spanning_tree",
    "camelcase": "SpanningTree"
  },
  {
    "snakecase": "pred",
    "camelcase": "Pred"
  },
  {
    "snakecase": "compacts",
    "camelcase": "Compacts"
  },
  {
    "snakecase": "terminal",
    "camelcase": "IsTerminal"
  },
  {
    "snakecase": "has_finite_colimits",
    "camelcase": "HasFiniteColimits"
  },
  {
    "snakecase": "coeff",
    "camelcase": "Coeff"
  },
  {
    "snakecase": "analytic_set",
    "camelcase": "AnalyticSet"
  },
  {
    "snakecase": "poly",
    "camelcase": "IsPoly"
  },
  {
    "snakecase": "is_G",
    "camelcase": "g"
  },
  {
    "snakecase": "closed",
    "camelcase": "is_closed"
  },
  {
    "snakecase": "Structure",
    "camelcase": "structure"
  },
  {
    "snakecase": "is_conj",
    "camelcase": "Conj"
  },
  {
    "snakecase": "equalizer",
    "camelcase": "Equalizer"
  },
  {
    "snakecase": "has_projective_resolutions",
    "camelcase": "HasProjectiveResolutions"
  },
  {
    "snakecase": "add_subgroup",
    "camelcase": "is_add_subgroup"
  },
  {
    "snakecase": "not_field",
    "camelcase": "not_is_field"
  },
  {
    "snakecase": "is_cobounded",
    "camelcase": "IsCobounded"
  },
  {
    "snakecase": "is_quotient",
    "camelcase": "quotient"
  },
  {
    "snakecase": "is_integer",
    "camelcase": "integer"
  },
  {
    "snakecase": "locally_discrete",
    "camelcase": "LocallyDiscrete"
  },
  {
    "snakecase": "terminal",
    "camelcase": "Terminal"
  },
  {
    "snakecase": "lt",
    "camelcase": "is_lt"
  },
  {
    "snakecase": "locally_cover_dense",
    "camelcase": "LocallyCoverDense"
  },
  {
    "snakecase": "is_complement",
    "camelcase": "IsComplement"
  },
  {
    "snakecase": "separates_points",
    "camelcase": "SeparatesPoints"
  },
  {
    "snakecase": "has_image_map",
    "camelcase": "HasImageMap"
  },
  {
    "snakecase": "strict_order",
    "camelcase": "is_strict_order"
  },
  {
    "snakecase": "MOD",
    "camelcase": "mod"
  },
  {
    "snakecase": "has_neg",
    "camelcase": "HasNeg"
  },
  {
    "snakecase": "is_torsion_free",
    "camelcase": "IsTorsionFree"
  },
  {
    "snakecase": "dec_",
    "camelcase": "dec"
  },
  {
    "snakecase": "Pb",
    "camelcase": "pB"
  },
  {
    "snakecase": "is_limit",
    "camelcase": "Limit"
  },
  {
    "snakecase": "powerset",
    "camelcase": "Powerset"
  },
  {
    "snakecase": "stalk",
    "camelcase": "Stalk"
  },
  {
    "snakecase": "flat",
    "camelcase": "Flat"
  },
  {
    "snakecase": "loc",
    "camelcase": "Loc"
  },
  {
    "snakecase": "second_countable_topology",
    "camelcase": "SecondCountableTopology"
  },
  {
    "snakecase": "pfilter",
    "camelcase": "IsPfilter"
  },
  {
    "snakecase": "mul_aut",
    "camelcase": "MulAut"
  },
  {
    "snakecase": "preserves_limits_of_shape",
    "camelcase": "PreservesLimitsOfShape"
  },
  {
    "snakecase": "dom",
    "camelcase": "Dom"
  },
  {
    "snakecase": "split_epi",
    "camelcase": "SplitEpi"
  },
  {
    "snakecase": "sorted",
    "camelcase": "Sorted"
  },
  {
    "snakecase": "succ",
    "camelcase": "Succ"
  },
  {
    "snakecase": "has_coproducts_of_shape",
    "camelcase": "HasCoproductsOfShape"
  },
  {
    "snakecase": "of_set",
    "camelcase": "OfSet"
  },
  {
    "snakecase": "enough_injectives",
    "camelcase": "EnoughInjectives"
  },
  {
    "snakecase": "partial_iso",
    "camelcase": "PartialIso"
  },
  {
    "snakecase": "is_finitely_satisfiable",
    "camelcase": "IsFinitelySatisfiable"
  },
  {
    "snakecase": "integrable_on",
    "camelcase": "IntegrableOn"
  },
  {
    "snakecase": "a",
    "camelcase": "A"
  },
  {
    "snakecase": "Model",
    "camelcase": "model"
  },
  {
    "snakecase": "add_torsion",
    "camelcase": "is_add_torsion"
  },
  {
    "snakecase": "B",
    "camelcase": "b"
  },
  {
    "snakecase": "trunc",
    "camelcase": "Trunc"
  },
  {
    "snakecase": "binary_biproduct",
    "camelcase": "BinaryBiproduct"
  },
  {
    "snakecase": "Ioc",
    "camelcase": "ioc"
  },
  {
    "snakecase": "derangements",
    "camelcase": "Derangements"
  },
  {
    "snakecase": "remove_none",
    "camelcase": "RemoveNone"
  },
  {
    "snakecase": "local_max",
    "camelcase": "is_local_max"
  },
  {
    "snakecase": "zag",
    "camelcase": "Zag"
  },
  {
    "snakecase": "preserves_filtered_colimits",
    "camelcase": "PreservesFilteredColimits"
  },
  {
    "snakecase": "strict_order",
    "camelcase": "IsStrictOrder"
  },
  {
    "snakecase": "is_zero",
    "camelcase": "Zero"
  },
  {
    "snakecase": "pre_envel_group_rel",
    "camelcase": "PreEnvelGroupRel"
  },
  {
    "snakecase": "alternating_face_map_complex",
    "camelcase": "AlternatingFaceMapComplex"
  },
  {
    "snakecase": "M",
    "camelcase": "m"
  },
  {
    "snakecase": "arborescence",
    "camelcase": "Arborescence"
  },
  {
    "snakecase": "colimit_cocone",
    "camelcase": "ColimitCocone"
  },
  {
    "snakecase": "transcendental",
    "camelcase": "is_transcendental"
  },
  {
    "snakecase": "supports",
    "camelcase": "Supports"
  },
  {
    "snakecase": "is_fundamental_sequence",
    "camelcase": "IsFundamentalSequence"
  },
  {
    "snakecase": "star",
    "camelcase": "Star"
  },
  {
    "snakecase": "normal_epi_category",
    "camelcase": "NormalEpiCategory"
  },
  {
    "snakecase": "has_colimits_of_size",
    "camelcase": "HasColimitsOfSize"
  },
  {
    "snakecase": "subcanonical",
    "camelcase": "Subcanonical"
  },
  {
    "snakecase": "rat",
    "camelcase": "is_rat"
  },
  {
    "snakecase": "zero_locus",
    "camelcase": "ZeroLocus"
  },
  {
    "snakecase": "has_kernels",
    "camelcase": "HasKernels"
  },
  {
    "snakecase": "has_pullback",
    "camelcase": "HasPullback"
  },
  {
    "snakecase": "is_integrally_closed",
    "camelcase": "integrally_closed"
  },
  {
    "snakecase": "essentially_small",
    "camelcase": "EssentiallySmall"
  },
  {
    "snakecase": "projectivization",
    "camelcase": "Projectivization"
  },
  {
    "snakecase": "localization",
    "camelcase": "is_localization"
  },
  {
    "snakecase": "topological_ring",
    "camelcase": "is_topological_ring"
  },
  {
    "snakecase": "Ioo",
    "camelcase": "ioo"
  },
  {
    "snakecase": "add_aut",
    "camelcase": "AddAut"
  },
  {
    "snakecase": "is_solvable",
    "camelcase": "solvable"
  },
  {
    "snakecase": "unsat",
    "camelcase": "Unsat"
  },
  {
    "snakecase": "blunt",
    "camelcase": "Blunt"
  },
  {
    "snakecase": "local_min",
    "camelcase": "is_local_min"
  },
  {
    "snakecase": "polar",
    "camelcase": "Polar"
  },
  {
    "snakecase": "curry",
    "camelcase": "Curry"
  },
  {
    "snakecase": "add_monoid_hom",
    "camelcase": "is_add_monoid_hom"
  },
  {
    "snakecase": "is_compact_element",
    "camelcase": "IsCompactElement"
  },
  {
    "snakecase": "mem_",
    "camelcase": "mem"
  },
  {
    "snakecase": "is_local_structomorph_within_at",
    "camelcase": "IsLocalStructomorphWithinAt"
  },
  {
    "snakecase": "trans_gen",
    "camelcase": "TransGen"
  },
  {
    "snakecase": "cotrident",
    "camelcase": "Cotrident"
  },
  {
    "snakecase": "separating_right",
    "camelcase": "SeparatingRight"
  },
  {
    "snakecase": "univ",
    "camelcase": "Univ"
  },
  {
    "snakecase": "is_open_immersion",
    "camelcase": "OpenImmersion"
  },
  {
    "snakecase": "exponential_ideal",
    "camelcase": "ExponentialIdeal"
  },
  {
    "snakecase": "faithful",
    "camelcase": "Faithful"
  },
  {
    "snakecase": "numeric",
    "camelcase": "Numeric"
  },
  {
    "snakecase": "clique_free",
    "camelcase": "CliqueFree"
  },
  {
    "snakecase": "idx",
    "camelcase": "Idx"
  },
  {
    "snakecase": "has_image_maps",
    "camelcase": "HasImageMaps"
  },
  {
    "snakecase": "swap",
    "camelcase": "IsSwap"
  },
  {
    "snakecase": "shadow",
    "camelcase": "Shadow"
  },
  {
    "snakecase": "has_shift",
    "camelcase": "HasShift"
  },
  {
    "snakecase": "is_artinian",
    "camelcase": "Artinian"
  },
  {
    "snakecase": "strong_epi_mono_factorisation",
    "camelcase": "StrongEpiMonoFactorisation"
  },
  {
    "snakecase": "has_limits_of_shape",
    "camelcase": "HasLimitsOfShape"
  },
  {
    "snakecase": "factor_thru_coimage",
    "camelcase": "FactorThruCoimage"
  },
  {
    "snakecase": "root_",
    "camelcase": "IsRoot"
  },
  {
    "snakecase": "app",
    "camelcase": "App"
  },
  {
    "snakecase": "insert",
    "camelcase": "Insert"
  },
  {
    "snakecase": "has_binary_products",
    "camelcase": "HasBinaryProducts"
  },
  {
    "snakecase": "inducing",
    "camelcase": "is_inducing"
  },
  {
    "snakecase": "ker",
    "camelcase": "Ker"
  },
  {
    "snakecase": "range",
    "camelcase": "Range"
  },
  {
    "snakecase": "has_inner",
    "camelcase": "HasInner"
  },
  {
    "snakecase": "default",
    "camelcase": "Default"
  },
  {
    "snakecase": "bind_on_support",
    "camelcase": "BindOnSupport"
  },
  {
    "snakecase": "closed_under",
    "camelcase": "ClosedUnder"
  },
  {
    "snakecase": "swap",
    "camelcase": "Swap"
  },
  {
    "snakecase": "index",
    "camelcase": "Index"
  },
  {
    "snakecase": "torsion",
    "camelcase": "is_torsion"
  },
  {
    "snakecase": "span",
    "camelcase": "Span"
  },
  {
    "snakecase": "prime_counting",
    "camelcase": "PrimeCounting"
  },
  {
    "snakecase": "has_finite_coproducts",
    "camelcase": "HasFiniteCoproducts"
  },
  {
    "snakecase": "comm",
    "camelcase": "is_comm"
  },
  {
    "snakecase": "type",
    "camelcase": "Type"
  },
  {
    "snakecase": "basis",
    "camelcase": "IsBasis"
  },
  {
    "snakecase": "is_sheaf_preserves_limit_pairwise_intersections",
    "camelcase": "IsSheafPreservesLimitPairwiseIntersections"
  },
  {
    "snakecase": "is_metric",
    "camelcase": "IsMetric"
  },
  {
    "snakecase": "of_iso",
    "camelcase": "of_is_iso"
  },
  {
    "snakecase": "has_product",
    "camelcase": "HasProduct"
  },
  {
    "snakecase": "has_colimits",
    "camelcase": "HasColimits"
  },
  {
    "snakecase": "is_separable",
    "camelcase": "separable"
  },
  {
    "snakecase": "ker_lift",
    "camelcase": "KerLift"
  },
  {
    "snakecase": "is_measurably_generated",
    "camelcase": "IsMeasurablyGenerated"
  },
  {
    "snakecase": "add_haar_measure",
    "camelcase": "IsAddHaarMeasure"
  },
  {
    "snakecase": "is_seq",
    "camelcase": "IsSeq"
  },
  {
    "snakecase": "is_sheaf",
    "camelcase": "sheaf"
  },
  {
    "snakecase": "lift",
    "camelcase": "Lift"
  },
  {
    "snakecase": "btw",
    "camelcase": "Btw"
  },
  {
    "snakecase": "SL",
    "camelcase": "sl"
  },
  {
    "snakecase": "equivalent",
    "camelcase": "is_equivalent"
  },
  {
    "snakecase": "is_fraisse_limit",
    "camelcase": "IsFraisseLimit"
  },
  {
    "snakecase": "diag",
    "camelcase": "IsDiag"
  },
  {
    "snakecase": "topological_fiber_bundle",
    "camelcase": "is_topological_fiber_bundle"
  },
  {
    "snakecase": "hdiv",
    "camelcase": "hDiv"
  },
  {
    "snakecase": "compatible_preserving",
    "camelcase": "CompatiblePreserving"
  },
  {
    "snakecase": "measure_space",
    "camelcase": "MeasureSpace"
  },
  {
    "snakecase": "is_cs",
    "camelcase": "cs"
  },
  {
    "snakecase": "open",
    "camelcase": "is_open"
  },
  {
    "snakecase": "has_zero_morphisms",
    "camelcase": "HasZeroMorphisms"
  },
  {
    "snakecase": "game_add",
    "camelcase": "GameAdd"
  },
  {
    "snakecase": "karoubi_functor_category_embedding",
    "camelcase": "KaroubiFunctorCategoryEmbedding"
  },
  {
    "snakecase": "envel_group",
    "camelcase": "EnvelGroup"
  },
  {
    "snakecase": "HF",
    "camelcase": "hf"
  },
  {
    "snakecase": "right_moves",
    "camelcase": "RightMoves"
  },
  {
    "snakecase": "locally_small",
    "camelcase": "LocallySmall"
  },
  {
    "snakecase": "presieve_of_covering",
    "camelcase": "PresieveOfCovering"
  },
  {
    "snakecase": "independent",
    "camelcase": "Independent"
  },
  {
    "snakecase": "kernel",
    "camelcase": "Kernel"
  },
  {
    "snakecase": "has_pushouts",
    "camelcase": "HasPushouts"
  },
  {
    "snakecase": "H",
    "camelcase": "h"
  },
  {
    "snakecase": "non_zero_divisors",
    "camelcase": "NonZeroDivisors"
  },
  {
    "snakecase": "is_solvable",
    "camelcase": "Solvable"
  },
  {
    "snakecase": "chain",
    "camelcase": "is_chain"
  },
  {
    "snakecase": "class_number",
    "camelcase": "ClassNumber"
  },
  {
    "snakecase": "total_space",
    "camelcase": "TotalSpace"
  },
  {
    "snakecase": "binary_cofan",
    "camelcase": "BinaryCofan"
  },
  {
    "snakecase": "factorial",
    "camelcase": "Factorial"
  },
  {
    "snakecase": "iM",
    "camelcase": "im"
  },
  {
    "snakecase": "involutive",
    "camelcase": "Involutive"
  },
  {
    "snakecase": "maximal_atlas",
    "camelcase": "MaximalAtlas"
  },
  {
    "snakecase": "card",
    "camelcase": "Card"
  },
  {
    "snakecase": "id",
    "camelcase": "is_id"
  },
  {
    "snakecase": "adapted",
    "camelcase": "Adapted"
  },
  {
    "snakecase": "Groupoid",
    "camelcase": "groupoid"
  },
  {
    "snakecase": "Ioi",
    "camelcase": "ioi"
  },
  {
    "snakecase": "is_subterminal",
    "camelcase": "IsSubterminal"
  },
  {
    "snakecase": "is_bounded_under",
    "camelcase": "IsBoundedUnder"
  },
  {
    "snakecase": "fiber",
    "camelcase": "Fiber"
  },
  {
    "snakecase": "unop",
    "camelcase": "Unop"
  },
  {
    "snakecase": "has_eigenvector",
    "camelcase": "HasEigenvector"
  },
  {
    "snakecase": "basis",
    "camelcase": "is_basis"
  },
  {
    "snakecase": "target",
    "camelcase": "Target"
  },
  {
    "snakecase": "skeletal",
    "camelcase": "is_skeletal"
  },
  {
    "snakecase": "category_struct",
    "camelcase": "CategoryStruct"
  },
  {
    "snakecase": "is_clique",
    "camelcase": "IsClique"
  },
  {
    "snakecase": "preorder",
    "camelcase": "is_preorder"
  },
  {
    "snakecase": "kernel_fork",
    "camelcase": "KernelFork"
  },
  {
    "snakecase": "of_vector_space_index",
    "camelcase": "OfVectorSpaceIndex"
  },
  {
    "snakecase": "constants",
    "camelcase": "Constants"
  },
  {
    "snakecase": "has_coproducts",
    "camelcase": "HasCoproducts"
  },
  {
    "snakecase": "strong_epi",
    "camelcase": "StrongEpi"
  },
  {
    "snakecase": "is_sup_closed_compact",
    "camelcase": "IsSupClosedCompact"
  },
  {
    "snakecase": "reflects_limit",
    "camelcase": "ReflectsLimit"
  },
  {
    "snakecase": "is_separated_for",
    "camelcase": "IsSeparatedFor"
  },
  {
    "snakecase": "has_unit_mul_pow_irreducible_factorization",
    "camelcase": "HasUnitMulPowIrreducibleFactorization"
  },
  {
    "snakecase": "has_wide_equalizers",
    "camelcase": "HasWideEqualizers"
  },
  {
    "snakecase": "is_eisenstein_at",
    "camelcase": "IsEisensteinAt"
  },
  {
    "snakecase": "up",
    "camelcase": "Up"
  },
  {
    "snakecase": "HD",
    "camelcase": "hD"
  },
  {
    "snakecase": "adjoint",
    "camelcase": "Adjoint"
  },
  {
    "snakecase": "indecomposable",
    "camelcase": "Indecomposable"
  },
  {
    "snakecase": "op",
    "camelcase": "Op"
  },
  {
    "snakecase": "p",
    "camelcase": "P"
  },
  {
    "snakecase": "continued_fraction",
    "camelcase": "IsContinuedFraction"
  },
  {
    "snakecase": "ortho",
    "camelcase": "IsOrtho"
  },
  {
    "snakecase": "fixed_point",
    "camelcase": "FixedPoint"
  },
  {
    "snakecase": "has_cokernel",
    "camelcase": "HasCokernel"
  },
  {
    "snakecase": "last",
    "camelcase": "Last"
  },
  {
    "snakecase": "has_pushout",
    "camelcase": "HasPushout"
  },
  {
    "snakecase": "is_semisimple",
    "camelcase": "IsSemisimple"
  },
  {
    "snakecase": "compact_open",
    "camelcase": "CompactOpen"
  },
  {
    "snakecase": "Gamma",
    "camelcase": "gamma"
  },
  {
    "snakecase": "to_add_submonoid",
    "camelcase": "to_is_add_submonoid"
  },
  {
    "snakecase": "abs",
    "camelcase": "Abs"
  },
  {
    "snakecase": "closed_complemented",
    "camelcase": "ClosedComplemented"
  },
  {
    "snakecase": "right_transversals",
    "camelcase": "RightTransversals"
  },
  {
    "snakecase": "of_right_adjoint",
    "camelcase": "of_is_right_adjoint"
  },
  {
    "snakecase": "epi",
    "camelcase": "Epi"
  },
  {
    "snakecase": "kernel",
    "camelcase": "IsKernel"
  },
  {
    "snakecase": "restrict",
    "camelcase": "Restrict"
  },
  {
    "snakecase": "has_orthogonal_rows",
    "camelcase": "HasOrthogonalRows"
  },
  {
    "snakecase": "sqrt",
    "camelcase": "is_sqrt"
  },
  {
    "snakecase": "Sort",
    "camelcase": "sort"
  },
  {
    "snakecase": "d",
    "camelcase": "D"
  },
  {
    "snakecase": "is_amalgamation",
    "camelcase": "IsAmalgamation"
  },
  {
    "snakecase": "forget",
    "camelcase": "Forget"
  },
  {
    "snakecase": "subfield",
    "camelcase": "is_subfield"
  },
  {
    "snakecase": "jacobson",
    "camelcase": "is_jacobson"
  },
  {
    "snakecase": "to_ring_hom",
    "camelcase": "to_is_ring_hom"
  },
  {
    "snakecase": "inv_on",
    "camelcase": "InvOn"
  },
  {
    "snakecase": "splits",
    "camelcase": "Splits"
  },
  {
    "snakecase": "has_countable_basis",
    "camelcase": "HasCountableBasis"
  },
  {
    "snakecase": "is_symm",
    "camelcase": "Symm"
  },
  {
    "snakecase": "interval_integral",
    "camelcase": "IntervalIntegral"
  },
  {
    "snakecase": "is",
    "camelcase": ""
  },
  {
    "snakecase": "is_compressed",
    "camelcase": "IsCompressed"
  },
  {
    "snakecase": "is_solution",
    "camelcase": "IsSolution"
  },
  {
    "snakecase": "inf",
    "camelcase": "Inf"
  },
  {
    "snakecase": "abelian",
    "camelcase": "IsAbelian"
  },
  {
    "snakecase": "has_kernel",
    "camelcase": "HasKernel"
  },
  {
    "snakecase": "diff",
    "camelcase": "Diff"
  },
  {
    "snakecase": "is_preconnected",
    "camelcase": "preconnected"
  },
  {
    "snakecase": "is_hermitian",
    "camelcase": "Hermitian"
  },
  {
    "snakecase": "Ici",
    "camelcase": "ici"
  },
  {
    "snakecase": "choose_basis_index",
    "camelcase": "ChooseBasisIndex"
  },
  {
    "snakecase": "preserves_limits",
    "camelcase": "PreservesLimits"
  },
  {
    "snakecase": "compact",
    "camelcase": "Compact"
  },
  {
    "snakecase": "standard_one_dim_isocrystal",
    "camelcase": "StandardOneDimIsocrystal"
  },
  {
    "snakecase": "ess_image",
    "camelcase": "EssImage"
  },
  {
    "snakecase": "principal",
    "camelcase": "is_principal"
  },
  {
    "snakecase": "to_mul_hom",
    "camelcase": "to_is_mul_hom"
  },
  {
    "snakecase": "product",
    "camelcase": "Product"
  },
  {
    "snakecase": "is_compl",
    "camelcase": "Compl"
  },
  {
    "snakecase": "root_set",
    "camelcase": "RootSet"
  },
  {
    "snakecase": "domain",
    "camelcase": "Domain"
  },
  {
    "snakecase": "matches",
    "camelcase": "Matches"
  },
  {
    "snakecase": "has_eigenvalue",
    "camelcase": "HasEigenvalue"
  },
  {
    "snakecase": "equivalence",
    "camelcase": "is_equivalence"
  },
  {
    "snakecase": "star_ring_end",
    "camelcase": "StarRingEnd"
  },
  {
    "snakecase": "inverse",
    "camelcase": "Inverse"
  },
  {
    "snakecase": "pow",
    "camelcase": "Pow"
  },
  {
    "snakecase": "pseudo_equal",
    "camelcase": "PseudoEqual"
  },
  {
    "snakecase": "algebra_tensor_module",
    "camelcase": "AlgebraTensorModule"
  },
  {
    "snakecase": "group_algebra",
    "camelcase": "GroupAlgebra"
  },
  {
    "snakecase": "atlas",
    "camelcase": "Atlas"
  },
  {
    "snakecase": "fold",
    "camelcase": "Fold"
  },
  {
    "snakecase": "has_le",
    "camelcase": "HasLe"
  },
  {
    "snakecase": "compression",
    "camelcase": "Compression"
  },
  {
    "snakecase": "sets",
    "camelcase": "Sets"
  },
  {
    "snakecase": "norm",
    "camelcase": "is_norm"
  },
  {
    "snakecase": "char",
    "camelcase": "Char"
  },
  {
    "snakecase": "pos_mul_strict_mono",
    "camelcase": "PosMulStrictMono"
  },
  {
    "snakecase": "to_closeds",
    "camelcase": "ToCloseds"
  },
  {
    "snakecase": "is_cobounded",
    "camelcase": "cobounded"
  },
  {
    "snakecase": "exp",
    "camelcase": "Exp"
  },
  {
    "snakecase": "parts",
    "camelcase": "Parts"
  },
  {
    "snakecase": "classes",
    "camelcase": "Classes"
  },
  {
    "snakecase": "Ran",
    "camelcase": "ran"
  },
  {
    "snakecase": "has_coequalizers",
    "camelcase": "HasCoequalizers"
  },
  {
    "snakecase": "first_obj",
    "camelcase": "FirstObj"
  },
  {
    "snakecase": "skeletal",
    "camelcase": "Skeletal"
  },
  {
    "snakecase": "principal_ideal_ring",
    "camelcase": "PrincipalIdealRing"
  },
  {
    "snakecase": "source",
    "camelcase": "Source"
  },
  {
    "snakecase": "complete_space",
    "camelcase": "is_complete_space"
  },
  {
    "snakecase": "closed_ball",
    "camelcase": "is_closed_ball"
  },
  {
    "snakecase": "closed_ball",
    "camelcase": "ClosedBall"
  },
  {
    "snakecase": "closed_embedding",
    "camelcase": "is_closed_embedding"
  },
  {
    "snakecase": "uniformity",
    "camelcase": "Uniformity"
  },
  {
    "snakecase": "witt_polynomial",
    "camelcase": "WittPolynomial"
  },
  {
    "snakecase": "is_mul_hom",
    "camelcase": "mul_hom"
  },
  {
    "snakecase": "affine",
    "camelcase": "is_affine"
  },
  {
    "snakecase": "is_engelian",
    "camelcase": "IsEngelian"
  },
  {
    "snakecase": "drop",
    "camelcase": "Drop"
  },
  {
    "snakecase": "measurably_separable",
    "camelcase": "MeasurablySeparable"
  },
  {
    "snakecase": "covers",
    "camelcase": "Covers"
  },
  {
    "snakecase": "normalizer",
    "camelcase": "Normalizer"
  },
  {
    "snakecase": "add_torsion",
    "camelcase": "IsAddTorsion"
  },
  {
    "snakecase": "has_binary_coproduct",
    "camelcase": "HasBinaryCoproduct"
  },
  {
    "snakecase": "is_prime_pow",
    "camelcase": "prime_pow"
  },
  {
    "snakecase": "is_noetherian",
    "camelcase": "noetherian"
  },
  {
    "snakecase": "cond",
    "camelcase": "Cond"
  },
  {
    "snakecase": "common_neighbors",
    "camelcase": "CommonNeighbors"
  },
  {
    "snakecase": "cut_expand",
    "camelcase": "CutExpand"
  },
  {
    "snakecase": "add_torsion",
    "camelcase": "AddIsTorsion"
  },
  {
    "snakecase": "interval_cases",
    "camelcase": "IntervalCases"
  },
  {
    "snakecase": "is_compl",
    "camelcase": "compL"
  },
  {
    "snakecase": "has_binary_product",
    "camelcase": "HasBinaryProduct"
  },
  {
    "snakecase": "arrows",
    "camelcase": "Arrows"
  },
  {
    "snakecase": "functions",
    "camelcase": "Functions"
  },
  {
    "snakecase": "add_haar_measure",
    "camelcase": "is_add_haar_measure"
  },
  {
    "snakecase": "proj",
    "camelcase": "Proj"
  },
  {
    "snakecase": "is_alg_closed",
    "camelcase": "alg_closed"
  },
  {
    "snakecase": "open",
    "camelcase": "Open"
  },
  {
    "snakecase": "is_integer",
    "camelcase": "IsInteger"
  },
  {
    "snakecase": "terminated_at",
    "camelcase": "TerminatedAt"
  },
  {
    "snakecase": "ne",
    "camelcase": "NE"
  },
  {
    "snakecase": "has_wide_coequalizers",
    "camelcase": "HasWideCoequalizers"
  },
  {
    "snakecase": "factors",
    "camelcase": "Factors"
  },
  {
    "snakecase": "eigenvalues",
    "camelcase": "Eigenvalues"
  },
  {
    "snakecase": "cross_product",
    "camelcase": "CrossProduct"
  },
  {
    "snakecase": "hmul",
    "camelcase": "hMul"
  },
  {
    "snakecase": "has_dvd",
    "camelcase": "HasDvd"
  },
  {
    "snakecase": "sphere",
    "camelcase": "Sphere"
  },
  {
    "snakecase": "is_sheaf_pairwise_intersections",
    "camelcase": "IsSheafPairwiseIntersections"
  },
  {
    "snakecase": "compatible",
    "camelcase": "IsCompatible"
  },
  {
    "snakecase": "functor_pushforward",
    "camelcase": "FunctorPushforward"
  },
  {
    "snakecase": "flip",
    "camelcase": "Flip"
  },
  {
    "snakecase": "fdo",
    "camelcase": "Fdo"
  },
  {
    "snakecase": "gluing",
    "camelcase": "IsGluing"
  },
  {
    "snakecase": "tactic",
    "camelcase": "tactic_"
  },
  {
    "snakecase": "omega_limit",
    "camelcase": "omega_is_limit"
  },
  {
    "snakecase": "interval",
    "camelcase": "Interval"
  },
  {
    "snakecase": "subtype",
    "camelcase": "Subtype_"
  },
  {
    "snakecase": "has_equalizer",
    "camelcase": "HasEqualizer"
  },
  {
    "snakecase": "is_idempotent",
    "camelcase": "idempotent"
  },
  {
    "snakecase": "cthickening",
    "camelcase": "Cthickening"
  },
  {
    "snakecase": "base",
    "camelcase": "Base"
  },
  {
    "snakecase": "volume",
    "camelcase": "Volume"
  },
  {
    "snakecase": "incidence_set",
    "camelcase": "IncidenceSet"
  },
  {
    "snakecase": "is_semisimple",
    "camelcase": "semisimple"
  },
  {
    "snakecase": "sup",
    "camelcase": "Sup"
  },
  {
    "snakecase": "to_linear_map",
    "camelcase": "to_is_linear_map"
  },
  {
    "snakecase": "diagram",
    "camelcase": "Diagram"
  },
  {
    "snakecase": "unbounded",
    "camelcase": "Unbounded"
  },
  {
    "snakecase": "as_ideal",
    "camelcase": "AsIdeal"
  },
  {
    "snakecase": "is_cs",
    "camelcase": "IsCs"
  },
  {
    "snakecase": "fixed_by",
    "camelcase": "FixedBy"
  },
  {
    "snakecase": "is_weight",
    "camelcase": "IsWeight"
  },
  {
    "snakecase": "principal_ideal_ring",
    "camelcase": "is_principal_ideal_ring"
  },
  {
    "snakecase": "punit",
    "camelcase": "Punit"
  },
  {
    "snakecase": "hom_iso",
    "camelcase": "hom_is_iso"
  },
  {
    "snakecase": "strict_order",
    "camelcase": "StrictOrder"
  },
  {
    "snakecase": "is_invariant",
    "camelcase": "invariant"
  },
  {
    "snakecase": "to_submonoid",
    "camelcase": "to_is_submonoid"
  },
  {
    "snakecase": "locally_constant",
    "camelcase": "is_locally_constant"
  },
  {
    "snakecase": "cylinder",
    "camelcase": "Cylinder"
  },
  {
    "snakecase": "elements",
    "camelcase": "Elements"
  },
  {
    "snakecase": "has_sub",
    "camelcase": "HasSub"
  },
  {
    "snakecase": "splitting_field",
    "camelcase": "is_splitting_field"
  },
  {
    "snakecase": "supported",
    "camelcase": "IsSupported"
  },
  {
    "snakecase": "is_amalgamation",
    "camelcase": "amalgamation"
  },
  {
    "snakecase": "cokernel",
    "camelcase": "IsCokernel"
  },
  {
    "snakecase": "induced",
    "camelcase": "IsInduced"
  },
  {
    "snakecase": "nil",
    "camelcase": "Nil"
  },
  {
    "snakecase": "Qf",
    "camelcase": "is_qf"
  },
  {
    "snakecase": "inr",
    "camelcase": "inr_"
  },
  {
    "snakecase": "stabilizer",
    "camelcase": "Stabilizer"
  },
  {
    "snakecase": "st",
    "camelcase": "IsSt"
  },
  {
    "snakecase": "Union_up_to",
    "camelcase": "UnionUpTo"
  },
  {
    "snakecase": "exposed_points",
    "camelcase": "ExposedPoints"
  },
  {
    "snakecase": "maximal",
    "camelcase": "Maximal"
  },
  {
    "snakecase": "rel_last",
    "camelcase": "RelLast"
  },
  {
    "snakecase": "is_integral_elem",
    "camelcase": "IsIntegralElem"
  },
  {
    "snakecase": "hadd",
    "camelcase": "hAdd"
  },
  {
    "snakecase": "adjoin",
    "camelcase": "Adjoin"
  },
  {
    "snakecase": "projective",
    "camelcase": "IsProjective"
  },
  {
    "snakecase": "has_products_of_shape",
    "camelcase": "HasProductsOfShape"
  },
  {
    "snakecase": "to_partial_order",
    "camelcase": "ToPartialOrder"
  },
  {
    "snakecase": "gcd",
    "camelcase": "Gcd"
  },
  {
    "snakecase": "hh",
    "camelcase": "hH"
  },
  {
    "snakecase": "mul_support",
    "camelcase": "MulSupport"
  },
  {
    "snakecase": "gt",
    "camelcase": "GT"
  },
  {
    "snakecase": "adj",
    "camelcase": "is_adj"
  },
  {
    "snakecase": "topological_group",
    "camelcase": "is_topological_group"
  },
  {
    "snakecase": "edge_set",
    "camelcase": "EdgeSet"
  },
  {
    "snakecase": "mono",
    "camelcase": "IsMono"
  },
  {
    "snakecase": "subring",
    "camelcase": "is_subring"
  },
  {
    "snakecase": "inl",
    "camelcase": "inl_"
  },
  {
    "snakecase": "bounded",
    "camelcase": "is_bounded"
  },
  {
    "snakecase": "TM",
    "camelcase": "tm"
  },
  {
    "snakecase": "faces",
    "camelcase": "Faces"
  },
  {
    "snakecase": "pell",
    "camelcase": "IsPell"
  },
  {
    "snakecase": "Icc",
    "camelcase": "icc"
  },
  {
    "snakecase": "is_admissible",
    "camelcase": "Admissible"
  },
  {
    "snakecase": "anisotropic",
    "camelcase": "Anisotropic"
  },
  {
    "snakecase": "is_separated",
    "camelcase": "separated"
  },
  {
    "snakecase": "thickening",
    "camelcase": "Thickening"
  },
  {
    "snakecase": "is_solution",
    "camelcase": "solution"
  },
  {
    "snakecase": "to_monoid_hom",
    "camelcase": "to_is_monoid_hom"
  },
  {
    "snakecase": "fd",
    "camelcase": "Fd"
  },
  {
    "snakecase": "lift_hom",
    "camelcase": "is_lift_hom"
  },
  {
    "snakecase": "poly",
    "camelcase": "is_poly"
  },
  {
    "snakecase": "has_coproduct",
    "camelcase": "HasCoproduct"
  },
  {
    "snakecase": "to_partial_order",
    "camelcase": "to_is_partial_order"
  },
  {
    "snakecase": "hsub",
    "camelcase": "hSub"
  },
  {
    "snakecase": "wide_subquiver_symmetrify",
    "camelcase": "WideSubquiverSymmetrify"
  },
  {
    "snakecase": "is_some",
    "camelcase": "Some"
  },
  {
    "snakecase": "separates_points_strongly",
    "camelcase": "SeparatesPointsStrongly"
  },
  {
    "snakecase": "is_metric",
    "camelcase": "metric"
  },
  {
    "snakecase": "separating_left",
    "camelcase": "SeparatingLeft"
  },
  {
    "snakecase": "is_clique",
    "camelcase": "clique"
  },
  {
    "snakecase": "rotate",
    "camelcase": "Rotate"
  },
  {
    "snakecase": "conj_invariant_subalgebra",
    "camelcase": "ConjInvariantSubalgebra"
  },
  {
    "snakecase": "has_binary_coproducts",
    "camelcase": "HasBinaryCoproducts"
  },
  {
    "snakecase": "is_satisfiable",
    "camelcase": "IsSatisfiable"
  },
  {
    "snakecase": "is_preconnected",
    "camelcase": "Preconnected"
  },
  {
    "snakecase": "linear",
    "camelcase": "is_linear"
  },
  {
    "snakecase": "Scheme",
    "camelcase": "scheme"
  },
  {
    "snakecase": "stalk_map",
    "camelcase": "StalkMap"
  },
  {
    "snakecase": "dioph_fn",
    "camelcase": "DiophFn"
  },
  {
    "snakecase": "continuum",
    "camelcase": "Continuum"
  },
  {
    "snakecase": "topological_add_group",
    "camelcase": "is_topological_add_group"
  },
  {
    "snakecase": "is_amalgamation",
    "camelcase": "Amalgamation"
  },
  {
    "snakecase": "ge",
    "camelcase": "GE"
  },
  {
    "snakecase": "diagonal",
    "camelcase": "Diagonal"
  },
  {
    "snakecase": "presieve_of_covering_aux",
    "camelcase": "PresieveOfCoveringAux"
  },
  {
    "snakecase": "ideal",
    "camelcase": "is_ideal"
  },
  {
    "snakecase": "permutations_aux",
    "camelcase": "PermutationsAux"
  },
  {
    "snakecase": "is_cycle",
    "camelcase": "cycle"
  },
  {
    "snakecase": "circle",
    "camelcase": "Circle"
  },
  {
    "snakecase": "translation_number",
    "camelcase": "TranslationNumber"
  },
  {
    "snakecase": "is_seq_compact",
    "camelcase": "SeqCompact"
  },
  {
    "snakecase": "embedding",
    "camelcase": "is_embedding"
  },
  {
    "snakecase": "pfilter",
    "camelcase": "is_pfilter"
  },
  {
    "snakecase": "teichmuller",
    "camelcase": "Teichmuller"
  },
  {
    "snakecase": "snd",
    "camelcase": "Snd"
  },
  {
    "snakecase": "Model",
    "camelcase": "is_model"
  },
  {
    "snakecase": "partition",
    "camelcase": "is_partition"
  },
  {
    "snakecase": "has_wide_pullbacks",
    "camelcase": "HasWidePullbacks"
  },
  {
    "snakecase": "le",
    "camelcase": "is_le"
  },
  {
    "snakecase": "small_category",
    "camelcase": "SmallCategory"
  },
  {
    "snakecase": "calculated_Prop",
    "camelcase": "CalculatedProp"
  },
  {
    "snakecase": "minimal",
    "camelcase": "Minimal"
  },
  {
    "snakecase": "fibration",
    "camelcase": "Fibration"
  },
  {
    "snakecase": "HF",
    "camelcase": "hF"
  },
  {
    "snakecase": "totient",
    "camelcase": "Totient"
  },
  {
    "snakecase": "ite",
    "camelcase": "Ite"
  },
  {
    "snakecase": "torsion_by",
    "camelcase": "IsTorsionBy"
  },
  {
    "snakecase": "slice",
    "camelcase": "Slice"
  },
  {
    "snakecase": "yoneda_sheaf_condition",
    "camelcase": "YonedaSheafCondition"
  },
  {
    "snakecase": "conjugates_of_set",
    "camelcase": "ConjugatesOfSet"
  },
  {
    "snakecase": "liouville",
    "camelcase": "is_liouville"
  },
  {
    "snakecase": "has_initial",
    "camelcase": "HasInitial"
  },
  {
    "snakecase": "extreme_points",
    "camelcase": "ExtremePoints"
  },
  {
    "snakecase": "mk",
    "camelcase": "Mk"
  },
  {
    "snakecase": "cover",
    "camelcase": "is_cover"
  },
  {
    "snakecase": "mul_pos_mono",
    "camelcase": "MulPosMono"
  }
]